<?xml version="1.0" encoding="utf-8"?>
<ArrayOfFavQuery xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>쿼리명</QUERY_NAME>
    <GROUP>tffff</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>신규환자등록 프로시저</QUERY_NAME>
    <QUERY_TEXT>--XBIL로 로그인 해야함 .
-- 프로시저 돌리고 난 후 상단의 조회쿼리로 환자가 잘 생성되었는지 확인 후 커밋
select *
 from pctpcpam_damo
 where pt_nm like 'PACS'||'%'
;
select '영상교육'|| (LEVEL+99) PT_NM
   from dual
   CONNECT BY LEVEL &lt;21
;
 EXEC :IN_GUBN            := 'I';    -- 00. 구분('I'-INSERT ,'U'-UPDATE, 'S'-수탁)
 EXEC :IN_PT_NO           := '';   -- 01. 환자번호
 EXEC :IN_HSP_TP_CD       := '01';       -- 02. 병원구분코드
 EXEC :IN_RLT_PT_YN       := 'N';       -- 04. 가상환자여부
 EXEC :IN_RRN             := '9506121234567';   -- 05. 주민등록번호
 EXEC :IN_PT_NM           := '영상교육40';   -- 06. 환자명
 EXEC :IN_SEX_TP_CD       := 'M';       -- 07. 성별구분코드
 EXEC :IN_PT_BRDY_DT      := '950612';       -- 08. 환자생일일자
 EXEC :IN_LNCL_BRDY_DT    := '';       -- 09. 음력생일일자
 EXEC :IN_SNUH_PT_NO      := '';    -- 10.
 EXEC :IN_MDCT_PT_NO      := '';    -- 11. 의료원환자번호
 EXEC :IN_PME_CLS_CD      := 'BB';    -- 12. 환자급종유형코드
 EXEC :IN_PSE_CLS_CD      := 'DDD';    -- 13. 환자보조급종유형코드
 EXEC :IN_CTRC_ORG_CD     := '';     -- 14. 계약기관코드
 EXEC :IN_BSC_CRCP_CTRA_CD:= '';      -- 15. 기본현금영수증기준코드
 EXEC :IN_BSC_CRCP_NO     := '';          -- 16. 기본현금영수증번호
 EXEC :IN_ADS_NOTM        := '';         -- 17. 입원횟수
 EXEC :IN_LST_HME_DT      := '';           -- 18. 최종수진일자
 EXEC :IN_DTH_YN          := '';       -- 19. 사망여부
 EXEC :IN_DTH_DTM         := '';        -- 20. 사망일시
 EXEC :IN_ABOB_TP_CD      := '';           -- 21. ABO식혈액형구분코드
 EXEC :IN_RHB_TP_CD       := '';          -- 22. RH식혈액형구분코드
 EXEC :IN_BBNK_BLTYP_KND_C:= '';         -- 23. 혈액은행혈액형종류코드
 EXEC :IN_BLTYP_EXM_DT    := '';              -- 24. 혈액형검사일자
 EXEC :IN_BBNK_BLTYP_CNTE := '';               -- 25. 혈액은행혈액형내용
 EXEC :IN_PACT_TP_CD      := '';          -- 26. 원무접수구분코드
 EXEC :IN_IDIF_UTLZ_CCRC_Y:= '';          -- 27. 개인정보활용동의여부
 EXEC :IN_VIP_PT_YN       := '';            --  28. VIP환자여부
 EXEC :IN_ENG_SRNM_NM     := '';            --  29. 영문성명
 EXEC :IN_DBTM_APY_YN     := '';            --  30. 당뇨병적용여부
 EXEC :IN_OOC_NTN_CD      := '';           --  31. 본국국가코드
 EXEC :IN_ENG_FST_NM      := '';           --  32. 영문최초명
 EXEC :IN_ENG_LST_NM      := '';           --  34. 영문최종명
 EXEC :IN_CTZN_REG_EXCP_YN:= '';           -- 35. 주민등록예외여부
 EXEC :IN_BOBD_PT_NO      := '';           -- 36. 합본이전환자번호
 EXEC :IN_BIND_DTM        := '';               -- 37. 합본일시
 EXEC :IN_BIND_STF_NO     := '';             -- 38. 합본직원식별ID
 EXEC :IN_HIS_USER_ID     := 'SSSUP11';             -- 39. 최초등록직원식별ID ,43최종변경직원식별ID
 EXEC :IN_HIS_LSH_DTM     := SYSDATE;             -- 40. 최초등록일시       ,44최종변경일시 SYSDATE 사용함
 EXEC :IN_HIS_PRGM_NM     := 'Golden';             -- 41. 최초등록프로그램명 ,45최종변경프로그램명
 EXEC :IN_HIS_IP_ADDR     := '0.0.0.0';             -- 42. 최초등록IP주소
 EXEC :IN_SOCIALCLASS     := '';                          -- 43. 사회적지위내용(CRM 이민하대리의 요청으로 CRM에서만 사용)
 EXEC :IN_CONTTEL         := '';          -- 43. 선호채널(CRM 이민하대리의 요청으로 CRM에서만 사용)
 EXEC :IN_IMGN_PT_CTG_CD  := '';           -- 44. 가상환자분류코드
 EXEC :IN_CN_ADMN_ZN_NM   := '';          -- 45. 중국행정구역이름
 EXEC :IN_PSPT_NO         := '';               -- 46. 환자여권번호 20180413 신규추가
 EXEC :IN_FRNR_ID_NO      := '';           -- 47. 외국인사회보장번호 20180413 신규추가
 EXEC :IN_MOB_MSGR_SND_EXCP_YN :='';         -- 48. 모바일메신저전송예외여부 20201210 신규추가
 EXEC :IN_WODI_YN      :='';                 -- 49. 해녀여부               20201210 신규추가
 var IO_ERRYN varchar2(500);
 var IO_PT_NO varchar2(500);
 var IO_ERRMSG varchar2(500);
BEGIN
  FOR REC IN
  (
     select 'PACS테스트'|| (LEVEL) PT_NM
   from dual
   CONNECT BY LEVEL &lt;6
  )
  LOOP
       BEGIN
            PC_PCT_CREATE_PCTPCPAM( :IN_GUBN   -- 00. 구분('I'-INSERT ,'U'-UPDATE, 'S'-수탁)
                                      , :IN_PT_NO        -- 01. 환자번호
                                      , :IN_HSP_TP_CD         -- 02. 병원구분코드
                                      , :IN_RLT_PT_YN         -- 04. 가상환자여부
                                      , :IN_RRN      -- 05. 주민등록번호
                                      ,  REC.PT_NM    -- 06. 환자명
                                      , :IN_SEX_TP_CD -- 07. 성별구분코드
                                      , :IN_PT_BRDY_DT -- 08. 환자생일일자
                                      , :IN_LNCL_BRDY_DT      -- 09. 음력생일일자
                                      , :IN_SNUH_PT_NO     -- 10.
                                      , :IN_MDCT_PT_NO     -- 11. 의료원환자번호
                                      , :IN_PME_CLS_CD     -- 12. 환자급종유형코드
                                      , :IN_PSE_CLS_CD     -- 13. 환자보조급종유형코드
                                      , :IN_CTRC_ORG_CD     -- 14. 계약기관코드
                                      , :IN_BSC_CRCP_CTRA_CD      -- 15. 기본현금영수증기준코드
                                      , :IN_BSC_CRCP_NO      -- 16. 기본현금영수증번호
                                      , :IN_ADS_NOTM        -- 17. 입원횟수
                                      , :IN_LST_HME_DT        -- 18. 최종수진일자
                                      , :IN_DTH_YN        -- 19. 사망여부
                                      , :IN_DTH_DTM        -- 20. 사망일시
                                      , :IN_ABOB_TP_CD        -- 21. ABO식혈액형구분코드
                                      , :IN_RHB_TP_CD        -- 22. RH식혈액형구분코드
                                      , :IN_BBNK_BLTYP_KND_CD-- 23. 혈액은행혈액형종류코드
                                      , :IN_BLTYP_EXM_DT         -- 24. 혈액형검사일자
                                      , :IN_BBNK_BLTYP_CNTE       -- 25. 혈액은행혈액형내용
                                      , :IN_PACT_TP_CD       -- 26. 원무접수구분코드
                                      , :IN_IDIF_UTLZ_CCRC_YN -- 27. 개인정보활용동의여부
                                      , :IN_VIP_PT_YN      -- 28. VIP환자여부
                                      , :IN_ENG_SRNM_NM    -- 29. 영문성명
                                      , :IN_DBTM_APY_YN    -- 30. 당뇨병적용여부
                                      , :IN_OOC_NTN_CD    -- 31. 본국국가코드
                                      , :IN_ENG_FST_NM    -- 32. 영문최초명
                                      , :IN_ENG_LST_NM    -- 34. 영문최종명
                                      , :IN_CTZN_REG_EXCP_YN  -- 35. 주민등록예외여부
                                      , :IN_BOBD_PT_NO      -- 36. 합본이전환자번호
                                      , :IN_BIND_DTM      -- 37. 합본일시
                                      , :IN_BIND_STF_NO         -- 38. 합본직원식별ID
                                      , :IN_HIS_USER_ID         -- 39. 최초등록직원식별ID ,43최종변경직원식별ID
                                      , :IN_HIS_LSH_DTM         -- 40. 최초등록일시       ,44최종변경일시 SYSDATE 사용함
                                      , :IN_HIS_PRGM_NM         -- 41. 최초등록프로그램명 ,45최종변경프로그램명
                                      , :IN_HIS_IP_ADDR         -- 42. 최초등록IP주소
                                      , :IN_SOCIALCLASS                               -- 43. 사회적지위내용(CRM 이민하대리의 요청으로 CRM에서만 사용)
                                      , :IN_CONTTEL -- 43. 선호채널(CRM 이민하대리의 요청으로 CRM에서만 사용)
                                      , :IN_IMGN_PT_CTG_CD -- 44. 가상환자분류코드
                                      , :IN_CN_ADMN_ZN_NM -- 45. 중국행정구역이름
                                      , :IN_PSPT_NO -- 46. 환자여권번호 20180413 신규추가
                                      , :IN_FRNR_ID_NO -- 47. 외국인사회보장번호 20180413 신규추가
                                      , :IN_MOB_MSGR_SND_EXCP_YN -- 48. 모바일메신저전송예외여부 20201210 신규추가
                                      , :IN_WODI_YN -- 49. 해녀여부               20201210 신규추가
                                      , :IO_ERRYN --
                                      , :IO_PT_NO
                                      , :IO_ERRMSG)
                                      ;
            END;
            END LOOP;

END;



--select *
-- from acppraam
-- where 1=1
-- and pt_no ='10440971'
--
--;
--select '영상교육'|| (LEVEL+49) PT_NM
--from dual
--CONNECT BY LEVEL &lt;11
</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>SMS검사예약(문자)</QUERY_NAME>
    <QUERY_TEXT>SELECT  /*+ INDEX (S MSERMRRD_SI03) index(a PCTPCPAM_DAMO_PK) */
                           A.PT_NO                                                                      IN_PT_NO
                         , A.PT_NM                                                                      IN_PATNAME
                         , REPLACE(XBIL.FT_PCT_GETCTAD(M.HSP_TP_CD, M.PT_NO, '0', '00'), '-', '')       IN_TELNO
                         , '검사예약 : ' || V.SMSS_KOR_NM                                                IN_MESSAGE_SUBJECT
                         , M.ORD_CTG_CD                                                                 IN_ORD_CTG_CD
                         , TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD')||'1600','YYYYMMDDHH24MI')                IN_SENDDTE -- 전송할 시간 (16시로 협의함)
                         ,'[' || '전남대병원' || '] '|| CHR(13)||chr(10)|| A.PT_NM||' ('||A.PT_NO||','||M.PT_HME_DEPT_CD||') '|| '님' || CHR(13)||chr(10)||
                           '검사 : ' || (SELECT ORD_CTG_NM FROM CCOOCCAC WHERE HSP_TP_CD = M.HSP_TP_CD AND ORD_CTG_CD = M.ORD_CTG_CD) ||' - '|| M.ORD_NM ||chr(13)||chr(10)||
                           --'일시 : ' || TO_CHAR(S.RSV_DTM,'MM') || '.' || TO_CHAR(S.RSV_DTM,'DD')
                           '일시 : ' || TO_CHAR(S.RSV_DTM,'YYYY.MM') || '.' || TO_CHAR(S.RSV_DTM,'DD')
                                    || ' (' || DECODE(TO_CHAR(S.RSV_DTM, 'D'),1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || ') '
                                    || TO_CHAR(S.RSV_DTM,'HH24') || ':' || TO_CHAR(S.RSV_DTM,'MI') || CHR(13)||chr(10)||
--                           '장소 : ' || CASE WHEN V.BF_EXM_YN = 'N' THEN DECODE(NVL(M.RPY_STS_CD,'N'),'N','수납확인 후 ')
--                                            WHEN V.BF_EXM_YN = 'Y' THEN '' END
--                                    || V.MOV_EXM_PLC_NM
--                                    || CHR(13)||chr(10)||
                           '주의사항 : ' || CASE WHEN V.FAST_YN = 'Y' THEN '금식 하여주시고 자세한 내용은 예약지를 확인해 주시기 바랍니다.'
                                                          ELSE ''
                                                            END ||
                              V.SMS_CTN_MSG || CHR(13)||chr(10)||
                            '검사당일 검사비 납부가 있는분은 일찍 오셔서 수납창구에서 검사비를 납부하신 후 검사실 예약시간에 늦지 않도록 하여주시면 감사하겠습니다. '|| CHR(13)||chr(10)||'※ 코로나바이러스감염증-19 감염예방을 위해 마스크를 착용하지 않으면 병원출입을 하실수가 없습니다.내원시 마스크를 꼭 착용하고 오시길 부탁드립니다.'
                           AS IN_MESSAGE
                         /*
                         , '[' || V_HSP_TP_NM || '] ' || A.PT_NM || '님' || CHR(13)
                           || '검사 : ' || V.SMSS_KOR_NM || CHR(13)
                           || '일시 : ' || TO_CHAR(S.RSV_DTM,'MM') || '.' || TO_CHAR(S.RSV_DTM,'DD')
                                      || ' (' || DECODE(TO_CHAR(S.RSV_DTM, 'D'),1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || ') '
                                      || TO_CHAR(S.RSV_DTM,'HH24') || ':' || TO_CHAR(S.RSV_DTM,'MI') || CHR(13)
                           || '장소 : ' || CASE WHEN V.BF_EXM_YN = 'N' THEN DECODE(NVL(M.RPY_STS_CD,'N'),'N','수납확인 후 ')
                                              WHEN V.BF_EXM_YN = 'Y' THEN '' END
                                       || V.MOV_EXM_PLC_NM
                           || DECODE(NVL(V.SMS_CTN_MSG, 'N'), 'N', ''
                                                                 , CHR(13) || '주의사항 : ' || V.SMS_CTN_MSG)   IN_MESSAGE
                          */
                      FROM MSERMRRD S
                         , MOOOREXM M
                         , PCTPCPAM_DAMO A
                         , (SELECT NVL(G.SMSS_KOR_NM, G.CD_NM)                      SMSS_KOR_NM
--                                 , TRUNC(SYSDATE) + TO_NUMBER(NVL(G.SMSS_DY, '2'))  SMS_DATE
                                 , TRUNC(SYSDATE) + TO_NUMBER(1)                    SMS_DATE
                                 , NVL(G.SMS_CTN_MSG,'')                           SMS_CTN_MSG
                                 , (SELECT A.PT_GUID_PLC_NM FROM MSERMZMV A WHERE A.HSP_TP_CD = G.HSP_TP_CD AND A.EXM_CD = G.EXM_CD) MOV_EXM_PLC_NM
                                 , NVL(G.BF_EXM_YN, 'N')                            BF_EXM_YN
                                 , G.EXM_CD                                         EXM_CD
                                 , G.FAST_YN                                        FAST_YN    --금식여부
                              FROM MSERMMMC G
                             WHERE G.SMSS_YN   = 'Y'
                               AND G.BNDL_CD_NM IS NULL
                               AND G.HSP_TP_CD = '01') V
                    WHERE (
                            ( S.RSV_DTM BETWEEN V.SMS_DATE + 0        -- 토요일은 시작점 변경함
                                          AND V.SMS_DATE + 0 +0.99999)   -- 문자발송일 이후 연휴 체크하여 연휴기간 동안 보내야할 문자 한꺼번에 전송.
                            OR ( S.RSV_DTM BETWEEN TRUNC(SYSDATE)+ 7 + 0 --7일전에도 검사예약 보내기 추가
                                            AND TRUNC(SYSDATE)+ 7 + 0 +0.99999) --: 2019-07-22      : 현업요청으로 7일전 1회 2일전 1회 전송하던것을 2일전 1회로 횟수 변경함.
                          )
                       AND S.HSP_TP_CD            = '01'
                       AND S.SPRP_TP_CD           = 'Y'
                       AND S.ORD_CD               = V.EXM_CD
                       AND S.ORD_ID               = M.ORD_ID
                       AND S.HSP_TP_CD            = M.HSP_TP_CD
                       AND M.EXM_PRGR_STS_CD      = 'A'
                       AND M.PACT_TP_CD           = 'O'
                       AND NVL(M.ODDSC_TP_CD,'C') = 'C'
--                       AND M.PT_HME_DEPT_CD  NOT IN ('HPC','OEM')
                       AND M.PT_HME_DEPT_CD  NOT IN ('OEM')  --2020.07.27 LEECK. HPC 검사도 문자 발송함.
                       AND S.PT_NO                = A.PT_NO
                       AND XBIL.FT_PCT_GETCTAD(M.HSP_TP_CD, M.PT_NO, '0', '00') IS NOT NULL
                       AND FT_MSE_DEAD_PERSON(M.PT_NO) = 'N'

                    UNION

                    -- 2018.12.24 BNDL_CD_NM 이 있는 경우 ( 예약일자, BNDL_CD_NM, 환자번호에 대해 묶음 처리함 )
                    SELECT PT_NO                                                                         IN_PT_NO
                         , PT_NM                                                                         IN_PATNAME
                         , REPLACE(XBIL.FT_PCT_GETCTAD('01', PT_NO, '0', '00'), '-', '')         IN_TELNO
                         , '검사예약 : ' || ORD_NM                                                        IN_MESSAGE_SUBJECT
                         , ORD_CTG_CD                                                                    IN_ORD_CTG_CD
                         , TO_DATE(TO_CHAR(SYSDATE,'YYYYMMDD')||'1600','YYYYMMDDHH24MI')                 IN_SENDDTE
--                         ,'[' || V_HSP_TP_NM || '] '|| CHR(13)||chr(10)|| PT_NM||' ('||PT_NO||') '|| '님' || CHR(13)||chr(10)||
                         ,'[' || '전남대병원' || '] '|| CHR(13)||chr(10)|| PT_NM||' ('||PT_NO||','||PT_HME_DEPT_CD||') '|| '님' || CHR(13)||chr(10)||
                           '검사 : ' || ORD_NM || DECODE(COUNT_ID, '0', CHR(13), ' ( 외 ' || COUNT_ID || '건 )' || CHR(13)) ||chr(13)||chr(10)||
                           --'일시 : ' || TO_CHAR(RSV_DTM,'MM.DD')
                           '일시 : ' || TO_CHAR(RSV_DTM,'YYYYMM.DD')
                                      || ' (' || DECODE(TO_CHAR(RSV_DTM, 'D'),1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || ') '
                                      || TO_CHAR(RSV_DTM,'HH24:MI') || CHR(13)||chr(10)||
--                           '장소 : ' || PT_GUID_PLC_NM || CHR(13)||chr(10)||
                           '주의사항 : ' || CASE WHEN FAST_YN = 'Y' THEN '금식 하여주시고 자세한 내용은 예약지를 확인해 주시기 바랍니다.'
                                                                 ELSE ''
                                                                  END || CHR(13)||chr(10)||
                            '검사당일 검사비 납부가 있는분은 일찍 오셔서 수납창구에서 검사비를 납부하신 후 검사실 예약시간에 늦지 않도록 하여주시면 감사하겠습니다. '|| CHR(13)||chr(10)||'※ 코로나바이러스감염증-19 감염예방을 위해 마스크를 착용하지 않으면 병원출입을 하실수가 없습니다.내원시 마스크를 꼭 착용하고 오시길 부탁드립니다.'
                           AS IN_MESSAGE
/*
                         , '[' || V_HSP_TP_NM || '] ' || PT_NM || '님' || CHR(13)
                           || '검사 : ' || ORD_NM || DECODE(COUNT_ID, '0', CHR(13), ' ( 외 ' || COUNT_ID || '건 )' || CHR(13))
                           || '일시 : ' || TO_CHAR(RSV_DTM,'MM.DD')
                                      || ' (' || DECODE(TO_CHAR(RSV_DTM, 'D'),1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || ') '
                                      || TO_CHAR(RSV_DTM,'HH24:MI') || CHR(13)
                           || '장소 : ' || PT_GUID_PLC_NM                                                 IN_MESSAGE
*/

-- 2019.01.24 현업 요청으로 가야할곳 Group by 제거 --&gt; 다시 요청 취소. (추후 처방분류와 묶음코드로만 group by가 되어야하고 가야할곳 group by가 제거되어야하면 해당로직 주석 풀고 반영하면 됨. (검사/일시/장소 -&gt; 일시/검사(장소명포함)으로 변경)
--                         , '[' || V_HSP_TP_NM || '] ' || PT_NM || '님' || CHR(13)
--                           || '일시 : ' || TO_CHAR(RSV_DTM,'MM.DD')
--                                      || ' (' || DECODE(TO_CHAR(RSV_DTM, 'D'),1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || ') '
--                                      || TO_CHAR(RSV_DTM,'HH24:MI') || CHR(13)
--                           || '검사 : ' || ORD_NM                                                         IN_MESSAGE

                    FROM ( SELECT X.RSV_DTM
                                , X.COUNT_ID
                                , (SELECT NVL(CC.SMSS_KOR_NM, CC.CD_NM)
-- 2019.01.24 현업 요청으로 가야할곳 Group by 제거 --&gt; 다시 요청 취소. (검사명에 장소명 포함)
--                                          || DECODE(COUNT_ID, '0', CHR(13), ' ( 외 ' || COUNT_ID || '건 )' || CHR(13))
--                                          || '장소 : ' || ZZ.PT_GUID_PLC_NM
                                     FROM MOOOREXM MM
                                        , MSERMMMC CC
--                                        , MSERMZMV ZZ
                                    WHERE MM.PT_NO     = X.PT_NO
                                      AND MM.RSV_DTM   = X.RSV_DTM
                                      AND MM.ORD_CD    = CC.EXM_CD
                                      AND MM.HSP_TP_CD = CC.HSP_TP_CD
                                      AND CC.BNDL_CD_NM = X.BNDL_CD_NM
--                                      AND CC.EXM_CD    = ZZ.EXM_CD
--                                      AND CC.HSP_TP_CD = ZZ.HSP_TP_CD
                                      AND ROWNUM = 1)                       ORD_NM
                                , X.PT_NO
                                , X.PT_NM
                                , X.ORD_CTG_CD
-- 2019.01.24 현업 요청으로 가야할곳 Group by 제거 --&gt; 다시 요청 취소. (아래 X.PT_GUID_PLC_NM 제거 필요)
                                , X.PT_GUID_PLC_NM
                                , X.FAST_YN
                                , X.PT_HME_DEPT_CD
                             FROM ( SELECT MIN(S.RSV_DTM)    RSV_DTM
                                         , COUNT(M.ORD_ID)-1 COUNT_ID
                                         , S.PT_NO
                                         , P.PT_NM
                                         , V.BNDL_CD_NM
                                         , V.ORD_CTG_CD
                                         , V.PT_GUID_PLC_NM
                                         , TO_CHAR(S.RSV_DTM) RSV_DT
                                         , FAST_YN
                                         , M.PT_HME_DEPT_CD
                                      FROM MSERMRRD S
                                         , MOOOREXM M
                                         , (SELECT G.EXM_CD
                                                 , G.HSP_TP_CD
                                                 , G.BNDL_CD_NM
                                                 , G.ORD_CTG_CD
-- 2019.01.24 현업 요청으로 가야할곳 Group by 제거 --&gt; 다시 요청 취소. (아래 Z.PT_GUID_PLC_NM 제거 필요, MSERMZMV 조인 제거 필요)
                                                 , Z.PT_GUID_PLC_NM
                                                 --, TRUNC(SYSDATE) + TO_NUMBER(NVL(G.SMSS_DY, '2'))  SMS_DATE
                                                 , TRUNC(SYSDATE) + TO_NUMBER(1)  SMS_DATE
                                                 , G.FAST_YN
                                              FROM MSERMMMC G
                                                 , MSERMZMV Z
                                             WHERE G.SMSS_YN = 'Y'
                                               AND G.BNDL_CD_NM IS NOT NULL
                                               AND G.HSP_TP_CD = '01'
                                               AND G.EXM_CD = Z.EXM_CD
                                               AND G.HSP_TP_cD = Z.HSP_TP_CD
                                           ) V
                                         , PCTPCPAM_DAMO P
                                     WHERE (
                                             ( S.RSV_DTM BETWEEN V.SMS_DATE + 0               -- 토요일은 시작점 변경함
                                                             AND V.SMS_DATE + 0 +0.99999)        -- 문자발송일 이후 연휴 체크하여 연휴기간 동안 보내야할 문자 한꺼번에 전송.
                                            OR ( S.RSV_DTM BETWEEN TRUNC(SYSDATE)+ 7 + 0      --7일전에도 검사예약 보내기 추가
                                                             AND TRUNC(SYSDATE)+ 7 + 0 +0.99999) --: 2019-07-22      : 현업요청으로 7일전 1회 2일전 1회 전송하던것을 2일전 1회로 횟수 변경함.
                                           )
                                       AND S.SPRP_TP_CD           = 'Y'
                                       AND S.HSP_TP_CD = '01'
                                       AND S.ORD_ID    = M.ORD_ID
                                       AND S.HSP_TP_CD = M.HSP_TP_CD
                                       AND M.EXM_PRGR_STS_CD      = 'A'
                                       AND M.PACT_TP_CD           = 'O'
                                       AND NVL(M.ODDSC_TP_CD,'C') = 'C'
--                                       AND M.PT_HME_DEPT_CD  NOT IN ('HPC','OEM')
                                       AND M.PT_HME_DEPT_CD  NOT IN ('OEM')   --2020.07.27 LEECK. 검진 처방도 문자 발
                                       AND M.ORD_CD    = V.EXM_CD
                                       AND M.HSP_TP_CD = V.HSP_TP_CD
                                       AND M.PT_NO     = P.PT_NO
                                       AND XBIL.FT_PCT_GETCTAD(M.HSP_TP_CD, M.PT_NO, '0', '00') IS NOT NULL
                                       AND FT_MSE_DEAD_PERSON(M.PT_NO) = 'N'
                                    GROUP BY S.PT_NO
                                           , S.HSP_TP_CD
                                           , V.BNDL_CD_NM
                                           , P.PT_NM
                                           , V.ORD_CTG_CD
-- 2019.01.24 현업 요청으로 가야할곳 Group by 제거 --&gt; 다시 요청 취소. (아래 V.PT_GUID_PLC_NM 제거 필요)
                                           , V.PT_GUID_PLC_NM
                                           , TO_CHAR(S.RSV_DTM)
                                           , V.FAST_YN
                                           , M.PT_HME_DEPT_CD
                                   )    X
                         ) ;

exec XCOM.PC_COM_DEFAULT_SMS_SEND( '24220182'                             -- 부서 코드 (참조용 필드) &lt;--  환자번호, 사번
                                            , SYSDATE + 0.00009-- 전송 예약 시간,클라이언트의 전송 요청 시간
--                                            , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI')   -- 전송 예약 시간,클라이언트의 전송 요청 시간 (테스트용~)
--                                            , SUBSTRB(DAT.IN_MESSAGE_SUBJECT,1,49)     -- 메세지제목
                                            , '검사예약 문자테스트'
                                            , '[전남대병원]
김서봉 (03943626,IMP) 님
검사 : 영상의학과 - Chest CT
일시 : 2022.01.11 (화) 14:05
주의사항 :
검사당일 검사비 납부가 있는분은 일찍 오셔서 수납창구에서 검사비를 납부하신 후 검사실 예약시간에 늦지 않도록 하여주시면 감사하겠습니다.
※ 코로나바이러스감염증-19 감염예방을 위해 마스크를 착용하지 않으면 병원출입을 하실수가 없습니다.내원시 마스크를 꼭 착용하고 오시길 부탁드립니다.'                               -- 전송 메시지
                                            , '206'                                    -- 발신자 전화 번호(회신 번호)
                                            , '01084561623'            -- 수신자 전화 번호(수신번호)
--                                            , '01038214352'                            -- 통합테스트 및 리허설 까지만 남홍기 폰번호 강제세팅
--                                            , '01087274391'                              -- 테스트용
--,'01037588921'
--                                            , 'EXAM SMS BATCH'                         -- 알림톡 메시지 유형 템플릿 코드
                                            , ''
                                            , ''                                       -- SMS를 발송한 직원사번     --2018-11-08 이상수 추가
                                            , '예약검사 SMS BATCH'                         -- SMS를 발송한 프로그램     --2018-11-08 이상수 추가
                                            , '01'                             -- 2018-11-08 이상수 추가
                                            );
select *
 from MSG_QUEUE@DL_SMS
 where text like '%채혈실%'
 order by insert_time desc
;
</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>사용자 ORD_CTG_CD 변경</QUERY_NAME>
    <QUERY_TEXT>Exec :HSP_TP_CD := '01';
exec :STF_NO := 'SSSUP11';
--exec :ORD_CTG_CD := 'OG';   --산부인과
--exec :ORD_CTG_CD := 'OS' ; --정형외과
exec :ORD_CTG_CD := 'IMN';  --신장내과
--exec :ORD_CTG_CD := 'EM' ;  --응급의학과
--exec :ORD_CTG_CD := 'EY' ; --안과
--exec :ORD_CTG_CD := 'DM' ;  --피부과
--exec :ORD_CTG_CD := 'IMA';  --알레르기내과
--exec :ORD_CTG_CD := 'EN' ;  --이비인후과
--exec :ORD_CTG_CD := 'IMD';  --감염내과
--exec :ORD_CTG_CD := 'UR' ;  --비뇨의학과
--exec :ORD_CTG_CD := 'GSV';  --이식혈관외과
--exec :ORD_CTG_CD := 'CS' ; --흉부외과
--exec :ORD_CTG_CD := 'IME';  --내분비대사내과
--exec :ORD_CTG_CD := 'NR' ;  --신경과
--exec :ORD_CTG_CD := 'CHV';  --심혈관센터
--exec :ORD_CTG_CD := 'IMP';  --호흡기내과
--exec :ORD_CTG_CD := 'PED'; --어린이병원
--exec :ORD_CTG_CD := 'PDL'; --소화기센터
--exec :ORD_CTG_CD := 'OMS'; --구강악안면외과
--exec :ORD_CTG_CD := 'HPC';  --건강증진센터
--exec :ORD_CTG_CD := 'BR1'; --영상의학과
--exec :ORD_CTG_CD := 'BN1'; --핵체내
select *
 from CNLSRUSD
 where hsp_tp_cd = :HSP_TP_CD
 and sid = (SELECT SID FROM CNLRRUSD WHERE HSP_TP_CD = :HSP_TP_CD AND RTRM_DT IS NULL AND STF_NO = :STF_NO)
;
update CNLSRUSD
 set BLNG_EXM_DEPT_CD = :ORD_CTG_CD
 where hsp_tp_cd =:HSP_TP_CD
 and sid = (SELECT SID FROM CNLRRUSD WHERE HSP_TP_CD = :HSP_TP_CD AND RTRM_DT IS NULL AND STF_NO = :STF_NO)
;
commit;

--select *
-- from ccooccac
-- where hsp_TP_CD='01'
-- and ord_grp_cd ='03'
-- and ord_Ctg_Cd not In('BP','CP')
-- and IDPT_EXM_YN = 'Y'
;
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검</QUERY_NAME>
    <QUERY_TEXT>-- 처방정보
SELECT O.SPCM_PTHL_NO
     , O.EXM_PRGR_STS_CD
     , O.TH1_SPCM_CD
     , O.*
  FROM MOOOREXM O
 WHERE O.HSP_TP_CD = '01'
   AND O.PT_NO = ''
;

-- 바코드정보
SELECT *
   FROM MSELMCED C
 WHERE C.HSP_TP_CD = '01'
   AND C.SPCM_NO = ''
;

-- 접수정보
SELECT *
  FROM MSELMSCD C
 WHERE C.HSP_TP_CD = '01'
   AND C.SPCM_NO = ''
;

-- 결과정보
SELECT *
  FROM MSELMSCD R
 WHERE R.HSP_TP_CD = '01'
   AND R.SPCM_NO = ''
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>과내</QUERY_NAME>
    <QUERY_TEXT>-- 처방정보
SELECT O.EXM_PRGR_STS_CD
     , O.RSV_DTM
     , O.EXM_HOPE_DT
     , O.*
   ROM MOOOREXM O
 WHERE O.HSP_TP_CD = '01'
   AND O.PT_NO = ''
;


-- 접수정보
SELECT A.*
  FROM MSERMAAD A
 WHERE A.HSP_TP_CD = '01'
   AND A.ORD_ID = ''

</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>미시행검사 -&gt; 임시테이블</QUERY_NAME>
    <QUERY_TEXT>INSERT INTO MOOOREXM_NOFMT_0114_1
SELECT ORD_ID
     , PT_NO
     , ORD_DT
     , ORD_CD
     , ORD_NM
     , PACT_ID
     , EXM_PRGR_STS_CD
     , EXM_HOPE_DT
     , FSR_STF_NO
FROM (
   SELECT O.*
          FROM MOOOREXM O
             , PCTPCPAM_DAMO P
             , MSERMMMC M
          WHERE O.HSP_TP_CD = '01'

          AND O.ORD_ID NOT LIKE 'MIG%'
          AND O.ORD_DT &gt;= TO_DATE('2022-01-01', 'YYYY-MM-DD')
          AND O.PACT_TP_CD = 'O'
          AND O.RPY_STS_CD = 'Y'

          AND O.EXM_HOPE_DT BETWEEN TO_DATE('2022-01-01', 'YYYY-MM-DD') AND TO_DATE('2022-01-13', 'YYYY-MM-DD') + 0.99999

          AND O.EXM_PRGR_STS_CD NOT IN ('E','D','N','F' )
          AND O.EXRM_HH_DTM IS NULL

          AND O.ODDSC_TP_CD     = 'C'
          AND O.PT_NO = P.PT_NO

          AND O.ORD_CD = M.EXM_CD
          AND O.HSP_TP_CD = M.HSP_TP_CD

          AND EXISTS (SELECT 1
                        FROM MSERMMMC M
                       WHERE M.EXM_CD = O.ORD_CD
                         AND M.HSP_TP_CD = O.HSP_TP_CD
--                         AND NVL(M.ARGM_IMPL_YN, 'N') = 'Y' -- 진료실시행검사
                         AND NVL(M.RSEX_YN, 'N') = 'N' -- 예약검사아닌것
                         AND NVL(M.INTG_RSV_YN, 'N') = 'N' -- 통합예약검사아닌것
                       )

          AND O.ORD_CTG_CD NOT  IN ('BR1', 'BN1', 'CHV')

--          AND O.PBSO_DEPT_CD != 'HPC'

--          AND EXISTS (
--                        SELECT 1
--                          FROM HINF.MSERMINF_ORU
--                         WHERE HISORDERID = O.ORD_ID
--          )

UNION ALL

   SELECT O.*
          FROM MOOOREXM O
             , PCTPCPAM_DAMO P
          WHERE O.HSP_TP_CD = '01'

          AND O.ORD_ID NOT LIKE 'MIG%'
          AND O.ORD_DT &gt;= TO_DATE('2022-01-01', 'YYYY-MM-DD')
          AND O.PACT_TP_CD = 'O'
          AND O.RPY_STS_CD = 'Y'

          AND O.EXM_HOPE_DT BETWEEN TO_DATE('2022-01-01', 'YYYY-MM-DD') AND TO_DATE('2022-01-13', 'YYYY-MM-DD') + 0.99999

          AND O.EXM_PRGR_STS_CD NOT IN ('E', 'D', 'N', 'F')
--          AND O.EXM_PRGR_STS_CD = 'B'
--          AND O.EXM_PRGR_STS_CD = 'B'
          AND O.EXRM_HH_DTM IS NULL
          AND O.ODDSC_TP_CD     = 'C'
          AND O.PT_NO = P.PT_NO

          AND O.ORD_CTG_CD IN ('CP', 'PA1', 'NM')

          AND O.ORD_SLIP_CTG_CD = 'LT'

ORDER BY 1
)</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>미시행검사 시행</QUERY_NAME>
    <QUERY_TEXT>DECLARE

    V_EXEC_DTM DATE;
    G_COST_DEPT VARCHAR2(20);
    G_WORK_DEPT VARCHAR2(20);

    IO_ERRYN    VARCHAR2(100);
    IO_ERRMSG   VARCHAR2(1000);


--    IN_FR_DT    VARCHAR2(12) := '2022-01-01';
--    IN_TO_DT    VARCHAR2(12) := '2022-01-09';
BEGIN


    FOR DR IN
    (
        SELECT *
          FROM MOOOREXM
         WHERE HSP_TP_CD = '01'
           AND ODDSC_TP_CD = 'C'
--           AND ORD_ID = '150548975'
           AND ORD_ID IN
                (

   SELECT ORD_ID
          FROM MOOOREXM_NOFMT_0114_1 O
--    WHERE O.ORD_ID = '150242151'

---------------------------

                )

    ) LOOP

        DBMS_OUTPUT.PUT_LINE('');


        V_EXEC_DTM := DR.FSR_DTM +0.028;

        BEGIN
            SELECT /*+ XSUP.PC_MSE_MOOOREXM_UPDATE */
                   C.EXPS_USE_DEPT_CD
                 , C.EXPS_USE_WKDP_CD
              INTO G_COST_DEPT
                 , G_WORK_DEPT
              FROM CNLRRUSD C
             WHERE C.STF_NO = DR.FSR_STF_NO
               AND NVL(C.RTRM_DT, TRUNC(SYSDATE) + 1)  &gt; TRUNC(SYSDATE)
               AND C.HSP_TP_CD  = DR.HSP_TP_CD;

--            EXCEPTION
--                WHEN NO_DATA_FOUND THEN
--                    IO_ERRYN  := 'Y';
--                    IO_ERRMSG := '시행자의 비용사용부서/세부진료과 내역이 없습니다.(2) ERRCODE = ' || TO_CHAR(SQLCODE);
--
--                    GOTO QUIT;
--                WHEN OTHERS THEN
--                    IO_ERRYN  := 'Y';
--                    IO_ERRMSG := '시행자의 비용사용부서/세부진료과 조회 중 오류발생(3) ERRCODE = ' || TO_CHAR(SQLCODE);
--                    GOTO QUIT;
        END;

            IO_ERRYN := '';
            IO_ERRMSG := '';

            DBMS_OUTPUT.PUT_LINE('');



            PC_MSE_MSERMAAD_WARD_INSERT
            (
                  DR.ORD_ID
                , 'I'
                , DR.FSR_STF_NO
                , G_COST_DEPT
                , ''
                , ''
                , G_WORK_DEPT
                , DR.FSR_STF_NO
                , 'Y'
                , DR.HSP_TP_CD
                , DR.FSR_STF_NO
                , 'GOLDEN-SCS미시행검사 업데이트'
                , '10.91.103.47'
                , IO_ERRYN
                , IO_ERRMSG

            );


          UPDATE /*+ XSUP.PC_MSE_MOOOREXM_UPDATE */
                 MOOOREXM A
             SET A.ACPT_DTM               = V_EXEC_DTM
               , A.FMT_EXRM_NO            = A.HOPE_EXRM_NO
               , A.EXRM_HH_DTM            = V_EXEC_DTM
               , A.RTM_FMT_DTM            = V_EXEC_DTM     
               , A.RTM_CLSN_DT            = SYSDATE --작업일자.
               , A.LSH_STF_NO             = DR.FSR_STF_NO
               , A.LSH_DTM                = SYSDATE
               , A.LSH_PRGM_NM            = 'GOLDEN-SCS미시행검사 업데이트'
               , A.LSH_IP_ADDR            = '10.91.103.47'
    --           , A.RSV_DTM                = DECODE(A.PACT_TP_CD, 'O', NVL(A.RSV_DTM, DECODE( IN_EXM_PRGR_STS_CD, 'E', DECODE(G_RSEX_YN, 'Y', G_SHOT_DTETM, A.RSV_DTM),A.RSV_DTM)),  A.RSV_DTM)--2017-10-24 임재득 추가 - 예약검사 여부 확인 : 예약 검사인데, 선검사일경우 수납없이 접수가 가능함. BUT 수납에서 예약검사인데 예약없이 실행까지 한경우 수납을 할수가 없음. 그래서 예약 검사인데, 선검사인경우 RSV_DTM 정보를 넣어줌.
           WHERE A.ORD_ID   = DR.ORD_ID
             AND A.HSP_TP_CD  = DR.HSP_TP_CD
          ;






        DBMS_OUTPUT.PUT_LINE('DR.ORD_ID :: ' || DR.ORD_ID);
        DBMS_OUTPUT.PUT_LINE('IO_ERRYN :: ' || IO_ERRYN);
        DBMS_OUTPUT.PUT_LINE('IO_ERRMSG :: ' || IO_ERRMSG);
    END LOOP;

--&lt;&lt;QUIT&gt;&gt;

        DBMS_OUTPUT.PUT_LINE('Q IO_ERRYN :: ' || IO_ERRYN);
        DBMS_OUTPUT.PUT_LINE('Q IO_ERRMSG :: ' || IO_ERRMSG);
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>코로나 검체번호 확인</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_PT_NO := '24220182';

SELECT P.PT_NM,EXRS_CNTE,LST_RSLT_VRFC_DTM, A.*
FROM MSELMAID A
   , PCTPCPAM_DAMO P
WHERE A.PT_NO = :IN_PT_NO
AND EXM_CD IN
(
SELECT C.TH1_RMK_CNTE
  FROM MSELMSID C
 WHERE C.HSP_TP_CD       = A.HSP_TP_CD
   AND C.LCLS_COMN_CD    = 'EXRM_RESULT_1'
   AND C.SCLS_COMN_CD_NM = 'COVID19'
   AND C.USE_YN          = 'Y'
)
AND A.PT_NO = P.PT_NO
ORDER BY ACPT_DTM
;
</QUERY_TEXT>
    <GROUP>COVID19</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>코로나 문자전송</QUERY_NAME>
    <QUERY_TEXT>BEGIN
  XSUP.PKG_MSE_SMS_BATCH.PC_MSE_COVID19_SMS('220114005729');

  COMMIT;
END;
</QUERY_TEXT>
    <GROUP>COVID19</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>코로나 문자 내역 조회</QUERY_NAME>
    <QUERY_TEXT>--xcom에서 조회해야함 
SELECT *
 FROM SDK_MMS_SEND
 WHERE 1=1
-- AND ROWNUM =1
 AND MMS_MSG LIKE '%신종코로나바이러스%'
 ORDER BY SEND_DATE DESC
-- AND SUBSTR(SEND_DATE,1,8) ='20220115'
;</QUERY_TEXT>
    <GROUP>COVID19</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>MSERMBAV(재료정보조회뷰)</QUERY_NAME>
    <QUERY_TEXT>VIEW MSERMBAV ( ORD_CD, ORD_NM, EDI_CODE, HSP_TP_CD, INS_UNPR, GNR_UNPR, INS_MIFI_TP_CD, INS_CTRA_INF_CNTE, MIF_STTS_CTG_CD ) AS
SELECT  /*+ XSUP.MSERMBAV */
        A.MIF_CD     ORD_CD
      , A.ORD_NM     ORD_NM
--      , ''           ORD_CL
--      , ''           RAW_MTR_CD
      , B.INS_EDI_CD EDI_CODE
      , A.HSP_TP_CD  HSP_TP_CD
      , nvl(decode(B.MIF_TP_CD, 'G', XBIL.FT_AIM_SGLGRP_PRICE(A.HSP_TP_CD, A.MIF_CD, sysdate, 'BB', '', 'S', '', '', ''), B.INS_UNPR),0) INS_UNPR
      , nvl(decode(B.MIF_TP_CD, 'G', XBIL.FT_AIM_SGLGRP_PRICE(A.HSP_TP_CD, A.MIF_CD, sysdate, 'AA', '', 'S', '', '', ''), B.GNR_UNPR),0) GNR_UNPR
--      , B.INS_UNPR   INS_UNPR
--      , B.GNR_UNPR   GNR_UNPR
      , B.INS_MIFI_TP_CD   INS_MIFI_TP_CD   --보험수가보험구분코드
      , A.INS_CTRA_INF_CNTE   INS_CTRA_INF_CNTE   -- 보험정보
      , B.MIF_STTS_CTG_CD     AS MIF_STTS_CTG_CD  --수가통계분류코드
   FROM CCOOCBAC A
      , AIMIRPMC B
  WHERE A.ORD_GRP_CD = '06'                              -- 처치 및 재료
    AND A.ORD_CTG_CD = 'TRM'                             -- 처치 및 재료
    AND A.ORD_PSB_YN = 'Y'                               -- 오더가능여부
    AND A.MIF_CD     = B.MIF_CD
    AND A.HSP_TP_CD  = B.HSP_TP_CD
   -- AND ( B.APY_END_DT &gt;= TRUNC(SYSDATE) OR B.APY_END_DT IS NULL)
--    AND B.APY_END_DT  =  '9999-12-31'
    AND TRUNC(SYSDATE) BETWEEN    APY_STR_DT AND  APY_END_DT  -- 2013-10-02  김세용   수가종료시  수가 마스터에서  불러오는 값을 현재시점의 값으로
  group by A.HSP_TP_CD
        , A.MIF_CD
           , A.ORD_NM
        , B.INS_EDI_CD
        , B.MIF_TP_CD
        , B.INS_UNPR
        , B.GNR_UNPR
        , B.INS_MIFI_TP_CD
        , A.INS_CTRA_INF_CNTE
           , B.MIF_STTS_CTG_CD
</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>2차재료 정보조회</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.IV.RM.EX.SelectTm2SOrdSingle"&gt;&lt;!--
    Clss : text
    Desc : 2차재료 처방 정보조회 (PKG_SUP_SR_D_01.pc_sr_sel_sr2ordcv_01) 
       Author : 권장섭
       Create date : 2012-09-01
       Update date : 2012-09-01
--&gt;
SELECT /* HIS.MS.IV.RM.EX.SelectTm2SOrdSingle */
       B.ORD_CD                                     SGL_MIF_CD
     , B.ORD_NM                                     ORD_NM
     , C.NRM                                        NRM
     , D.BZAQ_NM                                    BZAQ_NM    -- 거래처명
     , E.MNF_CMP_NM                                 MNF_CMP_NM  -- 제조사명
     , D.BZAQ_ASDP_TEL_NO                           TEL_NO       -- 거래처 전화번호
     , D.BZAQ_ASDP_NM                               RPST_NM    -- 거래처 담당자명
     , B.EDI_CODE                                   EDI_CODE
     , B.INS_UNPR                                   INS_UNPR    -- 보험단가
     , B.GNR_UNPR                                   GNR_UNPR   -- 일반단가
     , DECODE(B.INS_MIFI_TP_CD, '1', 'Y', 'N')      INS_YN      -- 보험여부
     , DECODE(B.INS_MIFI_TP_CD, '1', 1, 0 )         A_RPY_USE_QTY   --보험수량
     , DECODE(B.INS_MIFI_TP_CD, '1', 0, 1 )         AF_RPY_USE_QTY  -- 비보험수량
     , B.MIF_STTS_CTG_CD 
  FROM XSUP.MSERMBAV B
     , RCAIPCDM C
     , RCAOMVLD D
     , RCAOMBCD  E
 WHERE B.ORD_CD     = :EXM_CD
   AND B.HSP_TP_CD  = :HIS_HSP_TP_CD
   AND B.ORD_CD     = C.ARCL_NO(+)
   AND B.HSP_TP_CD       = C.HSP_TP_CD(+)
   AND C.BZAQ_CD           = D.BZAQ_CD(+)
   AND C.HSP_TP_CD       = D.HSP_TP_CD(+)
   AND C.MNF_CMP_CD            = E.MNF_CMP_CD(+)
   AND C.HSP_TP_CD       = E.HSP_TP_CD(+)
 ORDER BY  B.ORD_CD     
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사 처방분류(ORD_CTG_CD)</QUERY_NAME>
    <QUERY_TEXT>--PCTR_EXM_IPTN_YN = 'Y' 이면 영상검사 이기 때문에 판독번호를 생성하지 않음 . 
SELECT PCTR_EXM_IPTN_YN,A.*
  FROM CCOOCCAC A -- 처방분류코드
 WHERE 1=1
 AND hsp_tp_cd = '01'
 and ord_grp_cd = '03'
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처방슬립조회</QUERY_NAME>
    <QUERY_TEXT>SELECT A.*
  FROM CCOOCCSC A -- 처방전표분류코드
 WHERE 1=1
   AND A.HSP_TP_CD = '01'
--   AND SUBSTR(A.ORD_SLIP_CTG_CD,1,3) = 'CHV'
--   AND A.UPR_ORD_SLIP_CTG_CD = 'CHV' -- 심혈관센터(심도자실, 심장초음파, 심전도, 운동부하검사실)
--   AND (A.UPR_ORD_SLIP_CTG_CD LIKE 'CHV%' OR A.UPR_ORD_SLIP_CTG_CD LIKE 'CH%') -- 심혈관센터(심도자실, 심장초음파, 심전도, 운동부하검사실)
--   AND A.UPR_ORD_SLIP_CTG_CD = 'IMP' -- 호흡기내과(폐기능검사, 기관지내시경)
--   AND A.UPR_ORD_SLIP_CTG_CD = 'PED' -- 소아청소년과
--   AND (A.UPR_ORD_SLIP_CTG_CD LIKE 'PED%' OR A.UPR_ORD_SLIP_CTG_CD LIKE 'PE%') -- 소아청소년과
--   AND (A.UPR_ORD_SLIP_CTG_CD LIKE 'PDL%' OR A.UPR_ORD_SLIP_CTG_CD LIKE 'PL%') -- 소화기내시경
--   AND (A.UPR_ORD_SLIP_CTG_CD LIKE 'DR%' OR A.UPR_ORD_SLIP_CTG_CD LIKE 'R%') -- 영상의학과
--   AND (A.ORD_SLIP_CTG_CD = 'NM' OR A.UPR_ORD_SLIP_CTG_CD = 'NM' OR SUBSTR(A.UPR_ORD_SLIP_CTG_CD,1,3) = 'N10') -- 핵의학영상검사
--   AND (A.ORD_SLIP_CTG_CD LIKE 'NM%' OR A.UPR_ORD_SLIP_CTG_CD LIKE 'NM%' OR SUBSTR(A.UPR_ORD_SLIP_CTG_CD,1,3) = 'NMS') -- 핵의학영상검사
--   AND A.UPR_ORD_SLIP_CTG_CD = 'NMS' -- 핵의학기능검사(과내검사)
--   AND A.UPR_ORD_SLIP_CTG_CD = 'IME' -- 내분비대사내과
--   AND A.UPR_ORD_SLIP_CTG_CD = 'NR' -- 신경과
   AND A.UPR_ORD_SLIP_CTG_CD = 'DR' -- 영상의학과
--   AND A.UPR_ORD_SLIP_CTG_CD = 'DS' -- 구강외과촬영
--   AND A.UPR_ORD_SLIP_CTG_CD = 'IMR' -- 류마티스초음파
--   AND A.UPR_ORD_SLIP_CTG_CD = 'UR' -- 비뇨의학과
--   AND A.UPR_ORD_SLIP_CTG_CD = 'IMN' -- 신장내과
--   AND A.UPR_ORD_SLIP_CTG_CD = 'EY' -- 안과검사
--   AND A.UPR_ORD_SLIP_CTG_CD = 'IMA' -- 알러지검사
--   AND A.UPR_ORD_SLIP_CTG_CD = 'GS' -- 외과초음파실
--   AND A.UPR_ORD_SLIP_CTG_CD = 'IM' -- 응급의학과초음파

 ORDER BY A.HSP_TP_CD, A.LVL_SEQ, A.UPR_ORD_SLIP_CTG_CD, A.ORD_SLIP_CTG_CD
 ;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>특정검사의 처방슬립조회</QUERY_NAME>
    <QUERY_TEXT>SELECT B.UPR_ORD_SLIP_CTG_CD  --상위 처방슬립
    ,B.ORD_SLIP_CTG_CD    --처방슬립 상세
    ,A.*
 FROM MSERMMMC A
   ,CCOOCCSC B
 WHERE A.HSP_TP_CD='01'
 AND A.HSP_TP_CD = B.HSP_TP_CD
 AND A.EXM_CD = 'RC01001'
 AND A.ORD_SLIP_CTG_CD = B.ORD_SLIP_CTG_CD</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>다제내성균 조회</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.IF.IF.CM.SelectMultiValentBacteriaNew"&gt;&lt;!--
    Clss : package
    Desc : 다제내성균 조회
    Author : 오원빈
    Create date : 2022-01-18
    Update date :  
--&gt;
SELECT 
  G.PT_NO   
      , XBIL.FT_PCT_AGE('AUTO_01', SYSDATE, G.PT_BRDY_DT)      AGE
      , G.PT_NM     
      , H.WD_DEPT_CD     WD_DEPT_CD_NM                                          
      , H.PRM_NO  
      , H.PT_HME_DEPT_CD   MED_DEPT_CD_NM
   , H.TH1_SPCM_CD    
      , C.EXM_CD         ORD_NM
   , NVL(TO_CHAR(I.ADS_DTM,'YYYY-MM-DD HH24:MI:SS'),
       TO_CHAR(J.ADS_DT,'YYYY-MM-DD')) ADS_DT
   , NVL(TO_CHAR(I.DS_DTM,'YYYY-MM-DD HH24:MI:SS'),TO_CHAR(J.CHOT_DTM,'YYYY-MM-DD HH24:MI:SS'))  DS_DTM
   , TO_CHAR(H.ACPT_DTM,'YYYY-MM-DD HH24:MI:SS') ACPT_DTM
   , TO_CHAR(C.LST_RSLT_VRFC_DTM,'YYYY-MM-DD')    LST_RSLT_VRFC_DTM
   , (SELECT MVRT_CNTE FROM MSELMSYC WHERE HSP_TP_CD = A.HSP_TP_CD AND MVM_CD = D.MVM_CD)   MVRT_CNTE
      , D.MVM_CD
   , E.ATBA_CD 
   , E.ATBA_DMTR_CNTE    
     , E.ATBA_SSBT_RSLT_CNTE    
  FROM MSELMSID A
     , MSELMCED B
  , MSELMAID C
  , MSELMCRD D
  , MSELMMRD E
  , MSELMSID F
  , PCTPCPAM_DAMO G
  , MOOOREXM H
  , ACPPRAAM I
  , ACPPRETM J
WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
  AND A.HSP_TP_CD = B.HSP_TP_CD
  AND A.HSP_TP_CD = C.HSP_TP_CD
  AND A.HSP_TP_CD = D.HSP_TP_CD
  AND A.HSP_TP_CD = E.HSP_TP_CD
  AND A.HSP_TP_CD = F.HSP_TP_CD
  AND A.HSP_TP_CD = H.HSP_TP_CD
  AND A.HSP_TP_CD = I.HSP_TP_CD(+)
  AND A.HSP_TP_CD = J.HSP_TP_CD(+)
  AND A.USE_YN = F.USE_YN
  AND A.USE_YN = 'Y'
  AND C.RSLT_BRFG_YN = 'Y'
  AND D.LN_SEQ = E.LN_SEQ
  AND B.SPCM_NO = C.SPCM_NO
  AND B.SPCM_NO = D.SPCM_NO
  AND B.SPCM_NO = E.SPCM_NO
  AND B.SPCM_NO = H.SPCM_PTHL_NO
  AND B.PT_NO = C.PT_NO
  AND B.PT_NO = G.PT_NO
  AND B.PT_NO = H.PT_NO
  AND B.PT_NO = I.PT_NO(+)
  AND B.PT_NO = J.PT_NO(+)
  AND B.ORD_ID = H.ORD_ID
  AND C.ORD_ID = H.ORD_ID
  AND A.LCLS_COMN_CD = 'ANTI'
  AND F.LCLS_COMN_CD = 'ANTI_GUBN'
  AND A.LCLS_COMN_CD = F.TH1_RMK_CNTE
  AND A.TH1_RMK_CNTE = F.SCLS_COMN_CD_NM
  AND A.SCLS_COMN_CD = D.MVM_CD
  AND F.SCLS_COMN_CD = E.ATBA_CD
  AND H.ODDSC_TP_CD = 'C'
  AND H.PACT_ID =  I.PACT_ID(+)
  AND H.PACT_ID =  J.PACT_ID(+)
  AND NVL(I.APCN_YN,'N') = 'N'
  AND NVL(J.APCN_YN,'N') = 'N'
  AND H.PACT_TP_CD &lt;&gt; 'O' --외래 제외
  AND C.LST_RSLT_VRFC_DTM BETWEEN TRUNC(TO_DATE(:IN_STR_DT,'YYYY-MM-DD'))
           AND TRUNC(TO_DATE(:IN_END_DT,'YYYY-MM-DD')) + 0.99999  
  AND EXISTS(SELECT 1
        FROM MOOPTICC X
     WHERE X.HSP_TP_CD = A.HSP_TP_CD
    AND X.INFC_INF_CD = A.SCLS_COMN_CD_NM
    AND EXISTS(SELECT COMN_CD_NM
        FROM CCCCCSTE
       WHERE COMN_GRP_CD = 'DR00108'
         --AND UPPER(REPLACE(COMN_CD_NM,' ','')) = UPPER(REPLACE(X.INFC_INF_NM,' ',''))
         AND INSTR(UPPER(REPLACE(X.INFC_INF_NM,' ','')),UPPER(REPLACE(COMN_CD_NM,' ',''))) &gt; 0         
         AND COMN_CD  = :ATBA_TLR_TP_CD
                          )
             )
 AND E.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
         FROM MSELMSID
           WHERE HSP_TP_CD = A.HSP_TP_CD
             AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
             AND USE_YN = 'Y'
             AND SCLS_COMN_CD LIKE :IN_SCLS_COMN_CD || '%')             
 &lt;IsEqual Prepend="" Property="ADS_GUBN" CompareValue="0"&gt;
 AND :ADS_GUBN = :ADS_GUBN
 &lt;/IsEqual&gt;&lt;IsEqual Prepend="" Property="ADS_GUBN" CompareValue="1"&gt;
 AND (
   (EXISTS (SELECT 1
       FROM ACPPRAAM X
       WHERE X.HSP_TP_CD = A.HSP_TP_CD
         AND X.PACT_ID = H.PACT_ID
         AND NVL(X.APCN_YN,'N') = 'N'
          AND H.ACPT_DTM &gt;= (X.ADS_DTM + 48/24) --입원 후 접수까지 48시간 이후
          )
    )
    OR
    (
    EXISTS (SELECT 1
       FROM ACPPRETM X
       WHERE X.HSP_TP_CD = A.HSP_TP_CD 
         AND X.PACT_ID = H.PACT_ID
         AND NVL(X.APCN_YN,'N') = 'N'
          AND H.ACPT_DTM &gt;= (X.ADS_DT + 48/24) --입원 후 접수까지 48시간 이후
          )
     )
   )
 &lt;/IsEqual&gt;&lt;IsEqual Prepend="" Property="ADS_GUBN" CompareValue="2"&gt;
 AND (
   (EXISTS (SELECT 1
       FROM ACPPRAAM X
       WHERE X.HSP_TP_CD = A.HSP_TP_CD
         AND X.PACT_ID = H.PACT_ID
         AND NVL(X.APCN_YN,'N') = 'N'        
          AND H.ACPT_DTM &lt; (X.ADS_DTM + 48/24) --입원 후 접수까지 48시간 미만
          )
   )
   OR
   (EXISTS (SELECT 1
       FROM ACPPRETM X
       WHERE X.HSP_TP_CD = A.HSP_TP_CD
         AND X.PACT_ID = H.PACT_ID
         AND NVL(X.APCN_YN,'N') = 'N'        
          AND H.ACPT_DTM &lt; (X.ADS_DT + 48/24) --입원 후 접수까지 48시간 미만
          )
   )
  )
 &lt;/IsEqual&gt;&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>사본발급 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '01';
EXEC :PT_NO :='10448288';
SELECT C.CD_NM,B.ORD_ID,B.ACPT_DTM,B.PHTG_DTM,A.*
 FROM MRDDRPLD A --의무기록출력로그정보
    , MSERMAAD B
    , MSERMMMC C
WHERE 1=1
AND A.HSP_TP_CD = B.HSP_TP_CD
AND A.HSP_TP_CD = C.HSP_TP_CD
AND A.HSP_TP_CD = :HSP_TP_CD
AND A.PT_NO = :PT_NO
AND A.PT_NO = B.PT_NO
--AND A.PRNT_ASK_NO_NM = '20222493888'
AND A.REC_CLS_CD = 'EX'
AND A.REC_CLS_DTL_CD = 'EX_PICTURE'
AND A.PRNT_ASK_NO_NM = B.IPTN_NO
AND B.ORD_CD = C.EXM_CD
AND TRUNC(B.ACPT_DTM) = '20220207'
--AND C.CD_NM LIKE '%MRI%'
--AND B.ORD_CD LIKE 'RM%'
ORDER BY A.PRNT_DTM
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>퇴원하기전 시행일 변경</QUERY_NAME>
    <QUERY_TEXT>select exm_prgr_sts_CD,exrm_hh_dtm,rtm_fmt_dtm,RTM_CLSN_DT,pact_tp_cd,a.*
 from mooorexm a
 where hsp_tP_cd='01'
 and pt_no = '24428359'
 and ord_cd = 'SC210001'
;
select bf_fmt_yn
 from ccoocbac
 where 1=1
  and ord_cd = 'SC210001'
;
select acpt_dtm,phtg_dtm,a.*
 from msermaad a
 where hsp_tP_CD='01'
 and ord_Id ='150879158'
 ;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오픈전 영상 강제 가판독상태 변경</QUERY_NAME>
    <QUERY_TEXT>select exm_prgr_sts_Cd,a.*
 from msermaad a
 where hsp_tp_Cd='01'
 and pt_no = '10311504'
 and ord_Ctg_Cd ='BR1'
 and ord_dt = '20210830'
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>미시행검사 있어서 퇴원못하는 경우</QUERY_NAME>
    <QUERY_TEXT>select *
 from mooorexm
 where hsp_tp_Cd='01'
 and pt_no = '24338633'
 and exm_prgr_sts_Cd IN ('X','B')
 and oddsc_tP_Cd= 'C'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>갓트장님의 완벽한 필터</QUERY_NAME>
    <QUERY_TEXT>CollectionView view;  --생성자 위에 작성 (아무곳에 적어도 됨)

--생성자 안에 작성
this.dgdFavQuery.ItemsSource = this.OcFavQuery;
            view = (CollectionView)CollectionViewSource.GetDefaultView(dgdFavQuery.ItemsSource);
            view.Filter = UserFilter;




--메서드
private bool UserFilter(object item)
        {
            var data = item as FavQuery;
            bool result = false;


            if (String.IsNullOrEmpty(txtKeyword.Text))
                return true;
            else
            {

                string[] arrKeyword = txtKeyword.Text.Split(',');

                foreach (var str in arrKeyword)
                {
                    if (string.IsNullOrEmpty(str)) continue;

                    result =
                        (
                               (this.NVL(data.QUERY_NAME, "").IndexOf(str, StringComparison.OrdinalIgnoreCase) &gt;= 0)
                       );


                    if (result == false) return false; //&amp;&amp; 조건으로 모두 충족해야 true 리턴함.
                }
            }


            return result;
        }


--텍스트 체인지 이벤트 
private void TxtKeyword_TextChanged(object sender, TextChangedEventArgs e)
        {
            CollectionViewSource.GetDefaultView(dgdFavQuery.ItemsSource).Refresh();
        }</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>6동 부서 (어린이병원)</QUERY_NAME>
    <QUERY_TEXT>SELECT DEPT_CD
         FROM PDEDBMSM
        WHERE HSP_TP_CD = '01'
          AND MTD_UPR_DEPT_CD = 'CHC'
          AND USE_STOP_DT IS NULL
        ;
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>격리병실</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_SDATE := '2021-01-01';
EXEC :IN_EDATE := '2022-01-07';
EXEC :IN_INOUT := 'O';
SELECT /*+ LEADING(A) USE_NL(A B C) PKG_MOO_INFECTION_MANAGE.PC_INFECTION_ISOLATIONPATIENT */
                   A.ISLT_PRM_RSN_CD
                 , (SELECT COMN_CD_NM
                      FROM CCCCCSTE       --CCCCCSTH(천진호 변경)
                     WHERE COMN_GRP_CD    =    'E13'
                       AND COMN_CD    = A.ISLT_PRM_RSN_CD
                       AND (TRUNC(SYSDATE) BETWEEN A.APY_STR_DT AND A.APY_END_DT)
                       AND USE_YN = 'Y' )                                                      ISLT_PRM_RSN_NM
                 , A.PT_NO
                 , B.PT_NM
                 , B.SEX_TP_CD || '/' || XBIL.FT_PCT_AGE('AUTO_01', SYSDATE, B.PT_BRDY_DT)    SEX_AGE
                 , B.PT_BRDY_DT                            --환자생일일자
                 , C.MED_DEPT_CD
                 , XMED.FT_MOO_DEPTNM(C.MED_DEPT_CD,'H', '01')                        MED_DEPT_NM        --진료부서명
                 , A.WD_DEPT_CD || '-' ||C.PRM_NO || '-' || C.BED_NO                          WARDNO              --병동 병실
                 , NVL(C.CHDR_STF_NO,C.NCDR_STF_NO)                                         CHDR_STF_NO        --선택의직원번호
                 , XMED.FT_MOO_GET_USERNM(NVL(C.CHDR_STF_NO,C.NCDR_STF_NO), '01')    CHDR_STF_NM      --선택의직원명
                 , ANDR_STF_NO                                                                                                        --주치의직원번호
                 , XMED.FT_MOO_GET_USERNM(C.ANDR_STF_NO, '01')                        ANDR_STF_NM        --주치의직원명
                 , A.ADS_DT                                                                               --입원일자
                 , A.FST_ISLT_DT                                                                                --최초격리일자
                 , A.DS_EXPT_DT                                                                           --퇴원예정일자
                 , XMED.FT_MOO_DIAGNOSIS(A.PT_NO, '', C.MED_DEPT_CD, '','01', 'I')    DGNSNM        --진단명
                 , XMED.FT_MOO_ADMTYPE(A.PT_NO, A.ADS_DT, '01')                      ADMTYPE            --입원예약구분
                 , C.PRM_GRD_CD                                                                                                        --병실등급코드
                 , XMED.FT_MOO_GET_COMN_CD_NAME('358',C.PRM_GRD_CD,'Y')                        PRM_GRD_NM      --병실등급코드
                 , (SELECT TO_CHAR(M.OP_EXPT_DT,'YYYY-MM-DD')
                      FROM MOOOPPAM M
                     WHERE M.PT_NO                    = A.PT_NO
                       AND M.HSP_TP_CD                = '01'
                       AND M.PACT_ID                  = A.RPY_PACT_ID
                       AND M.EMRG_CSLT_TP_CD         &lt;&gt; 'C'
                       AND NVL(M.OP_DTMN_YN,'N')      = 'Y'
                       AND NVL(M.OP_CNCL_DTMN_YN,'N') =    'N'
                       AND NVL(M.OP_DEL_YN,'N')       = 'N'
                       AND M.MED_DEPT_CD              = C.MED_DEPT_CD
                       AND ROWNUM                     = 1)                                  OPDATE
                 , (SELECT OP_NM
                      FROM MOOOPPAM M
                     WHERE M.PT_NO                    = A.PT_NO
                       AND M.HSP_TP_CD                = '01'
                       AND M.PACT_ID                  = A.RPY_PACT_ID
                       AND M.EMRG_CSLT_TP_CD         &lt;&gt; 'C'
                       AND NVL(M.OP_DTMN_YN,'N')      = 'Y'
                       AND NVL(M.OP_CNCL_DTMN_YN,'N') =    'N'
                       AND NVL(M.OP_DEL_YN,'N')       = 'N'
                       AND M.MED_DEPT_CD              = C.MED_DEPT_CD
                       AND ROWNUM                     = 1)                                  OP_NM
                 , A.RPY_PACT_ID                                                                        PACT_ID         --원무접수ID
                 , A.APY_STR_DT                                                                                       --병동시작일자
                 , A.APY_END_DT                                                                          --병동종료일자
                 , (SELECT COMN_CD_NM FROM CCCCCSTE WHERE COMN_CD = A.ISLT_PRM_RSN_CD AND COMN_GRP_CD = 'E13') E13 --격리사유
              FROM (SELECT /*+ NO_QUERY_TRANSFORMATION USE_NL(A B) */
                           DISTINCT
                           A.RPY_PACT_ID
                         , A.PT_NO
                         , A.FST_ISLT_DT
                         , A.WD_DEPT_CD
                         , B.ADS_DT
                         , B.DS_EXPT_DT
                         , A.APY_STR_DT
                         , A.APY_END_DT
--                         , (SELECT /*+ INDEX_ASC (X ACPPRTSD_PK) */
--                                   MIN(APY_STR_DT)        --적용시작일자
--                              FROM ACPPRTSD X             --전과전등정보
--                             WHERE X.RPY_PACT_ID = A.RPY_PACT_ID
--                               AND X.HSP_TP_CD   = '01'
--                               AND X.WD_DEPT_CD  = A.WD_DEPT_CD
--                            )  APY_STR_DT
--                         , (SELECT /*+ INDEX_DESC (X ACPPRTSD_PK) */
--                                   MAX(APY_END_DT)        --적용종료일자
--                              FROM ACPPRTSD X             --전과전등정보
--                             WHERE X.RPY_PACT_ID = A.RPY_PACT_ID
--                               AND X.HSP_TP_CD   = '01'
--                               AND X.WD_DEPT_CD  = A.WD_DEPT_CD
--                           )  APY_END_DT
                         , (SELECT /*+ INDEX_DESC (X ACPPETSH_PK) */
                                   MAX(ISLT_PRM_RSN_CD)   --격리병실사유코드
                              FROM ACPPETSH X
                             WHERE X.RPY_PACT_ID     = A.RPY_PACT_ID
                               AND X.WD_DEPT_CD      = A.WD_DEPT_CD
                             AND X.HSP_TP_CD       = '01'
                               AND X.ISLT_PRM_RSN_CD IS NOT NULL
                             AND X.ISLT_PRM_RSN_CD NOT IN ('0', 'A')
                            ) ISLT_PRM_RSN_CD
                      FROM (SELECT RPY_PACT_ID
                                 , MAX(PT_NO) PT_NO
                                 , MIN(APY_STR_DT) APY_STR_DT      --적용시작일자
                                 , MAX(A.APY_END_DTM) APY_END_DT   --적용종료일시
                                 , MAX(ISLT_PRM_RSN_CD) ISLT_PRM_RSN_CD
                                 , (SELECT /*+ INDEX_ASC (X ACPPETSH_PK) */
                                           MIN(WD_DEPT_CD)         --병동부서코드
                                      FROM ACPPETSH X              --전과전등선택의변경이력
                                     WHERE X.RPY_PACT_ID     = A.RPY_PACT_ID
                                       AND X.APY_STR_DT      = A.APY_STR_DT
                                       AND X.HSP_TP_CD       = '01'
                                       AND X.ISLT_PRM_RSN_CD IS NOT NULL
                                       AND X.ISLT_PRM_RSN_CD NOT IN ('0', 'A')
                                   ) WD_DEPT_CD
                                 , (SELECT /*+ INDEX_ASC (X ACPPETSH_PK) */
                                           MIN(APY_STR_DT)         --적용시작일자
                                      FROM ACPPETSH X              --전과전등선택의변경이력
                                     WHERE X.RPY_PACT_ID     = A.RPY_PACT_ID
                                       AND X.HSP_TP_CD       = '01'
                                       AND X.APY_STR_DT      = A.APY_STR_DT
                                       AND X.ISLT_PRM_RSN_CD IS NOT NULL
                                       AND X.ISLT_PRM_RSN_CD NOT IN ('0', 'A')
                                    ) FST_ISLT_DT
                              FROM ACPPETSH A                      --전과전등선택의변경이력
                             WHERE 1= 1
                               AND A.ISLT_PRM_RSN_CD IS NOT NULL
                            AND A.ISLT_PRM_RSN_CD NOT IN ('0', 'A')
                               AND A.HSP_TP_CD       = '01'
                             GROUP BY RPY_PACT_ID, APY_STR_DT
                            ) A
                         , ACPPRAAM B
                     WHERE A.RPY_PACT_ID = B.PACT_ID
                       AND B.HSP_TP_CD   = '01'
                     ORDER BY A.FST_ISLT_DT
                   ) A
                 , PCTPCPAM_DAMO B            --환자기본
                 , ACPPRTSD C
                WHERE 0=0
                  AND (
                    CASE :IN_INOUT
                        WHEN 'I' THEN
                            A.APY_STR_DT --BETWEEN TO_DATE(IN_SDATE,'YYYY-MM-DD') AND TO_DATE(IN_EDATE,'YYYY-MM-DD')
                        WHEN 'O' THEN
                            A.APY_END_DT --BETWEEN TO_DATE(IN_SDATE,'YYYY-MM-DD') AND TO_DATE(IN_EDATE,'YYYY-MM-DD')
                        WHEN 'S' THEN
                            TO_DATE(:IN_EDATE,'YYYY-MM-DD') --BETWEEN A.APY_STR_DT AND A.APY_END_DT
                    END BETWEEN (
                                 CASE :IN_INOUT
                                     WHEN 'I' THEN
                                         TO_DATE(:IN_SDATE,'YYYY-MM-DD')
                                     WHEN 'O' THEN
                                         TO_DATE(:IN_SDATE,'YYYY-MM-DD')
                                     WHEN 'S' THEN
                                         A.APY_STR_DT
                                 END
                                )
                            AND (
                                 CASE :IN_INOUT
                                     WHEN 'I' THEN
                                         TO_DATE(:IN_EDATE,'YYYY-MM-DD')
                                     WHEN 'O' THEN
                                         TO_DATE(:IN_EDATE,'YYYY-MM-DD')
                                     WHEN 'S' THEN
                                         A.APY_END_DT
                                 END
                                )
                   )
                        AND A.PT_NO                          = B.PT_NO
                        AND A.RPY_PACT_ID                    = C.RPY_PACT_ID
                        AND A.APY_STR_DT                     = C.APY_STR_DT
                        AND A.WD_DEPT_CD                     = C.WD_DEPT_CD
                        AND C.MED_DEPT_CD                    = NVL('',C.MED_DEPT_CD)
                        AND A.WD_DEPT_CD                     = NVL('',A.WD_DEPT_CD)
                        AND NVL(C.CHDR_STF_NO,C.NCDR_STF_NO) = NVL('',NVL(C.CHDR_STF_NO,C.NCDR_STF_NO))
                        AND C.HSP_TP_CD                      = '01'     --병원구분추가
                        AND A.PT_NO = '24374529'
                      ORDER BY  A.FST_ISLT_DT     ;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>환자명 조회 함수</QUERY_NAME>
    <QUERY_TEXT>SELECT XMED.FT_MOO_PTNM(A.PT_NO)
  FROM MOOOREXM A
 WHERE HSP_TP_CD = '01'
   AND ORD_DT = TRUNC(SYSDATE)
   AND ORD_CTG_CD = 'BR1'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진단검사 양성환자리스트</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.IF.IF.CM.MicrobeIncubationPositivePatientSearch_New"&gt;&lt;!--
    Clss :  sp (쿼리유형)
    Desc :  미생물 배양 양성환자 검색
    Author : 오원빈
    Create date : 2021-11-23
    Update date : 
--&gt;
SELECT A.PT_NO
  , E.PT_NM
  , E.SEX_TP_CD
  , XBIL.FT_PCT_AGE('AGE',SYSDATE,E.PT_BRDY_DT)  AGE
  , TO_CHAR(E.PT_BRDY_DT,'YYYY-MM-DD') PT_BRDY_DT
  , A.PACT_TP_CD
  , A.PT_HME_DEPT_CD
  , A.WD_DEPT_CD
  , A.PRM_NO
  , A.PBSO_DEPT_CD
     , B.SPCM_NO
     , A.ANDR_STF_NO
     , TO_CHAR(D.BLCL_DTM,'YYYY-MM-DD HH24:MI:SS')   BLCL_DTM --채혈일
     , TO_CHAR(B.ACPT_DT,'YYYY-MM-DD') ACPT_DT
     , B.ATBA_SSBT_RSLT_CNTE -- 판정
     , B.ATBA_DMTR_CNTE      -- 항생제결과(검사결과 아님)
     , B.ATBA_CD             -- 항생제
     , (SELECT ATBA_NM FROM MSELMMAC WHERE HSP_TP_CD = A.HSP_TP_CD AND ATBA_CD = B.ATBA_CD) ATBA_NM
     , C.MVM_CD
     , C.EXM_CD
     , A.PACT_ID   
     , D.TH1_SPCM_CD
     , (SELECT X.SPCM_NM FROM MSELMCCC X WHERE X.HSP_TP_CD = :HIS_HSP_TP_CD AND X.SPCM_CD = D.TH1_SPCM_CD )  SPCM_NM
     , MVRT_CNTE
 FROM MOOOREXM A
  ,MSELMMRD B
  ,MSELMCRD C
  ,MSELMCED D
  ,PCTPCPAM_DAMO E
 WHERE 1=1
 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
 AND A.SPCM_PTHL_NO like :IN_SPCM_NO || '%'
 AND A.HSP_TP_CD = B.HSP_TP_CD
 AND A.HSP_TP_CD = C.HSP_TP_CD
 AND A.HSP_TP_CD = D.HSP_TP_CD
 AND A.PT_NO = E.PT_NO
 AND A.PT_NO LIKE :IN_PT_NO || '%'
 AND A.SPCM_PTHL_NO = B.SPCM_NO
 AND A.SPCM_PTHL_NO = C.SPCM_NO
 AND A.SPCM_PTHL_NO = D.SPCM_NO
 AND A.PT_HME_DEPT_CD LIKE :PT_HME_DEPT_CD || '%' --진료과
 AND A.WD_DEPT_CD LIKE :WD_DEPT_CD || '%' --병동
 AND C.MVM_CD LIKE :MVM_CD || '%' --균코드
 AND B.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
         FROM MSELMSID
           WHERE HSP_TP_CD = A.HSP_TP_CD
             AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
             AND USE_YN = 'Y'
             AND SCLS_COMN_CD LIKE :IN_SCLS_COMN_CD || '%')
 AND B.ACPT_DT BETWEEN :IN_FROM_DT AND :IN_TO_DT
 
 &lt;IsEqual Prepend="" Property="LM_BLOOD" CompareValue="Y"&gt;
 AND A.ORD_CD IN (SELECT EXM_CD FROM MSELMWDE WHERE HSP_TP_CD = A.HSP_TP_CD AND WK_UNIT_CD = 'LMH')
 &lt;/IsEqual&gt;&lt;IsEqual Prepend="" Property="ADS_GUBN" CompareValue="0"&gt;
 AND :ADS_GUBN = :ADS_GUBN
 &lt;/IsEqual&gt;&lt;IsEqual Prepend="" Property="ADS_GUBN" CompareValue="1"&gt;
 AND EXISTS (SELECT 1
      FROM ACPPRAAM X
      WHERE X.HSP_TP_CD = A.HSP_TP_CD
        AND X.PACT_ID = A.PACT_ID
        AND NVL(X.APCN_YN,'N') = 'N'
         AND A.ACPT_DTM &gt;= (ADS_DTM + 48/24) --입원 후 접수까지 48시간 이후
         )
 &lt;/IsEqual&gt;&lt;IsEqual Prepend="" Property="ADS_GUBN" CompareValue="2"&gt;
 AND EXISTS (SELECT 1
      FROM ACPPRAAM X
      WHERE X.HSP_TP_CD = A.HSP_TP_CD
        AND X.PACT_ID = A.PACT_ID
        AND NVL(X.APCN_YN,'N') = 'N'        
         AND A.ACPT_DTM &lt; (ADS_DTM + 48/24) --입원 후 접수까지 48시간 미만
         )
 &lt;/IsEqual&gt;&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>1/25 조영제 백업</QUERY_NAME>
    <QUERY_TEXT>select *
 from msermamd
 where hsp_tp_cd='91'
 and sgl_mif_cd in('30073247','30081274')
 and rpy_use_qty &gt; 0
 and nvl(rpy_sts_cd,'N') = 'N'
 and rsv_dt = '2022-01-25'
</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수진 종료되었는데 검사예약</QUERY_NAME>
    <QUERY_TEXT>
SELECT apcn_yn,apcn_dtm,a.*
FROM    HBIL.acpprodm a
WHERE PACT_ID IN (
 select PACt_ID
  from HBIL.acpprodm a
  where hsp_tp_CD='01'
  AND PACt_ID  LIKE 'MIG%'
  AND apcn_yn='Y'
  INTERSECT
    SELECT PACt_ID FROM HMED.MOOOREXM  WHERE  RSV_DTM &gt;=TRUNC(SYSDATE)
    AND ORD_ID  LIKE 'MIG%'
      ) ORDER BY MED_DT</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상 오더조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :ORD_SDT := '2022-06-23';
EXEC :ORD_EDT := '2022-06-23';
EXEC :ORD_CTG_CD := 'BR1';
EXEC :MCLS_EXRM_TP_CD := 'RDG';
EXEC :PT_NO := 'ALL';
EXEC :RPY_PACT_TP_CD := '';
EXEC :HOPE_EXRM_NO := '';
EXEC :ORD_CD := '';
EXEC :EXM_PRGR_STS_CD := '';
EXEC :PT_HME_DEPT_CD := '';
EXEC :WD_DEPT_CD := '';
EXEC :SELECT_GUBN := '01';

SELECT /* HIS.MS.IV.RM.CO.SelectDtCbExrmOrd*/
            TO_CHAR(A.ORD_DT,'YYYY-MM-DD')                           ORD_DT
          , A.PT_NO                                                  PT_NO
          , B.PT_NM                                                  PT_NM
          , B.SEX_TP_CD                                              SEX_TP_CD
          , TO_CHAR(B.PT_BRDY_DT, 'YYYY-MM-DD')                      PT_BRDY_DT
          , SUBSTR(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN',B.SEC_RRN),1,6) || '-' || SUBSTR(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN',B.SEC_RRN),7,2)   PT_SEC_RRN
          , DECODE(XBIL.FT_PCT_AGE('AGE',SYSDATE, B.PT_BRDY_DT), '0', DECODE(XBIL.FT_PCT_AGE('MONTH',SYSDATE, B.PT_BRDY_DT)
                                                                            , '0', XBIL.FT_PCT_AGE('F_DAY',SYSDATE, B.PT_BRDY_DT)
                                                                                 , XBIL.FT_PCT_AGE('F_MONTH',SYSDATE, B.PT_BRDY_DT))
                                                                                 , XBIL.FT_PCT_AGE('F_AGE',SYSDATE, B.PT_BRDY_DT))   AGE
          , A.ORD_CD                                                 ORD_CD
          , CASE WHEN A.RPY_STS_CD = 'Y' AND DC_INPT_DTM IS NOT NULL AND A.RSCH_PRJT_NO IS NULL THEN '[환불요청]'
         WHEN A.RPY_STS_CD = 'Y' AND DC_INPT_DTM IS NOT NULL AND A.RSCH_PRJT_NO IS NOT NULL THEN '[환불요청][연구]'
         WHEN A.RSCH_PRJT_NO IS NOT NULL THEN '[연구]'
            ELSE ''
        END || C.CD_NM                                                  CD_NM
          , A.PT_HME_DEPT_CD                                         PT_HME_DEPT_CD
          , DECODE(A.PACT_TP_CD, 'I', A.PBSO_DEPT_CD, A.WD_DEPT_CD)  WD_DEPT_CD
          , A.PRM_NO                                                 PRM_NO
          , XSUP.FT_MSE_PATIENT_CURRENT_LOCATION(A.PACT_TP_CD, A.PACT_ID, A.HSP_TP_CD, '') LOCATION
        , XBIL.FT_HIPASS_YN(A.PT_NO, A.HSP_TP_CD, SYSDATE, A.PACT_ID)                 HIPASS_YN
          , D.KOR_SRNM_NM                                            EXM_CHDR_SID
          , E.KOR_SRNM_NM                                            LSH_SID
          , A.ORD_ID                                                 ORD_ID
          , A.PACT_TP_CD                                             PACT_TP_CD
          , A.PACT_ID                                                PACT_ID
          --, A.HOPE_EXRM_NO                                           HOPE_EXRM_NO
          --, R.EXRM_NM                                                EXRM_NM
    , NVL(G.EXRM_TP_CD,A.HOPE_EXRM_NO)                  HOPE_EXRM_NO
          , NVL((SELECT EXRM_NM FROM MSERMMRD WHERE HSP_TP_CD = :HIS_HSP_TP_CD AND EXRM_TP_CD = G.EXRM_TP_CD AND ORD_CTG_CD = A.ORD_CTG_CD),R.EXRM_NM) EXRM_NM
          , DECODE(A.EXM_PRGR_STS_CD, 'X', '예약전',
                                       'A', '예약'  ,
                                       'C', '접수'  ,
                                       'E', '시행'  ,
                                       'F', '취소'  ,
                                       'D', '가판독'  ,
                                       'N', '판독'  )                EXM_PRGR_STS_CD
          , F.KOR_SRNM_NM                                            FSR_SID
          , NVL((SELECT DECODE(Z.FRVS_RMDE_TP_CD, '4', '재초진', '3', '신환', '1', '초진', '2', '재진')  --2016-12-28 김세용 재초진추가
                   FROM ACPPRODM Z
                  WHERE A.PT_NO          = Z.PT_NO   --ryu
                    AND A.ORD_DT         = Z.MED_DT
                    AND A.PT_HME_DEPT_CD = Z.MED_DEPT_CD
                    AND :HIS_HSP_TP_CD    = Z.HSP_TP_CD
                    AND Z.APCN_DTM       IS NULL
                    AND ROWNUM = 1
                 ), DECODE(A.PACT_TP_CD, 'E', '응급', 'I', '입원', '건증'))  RPY_PACT_TP_CD
          --, DECODE(A.MED_MIFI_TP_CD,'S','비급여','D','비보험','')           MED_MIFI_TP_CD
          , DECODE(A.MED_MIFI_TP_CD,NULL,' ',XBIL.FT_AIM_CCCCCSTE_NM(:HIS_HSP_TP_CD,'DR00033',A.MED_MIFI_TP_CD,'')) MED_MIFI_TP_CD
          , A.RPY_STS_CD                                                     RPY_STS_CD
          , A.EMRG_YN                                                      EMRG_YN --응급여부
          , decode(C.RSEX_YN, 'N', '', C.RSEX_YN)                          RSEX_YN --예약검사여부
          , decode(A.EQUP_MBL_PSB_YN, 'N', '', A.EQUP_MBL_PSB_YN)          EQUP_MBL_PSB_YN --이동검사여부
          , (SELECT DTRL1_NM
               FROM CCCCCSTE AA
              WHERE AA.COMN_GRP_CD = '405'
                AND AA.COMN_CD = A.ODAPL_POP_CD
                AND AA.DTRL1_NM IS NOT NULL ) || '/' || A.COPN_CNTE || '/' || A.ORD_RMK_CNTE || '/' || A.RMK_CNTE     RMK_CNTE --처방적용목적코드/임상소견/비고/예약메모
          , DECODE(A.EXM_PRGR_STS_CD, 'X', NULL, TO_CHAR(A.RSV_DTM,  'YYYY-MM-DD HH24:MI'))                           RSV_DTM
          , NVL(TO_CHAR(A.EXRM_HH_DTM,'YYYY-MM-DD HH24:MI'),TO_CHAR(A.EXM_HOPE_DT,  'YYYY-MM-DD'))                    EXM_HOPE_DT
          , G.ACCS_ID                                                                                                 ACCS_ID
          , G.PHTG_TCHN_STF_NO                                                                                        IMPL_STF_NO
          , XSUP.FT_MSE_DNAME(G.PHTG_TCHN_STF_NO, A.HSP_TP_CD)                                                        IMPL_STF_NM
          , TO_CHAR(G.ACPT_DTM,  'YYYY-MM-DD')                                                                        ACPT_DT
          , TO_CHAR(K.FSR_DTM,  'YYYY-MM-DD HH24:MI')                                                                 FSR_IPTN_DTM
          , XCOM.FT_CNL_SELSTFINFO('4', A.RSV_PRO_STF_NO, A.HSP_TP_CD, NULL)                                          LST_RSV_NM
          , XMED.FT_MOO_GET_FASTTRACK_TYPE(A.PACT_ID, A.HSP_TP_CD, '1')                                               FAST_TRACK
          , TO_CHAR(A.FSR_DTM,  'YYYY-MM-DD HH24:MI')                                                                 FSR_ORD_DTM
          , A.EXM_CHDR_STF_NO
          , XCOM.FT_CNL_SELSTFINFO('4', A.EXM_CHDR_STF_NO, A.HSP_TP_CD, NULL)                EXM_CHDR_STF_NM
          , XMED.FT_MOO_INFECT_CLS(A.PT_NO, TO_CHAR(SYSDATE, 'YYYYMMDD'), A.HSP_TP_CD, '9')           INFECT_CLS
          , TO_CHAR(A.EXM_NOTM)                        EXM_NOTM
          , CASE WHEN A.PACT_TP_CD = 'O' AND A.PT_HME_DEPT_CD = 'CTC' THEN (SELECT '병동 : ' || CLCTN_WD_DEPT_CD ||' / 병실 : '|| CLCTN_PRM_NO AS CTC_PLC_INFO
                        FROM ACPPRAAM
                          WHERE 1=1
                         AND PT_NO = A.PT_NO
                         AND SIHS_YN = 'Y'
                         AND DS_DTM IS NULL
                      )
      END CTC_PLC_INFO
    , (SELECT DECODE(COUNT(*), 0,'','Y')
               FROM MOOOREXM
              WHERE HSP_TP_CD = :HIS_HSP_TP_CD
                AND PT_NO = A.PT_NO
                AND ORD_DT BETWEEN TO_DATE(:ORD_SDT, 'YYYY-MM-DD')
                               AND TO_DATE(:ORD_EDT, 'YYYY-MM-DD') + 0.99999
                AND ODDSC_TP_CD = 'C'
                AND ORD_CTG_CD = 'PDL') PDL_ORD_CNT_YN
          , SIDE_CD
          , SIDE_NM
          , DECODE(SIDE_CD,NULL,'N'
                  ,'Y') SIDE_YN
    , NVL(FT_MSE_LM_RECENT_RESULT(A.HSP_TP_CD,A.PT_NO,'','CR','EXMPRD_ACPT',TRUNC(SYSDATE),TRUNC(SYSDATE)+.99999,'2')
        , (SELECT TO_CHAR(EXRS_CNTE)
             FROM TEMP_CR_RSULT
            WHERE 1=1
              AND PT_NO = A.PT_NO)
         )CR_RSULT
    , NVL(TO_CHAR(TO_DATE(FT_MSE_LM_RECENT_RESULT(A.HSP_TP_CD,A.PT_NO,'','CR','EXMPRD_ACPT',TRUNC(SYSDATE),TRUNC(SYSDATE)+.99999,'1'),'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI')
         ,(SELECT ('[' || Y.HSP_NM || '] ' || ACPT_DTM) CR_DT
             FROM TEMP_CR_RSULT X
                , AIMIPHID_DAMO Y
            WHERE X.HSP_TP_CD = Y.HSP_TP_CD
              AND PT_NO = A.PT_NO)
         )CR_DT
    --, FT_MSE_LM_RECENT_RESULT(A.HSP_TP_CD,A.PT_NO,'','LTS','EXMPRD_ACPT',TRUNC(SYSDATE),'2') LTS_RSULT
    --, TO_CHAR(TO_DATE(FT_MSE_LM_RECENT_RESULT(A.HSP_TP_CD,A.PT_NO,'','LTS','EXMPRD_ACPT',TRUNC(SYSDATE),TRUNC(SYSDATE),'1'),'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI') LTS_DT
    ,TO_CHAR((SELECT ADS_DT FROM ACPPRAAM WHERE HSP_TP_CD = A.HSP_TP_CD AND PACT_ID = A.PACT_ID AND SIHS_YN = 'Y' AND APCN_YN = 'N'),'YYYY-MM-DD') ADS_DT
       , (SELECT TO_CHAR(MDFM_ID)
          FROM CCOOCBAC
         WHERE HSP_TP_CD = A.HSP_TP_CD
           AND ORD_CD    = A.ORD_CD)   MDFM_ID --검사의뢰서
       , A.EXM_RFFM_IPTN_NO         IPPR_ID --처방시 작성한 검사의뢰서 판독번호
       , DECODE(A.PACT_TP_CD,'O',TO_CHAR((SELECT MED_DT FROM ACPPRODM WHERE HSP_TP_CD = A.HSP_TP_CD AND PACT_ID = A.RPY_PACT_ID AND APCN_YN = 'N'),'YYYY-MM-DD')
               ,'E',(SELECT TO_CHAR(EMRM_ARVL_DTM,'YYYY-MM-DD') FROM ACPPRETM WHERE HSP_TP_CD = A.HSP_TP_CD AND PACT_ID = A.PACT_ID AND APCN_YN = 'N')
          ) MED_DT
       , FT_GET_CUR_PACT_TP_CD(A.HSP_TP_CD, A.PT_NO , A.PACT_ID,A.PACT_TP_CD,'PACT_TP_CD') CUR_PACT_TP_CD --현재 환자상태
       , DECODE(A.PACT_TP_CD,FT_GET_CUR_PACT_TP_CD(A.HSP_TP_CD, A.PT_NO , A.PACT_ID,A.PACT_TP_CD,'PACT_TP_CD'),'N'
                                    ,'Y')  PACT_DIFF -- 처방 환자구분과 현재 환자구분이 같으면 N 다르면 Y
       , FT_GET_CUR_PACT_TP_CD(A.HSP_TP_CD, A.PT_NO , A.PACT_ID,A.PACT_TP_CD,'WD_DEPT') CUR_WD_DEPT --현재 환자 병동위치
       , C.CNMD_USE_YN --조영제 사용여부
          , DECODE (A.PACT_TP_CD, 'I', '4', 'E', '5'
                                , DECODE(NVL((SELECT FRVS_RMDE_TP_CD
                                      FROM ACPPRODM
                                     WHERE HSP_TP_CD = A.HSP_TP_CD
                                       AND PACT_ID = A.FST_PACT_ID
                                       AND APCN_YN = 'N'),'2'),'4','2', NVL((SELECT FRVS_RMDE_TP_CD
                                                FROM ACPPRODM
                                               WHERE HSP_TP_CD = A.HSP_TP_CD
                                                 AND PACT_ID = A.FST_PACT_ID
                                                 AND APCN_YN = 'N'),'2')) )                  FRVS_RMDE_TP_CD   --2016-12-27 김세용 재조친 추가로 인하여  재초진 재진으로 변경 코드 추가
          , DECODE (A.PACT_TP_CD, 'I', '입원'
                                , 'E', '응급'
                                     , NVL(XCOM.FT_CCC_CODENAMEYN(A.HSP_TP_CD, '231', (SELECT FRVS_RMDE_TP_CD
                                                FROM ACPPRODM
                                               WHERE HSP_TP_CD = A.HSP_TP_CD
                                                 AND PACT_ID = A.FST_PACT_ID
                                                 AND APCN_YN = 'N'), 'Y'),'재진') )     FRVS_RMDE_TP_NM
          ,(SELECT DECODE(COUNT(*), 0,'N','Y')
     FROM MOOORDRM X
        , MOOORIJD Y
    WHERE X.HSP_TP_CD = Y.HSP_TP_CD
      AND X.ORD_ID = Y.ORD_ID
      AND X.HSP_TP_CD = A.HSP_TP_CD
      AND X.PT_NO = A.PT_NO
      AND X.ODDSC_TP_CD = 'C'
      AND X.AMDPO_TP_CD &lt;&gt; '2'
      AND (X.AMS_EXPT_DT BETWEEN TRUNC(A.RSV_DTM) AND TRUNC(A.RSV_DTM) + .99999
       OR  Y.RSV_DT BETWEEN TRUNC(A.RSV_DTM) AND TRUNC(A.RSV_DTM) + .99999)
      AND EXISTS(SELECT 1
          FROM MSERMCCC
            WHERE HSP_TP_CD = X.HSP_TP_CD
              AND ORD_CTG_CD = :ORD_CTG_CD
              AND EXM_GRP_CD = 'BF_DRG'
              AND EXM_GRP_DTL_CD = X.ORD_CD
              AND USE_YN = 'Y'))  BF_DRG   --전처치 여부
         ,(SELECT LISTAGG(ORD_NM,CHR(10)) WITHIN GROUP(ORDER BY ORD_CD)
    FROM
    (SELECT ORD_CD,ORD_NM
       FROM MOOORDRM X
          , MOOORIJD Y
      WHERE X.HSP_TP_CD = Y.HSP_TP_CD
        AND X.ORD_ID = Y.ORD_ID
        AND X.HSP_TP_CD = A.HSP_TP_CD
        AND X.PT_NO = A.PT_NO
        AND X.ODDSC_TP_CD = 'C'
        AND X.AMDPO_TP_CD &lt;&gt; '2'
        AND (X.AMS_EXPT_DT BETWEEN TRUNC(A.RSV_DTM) AND TRUNC(A.RSV_DTM) + .99999
         OR  Y.RSV_DT BETWEEN TRUNC(A.RSV_DTM) AND TRUNC(A.RSV_DTM) + .99999)
        AND EXISTS(SELECT 1
            FROM MSERMCCC
              WHERE HSP_TP_CD = X.HSP_TP_CD
                AND ORD_CTG_CD = :ORD_CTG_CD
                AND EXM_GRP_CD = 'BF_DRG'
                AND EXM_GRP_DTL_CD = X.ORD_CD
                AND USE_YN = 'Y')
      GROUP BY ORD_CD,ORD_NM
    ))BF_DRG_NM  --전처치명
      ,( SELECT CASE WHEN MAX(R.FTIL_CMSY_KND_CD) IS NOT NULL THEN '1'   --치사
                     WHEN MAX(R.SRIL_CMSY_KND_CD) IS NOT NULL THEN '2'   --중증
                     WHEN MAX(R.SILL_CMSY_KND_CD) IS NOT NULL THEN '3' --경증
                     WHEN MAX(R.PT_NO)            IS NOT NULL THEN '4'
                     ELSE 'N' END SIDE_YN
           FROM MSERMMSD R
          WHERE R.CNMD_SDEF_TP_CD IN( 'S','D')
            AND R.PT_NO           = A.PT_NO)                                  FTIL_CMSY_KND_CD
      , SAMENAME_YN
      , TRAUMA_YN
       FROM (SELECT (SELECT XMED.PKG_MOO_TRAUMACENTER.FT_SELECT_TR_TARGET_YN(A.HSP_TP_CD, A.PT_NO, '' ,'') FROM DUAL) TRAUMA_YN--RYU
                   ,(SELECT  FT_MSE_GET_AUTOSIDE_INFO(A.HSP_TP_CD,A.ORD_ID,'10') FROM DUAL) SIDE_CD--RYU
                   ,(SELECT  FT_MSE_GET_AUTOSIDE_INFO(A.HSP_TP_CD,A.ORD_ID,'11')  FROM DUAL) SIDE_NM--RYU
                   ,A.*
               FROM MOOOREXM A) A--RYU
          , (SELECT (SELECT FT_MSE_SAMENAME_BR1_NEW( B.PT_NO,  B.PT_NM, :ORD_SDT, :ORD_EDT, :HIS_HSP_TP_CD ,:MCLS_EXRM_TP_CD, 'RSV_DT') FROM DUAL) SAMENAME_YN --RYU
                   ,B.*
               FROM PCTPCPAM_DAMO b) B
          , MSERMMMC C
          , CNLRRUSD D
          , CNLRRUSD E
          , CNLRRUSD F
          , MSERMAAD G
          , MSERMDDD K
          , MSERMMRD R
      WHERE
     1=1
     AND A.ORD_DT BETWEEN TO_DATE(:ORD_SDT, 'YYYY-MM-DD')
                         AND TO_DATE(:ORD_EDT, 'YYYY-MM-DD') + 0.99999
        AND A.ORD_CTG_CD   = :ORD_CTG_CD
        AND A.HSP_TP_CD    = :HIS_HSP_TP_CD
        AND A.PACT_TP_CD   LIKE :RPY_PACT_TP_CD || '%'
        AND A.HOPE_EXRM_NO LIKE :HOPE_EXRM_NO   || '%'
        AND A.ORD_CD       LIKE :ORD_CD || '%'
        AND R.MCLS_EXRM_TP_CD LIKE DECODE(:PT_NO,'ALL',:MCLS_EXRM_TP_CD,NULL) || '%' --= :MCLS_EXRM_TP_CD

   AND ((A.EXM_PRGR_STS_CD LIKE :EXM_PRGR_STS_CD || '%'AND NVL(:EXM_PRGR_STS_CD,' ') = ' ' )
           OR NVL(:EXM_PRGR_STS_CD,' ') &lt;&gt; ' ' AND A.EXM_PRGR_STS_CD IN (select TRIM(REGEXP_SUBSTR(:EXM_PRGR_STS_CD,'[^,]+',1,LEVEL)) AS EXM_PRGR_STS_CD
                     from dual
                    CONNECT BY INSTR(:EXM_PRGR_STS_CD,',',1,LEVEL-1)&gt;0
                           )
   )
        AND A.DC_INPT_DTM IS NULL
        AND A.ODDSC_TP_CD = 'C'
        AND NVL(A.PRN_ORD_YN, 'N') &lt;&gt; 'Y'
        AND A.PT_HME_DEPT_CD LIKE :PT_HME_DEPT_CD || '%'
        AND( (NVL(A.WD_DEPT_CD, 'N') LIKE :WD_DEPT_CD || '%' AND NVL(:WD_DEPT_CD,' ') = ' ' )
         OR (NVL(:WD_DEPT_CD,' ') &lt;&gt; ' ' AND nvl(A.WD_DEPT_CD, 'N') IN (select trim(regexp_substr(:WD_DEPT_CD,'[^,]+',1,LEVEL)) as wd_dept_cd
                          from dual
                          connect by instr(:WD_DEPT_CD,',',1,LEVEL-1) &gt; 0
                    )
    )
   )
        AND B.PT_NO     = A.PT_NO
        AND C.EXM_CD    = A.ORD_CD
        AND C.HSP_TP_CD = A.HSP_TP_CD
        AND D.STF_NO(+)    = A.EXM_CHDR_STF_NO
        AND D.HSP_TP_CD(+) = A.HSP_TP_CD
        AND E.STF_NO(+)    = A.LSH_STF_NO
        AND E.HSP_TP_CD(+) = A.HSP_TP_CD
        AND F.STF_NO(+)    = A.FSR_STF_NO
        AND F.HSP_TP_CD(+) = A.HSP_TP_CD
        AND G.ORD_ID(+)    = A.ORD_ID
        AND G.HSP_TP_CD(+) = A.HSP_TP_CD
        AND K.IPTN_NO(+)   = G.IPTN_NO
        AND K.HSP_TP_CD(+) = G.HSP_TP_CD
        AND A.HOPE_EXRM_NO = R.EXRM_TP_CD
        AND A.HSP_TP_CD    = R.HSP_TP_CD
  AND :SELECT_GUBN   = :SELECT_GUBN

   ORDER BY TO_CHAR(A.ORD_DT,'YYYY-MM-DD') desc
          , A.PT_NO
          , B.PT_NM
          , B.SEX_TP_CD
          , TO_CHAR(B.PT_BRDY_DT, 'YYYY-MM-DD')
          , A.ORD_CD
          , C.CD_NM
          , A.PT_HME_DEPT_CD
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상과내 공통코드 추가</QUERY_NAME>
    <QUERY_TEXT>exec :TITLE := 'CD_LIST';
exec :TITLE_NAME := '영상의학과 CD';
exec :CD :='WC0404';
exec :CD_NM := 'DVD copy(영상의학과)';
exec :ORD_CTG_CD := 'BR1';
exec :TITLE_ADD_YN := 'N'; --타이틀 추가여부   
exec :HIS_HSP_TP_CD := '02';
BEGIN
 IF :TITLE_ADD_YN = 'Y' THEN
  BEGIN
   INSERT INTO MSERMCCC
   SELECT :HIS_HSP_TP_CD HSP_TP_CD
     ,:ORD_CTG_CD
     ,'0'
     ,:TITLE
     ,:TITLE_NAME
     ,1
     ,''
     ,''
     ,''
     ,''
     ,''
     ,''
     ,'Y'
     ,SYSDATE
     ,'SSSUP11'
     ,'GOLDEN'
     ,'0.0.0.0'
     ,SYSDATE
     ,'SSSUP11'
     ,'GOLDEN'
     ,'0.0.0.0'
     ,''
     FROM DUAL;
  END;
 END IF;
 BEGIN
  INSERT INTO MSERMCCC
  (HSP_TP_CD,ORD_CTG_CD,EXM_GRP_CD,EXM_GRP_DTL_CD,EXM_GRP_DTL_CD_NM,SCRN_MRK_SEQ,USE_YN,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR)
  VALUES
  ( :HIS_HSP_TP_CD
     ,:ORD_CTG_CD
     ,:TITLE
     ,:CD
     ,:CD_NM
     ,1
     ,'Y'
     ,SYSDATE
     ,'SSSUP11'
     ,'GOLDEN'
     ,'0.0.0.0'
     ,SYSDATE
     ,'SSSUP11'
     ,'GOLDEN'
     ,'0.0.0.0');
 END;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상과내 공통코드 조회</QUERY_NAME>
    <QUERY_TEXT>exec :TITLE := 'CD_LIST';
SELECT *
 FROM MSERMCCC
 WHERE HSP_TP_CD ='01'
 AND ORD_CTG_CD ='BR1'
 AND EXM_GRP_CD = :TITLE 
;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>운영기-&gt;스테이징 테이블 이관</QUERY_NAME>
    <QUERY_TEXT>--운영기에서 스테이징으로 데이터 이관
--1. 병원구분
--2. ORD_CTG_CD (,로 구분하여 여러 ORD_CTG_CD 넣을 수 있음.)
--3. 'Y'
--4. 최초 CCOOCBAC DELETE  ('Y'를 넣으면 ORD_CTG_CD가 없어서 PK오류가 날 수 있으니 최초 한번 MSERMMMC테이블의 검사코드와 CCOOCBAC의 처방코드를 조인하여 해당 검사들을 전부 지우고 이관한다.)
var IO_ERRYN varchar2(500);
var IO_ERRMSG varchar2(500);

exec PC_MSE_IV_TRANS_2STG('01','BR1,BN1','Y','N',:IO_ERRYN,:IO_ERRMSG);</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>피호출자가 호출을 거부했습니다.</QUERY_NAME>
    <QUERY_TEXT>엑셀파일로 변환중 "피호출자가 호출을 거부했습니다" 라는 메세지가 나타날 경우


1. 엑셀 변환 중에는 엑셀 문서 작업을 하지 않아야 합니다.


2. 엑셀을 실행했을때 정품인증을 받으라는 화면이 나오지 않아야 합니다.


    (정품인증 화면이 나타날 경우에는 엑셀이 실행 되지않음으로 변환 되지 않습니다.)

</QUERY_TEXT>
    <GROUP>ERROR</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진단검사 양성환자리스트</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :IN_SPCM_NO := '';
EXEC :IN_PT_NO := '';
EXEC :PT_HME_DEPT_CD := '';
EXEC :WD_DEPT_CD := '';
EXEC :MVM_CD := '';
EXEC :IN_SCLS_COMN_CD := '';
EXEC :IN_FROM_DT := '20220101';
EXEC :IN_TO_DT := '20220126';
EXEC :ADS_GUBN := '';

SELECT A.PT_NO
  , E.PT_NM
  , E.SEX_TP_CD
  , XBIL.FT_PCT_AGE('AGE',SYSDATE,E.PT_BRDY_DT)  AGE
  , TO_CHAR(E.PT_BRDY_DT,'YYYY-MM-DD') PT_BRDY_DT
  , A.PACT_TP_CD
  , A.PT_HME_DEPT_CD
  , A.WD_DEPT_CD
  , A.PRM_NO
  , A.PBSO_DEPT_CD
     , B.SPCM_NO
     , A.ANDR_STF_NO
     , TO_CHAR(D.BLCL_DTM,'YYYY-MM-DD HH24:MI:SS')   BLCL_DTM --채혈일
     , TO_CHAR(B.ACPT_DT,'YYYY-MM-DD') ACPT_DT
     , B.ATBA_SSBT_RSLT_CNTE -- 판정
     , B.ATBA_DMTR_CNTE      -- 항생제결과(검사결과 아님)
     , B.ATBA_CD             -- 항생제
     , (SELECT ATBA_NM FROM MSELMMAC WHERE HSP_TP_CD = A.HSP_TP_CD AND ATBA_CD = B.ATBA_CD) ATBA_NM
     , C.MVM_CD
     , C.EXM_CD
     , A.PACT_ID
     , D.TH1_SPCM_CD
     , (SELECT X.SPCM_NM FROM MSELMCCC X WHERE X.HSP_TP_CD = :HIS_HSP_TP_CD AND X.SPCM_CD = D.TH1_SPCM_CD )  SPCM_NM
     , MVRT_CNTE
 FROM MOOOREXM A
  ,MSELMMRD B
  ,MSELMCRD C
  ,MSELMCED D
  ,PCTPCPAM_DAMO E
 WHERE 1=1
 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
 AND A.SPCM_PTHL_NO like :IN_SPCM_NO || '%'
 AND A.HSP_TP_CD = B.HSP_TP_CD
 AND A.HSP_TP_CD = C.HSP_TP_CD
 AND A.HSP_TP_CD = D.HSP_TP_CD
 AND A.PT_NO = E.PT_NO
 AND A.PT_NO LIKE :IN_PT_NO || '%'
 AND A.SPCM_PTHL_NO = B.SPCM_NO
 AND A.SPCM_PTHL_NO = C.SPCM_NO
 AND A.SPCM_PTHL_NO = D.SPCM_NO
 AND A.PT_HME_DEPT_CD LIKE :PT_HME_DEPT_CD || '%' --진료과
 AND A.WD_DEPT_CD LIKE :WD_DEPT_CD || '%' --병동
 AND C.MVM_CD LIKE :MVM_CD || '%' --균코드
 AND B.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
         FROM MSELMSID
           WHERE HSP_TP_CD = A.HSP_TP_CD
             AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
             AND USE_YN = 'Y'
             AND SCLS_COMN_CD LIKE :IN_SCLS_COMN_CD || '%')
 AND B.ACPT_DT BETWEEN :IN_FROM_DT AND :IN_TO_DT
 AND A.ORD_CD IN (SELECT EXM_CD FROM MSELMWDE WHERE HSP_TP_CD = A.HSP_TP_CD AND WK_UNIT_CD = 'LMH')
ORDER BY ACPT_DT
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ACK 인터페이스 패키지</QUERY_NAME>
    <QUERY_TEXT>PKG_MSE_INTERFACE2_CNUH.PC_MSE_INF_EXAM_INSERT</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>타임스탬프</QUERY_NAME>
    <QUERY_TEXT>select *
 from  msermrrd AS OF TIMESTAMP(SYSTIMESTAMP - INTERVAL '10' MINUTE)
 where hsp_tp_cd='01'
 and exrm_tp_cd like 'RD%'
 and nvl(sprp_tp_cd,'N') &lt;&gt;'S'
 and rsvp_acpt_tp_cd is null
  order by rsv_dtm</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>중환자실 추가</QUERY_NAME>
    <QUERY_TEXT>뇌졸중집중치료실 - SCU
뇌혈관센터중환자실 - NCCU</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수술적예방적항생제</QUERY_NAME>
    <QUERY_TEXT>
SELECT (SELECT ORD_NM FROM CCOOCBAC WHERE HSP_TP_CD = A.HSP_TP_CD AND ORD_CD = A.ORD_CD) 수술명
     , P.PT_NM                                                                           환자명
     , A.PT_NO                                                                           등록번호
     , P.SEX_TP_CD                                                                       성별
     , TO_CHAR(XBIL.FT_PCT_AGE('AGE', SYSDATE, P.PT_BRDY_DT))                            나이

     , (SELECT ADS_DT
          FROM ACPPRAAM
         WHERE HSP_TP_CD = A.HSP_TP_CD
           AND PACT_ID   = A.PACT_ID
           AND APCN_YN   = 'N'
       )                                                                                 입윈일자
     , (SELECT TO_CHAR(DS_DTM, 'YYYY-MM-DD')
          FROM ACPPRAAM
         WHERE HSP_TP_CD = A.HSP_TP_CD
           AND PACT_ID   = A.PACT_ID
           AND APCN_YN   = 'N'
       )                                                                                 퇴원일자
     , (SELECT TO_CHAR(OP_EXPT_DT, 'YYYY-MM-DD')
          FROM MOOOPPAM
         WHERE HSP_TP_CD      = A.HSP_TP_CD
           AND PT_NO          = A.PT_NO
           AND OP_EXPT_REG_ID = A.OP_EXPT_REG_ID
       )                                                                                 수술일자

     , XMED.FT_MRN_OPNRECTIME(A.OP_EXPT_REG_ID, '04', A.HSP_TP_CD)                       수술절개시간
     , XMED.FT_MRN_OPNRECTIME(A.OP_EXPT_REG_ID, '08', A.HSP_TP_CD)                       수술종료시간

     , (SELECT MIN(FSR_DTM)
          FROM MOOORNOD
         WHERE 1=1
           AND HSP_TP_CD = A.HSP_TP_CD
           AND PT_NO     = A.PT_NO
           AND NR_FMT_YN = 'Y'
           AND NR_FMT_CD = 'Y'
           AND USE_YN    = 'Y'
           AND ORD_ID IN (SELECT ORD_ID
                            FROM MOOORDRM
                           WHERE HSP_TP_CD = A.HSP_TP_CD
                             AND PT_NO     = A.PT_NO
                             AND PACT_ID   = A.PACT_ID
                             AND ORD_CD IN (SELECT SCLS_COMN_CD
                                              FROM MSELMSID
                                             WHERE HSP_TP_CD    = A.HSP_TP_CD
                                               AND LCLS_COMN_CD = 'ATBA_CD_SGST'
                                               AND USE_YN       = 'Y'
                                           )
                             AND ODDSC_TP_CD = 'C'
                         )
       )                                                                                 최초항생제투여일시

     , (SELECT MAX(FSR_DTM)
          FROM MOOORNOD
         WHERE 1=1
           AND HSP_TP_CD = A.HSP_TP_CD
           AND PT_NO     = A.PT_NO
           AND NR_FMT_YN = 'Y'
           AND NR_FMT_CD = 'Y'
           AND USE_YN    = 'Y'
           AND ORD_ID IN (SELECT ORD_ID
                            FROM MOOORDRM
                           WHERE HSP_TP_CD = A.HSP_TP_CD
                             AND PT_NO     = A.PT_NO
                             AND PACT_ID   = A.PACT_ID
                             AND ORD_CD IN (SELECT SCLS_COMN_CD
                                              FROM MSELMSID
                                             WHERE HSP_TP_CD    = A.HSP_TP_CD
                                               AND LCLS_COMN_CD = 'ATBA_CD_SGST'
                                               AND USE_YN       = 'Y'
                                           )
                             AND ODDSC_TP_CD = 'C'
                         )
       )                                                                                 마지막항생제투여일시

     , '' 총항생제투여일
     , '' 권고하는총항생제투여일

, (SELECT DECODE(COUNT(*), 0 ,'', 'Y')
          FROM MOOORDRM
         WHERE HSP_TP_CD = A.HSP_TP_CD
           AND PT_NO     = A.PT_NO
           AND PACT_ID   = A.PACT_ID
           AND ORD_CD IN (SELECT SCLS_COMN_CD
                            FROM MSELMSID
                           WHERE HSP_TP_CD    = A.HSP_TP_CD
                             AND LCLS_COMN_CD IN ('ATBA_CD_SGST', 'ATBA_CD_NOT_SGST')
                             AND USE_YN       = 'Y'
                         )
           AND ODAPL_POP_CD = '9'
           AND ODDSC_TP_CD  = 'C'
       )                                                                          퇴원시항생제처방여부


     , A.PACT_TP_CD
     , A.PACT_ID
     , A.OP_EXPT_REG_ID
     , A.*
  FROM MOOORFED A
     , PCTPCPAM_DAMO P
 WHERE 1=1
--   AND A.PT_NO = '23725655'
   AND A.ORD_DT &gt;= '2022-01-01'
   AND A.ODDSC_TP_CD = 'C'
   AND A.PACT_TP_CD  = 'I'
   AND NVL(A.RPY_STS_CD, 'N') &lt;&gt; 'R'
   AND A.ORD_GRP_CD = '07' -- 수술료
   AND A.PT_NO = P.PT_NO
   AND A.ORD_CD IN ( SELECT SCLS_COMN_CD
                       FROM MSELMSID
                      WHERE HSP_TP_CD    = A.HSP_TP_CD
                        AND LCLS_COMN_CD = 'OP_PVTN_ATBA_ORD_CD'
                        AND USE_YN       = 'Y'
                   )
   AND TO_NUMBER(XBIL.FT_PCT_AGE('AGE', SYSDATE, P.PT_BRDY_DT)) &gt;= 18
   ;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>과내 기능검사결과조회</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstInDepartmentsExaminationResult"&gt;&lt;!--
    Clss : text
    Desc : 결과조회 메인에서 과내검사결과조회
    Author : 이지케어텍/최우진
    Create date : 2012-05-07
    Update date : 2014-02-04 임재득 수정 : 필터조건 추가 및 페이징 추가
                  2014-09-19 성시중 수정: NDR_ID sub Query에 행이 2개 이상 리턴되어, 수정함
                : 2017-03-02, 성시중, 사인이미지경로정보 2개 추가
    Update date : 2019-02-11 ( SELECT COLUMN_VALUE FROM TABLE(XCOM.FT_COM_STRING_TABLE(:MULTI_HSP_TP_CD, ',')) ) 적용
         2020-01-10 충북대 센터장님 요청으로 가판독 상태 제외시킴 EXM_PRGR_STS_CD 'D'
--&gt;
--exec :IN_PT_NO  := '13745354';
--exec :IN_FR_DATE  := '2003-03-01';
--exec :IN_TO_DATE  := '2014-01-20';
--exec :HIS_HSP_TP_CD  := '08';
--exec :IN_MED_EXM_CTG_CD  := '0';
--exec :IN_FR_INDEX  := '0';
--exec :IN_TO_INDEX  := '150';
--exec :SEL_EXAM_GUBUN   := '4';
--exec :IN_SID := '1004555';
--exec :IN_AOA_WKDP_CD := 'CNSC';

SELECT /* HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstInDepartmentsExaminationResult */
       PT_NO
     , PHTG_DT
     , ORD_CD
     , ORD_NM
     , IPTN_NO
     , TSTSTAT
     , ORD_CTG_CD
     , PT_NM
     , MED_DEPT_CD
     , WD_DEPT_CD
     , PACS_IMG_IPTN_YN
     , ISCPACS
     , PACS_TP_CD
     , SID
     , ORD_DT
     , MDFM_FOM_SEQ
     , FORM_INPT_NOTM
     , MDFM_ID
     , ACCS_ID
     , ECG_PATH
     , NVL( SUBSTR(NDR_ID,1,INSTR(NDR_ID,'^',1,1)-1), 'NoIamge' )  NDR_ID
     --, NDR_ID
     , (SELECT WHITE_SGNT_PATH_NM FROM CNLRRUSD WHERE STF_NO = NVL(SUBSTR(NDR_ID,1,INSTR(NDR_ID,'^',1,1)-1), 'NoIamge') AND HSP_TP_CD = A.HSP_TP_CD )    WHITE_SGNT_PATH_NM  -- 2017-03-02, 성시중 추가
     , (SELECT BLACK_SGNT_PATH_NM FROM CNLRRUSD WHERE STF_NO = NVL(SUBSTR(NDR_ID,1,INSTR(NDR_ID,'^',1,1)-1), 'NoIamge') AND HSP_TP_CD = A.HSP_TP_CD )    BLACK_SGNT_PATH_NM  -- 2017-03-02, 성시중 추가
     , RPY_PACT_TP_CD
     , ORD_ID
     , SUBSTR(NDR_ID,INSTR(NDR_ID,'^',1,1)+1,INSTR(NDR_ID,'^',1,2)-INSTR(NDR_ID,'^',1,1)-1) SIGN_DTE
     , NVL( SUBSTR(NDR_ID,INSTR(NDR_ID,'^',1,2)+1,INSTR(NDR_ID,'^',1,3)-INSTR(NDR_ID,'^',1,2)-1), 'NoIamge' ) IPDR_STF_NM
     , SUBSTR(NDR_ID,INSTR(NDR_ID,'^',1,3)+1,INSTR(NDR_ID,'^',1,4)-INSTR(NDR_ID,'^',1,3)-1) IPDR_STF_DEPT_NM
--     , IPDR_STF_DEPT_NM
    -- , SID_1
     , PT_HME_DEPT_CD
     , EXRM_TP_CD
     , EXM_TYPE
     , EXM_TYPE_NM
     , EXM_GUBUN_CD
     , EXM_GUBUN_NM
     , ORD_SLIP_CTG_CD
     , RSLT_SEQ_CD
     , VIDEO_YN
     , ORD_SEQ
     , PHTG_DTM
     , EQUP_IMPL_DTM
     , HSP_NM
     , A.HSP_TP_CD
     , A.HSP_TP_CD    SEL_HSP_TP_CD
     
     , PACT_TP_CD -- 수진구분
      -- 수납여부 (안과, 이비인후과, 산부인과, 정신건강의학과, 알레르기내과, 이식혈관외과  는 수납체크 되지 않도록 무조건 Y)
     , CASE WHEN ORD_CTG_CD IN ('EY', 'EN', 'OG', 'NP', 'IMA', 'GSV', 'HPC', 'OEM') THEN 'Y'
           ELSE RPY_STS_CD
       END RPY_STS_CD      
     
  FROM (
       SELECT /* HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstInDepartmentsExaminationResult */
              A.PT_NO                            PT_NO
            , TO_CHAR(A.PHTG_DTM, 'YYYY-MM-DD')  PHTG_DT
            , A.ORD_CD                           ORD_CD
            , B.CD_NM                            ORD_NM
            , A.IPTN_NO                          IPTN_NO
            , DECODE(A.EXM_PRGR_STS_CD, 'D', '가판독', 'N', '판독', 'E', '시행') TSTSTAT
            , A.ORD_CTG_CD                       ORD_CTG_CD
            , C.PT_NM                            PT_NM
            , A.MED_DEPT_CD                      MED_DEPT_CD
            , A.WD_DEPT_CD                       WD_DEPT_CD
            , DECODE(A.PACS_IMG_IPTN_YN, 'P', 'Y', 'Y', 'Y')  PACS_IMG_IPTN_YN
            , DECODE(B.PACS_TP_CD, 'C','Y','N')  ISCPACS   --2017-11-29 임재득 수정     
            , B.PACS_TP_CD
--            , DECODE(
--               (SELECT count(*)
--                   FROM MSERMZED
--                   WHERE EXCP_CTG_CD   = '7'
--                     AND HSP_TP_CD     = A.HSP_TP_CD
--                     AND USE_YN        = 'Y'
--                     AND ORD_CD        = A.ORD_CD)
--            , '0', 'N', 'Y')                ISCPACS
--            , '0', 'N', '1', 'Y')                ISCPACS   --2017-11-29 임재득 주석 처리
            , E.SID                              SID
            , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')    ORD_DT
            , A.MDFM_FOM_SEQ                     MDFM_FOM_SEQ
            , A.FORM_INPT_NOTM                   FORM_INPT_NOTM
            , A.MDFM_ID                          MDFM_ID
            , A.ACCS_ID                          ACCS_ID
            , ( SELECT  /*+ INDEX (Y MSERMDTD_SI02) */
                       Y.IPTN_CNTE
                  FROM MSERMMLD X
                     , MSERMDTD Y
                 WHERE X.IPTN_NO = A.IPTN_NO
--                   AND X.HSP_TP_CD = A.HSP_TP_CD
                   AND X.MDFM_ID = '3813'
                   AND Y.IPPR_ID = X.IPPR_ID
                   AND Y.MDFM_FOM_SEQ = X.MDFM_INPT_NOTM
--                   AND Y.HSP_TP_CD = X.HSP_TP_CD
                   AND ROWNUM = 1 )              ECG_PATH
            , ( SELECT   /*+ INDEX (Y MSERMDTD_SI02) */
                       Y.LSH_STF_NO || '^' || TO_CHAR(Y.LSH_DTM, 'YYYY-MM-DD HH24:MI:SS') || '^' || Z.KOR_SRNM_NM || '^' || P.DEPT_NM || '^'
                  FROM MSERMMLD X, MSERMDTD Y, CNLRRUSD Z, PDEDBMSM P
                 WHERE X.IPTN_NO = A.IPTN_NO
                   AND X.HSP_TP_CD = A.HSP_TP_CD  --2017.04.07 LIM MODIFY
                   AND Y.IPPR_ID = X.IPPR_ID
                   AND Y.MDFM_FOM_SEQ = X.MDFM_INPT_NOTM
                   AND Y.HSP_TP_CD    = X.HSP_TP_CD
                   AND Y.SGKY_NO IS NOT NULL                   
                   AND Y.LSH_DTM = (SELECT   /*+ INDEX (M MSERMDTD_SI02) */
                                      MIN(M.LSH_DTM)
                                 FROM MSERMMLD L, MSERMDTD M, CNLRRUSD N
                               WHERE L.IPTN_NO = A.IPTN_NO
                                 AND L.HSP_TP_CD = A.HSP_TP_CD
                                      AND M.IPPR_ID = L.IPPR_ID
                                      AND M.HSP_TP_CD = L.HSP_TP_CD
                                   AND M.MDFM_FOM_SEQ = L.MDFM_INPT_NOTM
                                   AND M.SGKY_NO IS NOT NULL
                                   AND N.STF_NO(+) = M.LSH_STF_NO
                                   AND N.HSP_TP_CD(+) = M.HSP_TP_CD  --2017.04.07 LIM ADD
                                   AND N.USE_GRP_CD(+) = 'DO')
       --            AND Y.HSP_TP_CD = X.HSP_TP_CD
                   AND Z.STF_NO(+) = Y.LSH_STF_NO
                   AND Z.HSP_TP_CD(+) = Y.HSP_TP_CD  --2017.04.07 LIM ADD
                   AND Z.USE_GRP_CD(+) = 'DO'
         --         AND Z.HSP_TP_CD(+) = Y.HSP_TP_CD
                   AND Z.AADP_CD = P.DEPT_CD
                   AND Z.HSP_TP_CD = P.HSP_TP_CD  --2017.04.07 LIM ADD
                   AND ROWNUM = 1 )                                            NDR_ID
            , A.ORD_CTG_CD || A.PACT_TP_CD || NVL(D.RPY_PACT_TP_CD, 'N')   RPY_PACT_TP_CD
            , FT_GET_PACS_HISORDERID(A.HSP_TP_CD,A.ORD_ID)                           ORD_ID
--            , ( SELECT Y.DEPT_NM
--                  FROM CNLRRUSD  X,
--                       PDEDBMSM Y
--                 WHERE X.STF_NO= A.IPDR_STF_NO
--                   AND X.AADP_CD = Y.DEPT_CD       )                         IPDR_STF_DEPT_NM
       --     , E.SID                 SID
            , D.PT_HME_DEPT_CD      PT_HME_DEPT_CD
            , A.EXRM_TP_CD          EXRM_TP_CD
            , DECODE (A.ORD_CTG_CD, 'PDL', 'PDL', 'DEPT')       EXM_TYPE
            , DECODE (A.ORD_CTG_CD, 'PDL', '특수검사', '과내검사')       EXM_TYPE_NM
            , DECODE (A.ORD_CTG_CD, 'PDL', DECODE (F.IEXM_KND_CD, NULL, 'P99', F.IEXM_KND_CD), G.DEPT_CD)       EXM_GUBUN_CD
            , DECODE (A.ORD_CTG_CD, 'PDL', DECODE (F.IEXM_KND_CD, NULL, '기타', F.IEXM_NM), G.DEPT_NM)       EXM_GUBUN_NM
            , B.ORD_SLIP_CTG_CD                                ORD_SLIP_CTG_CD
            , B.RSLT_SEQ_CD                                    RSLT_SEQ_CD
            , (SELECT DECODE(COUNT(*),0, 'N','Y')
                 FROM MSERMVDD AA
                WHERE AA.IPTN_NO = A.IPTN_NO
                  AND AA.HSP_TP_CD = A.HSP_TP_CD
               )                                               VIDEO_YN    --2013.10.30 임재득 추가
            , TO_CHAR(A.ORD_SEQ)                                ORD_SEQ     --2013.10.30 임재득 추가
            , TO_CHAR(A.PHTG_DTM, 'YYYY-MM-DD HH24:MI:SS')       PHTG_DTM    --2014.01.27 임재득  추가
            , TO_CHAR(A.EQUP_IMPL_DTM, 'YYYY-MM-DD HH24:MI:SS')  EQUP_IMPL_DTM    --2014.01.27 임재득  추가
            , a.ROWID rid
            
            , XBIL.FT_GET_AIMIPHID_DAMO(A.HSP_TP_CD, TRUNC(SYSDATE), NULL, 'HSP_ABBR_NM')   HSP_NM
            , A.HSP_TP_CD
            , A.HSP_TP_CD   SEL_HSP_TP_CD
            , D.PACT_TP_CD  PACT_TP_CD -- 수진구분
            , D.RPY_STS_CD  RPY_STS_CD -- 수납여부
         FROM MSERMAAD A
            , MSERMMMC B
            , PCTPCPAM_DAMO C
            , MOOOREXM D
            , CNLRRUSD E
            , MSERMMRD F
            , PDEDBMSM G
        WHERE A.PT_NO = :IN_PT_NO
          AND A.HSP_TP_CD IN ( SELECT COLUMN_VALUE FROM TABLE(XCOM.FT_COM_STRING_TABLE(:MULTI_HSP_TP_CD, ',')) )
          AND A.PHTG_DTM BETWEEN TO_DATE(:IN_FR_DATE, 'YYYY-MM-DD')
                             AND TO_DATE(:IN_TO_DATE, 'YYYY-MM-DD') + 0.99999
          AND A.ORD_CTG_CD NOT IN (SELECT AA.ORD_CTG_CD --2014.01.07 임재득 추가
                                     FROM CCOOCCAC AA
                                    WHERE AA.ORD_GRP_CD = '03'
                                      AND AA.HSP_TP_CD = A.HSP_TP_CD
                                      AND AA.PCTR_EXM_IPTN_YN = 'Y')
                                      
          --2021.12.18 SCS : 처방분류 검색추가
          AND (A.ORD_CTG_CD = :IN_ORD_CTG_CD OR :IN_ORD_CTG_CD IS NULL)
   
                 --          AND A.ORD_CTG_CD NOT IN ('BR1', 'BN1', 'RT4', 'DSR')
          --AND A.EXM_PRGR_STS_CD IN ('N', 'D', 'E')
          AND A.EXM_PRGR_STS_CD IN ('E','D','N')
          AND B.EXM_CD = A.ORD_CD
          AND B.HSP_TP_CD = A.HSP_TP_CD
          AND C.PT_NO = A.PT_NO
--          AND C.HSP_TP_CD = A.HSP_TP_CD
          AND D.ORD_ID(+) = A.ORD_ID
          AND D.HSP_TP_CD(+) = A.HSP_TP_CD
          AND E.STF_NO(+)       = A.ORD_DR_STF_NO
          AND E.HSP_TP_CD(+)    = A.HSP_TP_CD          
--          AND E.STF_NO    = D.FSR_STF_NO
--          AND E.HSP_TP_CD = D.HSP_TP_CD
          AND A.EXRM_TP_CD = F.EXRM_TP_CD(+)
          AND A.HSP_TP_CD = F.HSP_TP_CD(+)
          AND F.DEPT_CD = G.DEPT_CD(+)
          AND F.HSP_TP_CD = G.HSP_TP_CD(+)
          AND DECODE(:SEL_EXAM_GUBUN, '1', E.SID, '3', A.MED_DEPT_CD, :SEL_EXAM_GUBUN) = DECODE(:SEL_EXAM_GUBUN, '1', :IN_SID, '3', :IN_AOA_WKDP_CD, :SEL_EXAM_GUBUN)
          AND (( :IN_MED_EXM_CTG_CD  = '0' )
                   OR   DECODE (A.ORD_CTG_CD, 'PDL', DECODE (F.IEXM_KND_CD, NULL, 'P99', F.IEXM_KND_CD), G.DEPT_CD) IN
                        (
                                SELECT SUBSTR(:IN_MED_EXM_CTG_CD
                              , INSTR(','||:IN_MED_EXM_CTG_CD,',',1,LEVEL)
                              , INSTR(:IN_MED_EXM_CTG_CD ||',',',',1,LEVEL)
                              - INSTR(','||:IN_MED_EXM_CTG_CD,',',1,LEVEL)
                        ) v
                        FROM dual
                        CONNECT BY LEVEL &lt;= LENGTH(:IN_MED_EXM_CTG_CD)
                                   - LENGTH(REPLACE(:IN_MED_EXM_CTG_CD,',')) + 1
                     ))
        ORDER BY   A.PHTG_DTM DESC, A.ORD_CTG_CD) a
        ,(SELECT   rid
            FROM   (SELECT   ROWNUM rn, rid
                      FROM   (  SELECT A.ROWID rid
                                  FROM MSERMAAD a
                                     , MOOOREXM D
                                     , CNLRRUSD E
                                     , MSERMMRD F
                                     , PDEDBMSM G
                                 WHERE   A.PT_NO = :IN_PT_NO
                                     AND A.HSP_TP_CD IN ( SELECT COLUMN_VALUE FROM TABLE(XCOM.FT_COM_STRING_TABLE(:MULTI_HSP_TP_CD, ',')) )
                                     AND A.PHTG_DTM BETWEEN TO_DATE(:IN_FR_DATE, 'YYYY-MM-DD')
                                                        AND  TO_DATE(:IN_TO_DATE, 'YYYY-MM-DD') + 0.99999
                                     AND A.ORD_CTG_CD NOT IN (SELECT   AA.ORD_CTG_CD --2014.01.07 임재득 추가
                                                                FROM   CCOOCCAC AA
                                                               WHERE   AA.ORD_GRP_CD = '03'
                                                                 AND   AA.HSP_TP_CD  = A.HSP_TP_CD 
                                                                   AND AA.PCTR_EXM_IPTN_YN = 'Y')
                                     --          AND A.ORD_CTG_CD NOT IN ('BR1', 'BN1', 'RT4', 'DSR')
                                     --AND A.EXM_PRGR_STS_CD IN ('N', 'D', 'E')
                                     AND A.EXM_PRGR_STS_CD IN ('E', 'D', 'N')
                                     AND A.EXRM_TP_CD = F.EXRM_TP_CD(+)
                                     AND A.HSP_TP_CD = F.HSP_TP_CD(+)
                                     AND F.DEPT_CD = G.DEPT_CD(+)
                                     AND F.HSP_TP_CD = G.HSP_TP_CD(+)
                                     AND D.ORD_ID(+) = A.ORD_ID
                                     AND D.HSP_TP_CD(+) = A.HSP_TP_CD --2017.04.07 LIM ADD
                                     AND E.STF_NO(+)       = A.ORD_DR_STF_NO
                                     AND E.HSP_TP_CD(+)    = A.HSP_TP_CD
--                                     AND E.STF_NO    = D.FSR_STF_NO 
--                                     AND E.HSP_TP_CD = D.HSP_TP_CD
                                     AND DECODE(:SEL_EXAM_GUBUN, '1', E.SID, '3', A.MED_DEPT_CD, :SEL_EXAM_GUBUN) = DECODE(:SEL_EXAM_GUBUN, '1', :IN_SID, '3', :IN_AOA_WKDP_CD, :SEL_EXAM_GUBUN)
                                     AND (( :IN_MED_EXM_CTG_CD  = '0' )
                                           OR   DECODE (A.ORD_CTG_CD, 'PDL', DECODE (F.IEXM_KND_CD, NULL, 'P99', F.IEXM_KND_CD), G.DEPT_CD) IN
                                                       (
                                                        SELECT SUBSTR(:IN_MED_EXM_CTG_CD
                                                             , INSTR(','||:IN_MED_EXM_CTG_CD,',',1,LEVEL)
                                                             , INSTR(:IN_MED_EXM_CTG_CD ||',',',',1,LEVEL)
                                                              - INSTR(','||:IN_MED_EXM_CTG_CD,',',1,LEVEL)
                                                             ) v
                                                         FROM dual
                                                      CONNECT BY LEVEL &lt;= LENGTH(:IN_MED_EXM_CTG_CD)
                                                                          - LENGTH(REPLACE(:IN_MED_EXM_CTG_CD,',')) + 1
                                         ))
                              ORDER BY   A.PHTG_DTM DESC, A.ORD_CTG_CD))
           WHERE rn BETWEEN :IN_FR_INDEX AND :IN_TO_INDEX) b
 WHERE   a.rid = b.rid



 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>의료기구사용일수(병동)</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryWard"&gt;&lt;!--
    Clss        : text
    Desc        : 의료기구 사용일수 조회(병동별)
    Author      : 정규봉
    Create date : 2020-06-25
    Update date : 2020-06-25 (김성회, 삽관/기구/드레싱 관리로 조건 변경)
--&gt;
  SELECT /*+ USE_ NL(A F) 간호기록-간호공통기록-의료기구 사용일수 병동별 조회 -HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryWard */
         A.WD_DEPT_CD                                                     MED_DEPT_CD
        ,MAX(F.DEPT_NM)                                                   DEPT_NM
        ,SUM(DECODE(RANK, 1, ADS_YN))                                     ADS_SUM
        ,SUM(DECODE(RANK, 1, SIHS_YN))                                    SIHS_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'C'))     AS CLINE_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'F'))     AS FOLEY_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'V'))     AS VENT_SUM
        , SUM(DECODE(RANK, 1, ADS_YN)) + SUM(DECODE(RANK, 1, SIHS_YN))     TOT_SUM
        ,'Y'                                                              UNDERXV_YN
        ,F.SORT_SEQ
    FROM (SELECT XX.PT_NO
                ,XX.PACT_ID
                ,XX.APY_STR_DT
                ,XX.APY_END_DT
                ,XX.WD_DEPT_CD
                ,XX.DFT_DT
                ,RANK() OVER(PARTITION BY XX.PT_NO, XX.PACT_ID, XX.DFT_DT ORDER BY XX.PT_NO)             RANK
                ,CASE WHEN XX.APY_STR_DT = XX.DFT_DT AND XX.DS_EXPT_DT &lt;&gt; XX.DFT_DT THEN 1 ELSE 0 END       ADS_YN
                ,CASE WHEN XX.DS_EXPT_DT &gt;= XX.DFT_DT THEN 1 ELSE 0 END                                     SIHS_YN
                ,XX.HSP_TP_CD
            FROM (SELECT PT_NO
                        ,PACT_ID
                        ,CASE
                             WHEN APY_STR_DT = MIN_APY_STR_DT THEN MIN_APY_STR_DT
                             WHEN APY_STR_DT &gt; MAX_APY_STR_DT AND MAX_APY_STR_DT &gt; MAX_APY_STR_DT2 THEN APY_STR_DT
                             WHEN MAX_APY_STR_DT &lt; MAX_APY_STR_DT2 THEN MAX_APY_STR_DT2
                             ELSE MIN_APY_STR_DT
                         END    APY_STR_DT
                        ,APY_END_DT
                        ,WD_DEPT_CD
                        ,DFT_DT
                        ,ADS_DT
                        ,DS_EXPT_DT
                        ,HSP_TP_CD
                    FROM (
                    SELECT A.PT_NO
                                ,A.PACT_ID
                                ,D.APY_STR_DT
                                ,D.APY_END_DT
                                ,NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)                                                                                                                                  WD_DEPT_CD
                                ,(SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID AND B.APY_STR_DT &gt;= A.ADS_DT AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD) AND ROWNUM = 1)    MIN_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MAX(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) &lt;&gt; NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;=
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT2
                                ,ADS_DT
                                ,NVL(DS_EXPT_DT, TO_DATE('9999-12-31', 'YYYY-MM-DD'))                                                                                                                  DS_EXPT_DT
                                ,B.DFT_DT
                                ,A.HSP_TP_CD
                            FROM ACPPRAAM A
                                ,ACPPRTSD D
                                ,(    SELECT TO_DATE( :FROM_DT) + (ROWNUM - 1)     DFT_DT
                                        FROM DUAL
                                  CONNECT BY LEVEL &lt;= (TO_DATE( :TO_DT) - TO_DATE( :FROM_DT)) + 1) B
                           WHERE A.PACT_ID = D.RPY_PACT_ID
                                 AND A.SIHS_YN = 'N'
                                 AND D.APY_END_DT = TO_DATE('9999-12-31', 'YYYY-MM-DD')
                                 AND B.DFT_DT BETWEEN D.APY_STR_DT AND A.DS_DTM
                                 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                                 AND A.HSP_TP_CD = D.HSP_TP_CD
                                 AND D.APY_STR_DT &gt;= A.ADS_DT
                                 AND A.APCN_YN = 'N'
                                 AND D.APCN_YN = 'N'
                          UNION ALL
                          SELECT A.PT_NO
                                ,A.PACT_ID
                                ,D.APY_STR_DT
                                ,D.APY_END_DT
                                ,NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)                                                                                                                                  WD_DEPT_CD
                                ,(SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID AND B.APY_STR_DT &gt;= A.ADS_DT AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD) AND ROWNUM = 1)    MIN_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MAX(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) &lt;&gt; NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;=
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT2
                                ,ADS_DT
                                ,NVL(DS_EXPT_DT, TO_DATE('9999-12-31', 'YYYY-MM-DD'))                                                                                                                  DS_EXPT_DT
                                ,B.DFT_DT
                                ,A.HSP_TP_CD
                            FROM ACPPRAAM A
                                ,ACPPRTSD D
                                ,(    SELECT TO_DATE( :FROM_DT) + (ROWNUM - 1)     DFT_DT
                                        FROM DUAL
                                  CONNECT BY LEVEL &lt;= (TO_DATE( :TO_DT) - TO_DATE( :FROM_DT)) + 1) B
                           WHERE A.PACT_ID = D.RPY_PACT_ID
                                 AND (   A.SIHS_YN &lt;&gt; 'N'
                                      OR D.APY_END_DT &lt;&gt; TO_DATE('9999-12-31', 'YYYY-MM-DD'))
                                 AND B.DFT_DT BETWEEN D.APY_STR_DT AND D.APY_END_DT
                                 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                                 AND A.HSP_TP_CD = D.HSP_TP_CD
                                 AND D.APY_STR_DT &gt;= A.ADS_DT
                                 AND A.APCN_YN = 'N'
                                 AND D.APCN_YN = 'N')) XX
         ) A
        ,PDEDBMSM F
   WHERE A.WD_DEPT_CD = F.DEPT_CD
         AND A.HSP_TP_CD = F.HSP_TP_CD
         AND F.HSP_TP_CD = :HIS_HSP_TP_CD
         AND A.WD_DEPT_CD = NVL( :WD_DEPT_CD, A.WD_DEPT_CD)
         AND A.WD_DEPT_CD NOT IN ('CRU', '032')
GROUP BY A.WD_DEPT_CD, F.SORT_SEQ


UNION ALL
  SELECT /*+ USE_ NL(A F) 간호기록-간호공통기록-침습적 처치 병동별 조회 -HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryWard */
         A.WD_DEPT_CD                                                     MED_DEPT_CD
        ,MAX(F.DEPT_NM)                                                   DEPT_NM
        ,SUM(DECODE(RANK, 1, ADS_YN))                                     ADS_SUM
        ,SUM(DECODE(RANK, 1, SIHS_YN))                                    SIHS_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'C'))     AS CLINE_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'F'))     AS FOLEY_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'V'))     AS VENT_SUM
        ,SUM(DECODE(RANK, 1, ADS_YN)) + SUM(DECODE(RANK, 1, SIHS_YN))     TOT_SUM
        ,'N'                                                              UNDERXV_YN
        ,F.SORT_SEQ
    FROM (SELECT XX.PT_NO
                ,XX.PACT_ID
                ,XX.APY_STR_DT
                ,XX.APY_END_DT
                ,XX.WD_DEPT_CD
                ,XX.DFT_DT
                ,RANK() OVER(PARTITION BY XX.PT_NO, XX.PACT_ID, XX.DFT_DT ORDER BY XX.PT_NO)             RANK
                ,CASE WHEN XX.APY_STR_DT = XX.DFT_DT AND XX.DS_EXPT_DT &lt;&gt; XX.DFT_DT THEN 1 ELSE 0 END       ADS_YN
                ,CASE WHEN XX.DS_EXPT_DT &gt;= XX.DFT_DT THEN 1 ELSE 0 END                                     SIHS_YN
                ,XX.HSP_TP_CD
            FROM (SELECT PT_NO
                        ,PACT_ID
                        ,CASE
                             WHEN APY_STR_DT = MIN_APY_STR_DT THEN MIN_APY_STR_DT
                             WHEN APY_STR_DT &gt; MAX_APY_STR_DT AND MAX_APY_STR_DT &gt; MAX_APY_STR_DT2 THEN APY_STR_DT
                             WHEN MAX_APY_STR_DT &lt; MAX_APY_STR_DT2 THEN MAX_APY_STR_DT2
                             ELSE MIN_APY_STR_DT
                         END    APY_STR_DT
                        ,APY_END_DT
                        ,WD_DEPT_CD
                        ,DFT_DT
                        ,ADS_DT
                        ,DS_EXPT_DT
                        ,HSP_TP_CD
                    FROM (SELECT A.PT_NO
                                ,A.PACT_ID
                                ,D.APY_STR_DT
                                ,D.APY_END_DT
                                ,NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)                                                                                                                                  WD_DEPT_CD
                                ,(SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID AND B.APY_STR_DT &gt;= A.ADS_DT AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD) AND ROWNUM = 1)    MIN_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MAX(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) &lt;&gt; NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;=
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT2
                                ,ADS_DT
                                ,NVL(DS_EXPT_DT, TO_DATE('9999-12-31', 'YYYY-MM-DD'))                                                                                                                  DS_EXPT_DT
                                ,B.DFT_DT
                                ,A.HSP_TP_CD
                            FROM ACPPRAAM A
                                ,ACPPRTSD D
                                ,(    SELECT TO_DATE( :FROM_DT) + (ROWNUM - 1)     DFT_DT
                                        FROM DUAL
                                  CONNECT BY LEVEL &lt;= (TO_DATE( :TO_DT) - TO_DATE( :FROM_DT)) + 1) B
                           WHERE A.PACT_ID = D.RPY_PACT_ID
                                 AND A.SIHS_YN = 'N'
                                 AND D.APY_END_DT = TO_DATE('9999-12-31', 'YYYY-MM-DD')
                                 AND B.DFT_DT BETWEEN D.APY_STR_DT AND A.DS_DTM
                                 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                                 AND A.HSP_TP_CD = D.HSP_TP_CD
                                 AND D.APY_STR_DT &gt;= A.ADS_DT
                                 AND A.APCN_YN = 'N'
                                 AND D.APCN_YN = 'N'
                          UNION ALL
                          SELECT A.PT_NO
                                ,A.PACT_ID
                                ,D.APY_STR_DT
                                ,D.APY_END_DT
                                ,NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)                                                                                                                                  WD_DEPT_CD
                                ,(SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID AND B.APY_STR_DT &gt;= A.ADS_DT AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD) AND ROWNUM = 1)    MIN_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MAX(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) &lt;&gt; NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;=
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT2
                                ,ADS_DT
                                ,NVL(DS_EXPT_DT, TO_DATE('9999-12-31', 'YYYY-MM-DD'))                                                                                                                  DS_EXPT_DT
                                ,B.DFT_DT
                                ,A.HSP_TP_CD
                            FROM ACPPRAAM A
                                ,ACPPRTSD D
                                ,(    SELECT TO_DATE( :FROM_DT) + (ROWNUM - 1)     DFT_DT
                                        FROM DUAL
                                  CONNECT BY LEVEL &lt;= (TO_DATE( :TO_DT) - TO_DATE( :FROM_DT)) + 1) B
                           WHERE A.PACT_ID = D.RPY_PACT_ID
                                 AND (   A.SIHS_YN &lt;&gt; 'N'
                                      OR D.APY_END_DT &lt;&gt; TO_DATE('9999-12-31', 'YYYY-MM-DD'))
                                 AND B.DFT_DT BETWEEN D.APY_STR_DT AND D.APY_END_DT
                                 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                                 AND A.HSP_TP_CD = D.HSP_TP_CD
                                 AND D.APY_STR_DT &gt;= A.ADS_DT
                                 AND A.APCN_YN = 'N'
                                 AND D.APCN_YN = 'N'
                                 AND (SELECT TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(PT_BRDY_DT, 'YYYY')
                                        FROM PCTPCPAM_DAMO
                                       WHERE PT_NO = A.PT_NO) &gt;= 15)) XX
                  ) A
        ,PDEDBMSM F
   WHERE A.WD_DEPT_CD = F.DEPT_CD
         AND A.HSP_TP_CD = F.HSP_TP_CD
         AND F.HSP_TP_CD = :HIS_HSP_TP_CD
         AND A.WD_DEPT_CD = NVL( :WD_DEPT_CD, A.WD_DEPT_CD)
         AND A.WD_DEPT_CD NOT IN ('CRU', '032')
GROUP BY A.WD_DEPT_CD, F.SORT_SEQ

UNION ALL

  SELECT /*+ US E_NL(A F) 간호기록-간호공통기록-침습적 처치 병동별 조회 -HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryWard */
         A.WD_DEPT_CD                                                     MED_DEPT_CD
        ,MAX(F.DEPT_NM)                                                   DEPT_NM
        ,SUM(DECODE(RANK, 1, ADS_YN))                                     ADS_SUM
        ,SUM(DECODE(RANK, 1, SIHS_YN))                                    SIHS_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'C'))     AS CLINE_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'F'))     AS FOLEY_SUM
        , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.WD_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'V'))     AS VENT_SUM
        ,SUM(DECODE(RANK, 1, ADS_YN)) + SUM(DECODE(RANK, 1, SIHS_YN))     TOT_SUM
        ,'U'                                                              UNDERXV_YN
        ,F.SORT_SEQ
    FROM (SELECT XX.PT_NO
                ,XX.PACT_ID
                ,XX.APY_STR_DT
                ,XX.APY_END_DT
                ,XX.WD_DEPT_CD
                ,XX.DFT_DT
                ,RANK() OVER(PARTITION BY XX.PT_NO, XX.PACT_ID, XX.DFT_DT ORDER BY XX.PT_NO)             RANK
                ,CASE WHEN XX.APY_STR_DT = XX.DFT_DT AND XX.DS_EXPT_DT &lt;&gt; XX.DFT_DT THEN 1 ELSE 0 END       ADS_YN
                ,CASE WHEN XX.DS_EXPT_DT &gt;= XX.DFT_DT THEN 1 ELSE 0 END                                     SIHS_YN
                ,XX.HSP_TP_CD
            FROM (SELECT PT_NO
                        ,PACT_ID
                        ,CASE
                             WHEN APY_STR_DT = MIN_APY_STR_DT THEN MIN_APY_STR_DT
                             WHEN APY_STR_DT &gt; MAX_APY_STR_DT AND MAX_APY_STR_DT &gt; MAX_APY_STR_DT2 THEN APY_STR_DT
                             WHEN MAX_APY_STR_DT &lt; MAX_APY_STR_DT2 THEN MAX_APY_STR_DT2
                             ELSE MIN_APY_STR_DT
                         END    APY_STR_DT
                        ,APY_END_DT
                        ,WD_DEPT_CD
                        ,DFT_DT
                        ,ADS_DT
                        ,DS_EXPT_DT
                        ,HSP_TP_CD
                    FROM (SELECT A.PT_NO
                                ,A.PACT_ID
                                ,D.APY_STR_DT
                                ,D.APY_END_DT
                                ,NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)                                                                                                                                  WD_DEPT_CD
                                ,(SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID AND B.APY_STR_DT &gt;= A.ADS_DT AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD) AND ROWNUM = 1)    MIN_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MAX(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) &lt;&gt; NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;=
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT2
                                ,ADS_DT
                                ,NVL(DS_EXPT_DT, TO_DATE('9999-12-31', 'YYYY-MM-DD'))                                                                                                                  DS_EXPT_DT
                                ,B.DFT_DT
                                ,A.HSP_TP_CD
                            FROM ACPPRAAM A
                                ,ACPPRTSD D
                                ,(    SELECT TO_DATE( :FROM_DT) + (ROWNUM - 1)     DFT_DT
                                        FROM DUAL
                                  CONNECT BY LEVEL &lt;= (TO_DATE( :TO_DT) - TO_DATE( :FROM_DT)) + 1) B
                           WHERE A.PACT_ID = D.RPY_PACT_ID
                                 AND A.SIHS_YN = 'N'
                                 AND D.APY_END_DT = TO_DATE('9999-12-31', 'YYYY-MM-DD')
                                 AND B.DFT_DT BETWEEN D.APY_STR_DT AND A.DS_DTM
                                 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                                 AND A.HSP_TP_CD = D.HSP_TP_CD
                                 AND D.APY_STR_DT &gt;= A.ADS_DT
                                 AND A.APCN_YN = 'N'
                                 AND D.APCN_YN = 'N'
                          UNION ALL
                          SELECT A.PT_NO
                                ,A.PACT_ID
                                ,D.APY_STR_DT
                                ,D.APY_END_DT
                                ,NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)                                                                                                                                  WD_DEPT_CD
                                ,(SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID AND B.APY_STR_DT &gt;= A.ADS_DT AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD) AND ROWNUM = 1)    MIN_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MAX(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) &lt;&gt; NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT
                                ,(SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                         MIN(APY_STR_DT)
                                    FROM ACPPRTSD B
                                   WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                         AND B.APY_STR_DT &lt; D.APY_STR_DT
                                         AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                         AND B.APY_STR_DT &gt;= A.ADS_DT
                                         AND B.APY_STR_DT &gt;=
                                             (SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                     MIN(APY_STR_DT)
                                                FROM ACPPRTSD B
                                               WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                     AND NVL(B.TWRM_WD_DEPT_CD, B.WD_DEPT_CD) = NVL(D.TWRM_WD_DEPT_CD, D.WD_DEPT_CD)
                                                     AND B.APY_STR_DT &gt;= A.ADS_DT
                                                     AND ROWNUM = 1)
                                         AND ROWNUM = 1)                                                                                                                                               MAX_APY_STR_DT2
                                ,ADS_DT
                                ,NVL(DS_EXPT_DT, TO_DATE('9999-12-31', 'YYYY-MM-DD'))                                                                                                                  DS_EXPT_DT
                                ,B.DFT_DT
                                ,A.HSP_TP_CD
                            FROM ACPPRAAM A
                                ,ACPPRTSD D
                                ,(    SELECT TO_DATE( :FROM_DT) + (ROWNUM - 1)     DFT_DT
                                        FROM DUAL
                                  CONNECT BY LEVEL &lt;= (TO_DATE( :TO_DT) - TO_DATE( :FROM_DT)) + 1) B
                           WHERE A.PACT_ID = D.RPY_PACT_ID
                                 AND (   A.SIHS_YN &lt;&gt; 'N'
                                      OR D.APY_END_DT &lt;&gt; TO_DATE('9999-12-31', 'YYYY-MM-DD'))
                                 AND B.DFT_DT BETWEEN D.APY_STR_DT AND D.APY_END_DT
                                 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                                 AND A.HSP_TP_CD = D.HSP_TP_CD
                                 AND D.APY_STR_DT &gt;= A.ADS_DT
                                 AND A.APCN_YN = 'N'
                                 AND D.APCN_YN = 'N'
                                 AND (SELECT TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(PT_BRDY_DT, 'YYYY')
                                        FROM PCTPCPAM_DAMO
                                       WHERE PT_NO = A.PT_NO) &lt;= 18)) XX
                         ) A
        ,PDEDBMSM F
   WHERE A.WD_DEPT_CD = F.DEPT_CD
         AND A.HSP_TP_CD = F.HSP_TP_CD
         AND F.HSP_TP_CD = :HIS_HSP_TP_CD
         AND A.WD_DEPT_CD = NVL( :WD_DEPT_CD, A.WD_DEPT_CD)
         AND A.WD_DEPT_CD NOT IN ('CRU', '032')
GROUP BY A.WD_DEPT_CD, F.SORT_SEQ
ORDER BY MED_DEPT_CD

  &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>의료기구사용일수(진료과별)</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryMed"&gt;&lt;!--
    Clss        : text
    Desc        : 의료기구 사용일수 조회(진료과별)
    Author      : 정규봉
    Create date : 2020-06-25
    Update date : 2020-06-25 (김성회, 삽관/기구/드레싱 관리로 조건 변경)
--&gt;
SELECT /* 간호기록-간호공통기록-의료기구 사용일수 진료과별 조회 -HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryMed */
       A.MED_DEPT_CD     MED_DEPT_CD
     , MAX(F.DEPT_NM)   DEPT_NM
     , SUM(DECODE(RANK, 1 , ADS_YN))     ADS_SUM
     , SUM(DECODE(RANK, 1 , SIHS_YN))    SIHS_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'C'))     AS CLINE_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'F'))     AS FOLEY_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'V'))     AS VENT_SUM
     , SUM(DECODE(RANK, 1 , ADS_YN)) + SUM(DECODE(RANK, 1 , SIHS_YN))    TOT_SUM
     , 'Y'                   UNDERXV_YN
     , F.SORT_SEQ
 FROM (
         SELECT XX.PT_NO
             ,XX.PACT_ID
             ,XX.APY_STR_DT
             ,XX.APY_END_DT
             ,XX.MED_DEPT_CD
             ,XX.DFT_DT
             ,RANK() OVER (PARTITION BY XX.PT_NO, XX.PACT_ID, XX.DFT_DT ORDER BY XX.PT_NO) RANK
             ,CASE WHEN XX.APY_STR_DT = XX.DFT_DT AND XX.DS_EXPT_DT &gt;= XX.DFT_DT
                            THEN 1
                            ELSE 0
                            END  ADS_YN
                      ,CASE WHEN XX.DS_EXPT_DT &gt;= XX.DFT_DT
                            THEN 1
                            ELSE 0
                            END  SIHS_YN
         FROM (
               SELECT
                        PT_NO
                       ,PACT_ID
                       ,CASE WHEN APY_STR_DT = MIN_APY_STR_DT
                             THEN MIN_APY_STR_DT
                             WHEN APY_STR_DT &gt; MAX_APY_STR_DT
                             THEN APY_STR_DT
                             ELSE MIN_APY_STR_DT
                             END APY_STR_DT
                       ,APY_END_DT
                       ,MED_DEPT_CD
                       ,DFT_DT
                       ,DS_EXPT_DT
                   FROM (
                     SELECT  A.PT_NO
                           ,A.PACT_ID
                           ,D.APY_STR_DT
                           ,D.APY_END_DT
                           ,D.MED_DEPT_CD
                           ,(
                             SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                    MIN(APY_STR_DT)
                               FROM ACPPRTSD B
                              WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                AND B.MED_DEPT_CD = D.MED_DEPT_CD
                                AND B.APY_STR_DT &gt;= A.ADS_DT
                                AND B.HSP_TP_CD   = D.HSP_TP_CD 
                                AND ROWNUM = 1
                            )  MIN_APY_STR_DT
                           ,(
                             SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                    MAX(APY_STR_DT)
                               FROM ACPPRTSD B
                              WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                AND B.APY_STR_DT &lt; D.APY_STR_DT
                                AND B.MED_DEPT_CD &lt;&gt; D.MED_DEPT_CD
                                AND B.HSP_TP_CD   = D.HSP_TP_CD
                                AND B.APY_STR_DT &gt;= A.ADS_DT
                                AND B.APY_STR_DT &gt; (
                                                   SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                            MIN(APY_STR_DT)
                                                 FROM ACPPRTSD B
                                                WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                  AND B.MED_DEPT_CD = D.MED_DEPT_CD
                                                  AND B.APY_STR_DT &gt;= A.ADS_DT
                                                  AND B.HSP_TP_CD   = D.HSP_TP_CD
                                                  AND ROWNUM = 1
                                                    )
                                AND ROWNUM = 1
                            )  MAX_APY_STR_DT
                           ,NVL(DS_EXPT_DT,TO_DATE('9999-12-31','YYYY-MM-DD')) DS_EXPT_DT
                           ,B.DFT_DT
                         FROM ACPPRAAM A
                             ,ACPPRTSD D
                           ,(
                             SELECT TO_DATE(:FROM_DT) + ( ROWNUM - 1 ) DFT_DT
                                   FROM DUAL
                             CONNECT BY LEVEL &lt;= (TO_DATE(:TO_DT) - TO_DATE(:FROM_DT)) + 1
                           ) B
                       WHERE A.PACT_ID    = D.RPY_PACT_ID
                         AND B.DFT_DT BETWEEN  D.APY_STR_DT AND D.APY_END_DT
                         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                         AND A.HSP_TP_CD = D.HSP_TP_CD
                         AND D.APY_STR_DT &gt;= A.ADS_DT
                         AND A.APCN_YN = 'N'
                         AND D.APCN_YN = 'N'
                        )
                     ) XX
       ) A
        , PDEDBMSM F
  WHERE A.MED_DEPT_CD = F.DEPT_CD
    AND F.HSP_TP_CD   = :HIS_HSP_TP_CD
  GROUP BY A.MED_DEPT_CD ,F.SORT_SEQ

UNION ALL

SELECT /* 간호기록-간호공통기록-침습적 처치 진료과별 조회 -HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryMed */
       A.MED_DEPT_CD     MED_DEPT_CD
     , MAX(F.DEPT_NM)   DEPT_NM
     , SUM(DECODE(RANK, 1 , ADS_YN))     ADS_SUM
     , SUM(DECODE(RANK, 1 , SIHS_YN))    SIHS_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'C'))     AS CLINE_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'F'))     AS FOLEY_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'V'))     AS VENT_SUM
     , SUM(DECODE(RANK, 1 , ADS_YN)) + SUM(DECODE(RANK, 1 , SIHS_YN))    TOT_SUM
     , 'N'                   UNDERXV_YN
     , F.SORT_SEQ
 FROM (
         SELECT XX.PT_NO
             ,XX.PACT_ID
             ,XX.APY_STR_DT
             ,XX.APY_END_DT
             ,XX.MED_DEPT_CD
             ,XX.DFT_DT
             ,RANK() OVER (PARTITION BY XX.PT_NO, XX.PACT_ID, XX.DFT_DT ORDER BY XX.PT_NO) RANK
             ,CASE WHEN XX.APY_STR_DT = XX.DFT_DT AND XX.DS_EXPT_DT &gt;= XX.DFT_DT
                            THEN 1
                            ELSE 0
                            END  ADS_YN
                      ,CASE WHEN XX.DS_EXPT_DT &gt;= XX.DFT_DT
                            THEN 1
                            ELSE 0
                            END  SIHS_YN
         FROM (
               SELECT
                        PT_NO
                       ,PACT_ID
                       ,CASE WHEN APY_STR_DT = MIN_APY_STR_DT
                             THEN MIN_APY_STR_DT
                             WHEN APY_STR_DT &gt; MAX_APY_STR_DT
                             THEN APY_STR_DT
                             ELSE MIN_APY_STR_DT
                             END APY_STR_DT
                       ,APY_END_DT
                       ,MED_DEPT_CD
                       ,DFT_DT
                       ,DS_EXPT_DT
                   FROM (
                     SELECT  A.PT_NO
                           ,A.PACT_ID
                           ,D.APY_STR_DT
                           ,D.APY_END_DT
                           ,D.MED_DEPT_CD
                           ,(
                             SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                    MIN(APY_STR_DT)
                               FROM ACPPRTSD B
                              WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                AND B.MED_DEPT_CD = D.MED_DEPT_CD
                                AND B.HSP_TP_CD   = D.HSP_TP_CD
                                AND B.APY_STR_DT &gt;= A.ADS_DT
                                AND ROWNUM = 1
                            )  MIN_APY_STR_DT
                           ,(
                             SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                    MAX(APY_STR_DT)
                               FROM ACPPRTSD B
                              WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                AND B.APY_STR_DT &lt; D.APY_STR_DT
                                AND B.MED_DEPT_CD &lt;&gt; D.MED_DEPT_CD
                                AND B.HSP_TP_CD   = D.HSP_TP_CD
                                AND B.APY_STR_DT &gt;= A.ADS_DT
                                AND B.APY_STR_DT &gt; (
                                                   SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                            MIN(APY_STR_DT)
                                                 FROM ACPPRTSD B
                                                WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                  AND B.MED_DEPT_CD = D.MED_DEPT_CD
                                                  AND B.HSP_TP_CD   = D.HSP_TP_CD
                                                  AND B.APY_STR_DT &gt;= A.ADS_DT
                                                  AND ROWNUM = 1
                                                    )
                                AND ROWNUM = 1
                            )  MAX_APY_STR_DT
                           ,NVL(DS_EXPT_DT,TO_DATE('9999-12-31','YYYY-MM-DD')) DS_EXPT_DT
                           ,B.DFT_DT
                         FROM ACPPRAAM A
                             ,ACPPRTSD D
                           ,(
                             SELECT TO_DATE(:FROM_DT) + ( ROWNUM - 1 ) DFT_DT
                                   FROM DUAL
                             CONNECT BY LEVEL &lt;= (TO_DATE(:TO_DT) - TO_DATE(:FROM_DT)) + 1
                           ) B
                       WHERE A.PACT_ID    = D.RPY_PACT_ID
                         AND B.DFT_DT BETWEEN  D.APY_STR_DT AND D.APY_END_DT
                         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                         AND A.HSP_TP_CD = D.HSP_TP_CD
                         AND A.APCN_YN = 'N'
                         AND D.APCN_YN = 'N'
                         AND D.APY_STR_DT &gt;= A.ADS_DT
                         AND ( SELECT TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(PT_BRDY_DT, 'YYYY')
                                   FROM PCTPCPAM_DAMO
                                  WHERE PT_NO = A.PT_NO) &gt;= 15
                        )
                     ) XX
       ) A
        , PDEDBMSM F
  WHERE A.MED_DEPT_CD = F.DEPT_CD
    AND F.HSP_TP_CD   = :HIS_HSP_TP_CD
  GROUP BY A.MED_DEPT_CD ,F.SORT_SEQ
  
UNION ALL

SELECT /* 간호기록-간호공통기록-침습적 처치 진료과별 조회 -HIS.MC.NR.CN.VS.SelectInvasiveTreatmentHistoryMed */
       A.MED_DEPT_CD     MED_DEPT_CD
     , MAX(F.DEPT_NM)   DEPT_NM
     , SUM(DECODE(RANK, 1 , ADS_YN))     ADS_SUM
     , SUM(DECODE(RANK, 1 , SIHS_YN))    SIHS_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'C'))     AS CLINE_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'F'))     AS FOLEY_SUM
     , TO_NUMBER(XMED.FT_GET_CFV_DAY_SUM(:HIS_HSP_TP_CD, A.MED_DEPT_CD, TO_CHAR(:FROM_DT, 'YYYY-MM-DD'), TO_CHAR(:TO_DT, 'YYYY-MM-DD'), 'V'))     AS VENT_SUM
     , SUM(DECODE(RANK, 1 , ADS_YN)) + SUM(DECODE(RANK, 1 , SIHS_YN))    TOT_SUM
     , 'U'                   UNDERXV_YN
     , F.SORT_SEQ
 FROM (
         SELECT XX.PT_NO
             ,XX.PACT_ID
             ,XX.APY_STR_DT
             ,XX.APY_END_DT
             ,XX.MED_DEPT_CD
             ,XX.DFT_DT
             ,RANK() OVER (PARTITION BY XX.PT_NO, XX.PACT_ID, XX.DFT_DT ORDER BY XX.PT_NO) RANK
             ,CASE WHEN XX.APY_STR_DT = XX.DFT_DT AND XX.DS_EXPT_DT &gt;= XX.DFT_DT
                            THEN 1
                            ELSE 0
                            END  ADS_YN
                      ,CASE WHEN XX.DS_EXPT_DT &gt;= XX.DFT_DT
                            THEN 1
                            ELSE 0
                            END  SIHS_YN
         FROM (
               SELECT
                        PT_NO
                       ,PACT_ID
                       ,CASE WHEN APY_STR_DT = MIN_APY_STR_DT
                             THEN MIN_APY_STR_DT
                             WHEN APY_STR_DT &gt; MAX_APY_STR_DT
                             THEN APY_STR_DT
                             ELSE MIN_APY_STR_DT
                             END APY_STR_DT
                       ,APY_END_DT
                       ,MED_DEPT_CD
                       ,DFT_DT
                       ,DS_EXPT_DT
                   FROM (
                     SELECT  A.PT_NO
                           ,A.PACT_ID
                           ,D.APY_STR_DT
                           ,D.APY_END_DT
                           ,D.MED_DEPT_CD
                           ,(
                             SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                    MIN(APY_STR_DT)
                               FROM ACPPRTSD B
                              WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                AND B.MED_DEPT_CD = D.MED_DEPT_CD
                                AND B.HSP_TP_CD   = D.HSP_TP_CD 
                                AND B.APY_STR_DT &gt;= A.ADS_DT
                                AND ROWNUM = 1
                            )  MIN_APY_STR_DT
                           ,(
                             SELECT /*+ INDEX_DESC (B ACPPRTSD_PK) */
                                    MAX(APY_STR_DT)
                               FROM ACPPRTSD B
                              WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                AND B.APY_STR_DT &lt; D.APY_STR_DT
                                AND B.MED_DEPT_CD &lt;&gt; D.MED_DEPT_CD
                                AND B.HSP_TP_CD   = D.HSP_TP_CD
                                AND B.APY_STR_DT &gt;= A.ADS_DT
                                AND B.APY_STR_DT &gt; (
                                                   SELECT /*+ INDEX_ASC (B ACPPRTSD_PK) */
                                                            MIN(APY_STR_DT)
                                                 FROM ACPPRTSD B
                                                WHERE B.RPY_PACT_ID = D.RPY_PACT_ID
                                                  AND B.MED_DEPT_CD = D.MED_DEPT_CD
                                                  AND B.HSP_TP_CD   = D.HSP_TP_CD 
                                                  AND B.APY_STR_DT &gt;= A.ADS_DT
                                                  AND ROWNUM = 1
                                                    )
                                AND ROWNUM = 1
                            )  MAX_APY_STR_DT
                           ,NVL(DS_EXPT_DT,TO_DATE('9999-12-31','YYYY-MM-DD')) DS_EXPT_DT
                           ,B.DFT_DT
                         FROM ACPPRAAM A
                             ,ACPPRTSD D
                           ,(
                             SELECT TO_DATE(:FROM_DT) + ( ROWNUM - 1 ) DFT_DT
                                   FROM DUAL
                             CONNECT BY LEVEL &lt;= (TO_DATE(:TO_DT) - TO_DATE(:FROM_DT)) + 1
                           ) B
                       WHERE A.PACT_ID    = D.RPY_PACT_ID
                         AND B.DFT_DT BETWEEN  D.APY_STR_DT AND D.APY_END_DT
                         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                         AND A.HSP_TP_CD = D.HSP_TP_CD
                         AND A.APCN_YN = 'N'
                         AND D.APCN_YN = 'N'
                         AND D.APY_STR_DT &gt;= A.ADS_DT
                         AND ( SELECT TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(PT_BRDY_DT, 'YYYY')
                                   FROM PCTPCPAM_DAMO
                                  WHERE PT_NO = A.PT_NO) &lt;= 18
                        )
                     ) XX
       ) A
        , PDEDBMSM F
  WHERE A.MED_DEPT_CD = F.DEPT_CD
    AND F.HSP_TP_CD   = :HIS_HSP_TP_CD--2017-04-06, 정규봉, 병원구분 작업
  GROUP BY A.MED_DEPT_CD ,F.SORT_SEQ
  ORDER BY MED_DEPT_CD

 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>테이블명세서</QUERY_NAME>
    <QUERY_TEXT>SELECT A.TABLE_NAME
     , D.COMMENTS TABLE_COMMENTS
     , A.COLUMN_ID SEQ
     , DECODE(C.INDEX_NAME, '', '', 'PK') KEY_FIELD
     , A.COLUMN_NAME
     , DECODE(A.DATA_TYPE, 'VARCHAR2', A.DATA_TYPE||'('||A.DATA_LENGTH||')'
                         , 'DATE', A.DATA_TYPE
                         , 'NUMBER', A.DATA_TYPE||'('||A.DATA_PRECISION||DECODE(A.DATA_SCALE, '0', '', ','||A.DATA_SCALE)||')'
                         , A.DATA_TYPE
                         ) DATA_TYPE
     , DECODE(A.NULLABLE, 'N', 'NOT NULL', 'Y', 'NULL') NULLABLE
     , B.COMMENTS
     --, A.DATA_DEFAULT
     , A.OWNER
FROM   ALL_TAB_COLUMNS A
     , ALL_COL_COMMENTS B
     , ALL_IND_COLUMNS C
     , ALL_TAB_COMMENTS D
WHERE/*  A.OWNER = 'KVSUP'
AND  */  C.TABLE_OWNER(+) &lt;&gt; 'KVDBA'
AND    A.OWNER = B.OWNER
AND    A.OWNER = D.OWNER
AND    A.TABLE_NAME = D.TABLE_NAME
AND    A.TABLE_NAME = B.TABLE_NAME
AND    A.COLUMN_NAME = B.COLUMN_NAME
AND    A.TABLE_NAME = C.TABLE_NAME(+)
AND    A.COLUMN_NAME = C.COLUMN_NAME(+)
AND    C.INDEX_NAME(+) LIKE '%PK'
--AND    A.OWNER = UPPER('HMED')
AND    A.TABLE_NAME like UPPER('CDACORDH')
--AND    A.TABLE_NAME like UPPER('apiplist@DL_XNEMR_EMRDEV')
--AND    D.COMMENTS like '%PACS%'
--||'%'

--and a.column_name = 'IDRUG_GRP'
ORDER BY 3, 5,1, A.COLUMN_ID
--order by 5
;
SELECT *
FROM UDBA.DATA_CLEANSING_2021NOV03
WHERE FROM_FILE = '진료지원'
AND OWNER = 'HSUP'
;
select *
 from pdedbmsm
where hsp_tp_Cd ='01'

</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>가야할곳</QUERY_NAME>
    <QUERY_TEXT>select ft_mse_get_pbso_exmr(a.hsp_tp_Cd,a.ord_id,'2'), ft_mse_get_pbso_exmr(a.hsp_tp_Cd,a.ord_id,'5'),rsv_dtm,exm_hope_dt,NVL(TO_CHAR(A.RSV_DTM,'D'),TO_CHAR(A.EXM_HOPE_DT,'D')),exm_prgr_sts_cd,a.*
 from mooorexm a
 where hsp_tp_Cd='01'
 and ord_dt between sysdate-30 and sysdate
 and exm_prgr_sts_cd in ('X','A')
-- and pt_no = '22273968'
 and trunc(rsv_dtm) = trunc(sysdate)
  and trunc(exm_hope_dt) &lt;&gt; trunc(sysdate)
--  and exists(select 1 from msErmrrd where hsp_tp_cd ='01' and ord_Id = a.ord_Id)
and oddsc_tp_cd ='C'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>의료기구 C-LINE</QUERY_NAME>
    <QUERY_TEXT>SELECT *
 fROM MRNNRTMD
WHERE HSP_TP_CD ='01'
  AND NR_INTB_CTG_ID IN ('10030','10022','10006','10012','10013','10039')</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>의료기구 Foley</QUERY_NAME>
    <QUERY_TEXT>SELECT *
 fROM MRNNRTMD
WHERE HSP_TP_CD ='01'
  AND NR_INTB_CTG_ID IN ('10023')
;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>낮병동여부</QUERY_NAME>
    <QUERY_TEXT>FUNCTION FT_MOO_DAY_WARD_YN( IN_PT_NO             IN VARCHAR2                -- 환자번호
                           , IN_PACT_ID           IN VARCHAR2                -- 원무접수ID
                           , IN_HIS_HSP_TP_CD     IN VARCHAR2                -- 병원구분코드
                      )
RETURN VARCHAR2

/**********************************************************************
작 성 자 :  전영식
작 성 일 :  2022-01-20
내    용 :  낮병동 입원료 처방 여부 
수정이력 :
*********************************************************************/

IS
    V_ORD_YN VARCHAR2(1) := 'N' ;
    
BEGIN
    BEGIN
        SELECT NVL(MAX('Y'),'N')
          INTO V_ORD_YN
          FROM MOOORPTD A
         WHERE A.PT_NO = IN_PT_NO
           AND MED_PACT_ID = IN_PACT_ID
           AND A.HSP_TP_CD = IN_HIS_HSP_TP_CD
           AND ORD_CD = 'B7001G'
           AND ODDSC_TP_CD = 'C'
            ;
              
        EXCEPTION
             WHEN NO_DATA_FOUND THEN
                  V_ORD_YN := 'N';
       END; 
       
         
  RETURN(V_ORD_YN);   
       
END FT_MOO_DAY_WARD_YN;
</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>서식지 처방 매핑</QUERY_NAME>
    <QUERY_TEXT>select *
 from MSERMMAD
 where 1=1
 and mdfm_id ='2005417'
-- and exm_cd ='SC130034'
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>PACS테이블</QUERY_NAME>
    <QUERY_TEXT>--오더
select *
 from mserminf_orr
  where 1=1
  and patid ='10441260'
  order by worktime desc

;    
--결과
select *
 from mserminf_oru
  where 1=1
  and patid ='10441260'
  order by worktime desc

;    
--환자정보
select *
 from mserminf_adt
 where patid ='10441260'
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>발행처별 가야할곳 INSERT</QUERY_NAME>
    <QUERY_TEXT>EXEC :GUID_CD := 'IME04';
BEGIN
 FOR REC IN
 (With A AS(
----통합예약이 Y이면서 진료협력센터가 없는 검사 리스트
--select distinct exm_Cd,(select pt_guid_plc_Cd from msermzmd where hsp_tp_Cd = a.hsp_tp_cd and ord_Ctg_Cd = a.ord_ctg_Cd and UPPER(replace(pt_guid_plc_nm,' ','')) = '진료협력센터(검사예약)' ) pt_guid_plc_cd
-- from msermmmc a
-- where hsp_tp_cd = '01'
-- and ord_slip_ctg_Cd &lt;&gt; 'MIG'
-- and end_dt is null
-- and INTG_RSV_YN = 'Y'
-- and not exists(select 1
--         from msermpld b
--         where b.hsp_tp_cd = a.hsp_tp_Cd
--           and exm_cd = a.exm_cd
--           and exists (select 1
--                  from msermzmd
--                  where hsp_tp_Cd = b.hsp_tp_cd
--                   and UPPER(replace(pt_guid_plc_nm,' ','')) = '진료협력센터(검사예약)'
--                   and b.pt_guid_plc_cd = pt_guid_plc_CD
--                   )
--           )
(
select ORD_CD  EXM_CD
  from ccoocbac
 where mif_cd = 'SED001B'
 and ord_Cd ='LTS001'
 and hsp_Tp_Cd='01'
-- and substr(ord_slip_ctg_cd,1,2) = 'RG'
          )
          ,C AS(
          select exm_Cd dept_nm
             , 'XXX' dept_cd
             from temp_exm_table
       )
select 'O' PACT_TP_CD,b.lv DOW_KND_CD,a.exm_cd,a.pt_guid_plc_cd,c.dept_nm,c.dept_cd
 from A
   ,(select level+1 lv from dual connect by level &lt;6) b
   ,c
   order by exm_Cd,PACT_TP_CD,DOW_KND_CD)
 LOOP
  BEGIN
   INSERT INTO MSERMPLD
        (HSP_TP_CD
         ,EXM_CD
         ,PBSO_DEPT_CD
         ,DOW_KND_CD
         ,PACT_TP_CD
         ,FSR_STF_NO
         ,FSR_DTM
         ,FSR_PRGM_NM
         ,FSR_IP_ADDR
         ,LSH_STF_NO
         ,LSH_DTM
         ,LSH_PRGM_NM
         ,LSH_IP_ADDR
         ,PT_GUID_PLC_CD)
      VALUES('01'
            ,REC.EXM_CD
            ,REC.DEPT_CD
            ,REC.DOW_KND_CD
            ,REC.PACT_TP_CD
            ,'SSSUP11'
            ,SYSDATE
            ,'Golden.ex'
            ,'0.0.0.0'
            ,'SSSUP11'
            ,SYSDATE
            ,'Golden.exe'
            ,'0.0.0.0'
            ,REC.PT_GUID_PLC_CD); --가야할곳 코드
  EXCEPTION
   WHEN DUP_VAL_ON_INDEX THEN
    UPDATE MSERMPLD
     SET PT_GUID_PLC_CD = REC.PT_GUID_PLC_CD  --가야할곳 코드
     WHERE HSP_TP_CD ='01'
      AND EXM_CD = REC.EXM_CD
      AND PACT_TP_CD = REC.PACT_TP_CD
      AND PBSO_DEPT_CD = REC.DEPT_CD
      AND DOW_KND_CD = REC.DOW_KND_CD
      ;

  END;
 END LOOP;
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수가조회</QUERY_NAME>
    <QUERY_TEXT>--수가조회
--OCS_MIF_CD : AS_IS 수가코드
select ocs_mif_cd, mif_cd, a.*
from aimirpmc a
 where hsp_tp_cd = '01'
   and apy_end_dt = to_date('99991231','yyyymmdd')
   and (mif_cd ='30081754' or ocs_mif_cd in('30081754'))
;</QUERY_TEXT>
    <GROUP>수가</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>운영기-&gt;개발기 데이터이관</QUERY_NAME>
    <QUERY_TEXT>--운영기에서 개발기로 데이터 이관
--1. 병원구분
--2. ORD_CTG_CD (,로 구분하여 여러 ORD_CTG_CD 넣을 수 있음.)
--3. 'Y'
--4. 최초 CCOOCBAC DELETE  ('Y'를 넣으면 ORD_CTG_CD가 없어서 PK오류가 날 수 있으니 최초 한번 MSERMMMC테이블의 검사코드와 CCOOCBAC의 처방코드를 조인하여 해당 검사들을 전부 지우고 이관한다.)
var IO_ERRYN varchar2(500);
var IO_ERRMSG varchar2(500);

exec PC_MSE_IV_TRANS_2DEV('01','BR1,BN1','Y','N',:IO_ERRYN,:IO_ERRMSG);</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처방세트 오더발행</QUERY_NAME>
    <QUERY_TEXT>select hope_exrm_no,c.exrm_tp_cd,b.pt_Nm,a.*
 from mooorexm a,pctpcpam_damo b,msermmmc c
 where b.pt_nm like '영상교육5'||'%'
 and a.hsp_tp_cd = '01'
 and a.pt_no = b.pt_no
 and a.ord_cd = c.exm_cd
 and a.hsp_tp_cd = c.hsp_tp_cd
 and ord_dt = trunc(sysdate)

;
-- xMED 스테이징 계정으로 할 것~~~~!!!

EXEC :IN_PBSO_DEPT_CD         :='106A';                                       --소아처방가능여부
EXEC :IN_SORD_REG_ID          :='102128093';                                  --병동간호1 스테이징 세트
EXEC :IN_HSP_TP_CD         :='01';                                         --선택진료비발생여부
EXEC :IN_SGNT_STF_NO          :='CCC0EMR';                                    --최초등록직원번호
EXEC :IN_HIS_PRGM_NM          :='AUTOSETORDER';                               --최초등록프로그램명
EXEC :IN_HIS_IP_ADDR          :='127.0.0.1';                                  --최초등록IP주소
EXEC :IN_END_DATE             :='20210831';                                   --최초등록IP주소

--EXEC :V_ERROR_YN  :='';
--EXEC :V_RESULT    :='';
--06255413
--08637727
BEGIN
    FOR REC IN
    (
    select a.PT_NO           PT_NO
        , A.PACT_ID         PACT_ID
        , TRUNC(SYSDATE)    ORD_DT
   --     , A.WD_DEPT_CD      PBSO_DEPT_CD
     from acppraam a
        , pctpcpam_damo p
    where a.hsp_tp_cd = '01'
      and a.pt_no = p.pt_no
      and p.pt_nm like '%'||'영상교육5'||'%'
--      AND P.PT_NO = '04401122'
      and a.sihs_yn = 'Y'

    )
    LOOP
   BEGIN
           XMED.PC_MOO_SAVE_ORDER_SETORDER( REC.PT_NO
                                          , REC.PACT_ID
                                          , REC.ORD_DT
                                          , 'N'
                                          , NULL            -- 2016-06-05 Jeong.W.J : Pre-adm. Set 에 등록되어 있는 처방적용목적코드 데이터로 오더 저장되도록 null 처리
                                          , :IN_PBSO_DEPT_CD
                                          , :IN_SGNT_STF_NO
                                          , :IN_SORD_REG_ID
                                          , :IN_HSP_TP_CD
                                          , :IN_SGNT_STF_NO
                                          , :IN_HIS_PRGM_NM
                                          , :IN_HIS_IP_ADDR
                                          );
      END;
    END LOOP;
--
--    COMMIT;
END;

</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처방세트조회</QUERY_NAME>
    <QUERY_TEXT>--세트명으로 세트 확인
SELECT
       (
        SELECT LISTAGG(M.SORD_NM, ' &gt;&gt; ') WITHIN GROUP (ORDER BY LEVEL DESC)
          FROM MOOORSAM M
         START WITH (M.SORD_REG_ID) = (A.SORD_REG_ID) AND M.HSP_TP_CD = A.HSP_TP_CD
        CONNECT BY PRIOR M.UPR_SORD_REG_ID = (M.SORD_REG_ID) AND M.HSP_TP_CD = A.HSP_TP_CD
       ) "세트정보",LVL_SEQ,
       SORD_NM, A.*
 FROM  MOOORSAM  A
 WHERE A.HSP_TP_CD = '01'
--   AND UPR_SORD_REG_ID IS NULL
--   AND A.SORD_TP_CD = '01'
--   AND  A.SORD_IFY_TP_CD = 'D'
   AND A.USE_YN = 'Y'
--   AND  A.SORD_REG_ID = '102044502'

--세트명 입력
   AND SORD_NM LIKE '%'||'영상교'||'%'
;

--세트 조회
SELECT *
  FROM MOOORSBE
 WHERE SORD_REG_ID   = '102128093'

;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>2차재료 처방 정보조회</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.IV.RM.EX.SelectTm2SOrdInfo"&gt;&lt;!--
    Clss : text
    Desc : 2차재료 처방 정보조회 (PKG_SUP_SR_D_01.PC_SR_SEL_SREXMATT) 
       Author : 권장섭
       Create date : 2012-09-01
       Update date : 2012-09-01
--&gt;
    SELECT /* HIS.MS.IV.RM.EX.SelectTm2SOrdInfo */
            A.ORD_ID                                           ORD_ID                              
          , A.SGL_MIF_CD                                       SGL_MIF_CD           -- 단일수가코드
          , NVL(B.ORD_NM, C.ARCL_NO_KOR_NM)                    ORD_NM
          , A.OAN_TP_CD                                        OAN_TP_CD            -- 신구구분코드
          , A.MTRL_MIF_CD                                      MTRL_MIF_CD          -- 재료수가코드
          , SUM(A.USE_QTY)                                     USE_QTY              -- 사용수량
          , SUM(DECODE(A.MIFI_TP_CD, '1', A.RPY_USE_QTY, 0))   A_RPY_USE_QTY        -- 보험수량
          , SUM(DECODE(A.MIFI_TP_CD, '2', A.RPY_USE_QTY, 0))   AF_RPY_USE_QTY       -- 비보험수량
          , MAX(A.RPY_STS_CD)                                  RPY_STS_CD           -- 수납상태코드
          , MAX(TO_CHAR(A.EXM_IMPL_DT,'YYYY-MM-DD'))           EXM_IMPL_DT          -- 검사시행일자
          , MAX(C.NRM)                                         NRM                  -- 물품규격
          , MAX(A.ANMC_RSN_CD)                        ANMC_RSN_CD          -- 임의비급여 사유코드
          , MAX(A.ANMC_RSN_ETC_CNTE)                     ANMC_RSN_ETC_CNTE    -- 임의비급여 기타사유
          , MAX(D.BZAQ_NM)                                     BZAQ_NM              -- 거래처명
          , MAX(E.MNF_CMP_NM)                                  MNF_CMP_NM           -- 제조사명
          , MAX(D.BZAQ_ASDP_TEL_NO)                            TEL_NO               -- 거래처 전화번호
          , MAX(D.BZAQ_ASDP_NM)                                RPST_NM              -- 거래처 담당자명
          , MAX(B.EDI_CODE)                                    EDI_CODE             -- 보험EDI코드
          , MAX(B.INS_UNPR)                                    INS_UNPR             -- 보험단가
          , MAX(B.GNR_UNPR)                                    GNR_UNPR             -- 일반단가
          , DECODE(B.INS_MIFI_TP_CD, '1', 'Y', 'N')            INS_YN               -- 보험여부   
          , CASE WHEN B.ORD_CD IS NULL THEN 'N'
                                       ELSE 'Y'
                                         END                   MIF_CD_YN            -- 수가통계분류코드
       FROM MSERMAMD A
          , MSERMBAV B             
          , RCAIPCDM C
          , RCAOMVLD D
          , RCAOMBCD  E
      WHERE A.ORD_ID     = :ORD_ID   
        AND A.HSP_TP_CD  = :HIS_HSP_TP_CD
        AND A.SGL_MIF_CD      = B.ORD_CD(+)
        AND A.HSP_TP_CD       = B.HSP_TP_CD(+)
       -- AND A.SGL_MIF_CD      = C.ARCL_NO(+)  
        AND A.ARCL_NO                  = C.ARCL_NO(+)  
        AND A.HSP_TP_CD       = C.HSP_TP_CD(+)
        AND C.BZAQ_CD           = D.BZAQ_CD(+)
        AND C.HSP_TP_CD       = D.HSP_TP_CD(+)
        AND C.MNF_CMP_CD            = E.MNF_CMP_CD(+) 
        AND C.HSP_TP_CD       = E.HSP_TP_CD(+) 
   GROUP BY A.ORD_ID
          , A.SGL_MIF_CD
          , NVL(B.ORD_NM, C.ARCL_NO_KOR_NM)
          , A.OAN_TP_CD
          , A.MTRL_MIF_CD
          ,  DECODE(B.INS_MIFI_TP_CD, '1', 'Y', 'N')
          , B.ORD_CD
          --, A.USE_QTY
--   ORDER BY A.SGL_MIF_CD
--          , A.OAN_TP_CD
          
          
UNION ALL


       SELECT /* HIS.MS.IV.RM.EX.SelectTm2SOrdInfo */
            A.ORD_ID                                           ORD_ID
          , A.SGL_MIF_CD                                       SGL_MIF_CD           -- 단일수가코드
          , NVL(B.ORD_NM, C.ARCL_NO_KOR_NM)                    ORD_NM
          , A.OAN_TP_CD                                        OAN_TP_CD            -- 신구구분코드
          , A.MTRL_MIF_CD                                      MTRL_MIF_CD          -- 재료수가코드
          , SUM(A.USE_QTY)                                     USE_QTY              -- 사용수량
          , SUM(DECODE(A.MIFI_TP_CD, '1', A.RPY_USE_QTY, 0))   A_RPY_USE_QTY        -- 보험수량
          , SUM(DECODE(A.MIFI_TP_CD, '2', A.RPY_USE_QTY, 0))   AF_RPY_USE_QTY       -- 비보험수량
          , MAX(A.RPY_STS_CD)                                  RPY_STS_CD           -- 수납상태코드
          , MAX(TO_CHAR(A.EXM_IMPL_DT,'YYYY-MM-DD'))           EXM_IMPL_DT          -- 검사시행일자
          , MAX(C.NRM)                                         NRM                  -- 물품규격
          , MAX(A.ANMC_RSN_CD)                        ANMC_RSN_CD          -- 임의비급여 사유코드
          , MAX(A.ANMC_RSN_ETC_CNTE)                     ANMC_RSN_ETC_CNTE    -- 임의비급여 기타사유
          , MAX(D.BZAQ_NM)                                     BZAQ_NM              -- 거래처명
          , MAX(E.MNF_CMP_NM)                                  MNF_CMP_NM           -- 제조사명
          , MAX(D.BZAQ_ASDP_TEL_NO)                            TEL_NO               -- 거래처 전화번호
          , MAX(D.BZAQ_ASDP_NM)                                RPST_NM              -- 거래처 담당자명
          , MAX(B.EDI_CODE)                                    EDI_CODE             -- 보험EDI코드
          , MAX(B.INS_UNPR)                                    INS_UNPR             -- 보험단가
          , MAX(B.GNR_UNPR)                                    GNR_UNPR             -- 일반단가
          , DECODE(B.INS_MIFI_TP_CD, '1', 'Y', 'N')            INS_YN               -- 보험여부
          , CASE WHEN B.ORD_CD IS NULL THEN 'N'
                                       ELSE 'Y'
                                         END                   MIF_CD_YN            -- 수가통계분류코드
       FROM MSERMRFD A
          , MSERMBAV B
          , RCAIPCDM C
          , RCAOMVLD D
          , RCAOMBCD  E
      WHERE A.ORD_ID     = :ORD_ID
        AND A.HSP_TP_CD  = :HIS_HSP_TP_CD
        AND A.SGL_MIF_CD      = B.ORD_CD(+)
        AND A.HSP_TP_CD       = B.HSP_TP_CD(+)
       -- AND A.SGL_MIF_CD      = C.ARCL_NO(+)
        AND A.ARCL_NO                  = C.ARCL_NO(+)
        AND A.HSP_TP_CD       = C.HSP_TP_CD(+)
        AND C.BZAQ_CD           = D.BZAQ_CD(+)
        AND C.HSP_TP_CD       = D.HSP_TP_CD(+)
        AND C.MNF_CMP_CD            = E.MNF_CMP_CD(+)
        AND C.HSP_TP_CD       = E.HSP_TP_CD(+)
   GROUP BY A.ORD_ID
          , A.SGL_MIF_CD
          , NVL(B.ORD_NM, C.ARCL_NO_KOR_NM)
          , A.OAN_TP_CD
          , A.MTRL_MIF_CD
          ,  DECODE(B.INS_MIFI_TP_CD, '1', 'Y', 'N')
          , B.ORD_CD
          --, A.USE_QTY
   
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사 시행 취소 조건</QUERY_NAME>
    <QUERY_TEXT>외래 응급은 그냥 시행취소 가능.
입원이면 수납상태가 N이면 취소가능
         수납상태가 Y이면 촬영일시 확인
                         촬영일시가 없으면 취소가능 , 있으면 촬영일시가 오늘이면 취소가능 ,오늘이 아니면 취소 불가능 </QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>삭제된 조영제 리스트</QUERY_NAME>
    <QUERY_TEXT>SELECT (case when (select 'Y' from msermamd where hsp_tp_cd='01'  and ord_Id = A.CT_ORD_ID and sgl_mif_cd in (select cnmd_inf_cd from MSERMMJD where hsp_tp_Cd='01' and cnmd_inf_tp_cd = 'A') and rownum =1) = 'Y' THEN 'CT_Y'
      else 'CT_N'
    END) CT_YN
  ,  (case when (select 'Y' from msermamd where hsp_tp_cd='01' and ord_Id = B.MRI_ORD_ID and sgl_mif_cd in (select cnmd_inf_cd from MSERMMJD where hsp_tp_Cd='01' and cnmd_inf_tp_cd = 'A')and rownum =1) = 'Y' THEN 'MR_Y'
      else 'MR_N'
    END) MR_YN
  ,A.*
  ,B.*
from
(select hsp_tp_cd,rsv_dtm,ord_Id CT_ORD_ID,pt_no,ord_dt,ord_cd
 from mooorexm
 where hsp_tp_cd='01'
 and ord_slip_ctg_cd like 'RC%'
 and ord_dt between sysdate -760 and sysdate
 and exrm_hh_dtm is not null
 and rsv_dtm is not null
 and exm_prgr_sts_cd &lt;&gt; 'X'
 and oddsc_tp_cd = 'C'
 and ord_cd in (sElect exm_cd from msermsmd)
)A
,(select hsp_tp_cd,rsv_dtm,ord_id MRI_ORD_ID,pt_no,ord_dt,ord_cd
 from mooorexm
 where hsp_tp_cd='01'
 and ord_slip_ctg_cd like 'RM%'
 and ord_dt between sysdate -760 and sysdate
 and exrm_hh_dtm is not null
 and rsv_dtm is not null
 and exm_prgr_sts_cd &lt;&gt; 'X'
 and oddsc_tp_cd = 'C'
 and ord_cd in (sElect exm_cd from msermsmd)
 )B
WHERE 1=1
and a.hsp_tp_cd='01'
and a.hsp_tP_cd = b.hsp_tp_cd
and trunc(a.rsv_dtm) = trunc(b.rsv_dtm)
and a.pt_no = b.pt_no
and(
(not exists(select 1
         from msermamd
         where hsp_tp_cd='01'
         and ord_id = A.CT_ORD_ID))
or (not exists(select 1
         from msermamd
         where hsp_tp_cd='01'
         and ord_id = B.MRI_ORD_ID)
)
)
order by a.pt_no
;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>입원 검사 지난 시행일 수납취소</QUERY_NAME>
    <QUERY_TEXT>exec :HIS_HSP_TP_CD := '01';
exec :IN_ORD_ID := '150452522';
exec :HIS_USER_ID := 'CCC0EMR';
exec :HIS_PRGM_NM := 'PC_ACP_IP_REFUND_ORDER';
exec :HIS_IP_ADDR := 'PC_ACP_IP_REFUND_ORDER';
exec :IO_ERRYN := '';
exec :IO_ERRMSG := '';
BEGIN
 FOR REC IN
 (
 SELECT A.PT_NO        V_PT_NO
       , A.RPY_STS_CD    V_RPY_STS_CD
       , A.PACT_TP_CD     V_PACT_TP_CD
       , A.RPY_PACT_ID     V_RPY_PACT_ID
                FROM MOOOREXM A
               WHERE 1=1
                 AND A.HSP_TP_CD    = :HIS_HSP_TP_CD
                 AND A.ORD_ID       = :IN_ORD_ID
 )
 LOOP
     IF REC.V_PACT_TP_CD = 'I' AND REC.V_RPY_STS_CD = 'Y' THEN
         BEGIN
             XBIL.PC_ACP_IP_REFUND_ORDER(   :HIS_HSP_TP_CD
                                          , REC.V_PT_NO
                                          , REC.V_RPY_PACT_ID
                                          , :IN_ORD_ID
                                          , :HIS_USER_ID
                                          , :HIS_PRGM_NM
                                          , :HIS_IP_ADDR
                                          , :IO_ERRYN
                                          , :IO_ERRMSG
                                          )
                                          ;
         END;

         BEGIN
             UPDATE /*+ XSUP.PC_MSE_SPCMCANCEL01 */
                    MOOOREXM
                SET RPY_STS_CD      = DECODE(REC.V_RPY_STS_CD, 'Y', 'N', RPY_STS_CD) -- 수납여부
              WHERE 1=1
                AND ORD_ID = :IN_ORD_ID
                AND NVL(ODDSC_TP_CD,'C') = 'C'
                AND HSP_TP_CD = :HIS_HSP_TP_CD;

             IF SQL%ROWCOUNT = 0 THEN
              RAISE_APPLICATION_ERROR(-20001,SQLERRM);
             END IF;

         EXCEPTION
             WHEN  OTHERS  THEN
                   RAISE_APPLICATION_ERROR(-20001,SQLERRM);
         END;

     END IF;
 END LOOP;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>초음파 기록지 </QUERY_NAME>
    <QUERY_TEXT>SELECT XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', A.HSP_TP_CD, '50050055', '992b3abc-9977-433b-bb06-6d1e44deb29e') CNTE
     , A.*
  FROM MSERMAAD A -- 환자별검사정보
 WHERE 1=1
   AND PT_NO = '17496739'
   ;


SELECT A.MDFM_ID
     , XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', A.HSP_TP_CD, A.MDRC_ID, '992b3abc-9977-433b-bb06-6d1e44deb29e') CNTE
     , A.*
  FROM MRDDRECM A
 WHERE 1=1
   AND A.HSP_TP_CD = '01'
   AND A.PT_NO     = '17496739'
   AND A.MDFM_ID   = '2003266' -- 부인과 초음파 기록지
   AND A.MDRC_FOM_SEQ = (SELECT MAX(MDRC_FOM_SEQ)
                           FROM MRDDRECM
                          WHERE HSP_TP_CD = A.HSP_TP_CD
                            AND PT_NO     = A.PT_NO
                            AND MDFM_ID   = A.MDFM_ID
                        )
-- ORDER BY A.MDRC_FOM_SEQ</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>다제내성균 튜닝</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :IN_STR_DT := '2022-01-01';
EXEC :IN_END_DT := '2022-02-08';
EXEC :ATBA_TLR_TP_CD := '001';
EXEC :IN_SCLS_COMN_CD := '';
EXEC :ADS_GUBN := '0';

SELECT /*+ LEADING(A E F B) USE_NL(A E F B C H I J)   */ G.PT_NO
      ,XBIL.FT_PCT_AGE('AUTO_01', SYSDATE, G.PT_BRDY_DT)                                  AGE
      ,G.PT_NM
      ,H.WD_DEPT_CD                                                                       WD_DEPT_CD_NM
      ,H.PRM_NO
      ,H.PT_HME_DEPT_CD                                                                   MED_DEPT_CD_NM
      ,H.TH1_SPCM_CD
      ,C.EXM_CD                                                                           ORD_NM
      ,TO_CHAR(I.ADS_DTM, 'YYYY-MM-DD HH24:MI:SS')  ADS_DT
      ,TO_CHAR(I.DS_DTM, 'YYYY-MM-DD HH24:MI:SS')                                         DS_DTM
      ,TO_CHAR(H.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')                                       ACPT_DTM
      ,TO_CHAR(C.LST_RSLT_VRFC_DTM, 'YYYY-MM-DD')                                         LST_RSLT_VRFC_DTM
      ,(SELECT MVRT_CNTE
        FROM MSELMSYC
        WHERE HSP_TP_CD = A.HSP_TP_CD
          AND MVM_CD = D.MVM_CD)                                                          MVRT_CNTE
      ,D.MVM_CD
      ,E.ATBA_CD
      ,E.ATBA_DMTR_CNTE
      ,E.ATBA_SSBT_RSLT_CNTE
FROM (SELECT * FROM MSELMSID A
 WHERE EXISTS
        (SELECT 1
         FROM MOOPTICC X
         WHERE X.HSP_TP_CD = A.HSP_TP_CD
           AND X.INFC_INF_CD = A.SCLS_COMN_CD_NM
           AND EXISTS
                 (SELECT COMN_CD_NM
                  FROM CCCCCSTE
                  WHERE COMN_GRP_CD = 'DR00108'
                    AND INSTR(UPPER(REPLACE(X.INFC_INF_NM, ' ', '')), UPPER(REPLACE(COMN_CD_NM, ' ', ''))) &gt; 0
                    AND COMN_CD = :ATBA_TLR_TP_CD))) A
    , MSELMCED B
    , MSELMAID C
    , MSELMCRD D
    , MSELMMRD E
    , MSELMSID F
    ,PCTPCPAM_DAMO G
    , MOOOREXM H
    , ACPPRAAM I
WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
  AND A.HSP_TP_CD = B.HSP_TP_CD
  AND A.HSP_TP_CD = C.HSP_TP_CD
  AND A.HSP_TP_CD = D.HSP_TP_CD
  AND A.HSP_TP_CD = E.HSP_TP_CD
  AND A.HSP_TP_CD = F.HSP_TP_CD
  AND A.HSP_TP_CD = H.HSP_TP_CD
  AND A.HSP_TP_CD = I.HSP_TP_CD
  AND A.USE_YN = F.USE_YN
  AND A.USE_YN = 'Y'
  AND C.RSLT_BRFG_YN = 'Y'
  AND D.LN_SEQ = E.LN_SEQ
  AND B.SPCM_NO = C.SPCM_NO
  AND B.SPCM_NO = D.SPCM_NO
  AND B.SPCM_NO = E.SPCM_NO
  AND B.SPCM_NO = H.SPCM_PTHL_NO
  AND B.PT_NO = C.PT_NO
  AND B.PT_NO = G.PT_NO
  AND B.PT_NO = H.PT_NO
  AND B.PT_NO = I.PT_NO
  AND B.ORD_ID = H.ORD_ID
  AND C.ORD_ID = H.ORD_ID
  AND A.LCLS_COMN_CD = 'ANTI'
  AND F.LCLS_COMN_CD = 'ANTI_GUBN'
  AND A.LCLS_COMN_CD = F.TH1_RMK_CNTE
  AND A.TH1_RMK_CNTE = F.SCLS_COMN_CD_NM
  AND A.SCLS_COMN_CD = D.MVM_CD
  AND F.SCLS_COMN_CD = E.ATBA_CD
  AND H.ODDSC_TP_CD = 'C'
  AND H.PACT_ID = I.PACT_ID
  AND NVL(I.APCN_YN, 'N') = 'N'
  AND I.SIHS_YN = 'Y'
  AND H.PACT_TP_CD &lt;&gt; 'O'
  AND C.LST_RSLT_VRFC_DTM BETWEEN TRUNC(TO_DATE( :IN_STR_DT, 'YYYY-MM-DD'))
                              AND TRUNC(TO_DATE( :IN_END_DT, 'YYYY-MM-DD')) + 0.99999
  AND E.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
                                FROM MSELMSID
                                WHERE 1=1 -- HSP_TP_CD = A.HSP_TP_CD
                                  AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
                                  AND HSP_TP_CD = :HIS_HSP_TP_CD
                                  AND USE_YN = 'Y'


AND SCLS_COMN_CD LIKE :IN_SCLS_COMN_CD || '%')
  AND :ADS_GUBN = :ADS_GUBN

UNION ALL

SELECT --/*+ leading(j)  USE_NL(A E F B C H I J D)   */
 G.PT_NO
      ,XBIL.FT_PCT_AGE('AUTO_01', SYSDATE, G.PT_BRDY_DT)                                  AGE
      ,G.PT_NM
      ,H.WD_DEPT_CD                                                                       WD_DEPT_CD_NM
      ,H.PRM_NO
      ,H.PT_HME_DEPT_CD                                                                   MED_DEPT_CD_NM
      ,H.TH1_SPCM_CD
      ,C.EXM_CD                                                                           ORD_NM
      , TO_CHAR(J.ADS_DT, 'YYYY-MM-DD')  ADS_DT
      ,''                                 DS_DTM
      ,TO_CHAR(H.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')                                       ACPT_DTM
      ,TO_CHAR(C.LST_RSLT_VRFC_DTM, 'YYYY-MM-DD')                                         LST_RSLT_VRFC_DTM
      ,(SELECT MVRT_CNTE
        FROM MSELMSYC
        WHERE HSP_TP_CD = A.HSP_TP_CD
          AND MVM_CD = D.MVM_CD)                                                          MVRT_CNTE
      ,D.MVM_CD
      ,E.ATBA_CD
      ,E.ATBA_DMTR_CNTE
      ,E.ATBA_SSBT_RSLT_CNTE
FROM (SELECT *
     FROM MSELMSID A
     WHERE EXISTS
        (SELECT 1
         FROM MOOPTICC X
         WHERE X.HSP_TP_CD = A.HSP_TP_CD
           AND X.INFC_INF_CD = A.SCLS_COMN_CD_NM
           AND EXISTS
                 (SELECT COMN_CD_NM
                  FROM CCCCCSTE
                  WHERE COMN_GRP_CD = 'DR00108'
                    AND INSTR(UPPER(REPLACE(X.INFC_INF_NM, ' ', '')), UPPER(REPLACE(COMN_CD_NM, ' ', ''))) &gt; 0
                    AND COMN_CD = :ATBA_TLR_TP_CD)
         )
     ) A
    ,MSELMCED B
    ,MSELMAID C
    ,MSELMCRD D
    ,MSELMMRD E
    ,MSELMSID F
    ,PCTPCPAM_DAMO G
    ,MOOOREXM H --, ACPPRAAM I
    ,ACPPRETM J
WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
  AND A.HSP_TP_CD = B.HSP_TP_CD
  AND A.HSP_TP_CD = C.HSP_TP_CD
  AND A.HSP_TP_CD = D.HSP_TP_CD
  AND A.HSP_TP_CD = E.HSP_TP_CD
  AND A.HSP_TP_CD = F.HSP_TP_CD
  AND A.HSP_TP_CD = H.HSP_TP_CD
  --AND A.HSP_TP_CD = I.HSP_TP_CD
  AND H.HSP_TP_CD = J.HSP_TP_CD(+)
  AND A.USE_YN = F.USE_YN
  AND A.USE_YN = 'Y'
  AND C.RSLT_BRFG_YN = 'Y'
  AND D.LN_SEQ = E.LN_SEQ
  AND B.SPCM_NO = C.SPCM_NO
  AND B.SPCM_NO = D.SPCM_NO
  AND B.SPCM_NO = E.SPCM_NO
  AND B.SPCM_NO = H.SPCM_PTHL_NO
  AND B.PT_NO = C.PT_NO
  AND B.PT_NO = G.PT_NO
  AND B.PT_NO = H.PT_NO
  --AND B.PT_NO = I.PT_NO
  AND B.PT_NO = J.PT_NO
  AND B.ORD_ID = H.ORD_ID
  AND C.ORD_ID = H.ORD_ID
  AND A.LCLS_COMN_CD = 'ANTI'
  AND F.LCLS_COMN_CD = 'ANTI_GUBN'
  AND A.LCLS_COMN_CD = F.TH1_RMK_CNTE
  AND A.TH1_RMK_CNTE = F.SCLS_COMN_CD_NM
  AND A.SCLS_COMN_CD = D.MVM_CD
  AND F.SCLS_COMN_CD = E.ATBA_CD
  AND H.ODDSC_TP_CD = 'C'
  AND H.PACT_ID = J.PACT_ID
  AND NVL(J.APCN_YN, 'N') = 'N'
  AND J.SIHS_YN = 'Y'
  AND H.PACT_TP_CD &lt;&gt; 'O'
  AND C.LST_RSLT_VRFC_DTM BETWEEN TRUNC(TO_DATE( :IN_STR_DT, 'YYYY-MM-DD'))
                              AND TRUNC(TO_DATE( :IN_END_DT, 'YYYY-MM-DD')) + 0.99999
  AND E.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
                                FROM MSELMSID
                                WHERE 1=1 -- HSP_TP_CD = A.HSP_TP_CD

AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
                                  AND HSP_TP_CD = :HIS_HSP_TP_CD)
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>환자별 검사시행</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.IV.SE.EX.SelectMedExmImplMgmt"&gt;&lt;!--
    Clss : Text
    Desc : 진료실시행가능검사 접수/실시
    Author : 이지케어텍 이재필
    Create date : 2012-11-19
    Update date : 2015-09-02 송준택 ORD_CTG_CD 영상의학과, 핵의학과 제외 처리
       : 2022-01-12 오원빈 조회기간 FROM_TO로 변경
    AsIs : MOEEXAMT_WARD
--&gt;


SELECT /* HIS.MS.IV.SE.EX.SelectMedExmImplMgmt */
       ' '                                                                    CHECKS
     , A.PT_NO                                                                PT_NO
     
     -- 검체검사는 접수일때도 시행으로 
     , CASE WHEN A.ORD_CTG_CD IN ('CP') THEN DECODE(A.EXM_PRGR_STS_CD, 'C', 'E', A.EXM_PRGR_STS_CD)
           ELSE A.EXM_PRGR_STS_CD     
       END                                                                    EXM_PRGR_STS_CD
     -- 검체검사는 접수일때도 시행으로 표기함.
--     , CASE WHEN A.ORD_CTG_CD IN ('CP') THEN DECODE(A.EXM_PRGR_STS_CD, 'X', '오더', 'B', '라벨', 'A', '예약', 'F', '취소','C','시행', 'E', '시행', 'D', '가판독', 'N', '검증') 
--           ELSE DECODE(A.EXM_PRGR_STS_CD, 'X', '오더', 'A', '예약', 'F', '취소','C','접수', 'E', '시행', 'D', '가판독', 'N', '판독') 
--       END                                                                    EXM_PRGR_STS_NM
     
     , CASE WHEN A.ORD_CTG_CD IN ('CP', 'NM') THEN 
               CASE WHEN A.EXM_PRGR_STS_CD = 'B' AND A.RLT_BLCL_DTM IS NOT NULL THEN '채혈'
                   ELSE  XCOM.FT_CCC_CODENAME(A.HSP_TP_CD, '414', A.EXM_PRGR_STS_CD)
               END
           ELSE XCOM.FT_CCC_CODEDTRL(A.HSP_TP_CD, '414', A.EXM_PRGR_STS_CD, '1')
       END                                                                    EXM_PRGR_STS_NM
     
     
     , NVL(A.ORD_CD, ' ')                                                     ORD_CD
     , A.ORD_NM                                                               CD_NM
     , NVL(S.MDFM_ID, NULL)                                                   MDFM_ID
     , ' '                                                                    QUESTION1
     , NVL(A.PT_HME_DEPT_CD, ' ')                                             DEPT_CD
     , XSUP.FT_MSE_NAME_E(A.PT_HME_DEPT_CD, A.HSP_TP_CD)                      DEPT_NM
     , NVL(A.WD_DEPT_CD, ' ')                                                 WARD_CD
     , NVL(S.IPTN_NO, ' ')                                                    IPTN_NO
     , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')                                          ORD_DT
     , A.ORD_SEQ                                                              ORD_SEQ
     , A.RPY_PACT_TP_CD                                                       PACT_TP_CD
     , DECODE(A.RPY_PACT_TP_CD, 'I', '입원', 'O', '외래', 'E', '응급', '')         PACT_TP_NM
     , TO_CHAR(S.PHTG_DTM , 'YYYY-MM-DD')                                     PHTG_DTM
     , TO_CHAR(S.MDFM_FOM_SEQ)                                                MDFM_FOM_SEQ
     , TO_CHAR(S.FORM_INPT_NOTM)                                              FORM_INPT_NOTM
     , A.ORD_ID                                                               ORD_ID
     , A.RPY_STS_CD                                                           RPY_STS_CD
     , CASE WHEN A.ORD_CTG_CD = 'CP' AND A.ORD_SLIP_CTG_CD = 'LT' THEN 'Y' -- 진검 현장검사 시행처리를 위해서 진료실시행여부를 무조건 Y로 조회함.
            ELSE B.MTM_IMPL_PSB_YN
       END                                                                    MTM_IMPL_PSB_YN
     , DECODE(B.MTM_IMPL_PSB_YN,'N','검사실시행','') || DECODE(ORD_RMK_CNTE, NULL, '', ' - ' || ORD_RMK_CNTE)        RMK_CNTE
     , A.ODDSC_TP_CD
     --, (SELECT COMN_CD_NM FROM CCCCCSTE WHERE COMN_GRP_CD = 'DR00039' AND COMN_CD = A.ODDSC_TP_CD) ODDSC_TP_CD_NM
     , DECODE(A.ODDSC_TP_CD, 'D', 'Y', 'H', 'H')                              ODDSC_TP_CD_NM
     , TO_CHAR(A.EXRM_HH_DTM,'YYYY-MM-DD HH24:MI:SS')   RTM_FMT_DTM
     , XSUP.FT_MSE_D_NAME (A.HSP_TP_CD, A.ANDR_STF_NO)          ANDR_STF_NM     
  FROM MOOOREXM A
     , MSERMMMC B
     , MSERMAAD S
 WHERE A.PT_NO = :PT_NO
   AND A.ORD_DT BETWEEN TO_DATE(:ORD_STR_DT,'YYYY-MM-DD') AND TO_DATE(:ORD_END_DT,'YYYY-MM-DD') + 0.99999
   --AND A.ORD_DT BETWEEN TO_DATE('2022-01-01','YYYY-MM-DD') AND TO_DATE(:ORD_DT,'YYYY-MM-DD') + 0.99999 
   AND NVL(A.ODDSC_TP_CD, 'C')  IN ('C','D')
   AND (A.ORD_CTG_CD NOT IN ('CP','NM','PA','BR1','BN1','RT4') OR (A.ORD_CTG_CD = 'CP' AND A.ORD_SLIP_CTG_CD = 'LT'))
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
   AND A.ORD_CD    = B.EXM_CD(+)
   AND A.HSP_TP_CD = B.HSP_TP_CD(+)
   --AND B.MTM_IMPL_PSB_YN = 'Y'
   AND A.ORD_ID    = S.ORD_ID(+)
   AND A.HSP_TP_CD = S.HSP_TP_CD(+)

ORDER BY DEPT_CD, WARD_CD, ORD_CD, EXM_PRGR_STS_NM

&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>가판독변경 </QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '01';
EXEC :PT_NO :='10448288';
SELECT C.CD_NM,B.ORD_ID,B.ACPT_DTM,B.PHTG_DTM,A.*
 FROM MRDDRPLD A --의무기록출력로그정보
    , MSERMAAD B
    , MSERMMMC C
WHERE 1=1
AND A.HSP_TP_CD = B.HSP_TP_CD
AND A.HSP_TP_CD = C.HSP_TP_CD
AND A.HSP_TP_CD = :HSP_TP_CD
AND A.PT_NO = :PT_NO
AND A.PT_NO = B.PT_NO
--AND A.PRNT_ASK_NO_NM = '20222493888'
AND A.REC_CLS_CD = 'EX'
AND A.REC_CLS_DTL_CD = 'EX_PICTURE'
AND A.PRNT_ASK_NO_NM = B.IPTN_NO
AND B.ORD_CD = C.EXM_CD
AND TRUNC(B.ACPT_DTM) = '20220207'
--AND C.CD_NM LIKE '%MRI%'
--AND B.ORD_CD LIKE 'RM%'
ORDER BY A.PRNT_DTM
;
DECLARE
 V_EXM_PRGR_STS_CD VARCHAR2(10) :='';
BEGIN
 FOR REC IN
 (
SELECT DISTINCT ORD_ID
 FROM MRDDRPLD A --의무기록출력로그정보
    , MSERMAAD B
    , MSERMMMC C
WHERE 1=1
AND A.HSP_TP_CD = B.HSP_TP_CD
AND A.HSP_TP_CD = C.HSP_TP_CD
AND A.HSP_TP_CD = :HSP_TP_CD
AND A.PT_NO = :PT_NO
AND A.PT_NO = B.PT_NO
--AND A.PRNT_ASK_NO_NM = '20222493888'
AND A.REC_CLS_CD = 'EX'
AND A.REC_CLS_DTL_CD = 'EX_PICTURE'
AND A.PRNT_ASK_NO_NM = B.IPTN_NO
AND B.ORD_CD = C.EXM_CD
AND TRUNC(B.ACPT_DTM) = '20220207'
--AND C.CD_NM LIKE '%MRI%'
--AND B.ORD_CD LIKE 'RM%'
 )
 LOOP
  BEGIN
   SELECT EXM_PRGR_STS_CD
     INTO V_EXM_PRGR_STS_CD
       FROM MOOOREXM
      WHERE HSP_TP_CD = :HSP_TP_CD
        AND ORD_ID = REC.ORD_ID
        ;
  END;
  IF V_EXM_PRGR_STS_CD = 'N' THEN
   UPDATE MOOOREXM
      SET EXM_PRGR_STS_CD = 'D'
      WHERE HSP_TP_CD = :HSP_TP_CD
        AND ORD_ID = REC.ORD_ID
        ;
   UPDATE MSERMAAD
      SET EXM_PRGR_STS_CD = 'D'
    WHERE HSP_TP_CD = :HSP_TP_CD
      AND ORD_ID = REC.ORD_ID
      ;
   ELSIF V_EXM_PRGR_STS_CD = 'D' THEN
   UPDATE MOOOREXM
      SET EXM_PRGR_STS_CD = 'N'
      WHERE HSP_TP_CD = :HSP_TP_CD
        AND ORD_ID = REC.ORD_ID
        ;
   UPDATE MSERMAAD
      SET EXM_PRGR_STS_CD = 'N'
    WHERE HSP_TP_CD = :HSP_TP_CD
      AND ORD_ID = REC.ORD_ID
      ;
   END IF;
 END LOOP;
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>판독변경</QUERY_NAME>
    <QUERY_TEXT>exec :HIS_HSP_TP_CD := '01';
exec :IN_ORD_ID := '';
update mooorexm
 set exm_Prgr_sts_cd = 'N'
 where hsp_tp_cd = :HIS_HSP_TP_CD
   AND ord_id = :IN_ORD_ID
   ;
update msermaad
   set exm_prgr_sts_cd = 'N'
 where hsp_tp_cd = :HIS_HSP_TP_CD
   AND ord_id = :IN_ORD_ID
   ;    </QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>마이그 처방 검사의뢰서 매핑</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '01';
EXEC :IN_PT_NO := '19870326';
EXEC :ORD_DT := '2022-03-22';   --현재 처방일(검사의뢰서 작성한 처방일)
EXEC :MIG_ORD_DT :='2021-12-21'; --마이그 처방의 처방일
EXEC :ORD_CD := 'RU08011';
SELECT *
 FROM MOOOREXM
 WHERE HSP_TP_CD = :HSP_TP_CD
 AND PT_NO = :IN_PT_NO
 AND ORD_CTG_CD ='BR1'
;
DECLARE
 V_IPPR_ID  VARCHAR2(4000);
BEGIN
 BEGIN
  SELECT IPPR_ID
    INTO V_IPPR_ID
    FROM MSERMMCD
   WHERE HSP_TP_CD = :HSP_TP_CD
     AND PT_NO = :IN_PT_NO
     AND TRUNC(ORD_DT) = :ORD_DT
     AND ORD_CD = :ORD_CD
     AND NOT EXISTS( SELECT 1
                       FROM MSERMMCD
                      WHERE HSP_TP_CD = :HSP_TP_CD
                        AND PT_NO = :IN_PT_NO
               AND TRUNC(ORD_DT) = :MIG_ORD_DT
               AND ORD_CD = :ORD_CD
            )
     ;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
   RETURN;
 END;
 BEGIN
  UPDATE MOOOREXM
    SET EXM_RFFM_IPTN_NO = V_IPPR_ID
    WHERE HSP_TP_CD = :HSP_TP_CD
      AND PT_NO = :IN_PT_NO
      AND TRUNC(ORD_DT) = :MIG_ORD_DT
      AND ORD_CD = :ORD_CD
      ;
 END;
 BEGIN
  UPDATE MSERMMCD
   SET ORD_DT  = :MIG_ORD_DT
   WHERE HSP_TP_CD = :HSP_TP_CD
     AND PT_NO = :IN_PT_NO
     AND TRUNC(ORD_DT) = :ORD_DT
     AND ORD_CD = :ORD_CD
     ;
 END;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>통합결과조회</QUERY_NAME>
    <QUERY_TEXT>SELECT A.*
  FROM MSMRAMMD A -- 통합결과메뉴관리정보
 WHERE 1=1
 --   AND ROWNUM &lt; 100
 and hsp_tp_cd = '01'
 and grp_cd = 'DR'
 and menu_cd in('DR-12','DR-10')
;
select *
 from MSMRAPMD --통합결과매개변수관리정보
 where hsp_tp_Cd='01'
 and menu_cd in('DR-12','DR-10')</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>WPF 템플릿컬럼 정렬방법(Template)</QUERY_NAME>
    <QUERY_TEXT>--정렬을 원하는 TemplateColumn에 SortMemberPath를 걸어주면 정렬이 된다.

&lt;HDataGridTemplateColumn Header="예약일" SortMemberPath="OP_EXPT_DT"&gt;
                                &lt;HDataGridTemplateColumn.CellTemplate&gt;
                                    &lt;DataTemplate&gt;
                                        &lt;HDatePicker HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" DateTimeFormat="Date" CalendarType="DateCalendar" 
                                                   SelectedDate="{Binding Path=OP_EXPT_DT, StringFormat=\{0:yyyy-MM-dd\}, UpdateSourceTrigger=PropertyChanged}"/&gt;
                                    &lt;/DataTemplate&gt;
                                &lt;/HDataGridTemplateColumn.CellTemplate&gt;
                                &lt;HDataGridTemplateColumn.CellEditingTemplate&gt;
                                    &lt;DataTemplate&gt;
                                        &lt;HDatePicker HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" DateTimeFormat="Date" CalendarType="DateCalendar" 
                                                   SelectedDate="{Binding Path=OP_EXPT_DT, StringFormat=\{0:yyyy-MM-dd\}, UpdateSourceTrigger=PropertyChanged}"/&gt;
                                    &lt;/DataTemplate&gt;
                                &lt;/HDataGridTemplateColumn.CellEditingTemplate&gt;
                            &lt;/HDataGridTemplateColumn&gt;

</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>환자번호 통합 </QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '01';
EXEC :OLD_PT_NO_1:= '06300396';
EXEC :OLD_PT_NO_2:= '14468118';
EXEC :OLD_PT_NO_3:= '21241546';
EXEC :OLD_PT_NO_4:= '17436518';
EXEC :OLD_PT_NO_5:= '07049081';
--EXEC :OLD_PT_NO_6:= '10447378';
--EXEC :OLD_PT_NO_7:= '10448501';
EXEC :OLD_PT_NO_8:= '04010466';

EXEC :NEW_PT_NO_1:= '13469239';
EXEC :NEW_PT_NO_2:= '19017973';
EXEC :NEW_PT_NO_3:= '16867278';
EXEC :NEW_PT_NO_4:= '23547272';
EXEC :NEW_PT_NO_5:= '05098502';
--EXEC :NEW_PT_NO_6:= '10448501';
--EXEC :NEW_PT_NO_7:= '10447378';
EXEC :NEW_PT_NO_8:= '04614577';

select *
 from msermaad
 where hsp_tp_CD='01'
 and pt_no in (
 :OLD_PT_NO_1
 ,:OLD_PT_NO_2
 ,:OLD_PT_NO_3
 ,:OLD_PT_NO_4
 ,:OLD_PT_NO_5
 ,:OLD_PT_NO_6
 ,:OLD_PT_NO_7
 ,:OLD_PT_NO_8
 );
select *
 from MSERMMCD
 where hsp_tp_CD='01'
 and pt_no in (
 :OLD_PT_NO_1
 ,:OLD_PT_NO_2
 ,:OLD_PT_NO_3
 ,:OLD_PT_NO_4
 ,:OLD_PT_NO_5
 ,:OLD_PT_NO_6
 ,:OLD_PT_NO_7
 ,:OLD_PT_NO_8
 );
;
select *
 from MSERMRRD
 where hsp_tp_CD='01'
 and pt_no in (
 :OLD_PT_NO_1
 ,:OLD_PT_NO_2
 ,:OLD_PT_NO_3
 ,:OLD_PT_NO_4
 ,:OLD_PT_NO_5
 ,:OLD_PT_NO_6
 ,:OLD_PT_NO_7
 ,:OLD_PT_NO_8
 );
;
select *
 from MSERMDDD
 where hsp_tp_CD='01'
 and pt_no in (
 :OLD_PT_NO_1
 ,:OLD_PT_NO_2
 ,:OLD_PT_NO_3
 ,:OLD_PT_NO_4
 ,:OLD_PT_NO_5
 ,:OLD_PT_NO_6
 ,:OLD_PT_NO_7
 ,:OLD_PT_NO_8
 );
;
select *
 from HINF.MSERMINF_ORR
 where 1=1
 and patid in (
 :OLD_PT_NO_1
 ,:OLD_PT_NO_2
 ,:OLD_PT_NO_3
 ,:OLD_PT_NO_4
 ,:OLD_PT_NO_5
 ,:OLD_PT_NO_6
 ,:OLD_PT_NO_7
 ,:OLD_PT_NO_8
 );
select *
 from HINF.MSERMINF_ORU
 where 1=1
 and patid in (
 :OLD_PT_NO_1
 ,:OLD_PT_NO_2
 ,:OLD_PT_NO_3
 ,:OLD_PT_NO_4
 ,:OLD_PT_NO_5
 ,:OLD_PT_NO_6
 ,:OLD_PT_NO_7
 ,:OLD_PT_NO_8
 );

--검사접수
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_1
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_1
;
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_2
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_2
;
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_3
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_3
;
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_4
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_4
;
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_5
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_5
;
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_6
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_6
;
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_7
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_7
;
UPDATE MSERMAAD
 SET PT_NO = :NEW_PT_NO_8
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_8
;           
--혈관조영술 
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_1
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_1
;
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_2
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_2
;
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_3
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_3
;
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_4
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_4
;
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_5
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_5
;
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_6
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_6
;
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_7
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_7
;
UPDATE MSERMROD
 SET PT_NO = :NEW_PT_NO_8
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_8
;
------ 검사 의뢰서 
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_1
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_1
;
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_2
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_2
;
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_3
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_3
;
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_4
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_4
;
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_5
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_5
;
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_6
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_6
;
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_7
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_7
;
UPDATE MSERMMCD
 SET PT_NO = :NEW_PT_NO_8
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_8
;
---- 예약
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_1
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_1
;
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_2
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_2
;
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_3
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_3
;
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_4
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_4
;
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_5
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_5
;
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_6
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_6
;
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_7
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_7
;
UPDATE MSERMRRD
 SET PT_NO = :NEW_PT_NO_8
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_8
;
-----   영상판독 
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_1
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_1
;
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_2
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_2
;
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_3
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_3
;
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_4
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_4
;
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_5
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_5
;
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_6
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_6
;
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_7
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_7
;
UPDATE MSERMDDD
 SET PT_NO = :NEW_PT_NO_8
 WHERE HSP_TP_CD = :HSP_TP_CD
   AND PT_NO = :OLD_PT_NO_8
;
---- 팍스 오더 
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_1
 WHERE 1=1
   AND PATID = :OLD_PT_NO_1
;
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_2
 WHERE 1=1
   AND PATID = :OLD_PT_NO_2
;
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_3
 WHERE 1=1
   AND PATID = :OLD_PT_NO_3
;
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_4
 WHERE 1=1
   AND PATID = :OLD_PT_NO_4
;
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_5
 WHERE 1=1
   AND PATID = :OLD_PT_NO_5
;
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_6
 WHERE 1=1
   AND PATID = :OLD_PT_NO_6
;
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_7
 WHERE 1=1
   AND PATID = :OLD_PT_NO_7
;
UPDATE HINF.MSERMINF_ORR
 SET PATID = :NEW_PT_NO_8
 WHERE 1=1
   AND PATID = :OLD_PT_NO_8
;
----   팍스결과 
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_1
 WHERE 1=1
   AND PATID = :OLD_PT_NO_1
;
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_2
 WHERE 1=1
   AND PATID = :OLD_PT_NO_2
;
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_3
 WHERE 1=1
   AND PATID = :OLD_PT_NO_3
;
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_4
 WHERE 1=1
   AND PATID = :OLD_PT_NO_4
;
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_5
 WHERE 1=1
   AND PATID = :OLD_PT_NO_5
;
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_6
 WHERE 1=1
   AND PATID = :OLD_PT_NO_6
;
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_7
 WHERE 1=1
   AND PATID = :OLD_PT_NO_7
;
UPDATE HINF.MSERMINF_ORU
 SET PATID = :NEW_PT_NO_8
 WHERE 1=1
   AND PATID = :OLD_PT_NO_8
;




</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>심사 </QUERY_NAME>
    <QUERY_TEXT>SELECT A.SIHS_YN    -- 재원여부
     , A.ADS_DT     -- 입원일자
     , A.DS_EXPT_DT -- 퇴원예정일자    --&gt; NULL --&gt; 퇴원예정일자
     , A.BSCR_TP_CD -- 사전심사구분코드 --&gt; P -&gt; N
     , A.*
  FROM ACPPRAAM A -- 입원접수기본
 WHERE 1=1
   AND A.PT_NO  = '10440220'
   ;

-- BSCR_TP_CD - 사전심사구분
-- PA206 T 가퇴원
-- PA206 I 심사중
-- PA206 N 미심사
-- PA206 P 심사완료



* 보험심사가 완료된 환자입니다.
SELECT DECODE(NVL(A.BSCR_TP_CD, 'N'), 'I', 'N'  --2013.10.01 임재득 추가
                                    , 'P', 'P'
                                    , 'N') SIMSAYN
       -- INTO G_SIMSAYN
     , A.BSCR_TP_CD
     , A.*
  FROM ACPPRAAM A
 WHERE A.PT_NO  = '10440220'
   AND A.ADS_DT  = (SELECT MAX(B.ADS_DT) FROM ACPPRAAM B WHERE B.PT_NO = A.PT_NO AND B.HSP_TP_CD = '01')   --2018.12.11 병원구분코드추가
   AND A.SIHS_YN  = 'Y'
   AND A.HSP_TP_CD = '01'
   AND A.DS_EXPT_DT IS NOT NULL;
   ;</QUERY_TEXT>
    <GROUP>심사</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>소모재료 사용내역 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_SHOTDTE1 := '2022-01-01';
EXEC :IN_SHOTDTE2 := '2022-01-31';
EXEC :IN_LABRM_CD := 'ALL';
EXEC :IN_IEXM_KND_CD := 'ALL';
EXEC :IN_ORD_CTG_CD := 'BR1';
EXEC :PT_NO := '';
EXEC :EXM_CD := '';
EXEC :ORD_CD := '';
EXEC :HIS_HSP_TP_CD := '01';
EXEC :CNMD_INF_CD := 'ALL';

SELECT /*+ USE_NL ( A B C D E F ) */
       /* HIS.MS.IV.SD.ST.SelectConsumeMaterialUseParticulars */
       A.PT_NO                                                                            PT_NO
     , C.PT_NM                                                                            PT_NM
     , TO_CHAR(TRUNC((MONTHS_BETWEEN(SYSDATE, C.PT_BRDY_DT))/12)) || '/' || C.SEX_TP_CD   AGE
     , A.WD_DEPT_CD  || '/' || A.MED_DEPT_CD                                              DEPT
     , D.EXM_CD                     EXM_CD
     , D.CD_NM                                                                            CD_NM
     , E.ORD_CD                     ORD_CD
     , E.ORD_NM                                                                           ORD_NM
     , SUM(NVL(B.USE_QTY, 0) + NVL(B.RPY_USE_QTY, 0))                                     AMT
     , A.EXRM_SRES_NO                                                                     EXRM_SRES_NO
     , A.DISK_NO                                                                          DISK_NO
     , DECODE(A.EXM_PRGR_STS_CD, 'R', 'REPEAT', '')                                       NOTE
     , B.SGL_MIF_CD                                                                       SGL_MIF_CD
     , B.OAN_TP_CD                                                                        OAN_TP_CD
     , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')                                                    ORD_DT
     , TO_CHAR(A.PHTG_DTM, 'YYYY-MM-DD HH24:MI:SS')                                       PHTG_DTM
  FROM MSERMAAD       A
     , MSERMAMD       B
     , PCTPCPAM_DAMO  C
     , MSERMMMC       D
     , CCOOCBAC       E
     , MSERMMRD       F
 WHERE A.PHTG_DTM BETWEEN TO_DATE(:IN_SHOTDTE1, 'YYYY-MM-DD HH24:MI:SS')
                      AND TO_DATE(:IN_SHOTDTE2, 'YYYY-MM-DD HH24:MI:SS') --+ 0.99999
   AND A.EXRM_TP_CD LIKE DECODE(:IN_LABRM_CD,'ALL','', :IN_LABRM_CD) || '%'
   AND F.IEXM_KND_CD LIKE DECODE(:IN_IEXM_KND_CD,'ALL','', :IN_IEXM_KND_CD) || '%'
   AND A.EXRM_TP_CD = F.EXRM_TP_CD
   AND A.ORD_CTG_CD = :IN_ORD_CTG_CD
   AND A.PT_NO = NVL(:PT_NO, A.PT_NO)
   AND D.EXM_CD = NVL(:EXM_CD, D.EXM_CD)
   AND E.ORD_CD = NVL(:ORD_CD, E.ORD_CD)
   AND A.ORD_ID = B.ORD_ID
   AND A.PT_NO = C.PT_NO
   AND A.ORD_CD = D.EXM_CD
   AND B.SGL_MIF_CD = E.ORD_CD
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
   AND B.HSP_TP_CD = :HIS_HSP_TP_CD
   AND D.HSP_TP_CD = :HIS_HSP_TP_CD
   AND E.HSP_TP_CD = :HIS_HSP_TP_CD
   AND F.HSP_TP_CD = :HIS_HSP_TP_CD
   AND NVL(B.RPY_STS_CD,'N') &lt;&gt; 'R'
   AND B.SGL_MIF_CD = DECODE(:CNMD_INF_CD,'ALL',B.SGL_MIF_CD,:CNMD_INF_CD)
  AND A.ORD_ID = B.ORD_ID
  AND B.ORD_ID IN ('152259154')
 GROUP BY
       A.PT_NO
     , C.PT_NM
     , TO_CHAR(TRUNC((MONTHS_BETWEEN(SYSDATE, C.PT_BRDY_DT))/12)) || '/' || C.SEX_TP_CD
     , A.WD_DEPT_CD  || '/' || A.MED_DEPT_CD
     , D.EXM_CD
     , D.CD_NM
     , E.ORD_CD
     , E.ORD_NM
     , A.EXRM_SRES_NO
     , A.DISK_NO
     , DECODE(A.EXM_PRGR_STS_CD, 'R', 'REPEAT', '')
     , B.SGL_MIF_CD
     , B.OAN_TP_CD
     , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')
     , TO_CHAR(A.PHTG_DTM, 'YYYY-MM-DD HH24:MI:SS')

HAVING SUM(NVL(B.USE_QTY, 0) + NVL(B.RPY_USE_QTY, 0)) &lt;&gt; 0
ORDER BY A.PT_NO
</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>심사 계산 </QUERY_NAME>
    <QUERY_TEXT>SELECT DMD_ID, A.MED_DEPT_CD, A.* FROM ACPPEOCE A
 WHERE DMD_ID IN (
516866,
529538
) AND HSP_TP_CD = '01';
;</QUERY_TEXT>
    <GROUP>심사</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>퇴원환자 수납하는 방법</QUERY_NAME>
    <QUERY_TEXT>--심사를 풀고 진료비처방관리에서 환자번호 입력 후 처방일 정해서 돌리면 계산된다고 함.</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재료 심사 테스트 </QUERY_NAME>
    <QUERY_TEXT>select *
 from mooorexm
 where hsp_tp_cd='01'
 and pt_no ='10440998'
 and rsv_dtm &gt;  sysdate
;
select rtm_Fmt_dtm,a.*
 from msermamd a
 where hsp_Tp_cd='01'
 and ord_Id ='150224178'
;
select rtm_fmt_dtm,a.*
 from mooorfed a
     ,mooorptd  b
     where a.hsp_tp_cd ='01'
     and a.hsp_tp_Cd = b.hsp_tp_cd
     and a.ord_Id = b.ord_Id
     and b.rel_ord_Id ='150224178'
    and a.oddsc_tp_cd ='C'




-- 9999-12-31

select *
 from mooorexm
 where hsp_tp_cd='01'
 and pt_no ='10441064'
 and rsv_dtm &gt;  sysdate
;
select rtm_Fmt_dtm,rpy_sts_cd,a.*
 from msermamd a
 where hsp_Tp_cd='01'
 and ord_Id ='150224194'
;
select rtm_fmt_dtm,a.*
 from mooorfed a
     ,mooorptd  b
     where a.hsp_tp_cd ='01'
     and a.hsp_tp_Cd = b.hsp_tp_cd
     and a.ord_Id = b.ord_Id
     and b.rel_ord_Id ='150224194'
    and a.oddsc_tp_cd ='C'


---외래
select *
 from mooorexm
 where hsp_tp_cd='01'
 and pt_no ='07866799'
 and rsv_dtm &gt;  sysdate
;
select rtm_Fmt_dtm,rpy_sts_cd,a.*
 from msermamd a
 where hsp_Tp_cd='01'
 and ord_Id ='MIG_OP_01_07866799_20210831_URO_RD_RC101EP_0'
;
select rtm_fmt_dtm,a.*
 from mooorfed a
     ,mooorptd  b
     where a.hsp_tp_cd ='01'
     and a.hsp_tp_Cd = b.hsp_tp_cd
     and a.ord_Id = b.ord_Id
     and b.rel_ord_Id ='MIG_OP_01_07866799_20210831_URO_RD_RC101EP_0'
    and a.oddsc_tp_cd ='C'


--외래 9999-12-31
select *
 from mooorexm
 where hsp_tp_cd='01'
 and pt_no ='24220261'
 and rsv_dtm &gt;  sysdate
;
select rtm_Fmt_dtm,rpy_sts_cd,a.*
 from msermamd a
 where hsp_Tp_cd='01'
 and ord_Id ='MIG_OP_01_24220261_20210908_GI_RD_RC203DP_0'
;
select rtm_fmt_dtm,a.*
 from mooorfed a
     ,mooorptd  b
     where a.hsp_tp_cd ='01'
     and a.hsp_tp_Cd = b.hsp_tp_cd
     and a.ord_Id = b.ord_Id
     and b.rel_ord_Id ='MIG_OP_01_24220261_20210908_GI_RD_RC203DP_0'
    and a.oddsc_tp_cd ='C'</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사의뢰서 파라미터 컬럼추가</QUERY_NAME>
    <QUERY_TEXT>SELECT PT_NO
       , (SELECT TO_CHAR(MDFM_ID)
          FROM CCOOCBAC
         WHERE HSP_TP_CD = A.HSP_TP_CD
           AND ORD_CD    = A.ORD_CD)   MDFM_ID --검사의뢰서
       , A.EXM_RFFM_IPTN_NO         IPPR_ID --처방시 작성한 검사의뢰서 판독번호
FROM MOOOREXM A</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>외래병동 리스트</QUERY_NAME>
    <QUERY_TEXT>--외래
SELECT B.DEPT_CD , B.DEPT_NM
  FROM PDEDBRTD A
      ,PDEDBMSM B
 WHERE A.DUTY_REL_CD = 'HSPCOMN'
   AND A.HSP_TP_CD = '01'
   AND A.HSP_TP_CD = B.HSP_TP_CD
   AND A.OWN_IFY_NO = B.DEPT_CD
 ;
--병동
SELECT B.DEPT_CD , B.DEPT_NM,
       CASE WHEN A.TH1_DUTY_REL_RULE_NM = '01'
            THEN '병동'
            WHEN A.TH1_DUTY_REL_RULE_NM = '02'
            THEN '중환자실'
            END WD
  FROM PDEDBRTD A
      ,PDEDBMSM B
 WHERE A.DUTY_REL_CD = 'HSPWD'
   AND A.HSP_TP_CD = '01'
   AND A.HSP_TP_CD = B.HSP_TP_CD
   AND A.OWN_IFY_NO = B.DEPT_CD
 ;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진료서식 구성정보 </QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :MDFM_ID := '2005383';
EXEC :MDFM_CPEM_NO := '423E1FA0-D1FF-4C32-B9E5-2738D566B1F1';
SELECT *
 FROM MRFMFORM A --진료서식기본
   , MRFMFCID B --진료서식 구성정보
 WHERE A.HSP_TP_CD IN (:HIS_HSP_TP_CD,'99')
 AND A.HSP_TP_CD = B.HSP_TP_CD
 AND A.MDFM_ID =:MDFM_ID
 AND A.MDFM_ID = B.MDFM_ID
 AND A.MDFM_FOM_SEQ = B.MDFM_FOM_SEQ
 AND A.LST_YN = 'Y'
 AND B.MDFM_CPEM_NO =   :MDFM_CPEM_NO</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사코드 생성</QUERY_NAME>
    <QUERY_TEXT>exec :exm_cd := 'NM02054';
exec :nextg_fmr_exm_Cd := '';
exec :cd_nm := 'PET-CT(Ga-68 PSMA-11)';
exec :kor_cd_Nm := 'PET-CT(Ga-68 전립선특이막항원-11)';
insert into msermmmc
  (hsp_tp_cd
  ,ord_Ctg_Cd
  ,mif_cd
  ,dept_cd
  ,mdfm_id
  ,end_dt
  ,end_dtm
  ,exm_cd
  ,nextg_fmr_exm_cd
  ,cd_nm
  ,KOR_EXM_NM
  ,ord_slip_ctg_cd
  ,mdal_knd_cd
  ,iptn_rm_nm
  ,exrm_tp_cd
  ,pt_guid_plc_cd
  ,capn_cnte
  ,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR
  )
  select '01',ORD_CTG_CD,'P999900',DEPT_CD,MDFM_ID,to_date(to_char(sysdate,'yyyy-mm-dd'),'yyyy-mm-dd'),sysdate,:exm_cd,:nextg_fmr_exm_cd,:CD_NM,:kor_cd_Nm,ORD_SLIP_CTG_CD,MDAL_KND_CD,IPTN_RM_NM,EXRM_TP_CD,PT_GUID_PLC_CD
  ,null
  ,sysdate,'SSSUP11','Golden.exe','0.0.0.0',sysdate,'SSSUP11','Golden.exe','0.0.0.0'
  from msermmmc
  where hsp_Tp_Cd = '01'
  and ord_Ctg_cd = 'BN1'
  and exm_cd = 'NM02053'
;
select nextg_fmr_exm_Cd,end_dt,end_dtm,pt_guid_plc_Cd,a.*
 from msermmmc            a
 where hsp_Tp_CD ='01'
 and exm_cd like  'NM05%'
 and ord_Ctg_Cd ='BN1'
 order by exm_cd desc
--and exm_cd in('NM01047','NM01045')
--and ord_slip_Ctg_Cd = 'NMA'
--and cd_nm ='Whole Body PET-CT (F-18 FDG) (그룹)'
;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>손위생 조회 쿼리</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.IF.IF.HS.SelectHandWashingData"&gt;&lt;!--
    Clss :  [text] (쿼리유형)
    Desc : 직원손위생 조회.
    Author : 이지케어텍 권정윤. 
    Create date : 2016-05-13
    Update date : 2016-05-13 
--&gt;
SELECT /*+ HIS.MC.IF.IF.HS.SelectHandWashingData */
       A.STF_HND_HYGN_OBSR_REG_ID
      ,A.HST_SEQ
      ,A.HAHY_OBSR_TP_CD
      ,DECODE(A.HAHY_OBSR_TP_CD, '0', '정규', '1', '블라인드', '') HAHY_OBSR_TP_NM
      ,A.HAHY_OBSR_REC_DGM_NO
      ,A.OBSR_STF_NM
      ,A.OBSR_STF_NO
      ,A.OBSR_DT
      ,A.OBSR_STR_DTM
      ,A.OBSR_END_DTM
      ,TO_CHAR(A.OBSR_STR_DTM, 'YYYY-MM-DD HH24:MI') || ' ~ ' || TO_CHAR(A.OBSR_END_DTM, 'HH24:MI') OBSR_STR_END_DTM
      ,A.GLVS_WEAR_YN
      ,DECODE(A.GLVS_WEAR_YN, 'Y', '착용', 'N', '미착용', '') GLVS_WEAR_YN_NM
      ,A.HAHY_OBSR_PLC_TP_CD
      ,B.CODE_NM   HAHY_OBSR_PLC_TP_CD_NM
      ,A.HAHY_OBSR_PLC_CD
      ,XMED.FT_MOO_GET_COMN_CD_NAME('N0011030',A.HAHY_OBSR_PLC_CD,'Y' ) HAHY_OBSR_PLC_CD_NM
      ,A.OBSR_TGT_STF_NM
      ,A.OBSR_TGT_STF_NO
      ,A.HAHY_STF_OCTY_CD
      ,XMED.FT_MOO_GET_COMN_CD_NAME('N0011032',A.HAHY_STF_OCTY_CD,'Y' ) HAHY_STF_OCTY_CD_NM
      ,A.HAHY_STF_OCTY_DTL_CD
      ,XMED.FT_MOO_GET_COMN_CD_NAME('N0011033',A.HAHY_STF_OCTY_DTL_CD,'Y' ) HAHY_STF_OCTY_DTL_CD_NM
      ,A.HND_HYGN_STF_OCTY_DTL_ETC_CNTE
      ,A.MED_DEPT_CD
      ,XMED.FT_MOO_DEPTNM(A.MED_DEPT_CD, 'H', A.HSP_TP_CD) MED_DEPT_CD_NM
      ,A.HAHY_NCS_ACT_CD
      ,A.HAHY_NCS_ACT_TH2_CD
      ,A.HAHY_NCS_ACT_TH3_CD
      ,A.HAHY_NCS_ACT_TH4_CD
      ,A.HAHY_NCS_ACT_TH5_CD      
--      ,XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_CD,'Y' ) HAHY_NCS_ACT_CD_NM
   , XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_CD,'Y' )
    || CASE WHEN (A.HAHY_NCS_ACT_CD IS NOT NULL) AND A.HAHY_NCS_ACT_TH2_CD IS NOT NULL THEN ', ' || XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH2_CD,'Y' ) ELSE XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH2_CD,'Y' ) END
    || CASE WHEN (A.HAHY_NCS_ACT_CD IS NOT NULL OR HAHY_NCS_ACT_TH2_CD IS NOT NULL) AND A.HAHY_NCS_ACT_TH3_CD IS NOT NULL THEN ', ' || XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH3_CD,'Y' ) ELSE XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH3_CD,'Y' ) END
    || CASE WHEN (A.HAHY_NCS_ACT_CD IS NOT NULL OR HAHY_NCS_ACT_TH2_CD IS NOT NULL OR HAHY_NCS_ACT_TH3_CD IS NOT NULL) AND A.HAHY_NCS_ACT_TH4_CD IS NOT NULL THEN ', ' || XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH4_CD,'Y' ) ELSE XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH4_CD,'Y' ) END
    || CASE WHEN (A.HAHY_NCS_ACT_CD IS NOT NULL OR HAHY_NCS_ACT_TH2_CD IS NOT NULL OR HAHY_NCS_ACT_TH3_CD IS NOT NULL OR A.HAHY_NCS_ACT_TH4_CD IS NOT NULL) AND A.HAHY_NCS_ACT_TH5_CD IS NOT NULL THEN ', ' || XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH5_CD,'Y' ) ELSE XMED.FT_MOO_GET_COMN_CD_NAME('N0011034',A.HAHY_NCS_ACT_TH5_CD,'Y' ) END
    HAHY_NCS_ACT_CD_NM
      ,A.HND_HYGN_NCS_ACT_DTL_CNTE
      ,A.CFMT_STF_NM
      ,CASE WHEN A.RPLY_DT IS NULL THEN 'N'
            ELSE 'Y'
       END RPLY_YN
      ,TO_CHAR(A.RPLY_DT,'YYYY-MM-DD') RPLY_DT
      ,A.HAHY_RPLY_CD
      ,XMED.FT_MOO_GET_COMN_CD_NAME('N0011035',A.HAHY_RPLY_CD,'Y' )  HAHY_RPLY_CD_NM
      ,A.HAHY_OBSR_RSLT_CD
      ,XMED.FT_MOO_GET_COMN_CD_NAME('N0011036',A.HAHY_OBSR_RSLT_CD,'Y' ) HAHY_OBSR_RSLT_CD_NM
      ,SMSS_YN
  FROM BSIIFHSD A
      ,(SELECT DTRL1_NM CODE_CD
             , MAX(DTRL2_NM) CODE_NM
          FROM CCCCCSTE B
         WHERE B.COMN_GRP_CD  = 'N0011030'
         GROUP BY DTRL1_NM)B
 WHERE 1 = 1
   AND (('R' = :IN_SEARCHTYPE AND (A.OBSR_DT BETWEEN TO_DATE(:IN_FROM_DT,'YYYY-MM-DD')
                                                 AND TO_DATE(:IN_TO_DT,'YYYY-MM-DD'))) 
    OR ('C' = :IN_SEARCHTYPE AND (A.OBSR_STR_DTM &gt;= TO_DATE(:IN_FROM_DT, 'YYYY-MM-DD HH24:MI'))
                             AND  A.OBSR_END_DTM &lt;= TO_DATE(:IN_TO_DT, 'YYYY-MM-DD HH24:MI') + 59/24/60/60))
   AND NVL(A.HAHY_OBSR_REC_DGM_NO,0) = NVL(:IN_HAHY_OBSR_REC_DGM_NO , NVL(A.HAHY_OBSR_REC_DGM_NO,0))
   AND NVL(A.HAHY_OBSR_PLC_TP_CD,'*') = NVL(:IN_HAHY_OBSR_PLC_TP_CD , NVL(A.HAHY_OBSR_PLC_TP_CD,'*'))
   AND NVL(A.HAHY_OBSR_PLC_CD,'*') = NVL(:IN_HAHY_OBSR_PLC_CD , NVL(A.HAHY_OBSR_PLC_CD,'*'))
   AND NVL(A.HAHY_STF_OCTY_CD,'*') = NVL(:IN_HAHY_STF_OCTY_CD , NVL(A.HAHY_STF_OCTY_CD,'*'))
   AND NVL(A.HAHY_STF_OCTY_DTL_CD,'*') = NVL(:IN_HAHY_STF_OCTY_DTL_CD , NVL(A.HAHY_STF_OCTY_DTL_CD,'*'))
   AND (NVL(A.HAHY_NCS_ACT_CD,'*') = NVL(:IN_HAHY_NCS_ACT_CD , NVL(A.HAHY_NCS_ACT_CD,'*'))
       OR NVL(A.HAHY_NCS_ACT_TH2_CD,'*') = NVL(:IN_HAHY_NCS_ACT_CD , NVL(A.HAHY_NCS_ACT_TH2_CD,'*'))
       OR NVL(A.HAHY_NCS_ACT_TH3_CD,'*') = NVL(:IN_HAHY_NCS_ACT_CD , NVL(A.HAHY_NCS_ACT_TH3_CD,'*'))
       OR NVL(A.HAHY_NCS_ACT_TH4_CD,'*') = NVL(:IN_HAHY_NCS_ACT_CD , NVL(A.HAHY_NCS_ACT_TH4_CD,'*'))
       OR NVL(A.HAHY_NCS_ACT_TH5_CD,'*') = NVL(:IN_HAHY_NCS_ACT_CD , NVL(A.HAHY_NCS_ACT_TH5_CD,'*'))
   )
   AND DECODE(:IN_HAHY_OBSR_RSLT_CD,'*','*',DECODE(A.HAHY_OBSR_RSLT_CD,'3','N',DECODE(A.HAHY_OBSR_RSLT_CD,NULL,'X','Y'))) = DECODE(:IN_HAHY_OBSR_RSLT_CD,'*','*',:IN_HAHY_OBSR_RSLT_CD)
   AND A.USE_YN = 'Y'
   AND A.LST_YN = 'Y'
   AND B.CODE_CD(+) = A.HAHY_OBSR_PLC_TP_CD
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
 ORDER BY HAHY_OBSR_REC_DGM_NO, OBSR_DT, STF_HND_HYGN_OBSR_REG_ID
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>공통코드</QUERY_NAME>
    <QUERY_TEXT>-- 검사항목
SELECT A.*
  FROM MSELMEBM A
 WHERE 1=1
   AND EXM_CD LIKE 'LWR094%'
              ;
 -- 균코드
 SELECT A.*
    FROM MSELMSYC A
   WHERE 1=1
     AND A.HSP_TP_CD = '01'
     AND FSR_DTM &gt;= '2021-06-01'
  --    AND A.MVM_LCLS_CD LIKE    'L'
     AND A.MVM_SCLS_CD BETWEEN '0'  AND '1'
     and mvrt_cnte like 'gram%'
   ORDER BY A.MVM_CD, A.ENUM_SEQ
   ;
-- 진단검사공통정보 - 코드분류 - 중분류
--&gt; 추후 삭제예정
  SELECT /* HIS.MS.IT.LM.CO.SelectCommonCode */
         A.*
    FROM MSELMSID A -- 진단검사공통정보
   WHERE 1=1
     AND A.LCLS_COMN_CD = 'COMMONCODE'
     AND A.SCLS_COMN_CD IN ('LCLS008', '953')
     AND A.TH3_RMK_CNTE LIKE 'CP%'
     AND USE_YN = 'Y'
   ORDER BY A.HSP_TP_CD, A.LCLS_COMN_CD, A.SCLS_COMN_CD, A.SORT_SEQ
   ;
-- 진단검사공통정보 - 코드분류 - 대분류
  SELECT /* HIS.MS.IT.LM.CO.SELECTCOMMONCODE */
         A.TH2_RMK_CNTE
       , A.SCLS_COMN_CD
       , A.SCLS_COMN_CD_NM
       , A.*
    FROM MSELMSID A -- 진단검사공통정보
   WHERE 1=1
     AND A.LCLS_COMN_CD = '000'
     AND USE_YN = 'Y'
   ORDER BY A.HSP_TP_CD, A.LCLS_COMN_CD, A.TH2_RMK_CNTE, A.SCLS_COMN_CD, A.SORT_SEQ
   ;
-- 진단검사공통코드 - 최상위 그룹
  SELECT A.TH1_CTG_CD, A.TH2_CTG_CD
       , A.*
    FROM MSELMSCC A -- 진단검사공통코드
   WHERE 1=1
     AND A.HSP_TP_CD = '01'
     and th1_ctg_Cd ='CP'
     and th2_ctg_cd ='I01'
--     AND A.LCLS_COMN_CD IN ('INFECT_BACTERIAL', 'INFECT_VIRUS', 'INFECT_SYMPTOM')
   ORDER BY A.HSP_TP_CD, A.TH2_CTG_CD, A.TH1_CTG_CD, A.LCLS_COMN_CD, A.LCLS_COMN_CD
   ;
-- 진단검사공통정보 - 코드분류 - 상세내용
  SELECT
        A.*
    FROM MSELMSID A -- 진단검사공통정보
   WHERE 1=1
     AND A.HSP_TP_CD  = '01'
     AND A.LCLS_COMN_CD = 'I01'
--     AND A.LCLS_COMN_CD IN ('OP_PVTN_ATBA_ORD_CD')
--     AND A.CRE_SEQ    = 0     -- 공통코드 화면의 그리드 헤더에 표시될 설명
   ORDER BY A.CRE_SEQ, A.LCLS_COMN_CD, A.SCLS_COMN_CD, A.SORT_SEQ
  ;
-- 진단검사공통정보 - 코드분류 - 상세내용
  SELECT
        A.*
    FROM MSELMSID A -- 진단검사공통정보
   WHERE 1=1
     AND A.HSP_TP_CD  = '01'
--     AND A.LCLS_COMN_CD = 'I01'
     AND A.LCLS_COMN_CD IN ('ANTI', 'VAC','TEXT','NUMBER')
--     AND A.CRE_SEQ    = 0     -- 공통코드 화면의 그리드 헤더에 표시될 설명
   ORDER BY A.CRE_SEQ, A.LCLS_COMN_CD, A.SCLS_COMN_CD, A.SORT_SEQ
  ;
select * from mselmsid
 where hsp_tp_cd = '01'
 and lcls_comn_Cd ='ANTI_GUBN'
  and CRE_SEQ &lt;&gt; 0
;
select *
 from mooorexm
 where hsp_tp_cd = '01'
 and pt_no ='10440842'
;
select *
 from mselmmrd
 where hsp_tp_cd='01'
 and atba_cd ='Teicoplanin'
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>권한부여</QUERY_NAME>
    <QUERY_TEXT>--권한있는 사용자계정으로 로그인해서 주고자 하는 계정을 TO 이후에 적는다 

grant execute on FT_MSE_GET_PBSO_EXMR to xmed;


권한 부여 하고 사용하려면 앞에 식별자를 붙여야 함.
ex) xsup.FT_MSE_GET_PBSO_EXMR</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>외부판독 수정</QUERY_NAME>
    <QUERY_TEXT>select a.rsv_dtm,EXM_CHDR_STF_NO,exm_prgr_Sts_cd,'XX99999',XBIL.FT_PCT_AGE('AGE',SYSDATE,c.pt_brdy_dt) age,a.pbso_Dept_Cd,a.PACT_TP_CD,b.exrm_tp_cd,a.*
 from mooorexm a
   , msermrrd b
   , pctpcpam_Damo c
 where a.hsp_tp_cd='01'
 and a.hsp_tp_cd = b.hsp_tP_cd
 and a.pt_no = b.pt_no
 and a.pt_no = c.pt_No
 and a.EXM_CHDR_STF_NO is null
 and a.pbso_dept_CD &lt;&gt; 'PED'
 and a.ord_Id = b.ord_id
 and a.pact_tp_cd = 'O'
 and b.exrm_tp_cd &lt;&gt; 'RDC05'
 and trunc(a.rsv_dtm) = '2022-02-11'
 and exists(select 1
        from msermccc
        where hsp_tp_cd='01'
         and exm_grp_Cd = 'HEXM'
         and exm_grp_Dtl_cd = a.ord_Cd
         and ord_Ctg_Cd ='BR1')
order by age
;
/*+ORDERD USE NL(b) */
select b.rsv_dtm,a.ETNL_IPTN_YN,'Y',EXM_CHDR_STF_NO,b.exm_prgr_Sts_cd,'XX99999',XBIL.FT_PCT_AGE('AGE',SYSDATE,c.pt_brdy_dt) age,b.pbso_Dept_Cd,b.PACT_TP_CD,a.exrm_tp_cd,b.*
 from msermaad a
   , mooorexm b
   , pctpcpam_Damo c
 where a.hsp_tp_cd='01'
 and a.hsp_tp_cd = b.hsp_tP_cd
 and a.pt_no = b.pt_no
 and a.pt_no = c.pt_No
-- and a.EXM_CHDR_STF_NO is null
 and b.pbso_dept_CD &lt;&gt; 'PED'
 and a.ord_Id = b.ord_id
 and b.pact_tp_cd = 'O'
 and a.exrm_tp_cd &lt;&gt; 'RDC05'
 and trunc(b.rsv_dtm) = '2022-02-11'
 and exists(select 1
        from msermccc
        where hsp_tp_cd='01'
         and exm_grp_Cd = 'HEXM'
         and exm_grp_Dtl_cd = b.ord_Cd
         and ord_Ctg_Cd ='BR1')
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>과내 시행시 판독지 생성 조건</QUERY_NAME>
    <QUERY_TEXT>--과내검사코드와 매핑된 서식지가 사용가능해야함.
INSERT /*+ XSUP.PC_MSE_MSERMAAD_UPDATE_TRG */
                     INTO MSERMMLD A( A.IPTN_NO
                                  , A.IPPR_SEQ
                                  , A.IPPR_ID
                                  , A.MDFM_ID
                                  , A.MDFM_FOM_SEQ
                                  , A.HSP_TP_CD
                                  , A.FSR_STF_NO
                                  , A.FSR_DTM
                                  , A.FSR_PRGM_NM
                                  , A.FSR_IP_ADDR
                                  , A.LSH_STF_NO
                                  , A.LSH_DTM
                                  , A.LSH_PRGM_NM
                                  , A.LSH_IP_ADDR)
                             SELECT IN_IPTN_NO
                                  , LPAD(B.FPPR_SEQ, 2, '0')
                                  , IN_IPTN_NO || LPAD(B.FPPR_SEQ, 2, '0')
                                  , B.MDFM_ID
                                  , MAX(C.MDFM_FOM_SEQ)
--                                  , C.MDFM_FOM_SEQ
                                  , HIS_HSP_TP_CD 
                                  , HIS_USER_ID
                                  , SYSDATE
                                  , HIS_PRGM_NM
                                  , HIS_IP_ADDR
                                  , HIS_USER_ID
                                  , SYSDATE
                                  , HIS_PRGM_NM
                                  , HIS_IP_ADDR
                               FROM MSERMMAD B
                                  , MRFMFORM C
                              WHERE B.EXM_CD             = IN_OLD_ORD_CD
                                AND C.MDFM_ID = B.MDFM_ID  
                                AND C.FORM_USTS_CD = 1            -- 1(사용), 2(사용불가)
                                AND B.USE_YN = 'Y'

                                -- 2022.01.07 SCS '99' 공통임
                                AND B.HSP_TP_CD =  HIS_HSP_TP_CD
                                AND C.HSP_TP_CD IN (B.HSP_TP_CD, '99')  --2017.04.11 LIM ADD
                              GROUP BY IN_IPTN_NO
                                     , B.MDFM_ID
                                     , B.FPPR_SEQ</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사코드 사용종료 여부 컨트롤</QUERY_NAME>
    <QUERY_TEXT>--검사코드 사용여부 컨트롤
--1. 병원구분코드 ,검사코드,종료여부
--2. 3번째 파라미터를 Y로 실행시 해당 코드를 종료처리합니다.
--2. 3번째 파라미터를 N로 실행시 해당 코드를 사용가능하도록 수정합니다.
BEGIN
 FOR REC IN
 (
 select HSP_TP_CD,EXM_CD
  FROM MSERMMMC
  WHERE HSP_TP_CD ='02'
    AND ORD_CTG_CD = 'BN1'
 )
 LOOP
  BEGIN
    PC_MSE_END_MSERMMMC(REC.HSP_TP_CD,REC.EXM_CD,'Y');
  END;
 END LOOP;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>일자별 예약슬롯 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :EXRM_TP_CD := '|RDM01|';
EXEC :RSV_DTM := '2022-02-01';
EXEC :EXM_CD := 'RM00008';
EXEC :RSVP_ACPT_TP_CD := '|T|A|O|S|F|D|C|I|';
EXEC :SPRP_TP_CD := '|N|R|Y|';

    SELECT /*  HIS.MS.IV.IR.IR.SelectExmRsvSlotByDay */
                        TO_DATE(TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD'), 'yyyy-mm-dd')                                              RSV_DTM
                      , SUM(DECODE(A.RSV_HMI,NULL,1,0))                                       RSVTOT
                      --2017-09-14 임재득 추가
                      , SUM(DECODE(A.RSV_HMI, NULL, DECODE(NVL(A.SPRP_TP_CD,'N'),'N',DECODE(A.REQR_HMI_CHECK,'Y',0,1),0),0)) RSVCNT
                      , SUM(DECODE(A.RSV_HMI, NULL, DECODE(NVL(A.SPRP_TP_CD,'N'),'N',DECODE(A.REQR_HMI_CHECK,'Y',0,1),0),0)) || ' / ' || SUM(DECODE(A.RSV_HMI,NULL,1,0))   RSVRAT
--2017-09-14 임재득 주석 처리 - 검사의 Interval 시간으로 인해 계산 카운트 기준 변경
--                      , SUM(DECODE(A.RSV_HMI, NULL, DECODE(NVL(A.SPRP_TP_CD,'N'),'N',1,0),0)) RSVCNT
--                      , SUM(DECODE(A.RSV_HMI, NULL, DECODE(NVL(A.SPRP_TP_CD,'N'),'N',1,0),0)) || ' / ' || SUM(DECODE(A.RSV_HMI,NULL,1,0))   RSVRAT
                   FROM
                      ( SELECT /*+index(s MSERMRRD_SI03) */
                               S.EXRM_TP_CD
                             , S.RSV_DTM
                             , R.RSV_HMI
                             , S.SPRP_TP_CD
                             , S.RSV_SEQ
                             , XSUP.FT_MSE_INTERVAL_TIME_CHECK('1', :HIS_HSP_TP_CD, S.EXRM_TP_CD, S.RSV_DTM, S.RSV_SEQ, S.EMRG_SLOT_YN)     REQR_HMI_CHECK  --2017-09-14 임재득 추가 : INTERVAL 시간 체
                          FROM MSERMRRD S
                             , MSERMRJD R
                         WHERE INSTR(:EXRM_TP_CD, '|' || S.EXRM_TP_CD || '|') &gt; 0
                           AND S.RSV_DTM BETWEEN TO_DATE( :RSV_DTM ,'YYYY-MM-DD')
                                             AND LAST_DAY(TO_DATE( :RSV_DTM ,'YYYY-MM-DD'))+.99999
                           AND S.EXRM_TP_CD                   = R.EXRM_TP_CD(+)
                           AND R.EXM_CD(+)                  = :EXM_CD
                           AND TO_CHAR(S.RSV_DTM, 'D')      = R.DOW_KND_CD(+)
                           AND INSTR(:RSVP_ACPT_TP_CD, '|' || S.RSVP_ACPT_TP_CD || '|') &gt; 0
                           AND TO_CHAR(S.RSV_DTM, 'HH24MI') =  R.RSV_HMI(+)
                           AND INSTR(:SPRP_TP_CD, '|' || NVL(S.SPRP_TP_CD,'N') || '|') &gt; 0
                           AND S.HSP_TP_CD = :HIS_HSP_TP_CD    --2017.04.10 LIM ADD
                           AND S.HSP_TP_CD = R.HSP_TP_CD(+)    --2017.04.10 LIM ADD
                          -- AND NVL(S.SPRP_TP_CD,'N')           &lt;&gt;  'R'
                          -- AND (  (:SPRP_TP_CD = 'ALL' )
                          --                                   OR ( :SPRP_TP_CD &lt;&gt; 'ALL'  AND  NVL(S.SPRP_TP_CD,'N') &lt;&gt; 'R' )
                          --     )
                         GROUP BY S.EXRM_TP_CD
                                , S.RSV_DTM
                                , R.RSV_HMI
                                , S.SPRP_TP_CD
                                , S.RSV_SEQ
                                , S.EMRG_SLOT_YN
                      )A
                 GROUP BY TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')
                 ORDER BY TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>예약스케줄 등록</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '02';
EXEC :TH3_ASST_GRP_NM := '';
EXEC :SDTE := '2021-11-11';
EXEC :EDTE := '2022-12-30';

SELECT /* HIS.MS.IV.SD.MS.SelectScheduleTypeNew */
                   S.EXM_GRP_DTL_CD          EXM_GRP_DTL_CD
                  ,S.EXM_GRP_DTL_CD_NM       EXM_GRP_DTL_CD_NM
                  ,TH3_ASST_GRP_NM
                  ,a.*
              FROM MSERMCCC S
                 ,(
                    SELECT B.SLOT_NO     SLOT_TYPE
                      FROM MSERMRPD B
                     WHERE B.HSP_TP_CD = :HIS_HSP_TP_CD  --2017.04.11 LIM ADD
                    GROUP BY B.SLOT_NO
                   ) A
             WHERE S.EXM_GRP_CD = '875'
               AND S.USE_YN = 'Y'
               AND S.EXM_GRP_DTL_CD = A.SLOT_TYPE
               AND S.TH3_ASST_GRP_NM = nvl(:TH3_ASST_GRP_NM,S.TH3_ASST_GRP_NM)
               AND S.HSP_TP_CD = :HIS_HSP_TP_CD
               and S.ORD_CTG_CD = 'BN1'
             ORDER BY EXM_GRP_DTL_CD
;
exec :IO_ERRYN := '';
exec :IO_ERRMSG := '';
exec PC_MSE_RSVTPCBRSVCREATE_NEW(:TH3_ASST_GRP_NM,:SDTE,:EDTE,'00397',:HIS_HSP_TP_CD,'SSSUP11','Golden.exe','0.0.0.0',:IO_ERRYN,:IO_ERRMSG);
;
select *
 from msermrrd
 where 1=1
 and hsp_tp_cd = :HIS_HSP_TP_CD
 and exrm_tp_cd= 'RDM03'
 and pt_no is null
;
select *
 from msermpld
;
--슬롯 정보
--INSERT INTO MSERMRPD
SELECT *
                      FROM MSERMRPD B
                     WHERE B.HSP_TP_CD = :HIS_HSP_TP_CD  --2017.04.11 LIM ADD
                     and slot_no ='01086'
--and rsv_hmi = '0801'
;
select *
 from msermccc
 where hsp_tp_cd = :HIS_HSP_TP_CD
 and exm_grp_cd ='875'
 and ord_Ctg_Cd ='BN1'
;
select *
 from msermrrd a
 where hsp_tp_cd =:HIS_HSP_TP_CD
 and exists(select 1 from msermmrd where hsp_tp_cd = a.hsp_Tp_Cd and ord_Ctg_cd ='BN1' and exrm_tp_cd = a.exrm_tp_cd)
-- and slot_no &lt;&gt; 'MIG_NO'
 ;
-- and slot_no ='00397'
-- and pt_no is not null
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>예약스케줄 전체검사실 등록</QUERY_NAME>
    <QUERY_TEXT>exec :HSP_TP_CD := '02';
exec :SLOT_NO := 'WBOH_SLOT';
exec :SDTE := '2022-03-17';
exec :EDTE := '2022-12-31';
exec :IO_ERRYN := '';
exec :IO_ERRMSG := '';
exec :txt := 'UR,CHV,GSE,NR,IME,OG,IMP,MH2,OMS,SIC,OS,NP,PDL,EN,EY,GSA,IMN,BR1,HPC,DM,BN1,IMR,EM';
BEGIN
 FOR REC IN (
    SELECT EXRM_TP_CD
   FROM MSERMMRD a
   WHERE HSP_TP_CD  = :HSP_TP_CD
    AND USE_YN = 'Y'
    and ord_ctg_cd in (select distinct trim(regexp_substr(:txt,'[^,]+',1,LEVEL)) exm
              from dual a
             CONNECT BY INSTR(:txt,',',1,LEVEL-1)&gt;0)
 )
 LOOP
  BEGIN
    PC_MSE_RSVTPCBRSVCREATE_NEW(REC.EXRM_TP_CD
                 ,:SDTE
                 ,:EDTE
                 ,:SLOT_NO
                 ,:HSP_TP_CD
                 ,'SSSUP11'
                 ,'Golden.exe'
                 ,'0.0.0.0'
                 ,:IO_ERRYN
                 ,:IO_ERRMSG);
  END;
 END LOOP;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>환자별 판독등록</QUERY_NAME>
    <QUERY_TEXT>EXEC :PT_NO := '24172475';
EXEC :ORD_CTG_CD := 'BR1';
EXEC :HIS_HSP_TP_CD := '01';

SELECT /*HIS.MS.IV.ER.RM.SelectPatientClassfiedByInterpretation*/
          A.PT_NO                                                                    PT_NO
        , (SELECT COUNT(*) FROM MRDDRPLD Z WHERE Z.REC_CLS_CD = 'EX' AND Z.PRNT_ASK_NO_NM = A.IPTN_NO AND Z.HSP_TP_CD = A.HSP_TP_CD) "사본출력"
        , A.WD_DEPT_CD                                                               WD_DEPT_CD
        , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')                                            ORD_DT
        , A.ORD_ID                                                                   ORD_ID
        , A.ORD_CD                                                                   TST_CD
        , A.ORD_CTG_CD                                                               ORD_CTG_CD
        , DECODE(G.EHSP_FLIT_YN ,'Y', 'ROF {' || C.CD_NM || '}', C.CD_NM)            TST_NM
        , TO_CHAR(A.PHTG_DTM, 'YYYY-MM-DD HH24:MI:SS')                               PHTG_DTM
        , DECODE(A.EXM_PRGR_STS_CD,'E','1','D','2','N','3')                          SORT
        , A.EXM_PRGR_STS_CD                                                          EXM_PRGR_STS_CD
        , DECODE(A.EXM_PRGR_STS_CD, 'E', '시행', 'D', '가판독', 'N', '판독')          EXM_PRGR_STS_NM
        , F.IPTN_CTN_TP_CD                                                           IPTN_CTN_TP_CD
        , DECODE(NVL(F.IPTN_CTN_TP_CD,1), '1','확실','2','불확실','3','녹음불량')      IPTN_CTN_TP_NM
        , A.IPTN_NO                                                                  IPTN_NO
        , F.TH1_IPTN_EXPL                                                            TH1_IPTN_EXPL
        , F.TH2_IPTN_EXPL                                                            TH2_IPTN_EXPL
        , F.IPTN_CNCS_CNTE                                                           IPTN_CNCS_CNTE
        , XMED.FT_MOO_DIAGNOSIS(A.PT_NO, TO_CHAR(SYSDATE,'YYYMMDD'),G.PT_HME_DEPT_CD,G.PACT_ID, A.HSP_TP_CD, 'H')    DIAG_NM
        , NVL(A.CHDR_STF_NO,G.EXM_CHDR_STF_NO)                                       CHDR_STF_NO
--        , DECODE(A.CHDR_STF_NO, '', C.TOS_CHDR_STF_NO)                               CHDR_STF_NO
        , F.TH1_IPDR_STF_NO                                                          TH1_IPDR_STF_NO
        , F.TH2_IPDR_STF_NO                                                          TH2_IPDR_STF_NO
        , F.TH3_IPDR_STF_NO                                                          TH3_IPDR_STF_NO
        , F.TH4_IPDR_STF_NO                                                          TH4_IPDR_STF_NO
        , F.TH5_IPDR_STF_NO                                                          TH5_IPDR_STF_NO
        , F.TH6_IPDR_STF_NO                                                          TH6_IPDR_STF_NO
        , XCOM.FT_CNL_SELSTFINFO('9',F.TH1_IPDR_STF_NO, F.HSP_TP_CD, NULL)           TH1_IPDR_STF_NM
        , XCOM.FT_CNL_SELSTFINFO('9',F.TH2_IPDR_STF_NO, F.HSP_TP_CD, NULL)           TH2_IPDR_STF_NM
        , XCOM.FT_CNL_SELSTFINFO('9',F.TH3_IPDR_STF_NO, F.HSP_TP_CD, NULL)           TH3_IPDR_STF_NM
        , XCOM.FT_CNL_SELSTFINFO('9',F.TH4_IPDR_STF_NO, F.HSP_TP_CD, NULL)           TH4_IPDR_STF_NM
        , XCOM.FT_CNL_SELSTFINFO('9',F.TH5_IPDR_STF_NO, F.HSP_TP_CD, NULL)           TH5_IPDR_STF_NM
        , XCOM.FT_CNL_SELSTFINFO('9',F.TH6_IPDR_STF_NO, F.HSP_TP_CD, NULL)           TH6_IPDR_STF_NM
        , A.ACCS_ID                                                                  ACCS_ID
        , A.SV_CTG_CD                                                                SV_CTG_CD
        , G.COPN_CNTE || '/' || G.ORD_RMK_CNTE || '/' || G.RMK_CNTE                  OPINION
        , A.UGT_IPTN_YN                                                              UGT_IPTN_YN
        , F.TRSR_STF_NO                                                              TRSR_STF_NO
        , XCOM.FT_CNL_SELSTFINFO('4',F.TRSR_STF_NO, F.HSP_TP_CD, NULL)               TRSR_STF_NM
        , XCOM.FT_CNL_SELSTFINFO('4',F.TRSR_STF_NO, F.HSP_TP_CD, NULL)               EDIT_STF_NM
        , ''                                                                         STAT
        , NVL2(F.TH1_IPDR_STF_NO, 'N', 'Y')                                          TH1_IPDR_CHECK --2017-01-11 김세용 판독의 유효성 체크 여부
        , NVL2(F.TH2_IPDR_STF_NO, 'N', 'Y')                                          TH2_IPDR_CHECK
        , NVL2(F.TH3_IPDR_STF_NO, 'N', 'Y')                                          TH3_IPDR_CHECK
        , NVL2(F.TH4_IPDR_STF_NO, 'N', 'Y')                                          TH4_IPDR_CHECK
        , NVL2(F.TH5_IPDR_STF_NO, 'N', 'Y')                                          TH5_IPDR_CHECK
        , NVL2(F.TH6_IPDR_STF_NO, 'N', 'Y')                                          TH6_IPDR_CHECK
        , A.TRTM_RMK                                                                 TRTM_RMK
        , NVL(A.SHR_YN,'N')                                                          SHR_YN
--        , 0           PRINT_CNT
     FROM MSERMAAD A
        , PCTPCPAM_DAMO B
        , MSERMMMC C
        , MSERMDDD F
        , MOOOREXM G
    WHERE A.PT_NO         = :PT_NO
    --  AND (A.ORD_CTG_CD   = :ORD_CTG_CD)
    -- 2020-04-13 LEECK. 영상의학과에서 방종 처방 안보이도록 수정함.
      AND (
            (:ORD_CTG_CD = 'BR1' AND A.ORD_CTG_CD IN ('BR1', 'RT4', 'BN1') ) --영상인경우, 방종, 핵의학까지 같이 보이게 함. 2021-07-06 박서진
         OR (:ORD_CTG_CD &lt;&gt; 'BR1' AND A.ORD_CTG_CD = :ORD_CTG_CD)
          )
      AND A.EXM_PRGR_STS_CD IN ('E', 'D', 'N')
      AND A.ORD_CD NOT IN ( SELECT COMN_CD
                              FROM CCCCCSTE
                             WHERE COMN_GRP_CD = '765')
      AND NVL(A.PACS_NSND_YN,'N') = 'N'
      AND A.HSP_TP_CD     = :HIS_HSP_TP_CD
      AND A.PT_NO         = B.PT_NO
      AND A.ORD_CD        = C.EXM_CD
      AND A.HSP_TP_CD     = C.HSP_TP_CD
      AND A.IPTN_NO       = F.IPTN_NO(+)
      AND A.HSP_TP_CD     = F.HSP_TP_CD(+)
      AND A.ORD_ID        = G.ORD_ID(+)
      AND A.HSP_TP_CD     = G.HSP_TP_CD(+)
    ORDER BY PHTG_DTM DESC
           , SORT
           , TST_CD
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ORD_ID로 가판독변경</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '01';
EXEC :ORD_ID := 'MIG_01_7859579';
DECLARE
 V_EXM_PRGR_STS_CD VARCHAR2(10) :='';
BEGIN
 FOR REC IN
 (
SELECT :ORD_ID   as ORD_ID
 FROM DUAL
 )
 LOOP
  BEGIN
   SELECT EXM_PRGR_STS_CD
     INTO V_EXM_PRGR_STS_CD
       FROM MOOOREXM
      WHERE HSP_TP_CD = :HSP_TP_CD
        AND ORD_ID = REC.ORD_ID
        ;
  EXCEPTION
   WHEN NO_DATA_FOUND THEN
    SELECT EXM_PRGR_STS_CD
      INTO V_EXM_PRGR_STS_CD
      FROM MSERMAAD
     WHERE HSP_TP_CD = :HSP_TP_CD
       AND ORD_ID = REC.ORD_ID
       ;
  END;
  IF V_EXM_PRGR_STS_CD = 'N' THEN
   UPDATE MOOOREXM
      SET EXM_PRGR_STS_CD = 'D'
      WHERE HSP_TP_CD = :HSP_TP_CD
        AND ORD_ID = REC.ORD_ID
        ;
   UPDATE MSERMAAD
      SET EXM_PRGR_STS_CD = 'D'
    WHERE HSP_TP_CD = :HSP_TP_CD
      AND ORD_ID = REC.ORD_ID
      ;
   ELSIF V_EXM_PRGR_STS_CD = 'D' THEN
   UPDATE MOOOREXM
      SET EXM_PRGR_STS_CD = 'N'
      WHERE HSP_TP_CD = :HSP_TP_CD
        AND ORD_ID = REC.ORD_ID
        ;
   UPDATE MSERMAAD
      SET EXM_PRGR_STS_CD = 'N'
    WHERE HSP_TP_CD = :HSP_TP_CD
      AND ORD_ID = REC.ORD_ID
      ;
   END IF;
 END LOOP;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>HTextBox Ctrl+Z , Undo Limit</QUERY_NAME>
    <QUERY_TEXT>&lt;HTextBox Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AcceptsReturn="True" TextWrapping="Wrap"  VerticalScrollBarVisibility="Auto" Height="Auto" 
                                  Text="{Binding SelectedItem.IPTN_CNCS_CNTE, UpdateSourceTrigger=PropertyChanged}" UndoLimit="10" IsUndoEnabled="True"/&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>합본 프로시저</QUERY_NAME>
    <QUERY_TEXT>
exec :IN_OLD_PT_NO := '11788935';  --이전등록번호
exec :IN_NEW_PT_NO := '10486838';    --변경할등록번호
exec :IN_STF_NO := 'SSSUP01';       --직원번호
exec :IN_MSM_YN := 'Y';       --의무기록 합본여부
exec :IN_MSD_YN := 'Y';       --약제     합본여부
exec :IN_MSQ_YN := 'Y';       --급식영양 합본여부
exec :IN_MST_YN := 'Y';       --재활/방종 합본여부
exec :IN_MSP_YN := 'Y';       --병리 합본여부
exec :IN_MSE_YN := 'Y';       --진검 합본여부
exec :IN_MSR_YN := 'Y';       --진방 (영상, 핵체내, 과내, 특검)합본여부
exec :IN_MSU_YN := 'Y';      --건증 합본여부
exec :IN_CRM_YN := 'Y';       --CRM 합본여부
exec :IN_HSP_TP_CD := '01';    --병원구분
exec :IO_ERRYN := '';
exec :IO_ERRMSG := '';
VAR OUT_CURSOR REFCURSOR;

begin
 xsup.PKG_MS_BIND_PTNO.PC_MS_BIND_PTNO(
                                :IN_OLD_PT_NO   --이전등록번호
                              , :IN_NEW_PT_NO    --변경할등록번호
                              , :IN_STF_NO       --직원번호
                              , :IN_MSM_YN       --의무기록 합본여부
                              , :IN_MSD_YN       --약제     합본여부
                              , :IN_MSQ_YN       --급식영양 합본여부
                              , :IN_MST_YN       --재활/방종 합본여부
                              , :IN_MSP_YN       --병리 합본여부
                              , :IN_MSE_YN       --진검 합본여부
                              , :IN_MSR_YN       --진방 (영상, 핵체내, 과내, 특검)합본여부
                              , :IN_MSU_YN      --건증 합본여부
                              , :IN_CRM_YN       --CRM 합본여부
                              , :IN_HSP_TP_CD    --병원구분
                              , :IO_ERRYN
                              , :IO_ERRMSG
                              , :OUT_CURSOR
                              );


    DBMS_OUTPUT.PUT_LINE(:IO_ERRYN);
    DBMS_OUTPUT.PUT_LINE(:IO_ERRMSG);
--    DBMS_OUTPUT.PUT_LINE(:OUT_CURSOR);
end;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>합본 테이블 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_PT_NO := '07049081';


SELECT P.TABLE_NAME
     , C.COMMENTS
     , :IN_PT_NO    PT_NO
     , P.CNT
  FROM ALL_TAB_COMMENTS C
     , (
SELECT 'BSFSMDOD' TABLE_NAME, COUNT(*) CNT FROM BSFSMDOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'BSFSMMED' TABLE_NAME, COUNT(*) FROM BSFSMMED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'BSFSMMHD' TABLE_NAME, COUNT(*) FROM BSFSMMHD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'BSFSMMHH' TABLE_NAME, COUNT(*) FROM BSFSMMHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOAOD' TABLE_NAME, COUNT(*) FROM MSBIOAOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBAD' TABLE_NAME, COUNT(*) FROM MSBIOBAD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBCD' TABLE_NAME, COUNT(*) FROM MSBIOBCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBHH' TABLE_NAME, COUNT(*) FROM MSBIOBHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBIH' TABLE_NAME, COUNT(*) FROM MSBIOBIH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBMD' TABLE_NAME, COUNT(*) FROM MSBIOBMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBOD' TABLE_NAME, COUNT(*) FROM MSBIOBOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBRD' TABLE_NAME, COUNT(*) FROM MSBIOBRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBTD' TABLE_NAME, COUNT(*) FROM MSBIOBTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBUD' TABLE_NAME, COUNT(*) FROM MSBIOBUD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOBXD' TABLE_NAME, COUNT(*) FROM MSBIOBXD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOCHH' TABLE_NAME, COUNT(*) FROM MSBIOCHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOCMD' TABLE_NAME, COUNT(*) FROM MSBIOCMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIODRD' TABLE_NAME, COUNT(*) FROM MSBIODRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSBIOTFD' TABLE_NAME, COUNT(*) FROM MSBIOTFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGBAM' TABLE_NAME, COUNT(*) FROM MSDDGBAM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGDJD' TABLE_NAME, COUNT(*) FROM MSDDGDJD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGDPD' TABLE_NAME, COUNT(*) FROM MSDDGDPD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGDPG' TABLE_NAME, COUNT(*) FROM MSDDGDPG WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGGSD' TABLE_NAME, COUNT(*) FROM MSDDGGSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGHCS' TABLE_NAME, COUNT(*) FROM MSDDGHCS WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGHJD' TABLE_NAME, COUNT(*) FROM MSDDGHJD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGHMD' TABLE_NAME, COUNT(*) FROM MSDDGHMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGIQH' TABLE_NAME, COUNT(*) FROM MSDDGIQH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGJMH' TABLE_NAME, COUNT(*) FROM MSDDGJMH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGMJD' TABLE_NAME, COUNT(*) FROM MSDDGMJD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGNMD' TABLE_NAME, COUNT(*) FROM MSDDGNMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGPHD' TABLE_NAME, COUNT(*) FROM MSDDGPHD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGPWD' TABLE_NAME, COUNT(*) FROM MSDDGPWD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGQHH' TABLE_NAME, COUNT(*) FROM MSDDGQHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGRED' TABLE_NAME, COUNT(*) FROM MSDDGRED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGRFD' TABLE_NAME, COUNT(*) FROM MSDDGRFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDDGRRD' TABLE_NAME, COUNT(*) FROM MSDDGRRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDMDMGD' TABLE_NAME, COUNT(*) FROM MSDMDMGD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDMDNSD' TABLE_NAME, COUNT(*) FROM MSDMDNSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCACD' TABLE_NAME, COUNT(*) FROM MSDSCACD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCADH' TABLE_NAME, COUNT(*) FROM MSDSCADH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCAPD' TABLE_NAME, COUNT(*) FROM MSDSCAPD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCAPH' TABLE_NAME, COUNT(*) FROM MSDSCAPH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCARD' TABLE_NAME, COUNT(*) FROM MSDSCARD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCASD' TABLE_NAME, COUNT(*) FROM MSDSCASD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCLDD' TABLE_NAME, COUNT(*) FROM MSDSCLDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCLFD' TABLE_NAME, COUNT(*) FROM MSDSCLFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCLSD' TABLE_NAME, COUNT(*) FROM MSDSCLSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCMND' TABLE_NAME, COUNT(*) FROM MSDSCMND WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCNDD' TABLE_NAME, COUNT(*) FROM MSDSCNDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCNFD' TABLE_NAME, COUNT(*) FROM MSDSCNFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCNRD' TABLE_NAME, COUNT(*) FROM MSDSCNRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCPMD' TABLE_NAME, COUNT(*) FROM MSDSCPMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCPOD' TABLE_NAME, COUNT(*) FROM MSDSCPOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCPPE' TABLE_NAME, COUNT(*) FROM MSDSCPPE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCSCD' TABLE_NAME, COUNT(*) FROM MSDSCSCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCTCD' TABLE_NAME, COUNT(*) FROM MSDSCTCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCTDD' TABLE_NAME, COUNT(*) FROM MSDSCTDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCTFD' TABLE_NAME, COUNT(*) FROM MSDSCTFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCTIM' TABLE_NAME, COUNT(*) FROM MSDSCTIM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCTPD' TABLE_NAME, COUNT(*) FROM MSDSCTPD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCTSD' TABLE_NAME, COUNT(*) FROM MSDSCTSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSDSCTTD' TABLE_NAME, COUNT(*) FROM MSDSCTTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMAID' TABLE_NAME, COUNT(*) FROM MSELMAID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMAIH' TABLE_NAME, COUNT(*) FROM MSELMAIH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMARH' TABLE_NAME, COUNT(*) FROM MSELMARH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMBPH' TABLE_NAME, COUNT(*) FROM MSELMBPH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMCED' TABLE_NAME, COUNT(*) FROM MSELMCED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMCHH' TABLE_NAME, COUNT(*) FROM MSELMCHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMCNN' TABLE_NAME, COUNT(*) FROM MSELMCNN WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMDED' TABLE_NAME, COUNT(*) FROM MSELMDED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMDEM' TABLE_NAME, COUNT(*) FROM MSELMDEM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMERD' TABLE_NAME, COUNT(*) FROM MSELMERD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMIFD' TABLE_NAME, COUNT(*) FROM MSELMIFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMLPF' TABLE_NAME, COUNT(*) FROM MSELMLPF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMNGD' TABLE_NAME, COUNT(*) FROM MSELMNGD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMPSD' TABLE_NAME, COUNT(*) FROM MSELMPSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMSCD' TABLE_NAME, COUNT(*) FROM MSELMSCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMSTD' TABLE_NAME, COUNT(*) FROM MSELMSTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMTDD' TABLE_NAME, COUNT(*) FROM MSELMTDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMVED' TABLE_NAME, COUNT(*) FROM MSELMVED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSELMVRD' TABLE_NAME, COUNT(*) FROM MSELMVRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMERD' TABLE_NAME, COUNT(*) FROM MSEPMERD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMLGD' TABLE_NAME, COUNT(*) FROM MSEPMLGD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMNGD' TABLE_NAME, COUNT(*) FROM MSEPMNGD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMPAD' TABLE_NAME, COUNT(*) FROM MSEPMPAD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMPCD' TABLE_NAME, COUNT(*) FROM MSEPMPCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMPMD' TABLE_NAME, COUNT(*) FROM MSEPMPMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMPPF' TABLE_NAME, COUNT(*) FROM MSEPMPPF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMSMH' TABLE_NAME, COUNT(*) FROM MSEPMSMH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSEPMSTD' TABLE_NAME, COUNT(*) FROM MSEPMSTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMAAD' TABLE_NAME, COUNT(*) FROM MSERMAAD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMAAH' TABLE_NAME, COUNT(*) FROM MSERMAAH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMABD' TABLE_NAME, COUNT(*) FROM MSERMABD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMACD' TABLE_NAME, COUNT(*) FROM MSERMACD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMAED' TABLE_NAME, COUNT(*) FROM MSERMAED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMAFD' TABLE_NAME, COUNT(*) FROM MSERMAFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMAID' TABLE_NAME, COUNT(*) FROM MSERMAID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMAOD' TABLE_NAME, COUNT(*) FROM MSERMAOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMASD' TABLE_NAME, COUNT(*) FROM MSERMASD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMATE' TABLE_NAME, COUNT(*) FROM MSERMATE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMAVD' TABLE_NAME, COUNT(*) FROM MSERMAVD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMCHH' TABLE_NAME, COUNT(*) FROM MSERMCHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMCRF' TABLE_NAME, COUNT(*) FROM MSERMCRF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMCVD' TABLE_NAME, COUNT(*) FROM MSERMCVD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMDDD' TABLE_NAME, COUNT(*) FROM MSERMDDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMDRH' TABLE_NAME, COUNT(*) FROM MSERMDRH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMESD' TABLE_NAME, COUNT(*) FROM MSERMESD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMHIF' TABLE_NAME, COUNT(*) FROM MSERMHIF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMIBD' TABLE_NAME, COUNT(*) FROM MSERMIBD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMIND' TABLE_NAME, COUNT(*) FROM MSERMIND WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMMCD' TABLE_NAME, COUNT(*) FROM MSERMMCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMMSD' TABLE_NAME, COUNT(*) FROM MSERMMSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMMSE' TABLE_NAME, COUNT(*) FROM MSERMMSE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMNMD' TABLE_NAME, COUNT(*) FROM MSERMNMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMNSD' TABLE_NAME, COUNT(*) FROM MSERMNSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMNVD' TABLE_NAME, COUNT(*) FROM MSERMNVD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMOTD' TABLE_NAME, COUNT(*) FROM MSERMOTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMOTH' TABLE_NAME, COUNT(*) FROM MSERMOTH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMPCF' TABLE_NAME, COUNT(*) FROM MSERMPCF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMPDF' TABLE_NAME, COUNT(*) FROM MSERMPDF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMPPF' TABLE_NAME, COUNT(*) FROM MSERMPPF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMPRF' TABLE_NAME, COUNT(*) FROM MSERMPRF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMQEF' TABLE_NAME, COUNT(*) FROM MSERMQEF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMQMD' TABLE_NAME, COUNT(*) FROM MSERMQMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMQSD' TABLE_NAME, COUNT(*) FROM MSERMQSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMRHH' TABLE_NAME, COUNT(*) FROM MSERMRHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMROD' TABLE_NAME, COUNT(*) FROM MSERMROD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMRRD' TABLE_NAME, COUNT(*) FROM MSERMRRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMTED' TABLE_NAME, COUNT(*) FROM MSERMTED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMTKD' TABLE_NAME, COUNT(*) FROM MSERMTKD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMTTD' TABLE_NAME, COUNT(*) FROM MSERMTTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMURD' TABLE_NAME, COUNT(*) FROM MSERMURD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERMZFD' TABLE_NAME, COUNT(*) FROM MSERMZFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSERNRFD' TABLE_NAME, COUNT(*) FROM MSERNRFD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCAPLD' TABLE_NAME, COUNT(*) FROM MSMCAPLD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCAPLM' TABLE_NAME, COUNT(*) FROM MSMCAPLM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCBATM' TABLE_NAME, COUNT(*) FROM MSMCBATM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCPAPD' TABLE_NAME, COUNT(*) FROM MSMCPAPD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCPCDE' TABLE_NAME, COUNT(*) FROM MSMCPCDE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCPCPM_DAMO' TABLE_NAME, COUNT(*) FROM MSMCPCPM_DAMO WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCPMRM' TABLE_NAME, COUNT(*) FROM MSMCPMRM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCPPTD' TABLE_NAME, COUNT(*) FROM MSMCPPTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCPSND' TABLE_NAME, COUNT(*) FROM MSMCPSND WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCSATM' TABLE_NAME, COUNT(*) FROM MSMCSATM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCSDTM' TABLE_NAME, COUNT(*) FROM MSMCSDTM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMCSMTM' TABLE_NAME, COUNT(*) FROM MSMCSMTM WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMRAAND' TABLE_NAME, COUNT(*) FROM MSMRAAND WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMRACCD' TABLE_NAME, COUNT(*) FROM MSMRACCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMRACDD' TABLE_NAME, COUNT(*) FROM MSMRACDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMRADCD' TABLE_NAME, COUNT(*) FROM MSMRADCD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMRAIOD' TABLE_NAME, COUNT(*) FROM MSMRAIOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMRAOPD' TABLE_NAME, COUNT(*) FROM MSMRAOPD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSMRASMD' TABLE_NAME, COUNT(*) FROM MSMRASMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSOPTLOD' TABLE_NAME, COUNT(*) FROM MSOPTLOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTAHD' TABLE_NAME, COUNT(*) FROM MSQDTAHD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDED' TABLE_NAME, COUNT(*) FROM MSQDTDED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDEH' TABLE_NAME, COUNT(*) FROM MSQDTDEH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDID' TABLE_NAME, COUNT(*) FROM MSQDTDID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDIH' TABLE_NAME, COUNT(*) FROM MSQDTDIH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDIS' TABLE_NAME, COUNT(*) FROM MSQDTDIS WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDKD' TABLE_NAME, COUNT(*) FROM MSQDTDKD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDPD' TABLE_NAME, COUNT(*) FROM MSQDTDPD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTDSD' TABLE_NAME, COUNT(*) FROM MSQDTDSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTFDE' TABLE_NAME, COUNT(*) FROM MSQDTFDE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTNRD' TABLE_NAME, COUNT(*) FROM MSQDTNRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTNRE' TABLE_NAME, COUNT(*) FROM MSQDTNRE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQDTWTD' TABLE_NAME, COUNT(*) FROM MSQDTWTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCFID' TABLE_NAME, COUNT(*) FROM MSQSCFID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCFSD' TABLE_NAME, COUNT(*) FROM MSQSCFSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCIAD' TABLE_NAME, COUNT(*) FROM MSQSCIAD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCNDD' TABLE_NAME, COUNT(*) FROM MSQSCNDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCNID' TABLE_NAME, COUNT(*) FROM MSQSCNID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCNMD' TABLE_NAME, COUNT(*) FROM MSQSCNMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCNRD' TABLE_NAME, COUNT(*) FROM MSQSCNRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCNSD' TABLE_NAME, COUNT(*) FROM MSQSCNSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCPDD' TABLE_NAME, COUNT(*) FROM MSQSCPDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCPID' TABLE_NAME, COUNT(*) FROM MSQSCPID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCPMD' TABLE_NAME, COUNT(*) FROM MSQSCPMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCQED' TABLE_NAME, COUNT(*) FROM MSQSCQED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCQGD' TABLE_NAME, COUNT(*) FROM MSQSCQGD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCQMD' TABLE_NAME, COUNT(*) FROM MSQSCQMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSQSCQSD' TABLE_NAME, COUNT(*) FROM MSQSCQSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSSIRSRD' TABLE_NAME, COUNT(*) FROM MSSIRSRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHBDD' TABLE_NAME, COUNT(*) FROM MSTRHBDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHCHD' TABLE_NAME, COUNT(*) FROM MSTRHCHD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHCID' TABLE_NAME, COUNT(*) FROM MSTRHCID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHEDD' TABLE_NAME, COUNT(*) FROM MSTRHEDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHIRD' TABLE_NAME, COUNT(*) FROM MSTRHIRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHMED' TABLE_NAME, COUNT(*) FROM MSTRHMED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHODD' TABLE_NAME, COUNT(*) FROM MSTRHODD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHPAD' TABLE_NAME, COUNT(*) FROM MSTRHPAD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHSUD' TABLE_NAME, COUNT(*) FROM MSTRHSUD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRHWGD' TABLE_NAME, COUNT(*) FROM MSTRHWGD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROBEE' TABLE_NAME, COUNT(*) FROM MSTROBEE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROFXE' TABLE_NAME, COUNT(*) FROM MSTROFXE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROIDE' TABLE_NAME, COUNT(*) FROM MSTROIDE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROMMD' TABLE_NAME, COUNT(*) FROM MSTROMMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROORD' TABLE_NAME, COUNT(*) FROM MSTROORD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROPDD' TABLE_NAME, COUNT(*) FROM MSTROPDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROPLD' TABLE_NAME, COUNT(*) FROM MSTROPLD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROPRG' TABLE_NAME, COUNT(*) FROM MSTROPRG WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROPTD' TABLE_NAME, COUNT(*) FROM MSTROPTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROPZD' TABLE_NAME, COUNT(*) FROM MSTROPZD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRORDE' TABLE_NAME, COUNT(*) FROM MSTRORDE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRORED' TABLE_NAME, COUNT(*) FROM MSTRORED WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTRORHD' TABLE_NAME, COUNT(*) FROM MSTRORHD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSTROSME' TABLE_NAME, COUNT(*) FROM MSTROSME WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPAOD' TABLE_NAME, COUNT(*) FROM MSUHPAOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPBQD' TABLE_NAME, COUNT(*) FROM MSUHPBQD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPCRD' TABLE_NAME, COUNT(*) FROM MSUHPCRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPDDD' TABLE_NAME, COUNT(*) FROM MSUHPDDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPDRE' TABLE_NAME, COUNT(*) FROM MSUHPDRE WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPIFF' TABLE_NAME, COUNT(*) FROM MSUHPIFF WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPIID' TABLE_NAME, COUNT(*) FROM MSUHPIID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPIRD' TABLE_NAME, COUNT(*) FROM MSUHPIRD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPMHH' TABLE_NAME, COUNT(*) FROM MSUHPMHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPMID' TABLE_NAME, COUNT(*) FROM MSUHPMID WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPMOD' TABLE_NAME, COUNT(*) FROM MSUHPMOD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPNUD' TABLE_NAME, COUNT(*) FROM MSUHPNUD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPPHD' TABLE_NAME, COUNT(*) FROM MSUHPPHD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPPMD' TABLE_NAME, COUNT(*) FROM MSUHPPMD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPQAD' TABLE_NAME, COUNT(*) FROM MSUHPQAD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPRDD' TABLE_NAME, COUNT(*) FROM MSUHPRDD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPRHH' TABLE_NAME, COUNT(*) FROM MSUHPRHH WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPRSD' TABLE_NAME, COUNT(*) FROM MSUHPRSD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPRTD' TABLE_NAME, COUNT(*) FROM MSUHPRTD WHERE PT_NO = :IN_PT_NO UNION ALL
SELECT 'MSUHPRTE' TABLE_NAME, COUNT(*) FROM MSUHPRTE WHERE PT_NO = :IN_PT_NO) P
 WHERE P.TABLE_NAME = C.TABLE_NAME
   AND P.CNT &gt; 0
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>탐색기로 쉐어포인트 접근</QUERY_NAME>
    <QUERY_TEXT>탐색기에 http://10.12.50.19/3 적으면 됨 </QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>특정 컬럼 있는 테이블 조회</QUERY_NAME>
    <QUERY_TEXT>SELECT *        --컬럼이름
  FROM ALL_COL_COMMENTS
 WHERE 1=1
  AND TABLE_NAME LIKE '%' ||  'MSERM' || '%'
   AND COLUMN_NAME LIKE '%' || 'PACT_ID' || '%'
   AND COMMENTS LIKE '%' ||  '' ||  '%'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CDSS 공통코드 조회</QUERY_NAME>
    <QUERY_TEXT>exec :HIS_HSP_TP_CD := '01';
exec :V_GRP_CD := 'M42';
exec :V_CD := '';

SELECT /* PKG_MOO_INFECTION_MANAGE.PC_AUTHORITY_MANAGEMENT */
                       '' FLAG
                     , CDSS_COMN_CD  --CDSS공통코드
                     , CDSS_COMN_CD_NM --CDSS공통코드명
                     , DTRL1_NM   --1번째업무규칙명
                     , DTRL2_NM   --1번째업무규칙명
                     , SCRN_MRK_SEQ  --화면표시순번
                     , USE_YN   --사용여부
                     , a.*
                  FROM BCCCSCBE a--CDSS공통그룹코드상세 a
                 WHERE CDSS_COMN_GRP_CD = :V_GRP_CD
                   AND CDSS_COMN_CD     = NVL(:V_CD,CDSS_COMN_CD)
                   AND USE_YN           = 'Y'
                   AND HSP_TP_CD        = :HIS_HSP_TP_CD
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CCOOCBAC 코박에만 있는 검사</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '02';
select *
 from ccoocbac a
 where hsp_tp_Cd= :HSP_TP_CD
   and ord_end_yn ='N'
   and not exists(select 1
           from msermmmc
           where hsp_tp_cd= a.hsp_tp_Cd
           and exm_cd = a.ord_cd
           and end_dt is null
           and ord_Slip_Ctg_Cd &lt;&gt; 'MIG')
--  and ord_ctg_cd in('BR1','BN1')
and ord_Ctg_cd not in('CP','PA','RT4','NM')
and ord_grp_cd ='03'
;
update ccoocbac a
 set hsp_tp_cd = '80'
 where hsp_tp_Cd= :HSP_TP_CD
   and ord_end_yn ='N'
   and not exists(select 1
           from msermmmc
           where hsp_tp_cd= a.hsp_tp_Cd
           and exm_cd = a.ord_cd
           and end_dt is null
           and ord_Slip_Ctg_Cd &lt;&gt; 'MIG')
--  and ord_ctg_cd in('BR1','BN1')
and ord_Ctg_cd not in('CP','PA','RT4','NM')
and ord_grp_cd ='03'
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CCOOCBAC 코박에서 사용종료이나 검사마스터에서 사용중인 검사</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '02';
select *
 from ccoocbac a
 where hsp_tp_Cd= :HSP_TP_CD
   and ord_end_yn ='Y'
   and exists(select 1
           from msermmmc
           where hsp_tp_cd= a.hsp_tp_Cd
           and exm_cd = a.ord_cd
           and (end_dt is null or end_dtm is null)
           and ord_Slip_Ctg_Cd &lt;&gt; 'MIG')
--  and ord_ctg_cd in('BR1','BN1')
and ord_Ctg_cd not in('CP','PA','RT4','NM','BP')
and ord_grp_cd ='03'
;
  --검사코드 사용여부 컨트롤
--1. 병원구분코드 ,검사코드,종료여부
--2. 3번째 파라미터를 Y로 실행시 해당 코드를 종료처리합니다.
--2. 3번째 파라미터를 N로 실행시 해당 코드를 사용가능하도록 수정합니다.
BEGIN
 FOR REC IN
 (
select HSP_TP_CD,ORD_CD EXM_CD
 from ccoocbac a
 where hsp_tp_Cd= :HSP_TP_CD
   and ord_end_yn ='Y'
   and exists(select 1
           from msermmmc
           where hsp_tp_cd= a.hsp_tp_Cd
           and exm_cd = a.ord_cd
           and (end_dt is null or end_dtm is null)
           and ord_Slip_Ctg_Cd &lt;&gt; 'MIG')
--  and ord_ctg_cd in('BR1','BN1')
and ord_Ctg_cd not in('CP','PA','RT4','NM','BP')
and ord_grp_cd ='03'
 )
 LOOP
  BEGIN
    PC_MSE_END_MSERMMMC(REC.HSP_TP_CD,REC.EXM_CD,'N');
  END;
 END LOOP;
END;

</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CCOOCBAC 코박에서 사용중인데 검사마스터에서 종료된 검사</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '02';
select *
 from ccoocbac a
 where hsp_tp_Cd= :HSP_TP_CD
   and ord_end_yn ='N'
   and exists(select 1
           from msermmmc
           where hsp_tp_cd= a.hsp_tp_Cd
           and exm_cd = a.ord_cd
           and (end_dt is not null or end_dtm is not null)
           and ord_Slip_Ctg_Cd &lt;&gt; 'MIG')
--  and ord_ctg_cd in('BR1','BN1')
and ord_Ctg_cd not in('CP','PA','RT4','NM','BP')
and ord_grp_cd ='03'
;
  --검사코드 사용여부 컨트롤
--1. 병원구분코드 ,검사코드,종료여부
--2. 3번째 파라미터를 Y로 실행시 해당 코드를 종료처리합니다.
--2. 3번째 파라미터를 N로 실행시 해당 코드를 사용가능하도록 수정합니다.
BEGIN
 FOR REC IN
 (
select HSP_TP_CD,ORD_CD EXM_CD
 from ccoocbac a
 where hsp_tp_Cd= :HSP_TP_CD
   and ord_end_yn ='N'
   and exists(select 1
           from msermmmc
           where hsp_tp_cd= a.hsp_tp_Cd
           and exm_cd = a.ord_cd
           and (end_dt is not null or end_dtm is not null)
           and ord_Slip_Ctg_Cd &lt;&gt; 'MIG')
--  and ord_ctg_cd in('BR1','BN1')
and ord_Ctg_cd not in('CP','PA','RT4','NM','BP')
and ord_grp_cd ='03'
 )
 LOOP
  BEGIN
    PC_MSE_END_MSERMMMC(REC.HSP_TP_CD,REC.EXM_CD,'Y');
  END;
 END LOOP;
END;

</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>전자동의서 서식기본</QUERY_NAME>
    <QUERY_TEXT>select *
 from EFORM_SPCSDOCV
 where ccfm_nm like '%조영제%'

;
--전자동의서 작성 여부 확인
select A.ORDER_NAME   --ORD_ID
            ,A.PATIENT_CODE --PT_NO
, A.*
from UEFORM.CONSENT_MST A
where 1=1
and PATIENT_CODE = '71306461'
;</QUERY_TEXT>
    <GROUP>전자동의서</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>전자동의서 매핑</QUERY_NAME>
    <QUERY_TEXT>--INSERT INTO MRDDRMEM
SELECT '004074',HSP_TP_CD,'OR',EXM_CD,'03','Y','',SYSDATE,'WBOH','GOLDEN','10.91.103.77',SYSDATE,'WBOH','GOLDEN','10.91.103.77'
 FROM MSERMMMC A
 WHERE HSP_TP_CD='01'
 AND CNMD_USE_YN= 'Y'
 AND END_DT IS NULL
 AND ORD_CTG_CD = 'BR1'
 AND EXM_CD LIKE 'RM%'
 AND NOT EXISTS(SELECT 1 FROM MRDDRMEM WHERE HSP_TP_CD ='01' AND USE_YN = 'Y' AND ELTR_CSFM_MPNG_ID_NM = A.EXM_CD)
;
SELECT *
 FROM MRDDRMEM
WHERE HSP_TP_CD ='01'
 AND USE_YN = 'Y'
 AND ELTR_CSFM_MPNG_ID_NM LIKE 'RM%'
</QUERY_TEXT>
    <GROUP>전자동의서</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>과내영상 공통코드 복사</QUERY_NAME>
    <QUERY_TEXT>exec :HSP_TP_CD := '02';
exec :txt := 'OG, OS, IMN, EM, EY, DM, IMA, EN, IMD, UR, GSV, CS, IME, NR, CHV, IMP, PED, PDL, OMS';
insert into msermccc
(HSP_TP_CD,ORD_CTG_CD,EXM_GRP_CD,EXM_GRP_DTL_CD,EXM_GRP_DTL_CD_NM,SCRN_MRK_SEQ,TH1_ASST_GRP_NM,TH2_ASST_GRP_NM,TH3_ASST_GRP_NM,TH4_ASST_GRP_NM,RMK_CNTE,REF_PNT_CNTE,USE_YN,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR,TGT_TP_CD)
select HSP_TP_CD,b.exm ORD_CTG_CD,EXM_GRP_CD,EXM_GRP_DTL_CD,EXM_GRP_DTL_CD_NM,SCRN_MRK_SEQ,TH1_ASST_GRP_NM,TH2_ASST_GRP_NM,TH3_ASST_GRP_NM,TH4_ASST_GRP_NM,RMK_CNTE,REF_PNT_CNTE,USE_YN,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR,TGT_TP_CD
 from msermccc a
  ,(
  select distinct trim(regexp_substr(:txt,'[^,]+',1,LEVEL)) exm
   from dual a
  CONNECT BY INSTR(:txt,',',1,LEVEL-1)&gt;0
)b                      --과내 ORD_CTG_CD
 where hsp_tp_Cd =:HSP_TP_CD
 and a.ord_Ctg_Cd ='BR1'
 and exm_grp_CD = 'ADD_AUTH'
 AND EXM_GRP_DTL_CD = 'SSSUP11'
 AND NOT exists(SELECT 1
          FROM MSERMCCC
         WHERE HSP_TP_CD = :HSP_TP_CD
           AND EXM_GRP_CD = A.EXM_GRP_CD
           AND EXM_GRP_DTL_CD = A.EXM_GRP_DTL_CD
           AND ORD_CTG_CD = B.EXM)
;

select *
 from msermccc a
  where hsp_tp_Cd =:HSP_TP_CD
-- and a.ord_Ctg_Cd ='BR1'
 and exm_grp_CD = 'ADD_AUTH'
 AND EXM_GRP_DTL_CD = 'SSSUP11'
;
select HSP_TP_CD,b.exm ORD_CTG_CD,EXM_GRP_CD,EXM_GRP_DTL_CD,EXM_GRP_DTL_CD_NM,SCRN_MRK_SEQ,TH1_ASST_GRP_NM,TH2_ASST_GRP_NM,TH3_ASST_GRP_NM,TH4_ASST_GRP_NM,RMK_CNTE,REF_PNT_CNTE,USE_YN,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR,TGT_TP_CD
 from msermccc a
  ,(
  select distinct trim(regexp_substr(:txt,'[^,]+',1,LEVEL)) exm
   from dual a
  CONNECT BY INSTR(:txt,',',1,LEVEL-1)&gt;0
)b                      --과내 ORD_CTG_CD
 where hsp_tp_Cd =:HSP_TP_CD
 and a.ord_Ctg_Cd ='BR1'
 and exm_grp_CD = 'ADD_AUTH'
 AND EXM_GRP_DTL_CD = 'SSSUP11'
 AND NOT exists(SELECT 1
          FROM MSERMCCC
         WHERE HSP_TP_CD = :HSP_TP_CD
           AND EXM_GRP_CD = A.EXM_GRP_CD
           AND EXM_GRP_DTL_CD = A.EXM_GRP_DTL_CD
           AND ORD_CTG_CD = B.EXM)
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검 공통코드</QUERY_NAME>
    <QUERY_TEXT>-- 진단검사공통정보 - 코드분류 - 대분류
  SELECT /* HIS.MS.IT.LM.CO.SELECTCOMMONCODE */
         A.TH2_RMK_CNTE
       , A.SCLS_COMN_CD
       , A.SCLS_COMN_CD_NM
       , A.*
    FROM MSELMSID A -- 진단검사공통정보
   WHERE 1=1
     AND A.LCLS_COMN_CD = '000'
     AND USE_YN = 'Y'
   ORDER BY A.HSP_TP_CD, A.LCLS_COMN_CD, A.TH2_RMK_CNTE, A.SCLS_COMN_CD, A.SORT_SEQ
   ;
-- 진단검사공통코드 - 최상위 그룹
  SELECT A.TH1_CTG_CD, A.TH2_CTG_CD
       , A.*
    FROM MSELMSCC A -- 진단검사공통코드
   WHERE 1=1
     AND A.HSP_TP_CD = '01'
     and th1_ctg_Cd ='CP'
     and th2_ctg_cd ='I01'
--     AND A.LCLS_COMN_CD IN ('INFECT_BACTERIAL', 'INFECT_VIRUS', 'INFECT_SYMPTOM')
   ORDER BY A.HSP_TP_CD, A.TH2_CTG_CD, A.TH1_CTG_CD, A.LCLS_COMN_CD, A.LCLS_COMN_CD
   ;
-- 진단검사공통정보 - 코드분류 - 상세내용
  SELECT
        A.*
    FROM MSELMSID A -- 진단검사공통정보
   WHERE 1=1
     AND A.HSP_TP_CD  = '01'
--     AND A.LCLS_COMN_CD = '801'
     AND A.LCLS_COMN_CD IN ('INFECT_BACTERIAL', 'INFECT_VIRUS','INFECT_SYMPTOM')
--     AND A.CRE_SEQ    = 0     -- 공통코드 화면의 그리드 헤더에 표시될 설명
   ORDER BY A.CRE_SEQ, A.LCLS_COMN_CD, A.SCLS_COMN_CD, A.SORT_SEQ
  ;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>쿼리스트링</QUERY_NAME>
    <QUERY_TEXT>#region [Constructor]

        /// &lt;summary&gt;
        /// name         : SelectStaffHandWashingManagementData 생성자
        /// desc         : SelectStaffHandWashingManagementData 생성자
        /// author       : KwonJungYun 
        /// create date  : 2016-04-01 오후 5:20:57
        /// update date  : 최종 수정 일자, 수정자, 수정개요 
        /// &lt;/summary&gt;
        public SelectStaffHandWashingManagementData()
        {
            //if (LicenseManager.UsageMode == LicenseUsageMode.Designtime) return;
            
            //this.Init();
        }
        /// &lt;summary&gt;
        /// name         : 초기화 함수
        /// desc         : 초기화 함수 입니다.
        /// author       : 정병철
        /// create date  : 2012-06-01
        /// update date  : 최종 수정일자 , 수정자, 수정개요
        /// &lt;/summary&gt;
        protected override void InitializeLoaded()
        {
            if (LicenseManager.UsageMode == LicenseUsageMode.Designtime) return;
            if (base.QueryString["EAMPARAM"] != null)
            {
                this.EAMPARAM = base.QueryString["EAMPARAM"];
            }
            this.Init();
        }
#endregion //Constructor

쿼리 스트링은
생성자 밑에 InitializeLoaded를 오버라이드 해서 받아와야
가져올 수 있음.</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검 공통코드명 조회</QUERY_NAME>
    <QUERY_TEXT>--XSUP.FT_MSE_LMCOMNCODE(:HIS_HSP_TP_CD,'N0011032',A.HAHY_STF_OCTY_CD,'0') HAHY_STF_OCTY_CD_NM

FUNCTION      FT_MSE_LMCOMNCODE(
IN_HSP_TP_CD        IN VARCHAR2,   --병원구분코드    
IN_LCSL_COMN_CD   IN VARCHAR2,   --공통그룹코드
IN_SCLS_COMN_CD      IN VARCHAR2,   --공통코드
IN_TP_CD    IN VARCHAR2    --구분자
) 
RETURN VARCHAR2
/*
1. 정의: 진검 공통코드의 공통코드명을 가져오는 함수
2. 작성자: HANSH
3. 작성일자: 2021-08-10
*/
IS
    V_SCLS_COMN_CD_NM  VARCHAR2(500); 
    V_RMK_CNTE   VARCHAR2(4000);
 

BEGIN
    
 IF IN_TP_CD = '0' THEN     
  BEGIN
      SELECT SCLS_COMN_CD_NM
       INTO V_SCLS_COMN_CD_NM
        FROM MSELMSID
       WHERE LCLS_COMN_CD = IN_LCSL_COMN_CD 
         AND HSP_TP_CD = IN_HSP_TP_CD
         AND SCLS_COMN_CD = IN_SCLS_COMN_CD
         AND USE_YN = 'Y'
         ;
       RETURN (V_SCLS_COMN_CD_NM);
  END;  
  
 ELSIF IN_TP_CD = '1' THEN
  BEGIN
   SELECT  TH1_RMK_CNTE 
       INTO  V_RMK_CNTE      
        FROM MSELMSID
       WHERE LCLS_COMN_CD = IN_LCSL_COMN_CD 
         AND HSP_TP_CD = IN_HSP_TP_CD
         AND SCLS_COMN_CD = IN_SCLS_COMN_CD
         AND USE_YN = 'Y'         
         ;
       RETURN (V_RMK_CNTE );  
  END;  
 
 ELSIF IN_TP_CD = '2' THEN
  BEGIN
   SELECT  TH2_RMK_CNTE 
       INTO  V_RMK_CNTE      
        FROM MSELMSID
       WHERE LCLS_COMN_CD = IN_LCSL_COMN_CD 
         AND HSP_TP_CD = IN_HSP_TP_CD
         AND SCLS_COMN_CD = IN_SCLS_COMN_CD
         AND USE_YN = 'Y'         
         ;
       RETURN (V_RMK_CNTE );  
  END; 
  
 ELSIF IN_TP_CD = '3' THEN
  BEGIN
   SELECT  TH3_RMK_CNTE 
       INTO  V_RMK_CNTE      
        FROM MSELMSID
       WHERE LCLS_COMN_CD = IN_LCSL_COMN_CD 
         AND HSP_TP_CD = IN_HSP_TP_CD
         AND SCLS_COMN_CD = IN_SCLS_COMN_CD
         AND USE_YN = 'Y'         
         ;
       RETURN (V_RMK_CNTE );  
  END; 
         
 END IF;    
END;
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>직원 손위생 정리</QUERY_NAME>
    <QUERY_TEXT>손위생률 : 관찰결과를 입력하지 않으면 상세행위에서 관찰건수에 포함되지 않는다. -&gt; SUM(DECODE(T2.HAHY_OBSR_RSLT_CD, NULL, 0, 1)) OBSR_SUM (만약 체크안해도 관찰건수에 카운팅 되야하면 DECODE문 수정 혹은 무조건 미시행 체크되도록 수정필요)
, 수행건수는 관찰결과에서 1번째나 2번째를 입력후 저장하면 수행한것으로 치고 미시행으로 저장하면 수행 하지 않은것으로 친다.
, 기타는 손위생 필요 행위를 아무것도 체크하지 않을 경우 건수카운트가 된다.
, 전체 건수는 직원손위생관리 화면의 리스트 로우 개수가 총 관찰 건수가 되며 , 수행건수는 한 로우의 관찰결과가 된다. 
7건의 로우가 모든 체크박스가 체크된다면 다 합쳐서 총 35개가 되겠지만 전체에 집계되는것은 7이란 의미. </QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>전산실 외부영상 조회쿼리</QUERY_NAME>
    <QUERY_TEXT>select CASE WHEN substr(studydescription,1,4) = '(외부)' AND length(studydescription) &gt; 4
                            THEN studydescription||'-' ||modality
                            WHEN substr(studydescription,1,4) = '(외부)' AND length(studydescription) = 4 AND length(bodypart) &gt; 4
                            THEN bodypart || '-' ||modality
                            WHEN substr(bodypart,1,4) = '(외부)' AND length(studydescription) &gt; 0
                            THEN '(외부)' || ' ' || studydescription ||'-' ||modality
                            WHEN length(studydescription) &gt; 0
                            THEN '(외부)' ||' ' || studydescription || '-' || modality
                            ELSE '(외부)' ||' '||modality
                            END cd_nm,
                            studydescription,bodypart,modality,patid,a.*
 from dexam a
 where 1=1
-- and examid ='150255637'
--and patid ='03973724'
and examdate between '20220201' and '20220224'
and dorder is null</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검 프로젝트</QUERY_NAME>
    <QUERY_TEXT>--판독필수 : SaveIptnEssn
--종합검증 : SaveSynsVrfc

CO,GT,PR,RC,TC,NO.CO</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>통합예약 조회</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.IV.IR.IR.SelectExmRsvOrderInfo"&gt;&lt;!--
    Clss :  TEXT (쿼리유형)
    Desc : 검사예약을 위해 환자별 검사정보를 조회( PKG_SUP_SR_D_23.PC_SR_D_23_SEL_MOEEXAMT_RSV )
    Author : 권장섭
    Create date : 2012-09-17
    Update date : 2012-09-17
                  2016-08-22 김세용   건증 오더취소 오더 예약 대상 검사 제외 로직 추가  201607-00549
                  2016-09-27 김세용   PACT_ID -&gt; FST_PACT_ID로 교체
                                    2016-12-27  김세용  재초진 추가로 인한  재초진 -&gt; 재진 변경
      2021-10-05 오원빈,자동발행된 조영제 정보 추가    
      2021-11-16 오원빈 , 검사의뢰서 정보 추가 
--&gt;

    SELECT /*+ USE_NL(A B G) HIS.MS.IV.IR.IR.SelectExmRsvOrderInfo */
           A.ORD_ID                                                                                ORD_ID
         , A.PT_NO                                                                                 PT_NO
         , TO_CHAR (A.ORD_DT, 'YYYY-MM-DD')                                                        ORD_DT
         , A.ORD_SEQ                                                                               ORD_SEQ
         , A.ORD_CD                                                                                ORD_CD
         , A.EXM_PRGR_STS_CD                                                                       EXM_PRGR_STS_CD
         , DECODE (A.EHSP_FLIT_YN, 'Y', '[외부필름판독]', '')
                   || B.CD_NM
                   || DECODE (NVL (A.EXM_NOTM, 1), 1, '', '(' || A.EXM_NOTM || ')')                CD_NM
         , NVL(B.KOR_EXM_NM, B.CD_NM)                                                              KOR_EXM_NM
         , NVL(A.HOPE_EXRM_NO, B.EXRM_TP_CD)                                                       HOPE_EXRM_NO
         , (SELECT NVL(REXR_NM, EXRM_NM) 
              FROM MSERMMRD X 
             WHERE X.EXRM_TP_CD =  NVL(A.HOPE_EXRM_NO, B.EXRM_TP_CD) 
               AND X.HSP_TP_CD = A.HSP_TP_CD)                                                      EXRM_TP_NM
         , DECODE (A.EXM_PRGR_STS_CD,'A', TO_CHAR (A.RSV_DTM, 'YYYY-MM-DD HH24:MI'), '' )          RSV_DTM
         , DECODE (A.EXM_PRGR_STS_CD,'A', TO_CHAR (A.RSV_DTM, 'YYYY-MM-DD HH24:MI'), '' )  
                                          || DECODE (A.EXM_PRGR_STS_CD, 'A', DECODE(TO_CHAR (A.RSV_DTM, 'D'),
                                                       '1', ' (일)',
                                                       '2', ' (월)',
                                                       '3', ' (화)',
                                                       '4', ' (수)',
                                                       '5', ' (목)',
                                                       '6', ' (금)',
                                                       '7', ' (토)',
                                                       ''
                                                      ), '' )                 RSV_WKDAY
         , TO_CHAR (A.ACPT_DTM, 'YYYY-MM-DD HH24:MI')                                              ACPT_DTM
         , A.PT_HME_DEPT_CD                                                                        PT_HME_DEPT_CD
         , DECODE (A.PACT_TP_CD, 'I', A.PBSO_DEPT_CD, A.WD_DEPT_CD)                                WARDNO
         , XCOM.FT_CNL_STF_NM('4', A.FSR_STF_NO, A.HSP_TP_CD, A.FSR_DTM)                           ORDDRNM
         , XCOM.FT_CNL_STF_NM('4', A.EXM_CHDR_STF_NO, A.HSP_TP_CD, A.FSR_DTM)                      HOPEDRNM
         , DECODE (A.EXM_CHDR_STF_NO, NULL, '', 'Y')                                               HOPEYN
         , TO_CHAR (NVL (A.EXM_HOPE_DT, A.ORD_DT),'YYYY-MM-DD HH24:MI')                            EXM_HOPE_DT
         , DECODE (A.ODAPL_POP_CD, '9', 'O', A.PACT_TP_CD)                                         PACT_TP_CD
         , DECODE (A.ADD_ORD_YN, 'E', 'Y')                                                         ADD_ORD_YN
         , A.RPY_STS_CD                                                                            RPY_STS_CD
         , A.ODAPL_POP_CD                                                                          ODAPL_POP_CD
         , XCOM.FT_CCC_CODENAMEYN(A.HSP_TP_CD, '405', A.ODAPL_POP_CD, 'Y')                         ODAPL_POP_CD_NM
         , REPLACE(A.COPN_CNTE || '/' || A.ORD_RMK_CNTE || '/' || A.RMK_CNTE, '//','')             COPN_CNTE
         , NVL (B.RSEX_YN, 'N')                                                                    RSEX_YN
         , A.EXM_PRGR_STS_CD                                                                       EXM_PRGR_STS_CD
         , B.OTPT_RSVP_YN                                                                          OTPT_RSVP_YN
         , NVL (B.RSV_SLOT_CNT, 1)                                                                 RSV_SLOT_CNT
         , A.HSP_TP_CD                                                                             HSP_TP_CD
         , A.EHSP_FLIT_YN                                                                          EHSP_FLIT_YN
         , XSUP.FT_MSE_D_NAME (A.HSP_TP_CD, A.FSR_STF_NO) || ' / ' || A.FSR_STF_NO                 FSR_STF_NO
--         , NVL(E.EXM_CD, '')                                                                      EXM_CD
         , A.ORD_CTG_CD                                                                            ORD_CTG_CD
         , CASE WHEN A.ORD_CTG_CD IN ('BR1','BN1','PDL','CHV','IMC','IMP','IMA','NR') THEN '2' ELSE '1' END CHDR_SEARCH_TYPE --처방분류코드에 따라서 희망의사 목록을 조회.
--         , DECODE (A.EXM_PRGR_STS_CD, 'A', TO_CHAR (A.RSV_DTM, 'YYYY-MM-DD HH24:MI'),'') || ' ' ||
--           DECODE (A.EXM_PRGR_STS_CD, 'A', (SELECT DECODE (XSUP.FT_MSE_D_NAME(XX.HSP_TP_CD, XX.EDSC_CHC_STF_NO),'특수검사일반', '임상강사', XSUP.FT_MSE_D_NAME(XX.HSP_TP_CD, XX.EDSC_CHC_STF_NO))
--                                              FROM MSERMRRD XX
--                                             WHERE A.ORD_ID = XX.ORD_ID
--                                               AND A.ORD_CD = XX.ORD_CD
--                                               AND A.HSP_TP_CD = XX.HSP_TP_CD
--                                               AND ROWNUM = 1), '' )               RSVTIME
        , XSUP.FT_MSE_RSVDTE_NVL(A.ORD_CD, A.PACT_TP_CD, A.RPY_PACT_ID, A.HSP_TP_CD)               RSVEXDATE
        , B.FAST_YN                                                                                FAST_YN
      --  , B.DAY_YN                                                                    DAY_YN
        , B.PTRT_CNTE                                                                              CAPN_CNTE
        , B.REQR_HMI                                                                               REQR_HMI
        --선택검사로 인한 검사특진의 수정(2009.02.24 수정)
        , XSUP.FT_MSE_CHKSPCDR(A.HSP_TP_CD, '2', A.ORD_ID, A.ORD_DT)                               SPCDR
        , A.EXM_CHDR_STF_NO                                                                        EXM_CHDR_STF_NO      -- 2010.04.07 HOPEDR 추가_김성회수정
        , DECODE (A.PACT_TP_CD, 'I', '4', 'E', '5'
                              , DECODE(NVL(G.FRVS_RMDE_TP_CD,'2'),'4','2', NVL(G.FRVS_RMDE_TP_CD,'2')) )                  FRVS_RMDE_TP_CD   --2016-12-27 김세용 재조친 추가로 인하여  재초진 재진으로 변경 코드 추가
        , DECODE (A.PACT_TP_CD, 'I', '입원'
                              , 'E', '응급'
                                   , NVL(XCOM.FT_CCC_CODENAMEYN(A.HSP_TP_CD, '231', G.FRVS_RMDE_TP_CD, 'Y'),'재진') )     FRVS_RMDE_TP_NM
        , A.RPY_PACT_ID                                                                            RPY_PACT_ID
        , A.FST_PACT_ID                                                                            PACT_ID
--        , 'false'                                                                                  ISCHECKED
        , A.ORD_SLIP_CTG_CD                                                                        ORD_SLIP_CTG_CD
        , A.EXRS_TDY_REQ_YN                                                                        PRT_YN       --예약검사출력여부
        , XCOM.FT_CNL_STF_NM('4', A.EXRS_TDY_REQ_STF_NO, A.HSP_TP_CD, A.FSR_DTM)                   PRT_NM       --예약검사출력자
        , TO_CHAR (EXRS_TDY_REQ_DTM,'YYYY-MM-DD')                                                  PRT_DT       --예약검사출력일
--        , (SELECT XSUP.FT_MSE_ENDO_RSV_SLOT_DRNM(R.EXRM_TP_CD, R.ORD_CD ,R.RSV_DTM, R.SLOT_NO, R.PT_NO, R.ORD_ID, R.HSP_TP_CD) 
--             FROM MSERMRRD R 
--            WHERE R.ORD_ID = A.ORD_ID AND R.HSP_TP_CD = A.HSP_TP_CD)                               EXM_ACT_STF_NM
            
         , A.EMRG_YN                     EMRG_YN
         , B.CNMD_USE_YN                   CNMD_USE_YN
         , B.REF_PNT_CNTE
         , XSUP.FT_MSE_ORD_GETCONTENTS(A.ORD_ID, A.HSP_TP_CD, 'EXMRSVMEMO')                     EXM_RSV_MEMO
         , (SELECT '[ 검사실별 예약주의사항 ]'|| CHR(10)||EXRM_RSV_CTN_CNTE|| CHR(10)||CHR(10)|| '[ 검사실별 원무과 전달사항 ]'|| CHR(10)||EXRM_CFMT_CNTE  -- 모델링 변경으로 인한 컬럼 수정  2021-01-12 전영준
                 --'[ 검사실별 예약주의사항 ]'|| CHR(10)||EXRM_RSV_CNTE|| CHR(10)||CHR(10)|| '[ 검사실별 원무과 전달사항 ]'|| CHR(10)||EXRM_CHECK_CNTE
           FROM MSERMMRD
       WHERE 1=1 
      AND HSP_TP_CD = A.HSP_TP_CD
      AND EXRM_TP_CD = NVL(A.HOPE_EXRM_NO, B.EXRM_TP_CD)
        ) AS EXRM_RSV_INFO --검사실별 예약주의사항
         , FT_MSE_GET_AUTOSIDE_INFO(:HIS_HSP_TP_CD, A.ORD_ID,'10') TRT_ORD_CD --자동발행된 조영제코드                       
         , FT_MSE_GET_AUTOSIDE_INFO(:HIS_HSP_TP_CD, A.ORD_ID,'11') TRT_ORD_NM --자동발행된 조영제이름 
   , (SELECT TO_CHAR(MDFM_ID)
     FROM CCOOCBAC
    WHERE HSP_TP_CD = A.HSP_TP_CD
      AND ORD_CD    = A.ORD_CD)   MDFM_ID --검사의뢰서
   , A.EXM_RFFM_IPTN_NO         IPPR_ID --처방시 작성한 검사의뢰서 판독번호           
      FROM MOOOREXM A
         , MSERMMMC B
         , ACPPRODM G
       --  , MSERMZOD J
     WHERE A.PT_NO     =  :PT_NO
       AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       AND A.ORD_DT BETWEEN TO_DATE (:ORD_DT_FROM, 'YYYY-MM-DD')
                        AND TO_DATE (:ORD_DT_TO, 'YYYY-MM-DD')
       AND A.ODDSC_TP_CD = 'C'
       AND A.PRN_ORD_YN &lt;&gt; 'Y'
       AND A.EXM_PRGR_STS_CD IN ('X', 'A')  
       
       AND A.ORD_CD    = B.EXM_CD
       AND A.HSP_TP_CD = B.HSP_TP_CD       
       
       AND B.RSEX_YN   = 'Y'                 
       AND B.ORD_CTG_CD != 'RT4'   --방사선 종양은 제외 (예약 화면이 방사선 종양에 따로 있음)
                                       
       AND A.FST_PACT_ID = G.PACT_ID(+)  -- 2016-09-27 김세용  PACT_ID -&gt; FST_PACT_ID로 교체
       AND A.HSP_TP_CD   = G.HSP_TP_CD(+)
                          
   &lt;IsNotEmpty Prepend="" Property="ORD_CTG_CD"&gt;
     AND A.ORD_CTG_CD = :ORD_CTG_CD
   &lt;/IsNotEmpty&gt;&lt;IsNotEmpty Prepend="" Property="EXM_PRGR_STS_CD"&gt;
     AND A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD
   &lt;/IsNotEmpty&gt;&lt;IsNotEmpty Prepend="" Property="RPY_STS_CD_R"&gt;
     AND A.RPY_STS_CD != :RPY_STS_CD_R
   &lt;/IsNotEmpty&gt;&lt;IsNotEmpty Prepend="" Property="PRT_STS_CD"&gt;
     AND NVL(A.EXRS_TDY_REQ_YN,'N') != :PRT_STS_CD
   &lt;/IsNotEmpty&gt;
   
       
-- 2018.03.23 JEJ 금식조건 제외
--                       AND (  ( B.FAST_YN = 'Y' AND NVL(B.OVH6_FAST_YN, 'N') = 'N')
--                           OR ( NVL(B.FAST_YN, 'N') = 'N' )
--                           )
 --      AND A.ORD_CD = J.ORD_CD(+)
 --      AND A.HSP_TP_CD = J.HSP_TP_CD(+)
 --      AND J.SEQ(+) = 1
 

     ORDER BY A.EXM_PRGR_STS_CD DESC, A.ORD_DT DESC, A.RSV_DTM ASC, A.ORD_DT DESC --, J.PRSV_CTG_CD DESC, J.PRIO_RNK_SEQ
     
 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>프로시저 에러 찾기</QUERY_NAME>
    <QUERY_TEXT>dbms_output.put_line('OUT_MEDDEPT1 : '  || OUT_MEDDEPT1);</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>주간보고 양식</QUERY_NAME>
    <QUERY_TEXT>* 주간보고자료 보내드립니다.
#실적
고도화
  - 감염관리
    : 타부서에서 직원손위생관리 화면을 열때 로그인한 사용자가 작성한 내용만 조회되는 화면 추가
    : 다제내성균 조회 화면에서 재원중인 환자를 조회할 시 전과전동의 요청등급 정보 추가 
  - 통합예약
    : 통합예약 화면에서 예약하려는 날 선택시 해당 날짜에 예약된 특수검사 건수 표시
  - 영상
    : 조영제가 자동발행되는 검사에 묶인 재료나 조영제가 수납상태라면 예약 취소 및 변경이 안되도록
      수정
마스터
  -조영제 마스터 완료, 가야할 곳 장소 진행중
마이그
 - 핵체내 판독결과 완료, 영상, 핵체내 처방검증 진행중

#차주계획
고도화    
 - 영상
    : 화순 외부판독 로직 개발    
마스터
 - 검사 가야할곳
마이그
 - 영상의학과 미시행 처방 검증 , 핵체내 미시행 처방검증</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>배포목록</QUERY_NAME>
    <QUERY_TEXT>06/14
HIS.MS.TR.RE.OR.SelectAvailableOrderList
HIS.MS.TR.RE.OR.SelectExpiredOrderList
HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstRadiologyExaminationResultDetail
HIS.MS.IV.RM.CO.SelectDtCbExrmOrd
TR_MSERMINF_ORU
TR_MSERMDDD

05/30
FT_MSE_SAMENAME_BR1_NEW
HIS.MS.IV.RM.CO.SelectDtCbExrmOrd
HIS.MS.IV.RM.CO.SelectDtCbExrmOrdStts


05/26
HIS.MS.IV.RM.CO.UI
HIS.MS.IV.RM.CO.DTO
HIS.MS.IV.RM.CO.DAC
HIS.MS.IV.RM.CO.BIZ

HIS.MS.IV.RM.EX.UI
HIS.MS.IV.RM.EX.DTO
HIS.MS.IV.RM.EX.DAC
HIS.MS.IV.RM.EX.BIZ

HIS.MS.IV.RM.RT.UI
HIS.MS.IV.RM.RT.DTO
HIS.MS.IV.RM.RT.DAC
HIS.MS.IV.RM.RT.BIZ

HIS.MS.IV.RM.RC.UI
HIS.MS.IV.RM.RC.DTO

HIS.MS.TR.RE.OR.UI
HIS.MS.TR.RE.OR.DTO
HIS.MS.TR.RE.OR.DAC
HIS.MS.TR.RE.OR.BIZ

HIS.MC.IF.IF.CM.UI
HIS.MC.IF.IF.CM.DTO
HIS.MC.IF.IF.CM.BIZ
HIS.MC.IF.IF.CM.DAC

HIS.MS.IV.RM.CO.DeleteQuery
HIS.MS.TR.RO.CO.SelectPtnm
HIS.MS.IV.RM.CO.InsertCdLog
HIS.MS.IV.RM.RC.SelectPtExrmHst
HIS.MS.IV.RM.RT.SelectExrmCbIptnRto_V2
HIS.MS.IV.RM.EX.DeleteTm2SOrdInfo
HIS.MS.IV.RM.EX.SelectTm2SOrdInfoNew
PC_MST_MSTRHODD_ADD_NEW
PKG_MSE_SPCMPTHL_BATCH
PC_MST_MSTRHSUD_INSERT


05/11
FT_MSE_SAMENAME_BR1_NEW
PKG_MSE_SPCMPTHL_BATCH
HIS.MS.IV.RM.CO.SelectDtCbExrmOrd
HIS.MS.IV.SD.MS.UI
FT_MSE_GET_RSLT_TEXT_SEQ
PC_MSE_BATCH_HSINCNT
PKG_MSE_SMS_BATCH

05/03
FT_MSE_READING_TEXT_NEW
FT_MSE_RM_OUTFILM_YN
PC_MSE_MSERMAMD_FMT_UPDATE
PC_MSE_SIDEAUTOPBL

04/19
수술부위감염 전체 체크박스 추가 (전체를 체크하면 감염여부,대상여부 조건 상관없이 조회 되야함, 진료과나 감염분류는 해당)
시행화면에서 CR Null처리 및 촬영일시 있으면 Y표시
04/12
PC_MSE_MSERMAAD_PACSNEW_TRG

03/03
PC_MSE_MSERMAAD_PACSNEW_TRG
FT_MSE_GET_PBSO_EXMR
FT_MSE_GET_RSVCHG_YN
PKG_MOO_HANDWASHING_MANAGE (Head/Body)
HIS.MS.IV.IR.IR.SelectExmRsvOrderInfo
HIS.MS.IV.IR.IR.SelectRefreshInfo
HIS.MS.IV.IR.IR.SelectRsvChgPsbYn
HIS.MC.IF.IF.HS.SelectHandWashingRate_NEW
HIS.MC.IF.IF.HS.SelectHandWashingData
HIS.MC.IF.IF.HS.SelectCodeList
HIS.MS.IV.NI.RT.SelectNonInterPretationRsv
HIS.MS.IV.RM.EX.DeleteTm2SOrdInfo
HIS.MC.IF.IF.CM.SelectMultiValentBacteriaNewSihs
HIS.MC.IF.IF.CM.SelectMultiValentBacteriaNew
HIS.MS.IV.IR.IR.SelectSpecialExm
HIS.MS.TR.RE.RS.SelectRhPTDaySlotInfo

03/21
PC_MSE_MSERMAAD_UPDATE
PC_MSE_MOOOREXM_CONTINUE
PC_MSE_MSERMAMD_INSERT

03/23
HIS.MS.IV.NI.RC.SelectExaminationAccept
HIS.MS.IV.RM.EX.SelectGnrDgnsExmImplExm
HIS.MS.IV.RM.RC.SelectExaminationAcceptOut
HIS.MS.IV.RM.RC.SelectExaminationAccept
HIS.MS.IV.RM.RC.SelectExaminationAcceptAll
HIS.MC.IF.IF.CM.UI
HIS.MC.IF.IF.CM.BIZ
HIS.MC.IF.IF.CM.DAC
HIS.MC.IF.IF.CM.DTO

03/28
HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultBrfgDtmCount
HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultCount
FT_MSE_OUTPACS_CNT
HIS.MC.IF.IF.CM.SelectNewbornWeightStageList
HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstRadiologyExaminationResult
HIS.MC.IF.IF.OI.SelectOperationInfectionRecord

03/30
PC_MSE_SIDEAUTOPBL
FT_MSE_GET_HOPE_STF_NO
PC_MSE_RSVACPT_PROC_TRS

04/01
PC_MSE_MSERMAAD_PACSNEW_TRG
FT_MSE_GET_HOPE_STF_NO
HIS.MS.IV.RM.MS.SelectHspInIptnCnt
HIS.MS.IV.RM.RC.SelectReservationTab1
HIS.MS.IV.RM.RC.DTO
HIS.MS.IV.RM.RC.UI
HIS.MS.IV.RM.EX.UI
HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstInDepartmentsExaminationResult
HIS.MS.IV.RM.EX.SelectPtContactInfo

04/02~
FT_MSE_GET_RSLT_TEXT_SEQ
PC_MSE_MSERMAAD_PACSNEW_TRG --보류

04/04
HIS.MC.IF.IF.CM.SelectICUMonthReportDtl_A,B,D,E,J
04/11
PC_MSE_MSERMAAD_WARD_INSERT 

</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>예약가능 검사실 추가</QUERY_NAME>
    <QUERY_TEXT>insert into msermrmd
select hsp_Tp_cd,'RDU05',exm_cd,'','',sysdate,'SSSUP11','Golden','0.0.0.0',sysdate,'SSSUP11','Golden','0.0.0.0'
 from msErmmmc a
 where hsp_tP_cd='02'
 and exm_cd like 'RU%'
 and ord_Ctg_CD ='BR1'
 and not exists(select 1 from msermrmd where hsp_tp_cd = a.hsp_tP_cd and exm_Cd = a.exm_cd and exrm_tp_cd = 'RDU05')
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>스테이징-&gt;운영기 이관</QUERY_NAME>
    <QUERY_TEXT>--스테이징에서 운영기로 데이터 이관
--1. 병원구분
--2. ORD_CTG_CD (,로 구분하여 여러 ORD_CTG_CD 넣을 수 있음.)
--3. CCOOCBAC지우는지 여부 ('Y'넣으면 CCOOCBAC과 MSERMMMC를 이관하는데 CCOOCBAC_UPDATE 트리거 잠시 멈추고 해야함 ,트리거오류)
--4. 최초 CCOOCBAC DELETE  ('Y'를 넣으면 ORD_CTG_CD가 없어서 PK오류가 날 수 있으니 최초 한번 MSERMMMC테이블의 검사코드와 CCOOCBAC의 처방코드를 조인하여 해당 검사들을 전부 지우고 이관한다.)
var IO_ERRYN varchar2(500);
var IO_ERRMSG varchar2(500);

exec PC_MSE_IV_TRANS('01','BR1,BN1','Y','N',:IO_ERRYN,:IO_ERRMSG);
print :IO_ERRYN;
print :IO_ERRMSG;


select *
 from ccoocbac
 where hsp_tp_Cd ='01'
 and ord_cd in('RC09008','RC09034','RC03020')
;
select end_dt,end_dtm,a.*
 from msermmmc a
 where hsp_tp_Cd ='01'
 and exm_Cd in('RC09008','RC09034','RC03020')
;
select nextg_fmr_exm_cd,a.end_dt,a.end_dtm,a.*
 from msermmmc a,temp_mif_table2 b
 where hsp_tp_cd ='01'
 and a.exM_cd = b.exm_cd
;
select *
 from mooorexm
 where hsp_tp_cd= '02'
 and ord_cd ='XX/RC800'
;
select to_char(sysdate,'yyyy-mm-dd'),sysdate
 from dual
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재료 수납되는지 확인</QUERY_NAME>
    <QUERY_TEXT>10440852</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재료(재고자산) 누락분 정산</QUERY_NAME>
    <QUERY_TEXT>ERP -- 재고자산 -- 불출관리 -- 일괄불출및누락분처리 -- 방사선(누락분) 선택하고 처리 클릭
발췌기간은 처리하고 싶은 월의 마지막날로
처방, 시약은 건들면 안댐



SELECT * FROM XSUP.MSERUSEV WHERE 1=1 AND hsp_tp_cd = '01' AND NVL(LGST_SND_YN,  'N') = 'N' AND ORD_DT BETWEEN TO_DATE('20220201','YYYY-MM-DD') AND TO_DATE('20220228','YYYY-MM-DD')</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>한글 데이터 조회 정규식</QUERY_NAME>
    <QUERY_TEXT>SELECT * FROM MSERMMMC
WHERE 1=1
AND HSP_TP_CD = '02'
AND ORD_CTG_CD = 'BR1'
--AND MIF_CD IN ( '수가코드 없음', '수가없음')
AND REGEXP_LIKE (MIF_CD, '^[가-힝]')</QUERY_TEXT>
    <GROUP>정규식</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>컬럼을 로우로 변경(UNPIVOT)</QUERY_NAME>
    <QUERY_TEXT>--UNPIVOT 절 =&gt; 데이터가 들어갈 컬럼 지정 
--UNPIVOT FOR절 =&gt; 컬럼 영역 
--UNPIVOT IN절 =&gt; 로우로 바뀔 컬럼 데이터 영역 
--EX) 검사코드 하나에 묶인 컬럼 7개를 로우로 변경한다면 UNPIVOT 절에는 데이터가 들어갈 부분 


--INSERT INTO MSERMSMD
SELECT  hsp_tp_cd
   ,EXM_CD
   ,SIDE
   ,CASE WHEN ROWNUM &gt;7 AND MOD(ROWNUM,7) &lt;&gt; 0 THEN MOD(ROWNUM,7)
      WHEN ROWNUM &gt;7 AND MOD(ROWNUM,7) = 0 THEN MOD(ROWNUM,7)+7
      ELSE ROWNUM
   END CNMD_TP_CD
   ,'SSSUP11'
   ,SYSDATE
   ,'Golden'
   ,'10.91.103.77'
   ,'SSSUP11'
   ,SYSDATE
   ,'Golden'
   ,'10.91.103.77'
FROM (
SELECT '02' hsp_tp_cd,A.EXM_CD,NVL(B.CD_NM,'X') CD_NM,NVL(B.KOR_EXM_NM,'X') KOR_EXM_NM,NVL(B.MIF_CD,'X') MIF_CD,NVL(B.TEMP_1,'X') TEMP_1,NVL(B.TEMP_3,'X') TEMP_3,NVL(B.TEMP_4,'X') TEMP_4,NVL(B.TEMP_5,'X') TEMP_5
 FROM MSERMMMC A
   , TEMP_EXM_TABLE3 B
 WHERE A.HSP_Tp_CD= '02'
 AND A.MIF_cD = B.EXM_CD
 AND B.TEMP_6 IN ('CT','MRI')
 AND A.ORD_CTG_cD ='BR1'
 ORDER BY A.EXM_cD
)A
UNPIVOT(SIDE FOR EXM IN (CD_NM AS 'SIDE',KOR_EXM_NM AS 'SIDE', MIF_CD AS 'SIDE',TEMP_1 AS 'SIDE',TEMP_3 AS 'SIDE',TEMP_4 AS 'SIDE',TEMP_5 AS 'SIDE'))
;



</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처치세트 삭제</QUERY_NAME>
    <QUERY_TEXT>delete MSERMAMC
 where hsp_TP_CD='02'
 and MSP_PR_DEPT_CD= 'BR1'
;
delete MSERMAME a
 where hsp_TP_CD='02'
-- and \= 'BR1'
and exists(select 1 from msermamc where hsp_TP_Cd='02' and msp_pr_dept_cd = 'BR1' and MSP_TRTM_FLDR_ID =  a.MSP_TRTM_FLDR_ID)
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>환자별 판독등록 </QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.IV.ER.RM.InsertPtCbIptn"&gt;
&lt;!--
    Clss :  text
    Desc : 검사판독 프로시저 호출 (PC_SRD011T1_UPDATE).
    Author : 이지케어텍 김세용. 
    Create date : 2012-08-10
    Update date : 2012-08-10 
--&gt;
PC_MSE_INTERPRETATION_PROC
 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ALERT코드 조회</QUERY_NAME>
    <QUERY_TEXT>select *
 from MOOPTICC
where hsp_TP_Cd='01'
and infc_inf_cd in( 'A0006','A0004')
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>공통메세지</QUERY_NAME>
    <QUERY_TEXT>--메시지찾는테이블
select * from HSFGMRMT
where 1=1
and FULL_NAME like '%코드가 없습니다.%'
--and RESOURCE_KEY = 'DRMCN_002103'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>스케줄러 조회</QUERY_NAME>
    <QUERY_TEXT>--스케줄러
SELECT a.run_count,LAST_START_DATE,NEXT_RUN_DATE,a.*
 FROM USER_SCHEDULER_JOBS a
where 1=1
--and job_name ='JOB_PC_MSE_HEC_SR_BATCH';
;
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>간호처치세트</QUERY_NAME>
    <QUERY_TEXT>--간호처치코드
select *
 from MOMNMNTC
 where 1=1
 and hsp_tp_cd ='01'
 and nrpr_dept_cd = 'DR'
 and use_yn = 'Y'
;
--간호처치 상세
select *
 from MOMNMNTE
 where 1=1
 and hsp_tp_cd = '01'
 and NR_TRTM_FLDR_ID = 'S100003747'
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처치세트 폴더생성</QUERY_NAME>
    <QUERY_TEXT>--&lt;sql id="HIS.MS.IV.RM.MS.InsertTreatmentFolderInfo"&gt;&lt;!--
--    Clss : TEXT
--    Desc : 처치폴더정보를 등록합니다.
--    Author : 오원빈
--    Create date : 2021-08-25
--    Update date :  
----&gt;
/*◐◐◐◐◐ *** 병원구분 : 정규봉 *** ◑◑◑◑◑*/
INSERT /*HIS.MS.IV.RM.MS.InsertTreatmentFolderInfo*/ 
  INTO MSERMAMC     
     ( MSP_TRTM_FLDR_ID
     , HSP_TP_CD
     , MSP_TRTM_FLDR_NM
     , MSP_PR_DEPT_CD
     , USE_YN
     , SORT_SEQ           
     , MSP_TRTM_FLDR_CNTE
     , UPR_MSP_TRTM_FLDR_ID
     , FSR_DTM
     , FSR_STF_NO
     , FSR_PRGM_NM
     , FSR_IP_ADDR
     , LSH_DTM
     , LSH_STF_NO
     , LSH_PRGM_NM
     , LSH_IP_ADDR
     )
VALUES
     ( :FLDR_ID
     , :HIS_HSP_TP_CD
     , :FLDR_NM
     , :DEPT_CD
     , 'Y'
     , :SORT_SEQ   
     , :MEMO_CNTE
     , :UPR_FLDR_ID     
     , SYSDATE
     , :HIS_STF_NO
     , :HIS_PRGM_NM
     , :HIS_IP_ADDR
     , SYSDATE
     , :HIS_STF_NO
     , :HIS_PRGM_NM
     , :HIS_IP_ADDR
     )
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처치세트 폴더ID 조회</QUERY_NAME>
    <QUERY_TEXT>--&lt;sql id="HIS.MS.IV.RM.MS.SelectTreatmentFolderInfoNextID"&gt;&lt;!--
--    Clss : TEXT
--    Desc : 새로운 처치폴더의 ID를 조회합니다.
--    Author : 오원빈
--    Create date : 2021-08-25
--    Update date : 2021-08-25 오원빈 , 폴더 ID가 없어서 SEQ 생성
----&gt;
/*◐◐◐◐◐ *** 병원구분 : 정규봉 *** ◑◑◑◑◑*/
--SELECT /*HIS.MS.IV.RM.MS.SelectTreatmentFolderInfoNextID*/
--       TO_CHAR(XMED.SEQ_TRTM_FLDR_ID.NEXTVAL) FLDR_ID
--       MAX(NR_TRTM_FLDR_ID), 2) + 1 FLDR_ID
--  FROM DUAL

SELECT /*HIS.MS.IV.RM.MS.SelectTreatmentFolderInfoNextID*/
       --TO_CHAR('S' || (SUBSTR(MAX(MSP_TRTM_FLDR_ID), 2) + 1)) FLDR_ID
       'S' || TO_CHAR(SEQ_MSP_TRTM_FLDR_ID.NEXTVAL) FLDR_ID
  FROM DUAL
;
select last_number,a.*
 from user_sequences a
 where sequence_name ='SEQ_MSP_TRTM_FLDR_ID'
;
alter sequence SEQ_MSP_TRTM_FLDR_ID CACHE 1000;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>응급구역 조회</QUERY_NAME>
    <QUERY_TEXT>SELECT EMRM_TEAM_CTG_CD,A.*
  FROM ACPPRETM A -- 응급접수기본
 WHERE 1=1
   and hsp_tp_cd = '01'
   and EMRM_TEAM_CTG_CD is not null
   AND ROWNUM &lt; 100
</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상 검사결과 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_STF_NO := 'SSSUP11';
EXEC :IN_PT_NO := '13257119';
EXEC :MULTI_HSP_TP_CD := '01';
EXEC :IN_FR_DATE := '20010101';
EXEC :IN_TO_DATE := '20210920';
EXEC :EXRS_CTG_ID := '0';


SELECT /*+ USE_HASH(B) HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstRadiologyExaminationResult */
DISTINCT
       A.PT_NO                            PT_NO
     , TO_CHAR(A.PHTG_DTM, 'YYYY-MM-DD')  PHTG_DT
     , A.ORD_CD                           ORD_CD
     , DECODE(NVL(B.CD_NM, A.TRTM_RMK),'', A.ORD_CD, NVL(B.CD_NM, A.TRTM_RMK))           ORD_NM
     , A.IPTN_NO                          IPTN_NO
     , DECODE(A.EXM_PRGR_STS_CD, 'D', '가판독', 'N', '판독', 'E', DECODE(A.SV_CTG_CD, 'S', '음성녹음', '시행')) TSTSTAT
     , A.ORD_CTG_CD                       ORD_CTG_CD
     , C.PT_NM                            PT_NM
     , A.MED_DEPT_CD                      MED_DEPT_CD
     , A.WD_DEPT_CD                       WD_DEPT_CD
     , A.PACS_IMG_IPTN_YN                 PACS_IMG_IPTN_YN
     , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')    ORD_DT
     , NVL(A.IMG_NO, A.ACCS_ID)           ACCS_ID
     , A.ORD_ID                           ORD_ID
     , D.SID                              SID
     , XSUP.FT_MSE_PACSCHECK_YN(NVL(A.IMG_NO, A.ACCS_ID), A.PT_NO, :HIS_STF_NO)        PACSCHECK_YN  --2014.01.23 임재득 수정
--     , XSUP.FT_MSE_PACSCHECK_YN(NVL(A.IMG_NO, A.ACCS_ID), A.PT_NO, : IN_SID)        PACSCHECK_YN  --2013.09.23 임재득 처리
     , A.MED_DEPT_CD                      PT_HME_DEPT_CD
     , B.ORD_SLIP_CTG_CD                  ORD_SLIP_CTG_CD
     , TO_CHAR(A.PHTG_DTM, 'YYYY-MM-DD HH24:MI:SS')            PHTG_DTM  --2013.11.06 임재득 추가..정렬을 위해 추가함.

     , XBIL.FT_GET_AIMIPHID_DAMO(A.HSP_TP_CD, TRUNC(SYSDATE), NULL, 'HSP_ABBR_NM') HSP_NM
     , A.HSP_TP_CD   SEL_HSP_TP_CD
  FROM MSERMAAD A
     , MSERMMMC B
     , PCTPCPAM_DAMO C
     , CNLRRUSD D
     , MSERMZCD E  -- 결과분류정보
 WHERE A.PT_NO     = :IN_PT_NO
--   AND A.FST_IPTN_DT is not null
   AND A.HSP_TP_CD IN ( SELECT COLUMN_VALUE FROM TABLE(XCOM.FT_COM_STRING_TABLE(:MULTI_HSP_TP_CD, ',')) )
--   AND A.ORD_CTG_CD IN ('BR1', 'BN1', 'DSR', 'RT4')
   AND A.ORD_CTG_CD IN ( SELECT AA.ORD_CTG_CD  --2014.01.07 임재득 추가
                           FROM CCOOCCAC AA
                          WHERE AA.ORD_GRP_CD = '03'
                            AND AA.HSP_TP_CD  = A.HSP_TP_CD
                            AND AA.PCTR_EXM_IPTN_YN = 'Y')
   AND A.PHTG_DTM BETWEEN TO_DATE(:IN_FR_DATE, 'YYYY-MM-DD')
                      AND TO_DATE(:IN_TO_DATE, 'YYYY-MM-DD') + 0.99999
   AND A.EXM_PRGR_STS_CD IN ('N', 'D', 'E')
   AND B.EXM_CD(+)    = A.ORD_CD
   AND B.HSP_TP_CD(+) = A.HSP_TP_CD --2017.04.07 LIM ADD
   --AND B.CD_NM NOT LIKE 'ENHANCE(%'
   --AND B.CD_NM NOT LIKE '외부병원%'
   AND C.PT_NO     = A.PT_NO
   and A.FST_IPTN_STF_NO = D.STF_NO(+)
   AND A.HSP_TP_CD       = D.HSP_TP_CD(+)   --2017.04.07 LIM ADD
   --AND B.EXM_CD       = E.EXM_CD(+)
   AND A.ORD_CD       = E.EXM_CD(+)
   --AND B.HSP_TP_CD    = E.HSP_TP_CD(+)      --2017.04.07 LIM ADD
   AND A.HSP_TP_CD    = E.HSP_TP_CD(+)      --2017.04.07 LIM ADD
   AND (( :EXRS_CTG_ID  = '0' )
           OR   E.EXRS_CTG_ID IN
                (
                        SELECT SUBSTR(:EXRS_CTG_ID
                      , INSTR(','||:EXRS_CTG_ID,',',1,LEVEL)
                      , INSTR(:EXRS_CTG_ID || ',',',',1,LEVEL)
                      - INSTR(','||:EXRS_CTG_ID,',',1,LEVEL)
                ) v
                FROM dual
                CONNECT BY LEVEL &lt;= LENGTH(:EXRS_CTG_ID)
                           - LENGTH(REPLACE(:EXRS_CTG_ID,',')) + 1
        ))
ORDER BY PHTG_DTM DESC
-- PHTG_DT DESC
       , ORD_CTG_CD


;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오라클 명령어</QUERY_NAME>
    <QUERY_TEXT>
--코멘트 추가
COMMENT ON COLUMN HSUP.CIFCIROF.FGR_NM IS '수치명';

--커럼 추가
ALTER TABLE CIFCIROF ADD(FGR_NM VARCHAR2(500));

--컬럼 속성 변경
ALTER TABLE HSUP.SMSCANLT MODIFY(SEND_DATE NUMBER(4,1));

--시소님 추가
CREATE PUBLIC SYNONYM SMSCANHT FOR HSUP.SMSCANHT;

--ACCESS 권한 추가
GRANT SELECT, INSERT, UPDATE, DELETE ON HSUP.SDOIJTRT TO XSUP;

--정의된 시퀀스 조회

SELECT * FROM USER_SEQUENCES;

--PK변경

ALTER TABLE HSUP.SMSUPLDT DROP PRIMARY KEY;
DROP INDEX HSUP.SMSUPLDT_PK;
ALTER TABLE HSUP.MSERMPLD ADD CONSTRAINT SMSUPLDT_PK PRIMARY KEY(PT_NO, TRT_CLS, DEATH_SEQ);
--테이블 삭제
DROP TABLE MSERMPLD;

--테이블 생성
create table MSERMATD
(
HSP_TP_CD  VARCHAR2(2) --병원구분코드
,ORD_CD  VARCHAR2(20)
,TRTM_QTY  NUMBER
,EXM_CD  VARCHAR2(20)
,PACT_TP_CD VARCHAR2(1)
,SV_TBL_NM VARCHAR2(100) --저장테이블명
,MED_MIFI_TP_CD  VARCHAR2(1)
,DUP_PBL_YN  VARCHAR2(1) --중복발행여부
,ORD_SLIP_CTG_CD VARCHAR2(100)
,UPR_ORD_SLIP_CTG_CD VARCHAR2(4)
,FSR_DTM  DATE
,FSR_STF_NO  VARCHAR2(7)
,FSR_PRGM_NM  VARCHAR2(500)
,FSR_IP_ADDR  VARCHAR2(50)
,LSH_DTM  DATE --최종변경일시
,LSH_STF_NO  VARCHAR2(7) --최종변경직원번호
,LSH_PRGM_NM  VARCHAR2(500) --최종변경프로그램명
,LSH_IP_ADDR  VARCHAR2(50) --최종변경IP주소

);
--테이블 커멘트
COMMENT ON TABLE MSERMPLD IS '검사코드 발행처별 가야할 곳 정보';
--테이블 컬럼 커멘트
COMMENT ON COLUMN MSERMPLD.DOW_KND_CD IS '요일종류코드(공통코드 : SDY)';
COMMENT ON COLUMN MSERMPLD.PBSO_DEPT_CD IS '발행부서';
COMMENT ON COLUMN MSERMPLD.PACT_TP_CD IS 'I:입원,O:외래,E:응급';

--컬럼순서변경
CREATE TABLE TEMP AS SELECT HSP_TP_CD,PT_NO,EXRS_CNTE,ACPT_DTM FROM TEMP_CR_RSULT
;
DROP TABLE XSUP.TEMP_CR_RSULT;
RENAME TEMP TO TEMP_CT_RSULT


--CREATE TABLE 백업테이블명 AS SELECT * FROM 복사할 테이블명 
CREATE TABLE FXQUERYSTORE_OHWB
AS SELECT * FROM FXQUERYSTORE
;

--CREATE INDEX 인덱스명 ON 테이블명(컬럼1,컬럼2....)
CREATE INDEX TEMP_CR_RSULT_SI01
    ON XSUP.TEMP_CR_RSULT(PT_NO, HSP_TP_CD) 

--FOR문 이용법
FOR 증감변수 IN 초기값..최종값
LOOP
처리문;
END LOOP;

--최종값부터 초기값이 될때까지 반복
FOR 증감변수 IN REVERSE 초기값..최종값
LOOP
처리문;
END LOOP;</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EQS 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :EQS_ID :='HIS.MS.IV.RM.CO.SelectDtCbExrmOrd';
SELECT QUERYID,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(A.QUERYTEXT,'&amp;'||'amp;','&amp;'),'&amp;'||'lt;','&lt;'),'&amp;'||'gt;','&gt;'),'&amp;'||'apos;',''''),'&amp;'||'amp;','&amp;') QUERYTEXT
FROM FXQUERYSTORE A
WHERE 0=0
AND UPPER(QUERYID) = UPPER(:EQS_ID)
ORDER BY QUERYID</QUERY_TEXT>
    <GROUP>EQS</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사명으로 검사코드 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '02';
EXEC :CD := 'SCV400';
EXEC :CD_NM := 'PRC';
DECLARE
V_CD_NM VARCHAR2(4000) := null;
V_CD VARCHAR2(4000) := null;
BEGIN
 BEGIN
  SELECT ORD_CD, ORD_NM
    INTO V_CD, V_CD_NM
    FROM CCOOCBAC
   WHERE HSP_TP_CD = :HSP_TP_CD AND ORD_CD = :CD AND NVL(ORD_END_YN,'N') = 'N' AND ORD_GRP_CD IS NOT NULL;
 EXCEPTION
  WHEN NO_DATA_FOUND THEN
   BEGIN
    SELECT EXM_CD, CD_NM
      INTO V_CD, V_CD_NM
      FROM MSERMMMC
     WHERE HSP_TP_CD = :HSP_TP_CD AND NEXTG_FMR_EXM_CD = :CD AND (END_DT IS NULL OR END_DTM IS NULL) AND ORD_SLIP_CTG_CD &lt;&gt; 'MIG';
   EXCEPTION
    WHEN NO_DATA_FOUND THEN
     BEGIN
      SELECT ORD_CD
          , ORD_NM
        INTO V_CD
           , V_CD_NM
        FROM CCOOCBAC
       WHERE HSP_TP_CD = :HSP_TP_CD AND UPPER(REPLACE(ORD_NM,' ','')) LIKE '%' || UPPER(REPLACE(:CD_NM,' ','')) || '%' AND NVL(ORD_END_YN,'N') = 'N' AND ORD_GRP_CD IS NOT NULL;
     EXCEPTION
      WHEN OTHERS THEN
       BEGIN
        FOR REC IN (
              SELECT ORD_CD
                  , ORD_NM
                FROM CCOOCBAC
               WHERE HSP_TP_CD = :HSP_TP_CD
                AND UPPER(REPLACE(ORD_NM,' ','')) LIKE '%' || UPPER(REPLACE(:CD_NM,' ','')) || '%'
                 AND NVL(ORD_END_YN,'N') = 'N'
                 AND ORD_GRP_CD IS NOT NULL
        )
        LOOP
         DBMS_OUTPUT.PUT_LINE('['|| REC.ORD_CD || '] ' ||REC.ORD_NM );
        END LOOP;
       END ;
     END;
   END;
 END;
DBMS_OUTPUT.PUT_LINE('['|| V_CD || '] ' ||V_CD_NM );
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수동 판독 프로시저</QUERY_NAME>
    <QUERY_TEXT>PC_MSE_INTERPRETATION_PROC</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>AS_IS 코드로 차세대 코드 조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :HSP_TP_CD := '02';
EXEC :CD := 'RC101EP';
SELECT * fROM (
SELECT A.NEXTG_FMR_EXM_CD,EXM_CD,CD_NM
  FROM MSERMMMC A
 WHERE 1=1
   AND HSP_TP_CD = :HSP_TP_CD
 and ord_slIP_Ctg_cd &lt;&gt; 'MIG'
 and end_dt is null
   AND INSTR(A.NEXTG_FMR_EXM_CD, ',') &lt;1
UNION ALL
SELECT TRIM(REGEXP_SUBSTR(REPLACE(A.NEXTG_FMR_EXM_CD, ' ', ''), '[^,]+', 1, 1, 'i')) GB1,EXM_CD,CD_NM
  FROM MSERMMMC A
 WHERE 1=1
   AND HSP_TP_CD = :HSP_TP_CD
 and ord_slIP_Ctg_cd &lt;&gt; 'MIG'
 and end_dt is null
   AND INSTR(A.NEXTG_FMR_EXM_CD, ',')&gt;0
union all
SELECT
      TRIM(REGEXP_SUBSTR(REPLACE(A.NEXTG_FMR_EXM_CD, ' ', ''), '[^,]+', 1, 2, 'i')) GB2,EXM_CD,CD_NM
  FROM MSERMMMC A
 WHERE 1=1
   AND HSP_TP_CD = :HSP_TP_CD
 and ord_slIP_Ctg_cd &lt;&gt; 'MIG'
 and end_dt is null
   AND INSTR(A.NEXTG_FMR_EXM_CD, ',')&gt;0
union all
SELECT
      TRIM(REGEXP_SUBSTR(REPLACE(A.NEXTG_FMR_EXM_CD, ' ', ''), '[^,]+', 1, 3, 'i')) GB3,EXM_CD,CD_NM
  FROM MSERMMMC A
 WHERE 1=1
   AND HSP_TP_CD = :HSP_TP_CD
 and ord_slIP_Ctg_cd &lt;&gt; 'MIG'
 and end_dt is null
   AND INSTR(A.NEXTG_FMR_EXM_CD, ',')&gt;0
)A
WHERE (A.NEXTG_FMR_EXM_CD = :CD OR A.EXM_CD = :CD)
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>외부영상 뷰</QUERY_NAME>
    <QUERY_TEXT>VIEW VIEW_MSE_CD_PT_LIST ( PATNO, PATNAME, SEX, BIRTHDATE ) AS
SELECT B.PT_NO
     , B.PT_NM
     , B.SEX_TP_CD
     , TO_CHAR(B.PT_BRDY_DT,'YYYYMMDD') PT_BRDY_DT
     FROM PCTPCPAM_DAMO B</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오라클 날짜 해당달의 첫쨰날, 마지막날 구하기</QUERY_NAME>
    <QUERY_TEXT>SELECT LAST_DAY(TO_DATE('2022-01','YYYY-MM')),TRUNC(TO_DATE('2022-01-24','YYYY-MM-dd'),'MM')
   FROM DUAL</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>OnLoadMenu</QUERY_NAME>
    <QUERY_TEXT>--메뉴를 호출하는 식으로 하되 이미 열려있는것을 다시 앞으로 불러올 경우에는 EAM에서 해당 메뉴 중복가능을 X로 설정해줘야 한다.

                Application.Current.Dispatcher.BeginInvoke(new Action(delegate
                {
                    //if (DoYouHaveTheMenu("RM_POPUP_SaveAgpyExmImpl") == true)
                    //{
                    this.OnLoadMenu(menu_id);
                    List&lt;string&gt; targetList = new List&lt;string&gt;();
                    targetList.Add(menu_id);
                    Hashtable message = new Hashtable();                    
                    this.OnSendHISMessage(targetList, message);
                    //}
                }));</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>치환테스트</QUERY_NAME>
    <QUERY_TEXT>sElect pact_tp_cd,rpy_pact_tp_Cd,rpy_sts_Cd,a.*
 from mooorexm a
 where hsp_TP_cd='02' and pt_No ='09628445'
  and ord_Cd ='RC04015'
;
select rpy_sts_Cd,rtm_Fmt_dtm,preq_yn,a.*
 from msermamd a
 where hsp_TP_cd='02'
 and ord_Id ='150310012'</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>BestCare 안열릴 때</QUERY_NAME>
    <QUERY_TEXT>운영기 EAM이 켜져있으면 안열릴 수 있음. EAM끄고 실행할것</QUERY_TEXT>
    <GROUP>ERROR</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사결과조회 건수 표시</QUERY_NAME>
    <QUERY_TEXT>            if (inObj.EXRS_ASK_CTRA == "BRFG")  // 보고일자 기준 조회
            {
                if (inObj.SEL_EXAM_GUBUN == "1")
                {
                    result = (SelectTotalExamCount_OUT)this.DacAgent.Fill("HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultBrfgDtmCountSID", inObj, typeof(SelectTotalExamCount_OUT));
                }
                else if (inObj.SEL_EXAM_GUBUN == "3")
                {
                    result = (SelectTotalExamCount_OUT)this.DacAgent.Fill("HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultBrfgDtmCountDEPT", inObj, typeof(SelectTotalExamCount_OUT));
                }
                else
                {
                    result = (SelectTotalExamCount_OUT)this.DacAgent.Fill("HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultBrfgDtmCount", inObj, typeof(SelectTotalExamCount_OUT));
                }
            }
            else // 오더일자 기준 조회 [IN_ALL_YN : N(결과보고된것만), Y(전체)]
            {
                if (inObj.SEL_EXAM_GUBUN == "1")
                {
                    result = (SelectTotalExamCount_OUT)this.DacAgent.Fill("HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultCountSID", inObj, typeof(SelectTotalExamCount_OUT));
                }
                else if (inObj.SEL_EXAM_GUBUN == "3")
                {
                    result = (SelectTotalExamCount_OUT)this.DacAgent.Fill("HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultCountDEPT", inObj, typeof(SelectTotalExamCount_OUT)); 
                }
                else
                {
                    result = (SelectTotalExamCount_OUT)this.DacAgent.Fill("HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectAllExaminationResultCount", inObj, typeof(SelectTotalExamCount_OUT));
                }
            }

--검사결과조회 건수 표시</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>화순 원내판독 업데이트</QUERY_NAME>
    <QUERY_TEXT>select fsr_prgm_nm
   ,SUBSTR(fsr_prgm_nm,LENGTH(fsr_prgm_nm)) rsv_stat
   ,SUBSTR(substr(fsr_prgm_nm,0,length(fsr_prgm_nm)-2),23) exm
   ,ord_id
   ,pt_no
   ,rsv_dtm
   , exm_chdr_stf_No
   , pact_tp_cd
   ,a.*
 from mooorexm a
 where hsp_TP_cd='02'
  and ord_Ctg_cd ='BR1'
  and exm_prgr_Sts_cd = 'A'
  and SUBSTR(fsr_prgm_nm,LENGTH(fsr_prgm_nm)) = 'T'
  and SUBSTR(substr(fsr_prgm_nm,0,length(fsr_prgm_nm)-2),23) in  (select exm_cd
                                  from temp_exm_table3
                                 where cd_nm = 'OUT')</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오라클 특수문자 변환</QUERY_NAME>
    <QUERY_TEXT>SELECT 
REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(QUERYTEXT,'&amp;'||'amp;','&amp;'),'&amp;'||'lt;','&lt;'),'&amp;'||'gt;','&gt;'),'&amp;'||'apos;','`'),'&amp;'||'amp;','&amp;') QUERYTEXT
,A.* FROM HEQS.FXQUERYSTORE A WHERE QUERYID='HIS.MS.EC.PS.EV.SelectExaminationResultMain.SelectTheFirstRadiologyExaminationResult'</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>예약 슬롯메모 일괄업데이트</QUERY_NAME>
    <QUERY_TEXT>exec :HIS_HSP_TP_CD := '02';
exec :EXRM_TP_CD := 'RDU02';
EXEC :DTM := '10:30:00';
EXEC :MEMO := 'HPC';
select *
 from msermrrd
 where hsp_tP_Cd = :HIS_HSP_TP_CD
  and exrm_tp_Cd = :EXRM_TP_CD
  and to_char(rsv_dtm,'d') not in('1','7')
   and to_char(rsv_dtm,'HH24:mi:ss') = :DTM
;
update msermrrd
 set memo = :MEMO
 where hsp_tP_Cd = :HIS_HSP_TP_CD
  and exrm_tp_Cd = :EXRM_TP_CD
  and to_char(rsv_dtm,'d') not in('1','7')
   and to_char(rsv_dtm,'HH24:mi:ss') = :DTM</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>테이블 인덱스조회</QUERY_NAME>
    <QUERY_TEXT>select index_name,a.*
 from ALL_IND_COLUMNS a
 where table_name = 'MSERMINF_ORR'
 order by 1</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>위젯</QUERY_NAME>
    <QUERY_TEXT>SELECT *
  FROM CNLCRMWD
 WHERE HSP_TP_CD = '01'
   --AND MSCR_TP_CD = 'RO'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>화순 상황실</QUERY_NAME>
    <QUERY_TEXT>진료: 8228,8229,8230,8234
간호 : 8238,8239,8264,8268,8269
원무보험 : 8527,8529,8530
넷클라이언트 : Qlalfqjsgh1!</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>C# 텍스트 숫자로 변환</QUERY_NAME>
    <QUERY_TEXT>result = double.Parse(Regex.Replace(item.CR_RSULT, @"[^0-9|.]", ""));</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>eGFR 계산 함수</QUERY_NAME>
    <QUERY_TEXT>private void MakeEGFRExamResult(HSFDTOCollectionBaseObject&lt;SelectSpecimenExaminationResultAsk_OUT&gt; list)
        {
            foreach (var item in list.Where(d =&gt; string.IsNullOrEmpty(d.ORD_DT)).ToList())
            {
                list.Remove(item);
            } 

            var work_list = list.Clone&lt;SelectSpecimenExaminationResultAsk_OUT&gt;();
            int insert_idx = -1;
            SelectSpecimenExaminationResultAsk_OUT new_result = null;

            double age = double.Parse(Regex.Replace(PATIENTBASEINFO.AGE, @"[^0-9]", ""));

            int find_cnt = 0;
            foreach (var item in work_list.Where(d =&gt; d.EXM_CD == "LCG12"))
            {

                insert_idx = work_list.IndexOf(item) + 1 + (find_cnt * 2);

                new_result = new SelectSpecimenExaminationResultAsk_OUT();

                new_result.ACPT_DATE = item.ACPT_DATE;
                new_result.EITM_NM = "MDRD-eGFR";
                new_result.EITM_ABBR = "MDRD-eGFR";

                double result = -1000;

                try
                {
                    result = double.Parse(Regex.Replace(item.EXRS_CNTE, @"[^0-9|.]", ""));
                }
                catch
                {
                }

                if (result != -1000)
                {

                    if (PATIENTBASEINFO.SEX_CL == "M")
                        new_result.EXRS_CNTE = string.Format("{0:0.00}", (175 * Math.Pow(result, -1.154) * Math.Pow(age, -0.203)));
                    else
                        new_result.EXRS_CNTE = string.Format("{0:0.00}", (175 * Math.Pow(result, -1.154) * Math.Pow(age, -0.203) * 0.742));

                    new_result.EXRS_RMK_CNTE = "Creatinine결과에 의해 계산된 결과입니다.";
                }
                list.Insert(insert_idx, new_result);


                //
                new_result = new SelectSpecimenExaminationResultAsk_OUT();

                new_result.ACPT_DATE = item.ACPT_DATE;
                new_result.EITM_NM = "CKD-EPI-eGFR";
                new_result.EITM_ABBR = "CKD-EPI-eGFR";


                if (result != -1000)
                {
                    if (PATIENTBASEINFO.SEX_CL == "M")
                    {

                        double a = 1;
                        if (result / 0.9 &lt; 1) a = result / 0.9;

                        double b = 1;
                        if (result / 0.9 &gt; 1) b = result / 0.9;
                        new_result.EXRS_CNTE = string.Format("{0:0.00}", (141 * Math.Pow(a, -0.411) * Math.Pow(b, -1.209) * Math.Pow(0.993, age)));
                    }
                    else
                    {

                        double a = 1;
                        if (result / 0.7 &lt; 1) a = result / 0.7;

                        double b = 1;
                        if (result / 0.7 &gt; 1) b = result / 0.7;

                        new_result.EXRS_CNTE = string.Format("{0:0.00}", (141 * 1.018 * Math.Pow(a, -0.329) * Math.Pow(b, -1.209) * Math.Pow(0.993, age)));
                    }
                    new_result.EXRS_RMK_CNTE = "Creatinine결과에 의해 계산된 결과입니다.";
                }

                list.Insert(insert_idx + 1, new_result);


                find_cnt++;
            }

            list.AcceptChanges();
        }</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검 최근 검사결과 조회</QUERY_NAME>
    <QUERY_TEXT>FT_MSE_LM_RECENT_RESULT



FUNCTION      FT_MSE_LM_RECENT_RESULT   (  IN_HSP_TP_CD     VARCHAR2
                                         , IN_PT_NO         VARCHAR2    /* 환자번호 */
                                         , IN_DATE          DATE        /* 기준일자 */                                         
                                         , IN_ITEM          VARCHAR2    /* 항목 ITEM */
                                         , IN_TIME          VARCHAR2    /* 조건(ACPT:접수일자, VRFC:보고일자, EXMPRD_ACPT:검사기간-접수일자, EXMPRD_VRFC:검사기간-보고일자)  */
                                         , IN_FR_DT         DATE        /* 검사기간 : 시작일자 */
                                         , IN_ED_DT         DATE        /* 검사기간 : 종료일자 */
                                         , IN_GUBN          VARCHAR2    /* 구분자(1:접수시간, 2:검사결과, 3:접수시간+검사결과.. 필요시 추가할 것  */
                                        ) 
 /**********************************************************************************************
 *    서비스이름  : FT_MSE_LM_RECENT_RESULT
 *    최초 작성일 : 2021-11-28
 *    최초 작성자 : ezCaretech 홍승표
 *    Description : 최근검사결과조회
 *                        
 **********************************************************************************************/                                              
RETURN VARCHAR2
IS
    V_EXRS_CNTE      VARCHAR(4000) := '';
    V_ACPT_DTM       VARCHAR(4000) := '';   
    V_RETURN         VARCHAR(4000) := '';
    
    
BEGIN
    BEGIN        
    
        -- 접수일자 기준     
        IF IN_TIME = 'ACPT' THEN
            SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                   EXRS_CNTE
                 , ACPT_DTM  
              INTO V_EXRS_CNTE
                 , V_ACPT_DTM
              FROM (
                     SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                            EXRS_CNTE 
                          , TO_CHAR(ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS') ACPT_DTM
                       FROM MSELMAIV A
                      WHERE PT_NO = IN_PT_NO
                        AND A.HSP_TP_CD = IN_HSP_TP_CD
                        AND A.ACPT_DTM &lt;=  DECODE(IN_DATE, NULL, ACPT_DTM, IN_DATE)
                        AND A.EXM_CD IN (SELECT TH1_RMK_CNTE 
                                           FROM MSELMSID 
                                          WHERE HSP_TP_CD = A.HSP_TP_CD 
                                            AND LCLS_COMN_CD = 'EXRM_RESULT_1' 
                                            AND SCLS_COMN_CD_NM = UPPER(IN_ITEM)                                                     
                                        )
                        AND A.SPEX_PRGR_STS_CD = '3'
                        AND TRIM(EXRS_CNTE) IS NOT NULL   
                      ORDER BY ACPT_DTM DESC
                   )
             WHERE ROWNUM = 1
            ;              
        
        -- 보고일자 기준     
        ELSIF IN_TIME = 'EXMPRD' THEN
            SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                   EXRS_CNTE
                 , ACPT_DTM  
              INTO V_EXRS_CNTE
                 , V_ACPT_DTM
              FROM (
                     SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                            EXRS_CNTE 
                          , TO_CHAR(ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS') ACPT_DTM
                       FROM MSELMAIV A
                      WHERE PT_NO = IN_PT_NO
                        AND A.HSP_TP_CD = IN_HSP_TP_CD
                        AND A.LST_RSLT_VRFC_DTM  &lt;=  DECODE(IN_DATE, NULL, LST_RSLT_VRFC_DTM, IN_DATE)
                        AND A.EXM_CD IN (SELECT TH1_RMK_CNTE 
                                           FROM MSELMSID 
                                          WHERE HSP_TP_CD = A.HSP_TP_CD 
                                            AND LCLS_COMN_CD = 'EXRM_RESULT_1' 
                                            AND SCLS_COMN_CD_NM = UPPER(IN_ITEM)                                                     
                                        )
                        AND A.SPEX_PRGR_STS_CD = '3'
                        AND TRIM(EXRS_CNTE) IS NOT NULL   
                      ORDER BY ACPT_DTM DESC
                   )
             WHERE ROWNUM = 1
            ;              


        -- 검사기간-접수일자
        ELSIF IN_TIME = 'EXMPRD_ACPT' THEN
            SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                   EXRS_CNTE
                 , ACPT_DTM  
              INTO V_EXRS_CNTE
                 , V_ACPT_DTM
              FROM (
                     SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                            EXRS_CNTE 
                          , TO_CHAR(ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS') ACPT_DTM
                       FROM MSELMAIV A
                      WHERE PT_NO = IN_PT_NO
                        AND A.HSP_TP_CD = IN_HSP_TP_CD
                        AND A.ACPT_DTM  BETWEEN IN_FR_DT AND IN_ED_DT + .99999
                        AND A.EXM_CD IN (SELECT TH1_RMK_CNTE 
                                           FROM MSELMSID 
                                          WHERE HSP_TP_CD = A.HSP_TP_CD 
                                            AND LCLS_COMN_CD = 'EXRM_RESULT_1' 
                                            AND SCLS_COMN_CD_NM = UPPER(IN_ITEM)                                                     
                                        )
                        AND A.SPEX_PRGR_STS_CD = '3'
                        AND TRIM(EXRS_CNTE) IS NOT NULL   
                      ORDER BY ACPT_DTM DESC
                   )
             WHERE ROWNUM = 1
            ;              


        -- 검사기간-보고일자
        ELSIF IN_TIME = 'EXMPRD_VRFC' THEN
            SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                   EXRS_CNTE
                 , ACPT_DTM  
              INTO V_EXRS_CNTE
                 , V_ACPT_DTM
              FROM (
                     SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                            EXRS_CNTE 
                          , TO_CHAR(ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS') ACPT_DTM
                       FROM MSELMAIV A
                      WHERE PT_NO = IN_PT_NO
                        AND A.HSP_TP_CD = IN_HSP_TP_CD
                        AND A.LST_RSLT_VRFC_DTM  BETWEEN IN_FR_DT AND IN_ED_DT + .99999
                        AND A.EXM_CD IN (SELECT TH1_RMK_CNTE 
                                           FROM MSELMSID 
                                          WHERE HSP_TP_CD = A.HSP_TP_CD 
                                            AND LCLS_COMN_CD = 'EXRM_RESULT_1' 
                                            AND SCLS_COMN_CD_NM = UPPER(IN_ITEM)                                                     
                                        )
                        AND A.SPEX_PRGR_STS_CD = '3'
                        AND TRIM(EXRS_CNTE) IS NOT NULL   
                      ORDER BY ACPT_DTM DESC
                   )
             WHERE ROWNUM = 1
            ;              

        END IF;
        
        
        IF IN_GUBN = '1' THEN
            V_RETURN := V_ACPT_DTM;
        ELSIF IN_GUBN= '2' THEN
            V_RETURN := V_EXRS_CNTE;
        ELSIF IN_GUBN = '3' THEN
            V_RETURN := V_ACPT_DTM || ' : ' || V_EXRS_CNTE;
        ELSE
            V_RETURN := V_EXRS_CNTE;
        END IF;

        RETURN (V_RETURN) ;                                                      
        
        EXCEPTION
            WHEN NO_DATA_FOUND THEN  RETURN (V_EXRS_CNTE);
            WHEN OTHERS        THEN  RETURN (V_EXRS_CNTE);
    END;
    
END;
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>토글버튼 Toggle</QUERY_NAME>
    <QUERY_TEXT>&lt;Border Background="{StaticResource CommonButtonAreaNormalBackground}" Grid.Row="1"&gt;
            &lt;StackPanel&gt;
                &lt;HToggleButton Template="{StaticResource CommonExpandButtonTemplateKey}" HorizontalContentAlignment="Stretch" x:Name="toggleBTN" RenderTransformOrigin="0.5,0.5" Visibility="{Binding VISDOWN}" IsChecked="{Binding TOGGLE}" &gt;
                    &lt;HToggleButton.RenderTransform&gt;
                        &lt;TransformGroup&gt;
                            &lt;ScaleTransform ScaleY="-1" ScaleX="1"/&gt;
                            &lt;SkewTransform AngleY="0" AngleX="0"/&gt;
                            &lt;RotateTransform Angle="0"/&gt;
                            &lt;TranslateTransform/&gt;
                        &lt;/TransformGroup&gt;
                    &lt;/HToggleButton.RenderTransform&gt;
                &lt;/HToggleButton&gt;
                &lt;AnimateExpander BorderThickness="0"   HeaderVisibility="Collapsed" IsExpanded="{Binding IsChecked, ElementName=toggleBTN}"&gt;
                    &lt;Grid Height="30"&gt;
                        &lt;Grid&gt;
                            &lt;Border Background="{StaticResource CommonButtonAreaNormalBackground}"&gt;
                                &lt;DockPanel Margin="5,0,5,0" LastChildFill="False"&gt;
                                    &lt;HButton Command="{Binding PrintRsvCommand}" CommandParameter="{Binding ElementName=dgrMainTain}" Content="예약증 출력" ButtonTyped="Print" Style="{StaticResource CommonButtonPrintStyle}" Margin="5,0,0,0"/&gt;
                                &lt;/DockPanel&gt;
                            &lt;/Border&gt;
                        &lt;/Grid&gt;
                    &lt;/Grid&gt;
                &lt;/AnimateExpander&gt;
            &lt;/StackPanel&gt;
        &lt;/Border&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>전자동의서 파라미터</QUERY_NAME>
    <QUERY_TEXT>public static string MakePatientInfoJsonByViewer(GlobalPatientInfo_OUT PatientInfo, ElectronicConsentFormParameter param)
        {
            JavaScriptSerializer ser = new JavaScriptSerializer();
            ser.MaxJsonLength = int.MaxValue;
            string result = string.Empty;
            Dictionary&lt;string, string&gt; paramList = new Dictionary&lt;string, string&gt;();

            paramList.Add("I_PTNT_NO", PatientInfo.PT_NO); //환자이름
            paramList.Add("I_PTNT_NAME", PatientInfo.PT_NM); //환자이름
            paramList.Add("PACT_ID", PatientInfo.PACT_ID); //수진ID

            PatientInfo_OUT outObj = new PatientInfo_OUT()
            {
                HIS_HSP_TP_CD = SessionManager.SystemInfo.HSP_TP_CD,
                PT_NO = PatientInfo.PT_NO,
                PACT_ID = PatientInfo.PACT_ID,
                MED_DEPT_CD = PatientInfo.MED_DEPT_CD
            };
            outObj = (PatientInfo_OUT)UIMiddlewareAgent.InvokeBizService("HIS.MC.DR.RM.NC.BIZ.OperationConsentFormRecordingRecordBL", "SelectPatientInformationAsk", outObj);


            string s_pme_cls_cd = string.Empty;

            if (!string.IsNullOrEmpty(PatientInfo.PME_CLS_CD))
            {
                if (PatientInfo.PME_CLS_CD.StartsWith("B"))
                {
                    s_pme_cls_cd = "13"; // 건강보험(13), 
                }
                else if (PatientInfo.PME_CLS_CD.StartsWith("E"))
                {
                    s_pme_cls_cd = "2"; // 의료급여(2), 
                }
                else if (PatientInfo.PME_CLS_CD.StartsWith("SA"))
                {
                    s_pme_cls_cd = "32"; // 산재(32), 
                }
                else if (PatientInfo.PME_CLS_CD.StartsWith("CA"))
                {
                    s_pme_cls_cd = "51"; // 자보(51), 
                }
                else if (PatientInfo.PME_CLS_CD.StartsWith("AA"))
                {
                    s_pme_cls_cd = "41"; // 일반(41) 
                }
            }
            if (!string.IsNullOrEmpty(PatientInfo.SEC_RRN))
            {
                //paramList.Add("I_PATIENT_REGNO", PatientInfo.SEC_RRN.Substring(1, 6) + "-" + PatientInfo.SEC_RRN.Substring(7, 1) + "******"); // 주민번호
                paramList.Add("I_PATIENT_REGNO", PatientInfo.SEC_RRN.Substring(0, 6) + "-" + PatientInfo.SEC_RRN.Substring(6, 1) + "******"); // 주민번호
            }
            if (PatientInfo.PT_BRDY_DT.HasValue)
            {
                paramList.Add("I_BIRTH_DAY", PatientInfo.PT_BRDY_DT.Value.ToString("yyyy-MM-dd")); //생년월일
            }

            paramList.Add("I_PTNT_TYPE", s_pme_cls_cd); // 급종구분    ※ 괄호안에 숫자는 던져주셔야 되는 값
            paramList.Add("I_CLN_DEPT_NAME", PatientInfo.MED_DEPT_NM); // 진료과 명
            paramList.Add("I_CLN_DEPT_CODE", PatientInfo.MED_DEPT_CD); // 진료과 코드
            paramList.Add("I_WARD", PatientInfo.WD_DEPT_CD); //병동
            paramList.Add("I_ROOM", PatientInfo.PRM_NO); //병실(호실)
            paramList.Add("I_PATIENT_VISIT_TYPE", PatientInfo.PACT_TP_CD); // 환자 수진 구분. 원무의 경우 W 고정
            paramList.Add("I_SEX", PatientInfo.SEX_TP_CD); // 성별
            paramList.Add("I_AGE", PatientInfo.AGE); // 나이
            paramList.Add("I_PTNT_TEL", outObj.PTNT_TEL); //자택전화번호
            paramList.Add("I_TEL", outObj.TEL); // 휴대폰
            paramList.Add("I_PTNT_ADDR", outObj.PTNT_ADDR); // 주소
            paramList.Add("I_DIAG_NAME", outObj.DIAG_NAME); // 진단명
            paramList.Add("OrderCd", param.ELTR_CSFM_MPNG_TP_CD); // 매핑구분 (OR:오더 OP:수술)
            paramList.Add("OrderName", param.ELTR_CSFM_MPNG_ID_NM); // ORD_ID / OP_EXPT_REG_ID
            paramList.Add("ORD_DTL_CNTE", param.ORD_DTL_CNTE); //사본발급오더상세
            paramList.Add("PT_REL_TP_NM", param.PT_REL_TP_NM); // 신청인
            paramList.Add("PT_REL_DTL_ITEM", param.PT_REL_DTL_ITEM); // 신청인 증명서
            paramList.Add("CPY_UPUR_NM", param.CPY_UPUR_NM); // 발급용도
            paramList.Add("CD_COPY", param.CD_COPY); // CD COPY
            paramList.Add("RTN_YN", param.RTN_YN); // 회송


            paramList.Add("SCAN_DATA", param.SCAN_DATA); // 스캔항목


            if (PatientInfo.PACT_TP_CD == "O")
            {
                paramList.Add("I_DOCTOR_ID", PatientInfo.MEDR_STF_NO); //  주치의 ID
                paramList.Add("I_DOCTOR_NAME", PatientInfo.MEDR_NM); //  주치의 이름
            }
            else
            {
                paramList.Add("I_DOCTOR_ID", PatientInfo.ANDR_STF_NO); //  주치의 ID
                paramList.Add("I_DOCTOR_NAME", PatientInfo.ANDR_NM); //  주치의 이름
                paramList.Add("I_CHARGE_ID", PatientInfo.NCDR_STF_NO); //    담당의 or 전공의 id
                paramList.Add("I_CHARGE_NAME", PatientInfo.NCDR_NM); //   담당의 or 전공의 이름

                if (PatientInfo.MED_DT.HasValue)
                {
                    paramList.Add("I_ADMISSION_DATE", PatientInfo.MED_DT.Value.ToString("yyyyMMdd")); // 입원일
                }
            }

            if (PatientInfo.MED_DT.HasValue)
            {
                paramList.Add("I_CLN_DATE", PatientInfo.MED_DT.Value.ToString("yyyyMMdd")); // 진료일
            }

            // 매핑된 검사오더가 있는경우, 검사오더명 세팅 2022.02.08
            if (!string.IsNullOrEmpty(param.ELTR_CSFM_MPNG_ORD_NM))
            {
                paramList.Add("I_INSPECTION_NAME", param.ELTR_CSFM_MPNG_ORD_NM);
            }


            paramList.Add("PRINT_YN", param.NO_PREVIEW_PRINT_YN); // Y인 경우 미리보기없이 출력
            
            result = ser.Serialize(paramList);
            return result;
        }</QUERY_TEXT>
    <GROUP>전자동의서</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>LISTAGG 사용법</QUERY_NAME>
    <QUERY_TEXT>SELECT LISTAGG(가져올컬럼, 구분자) WITHIN GROUP (ORDER BY 순서컬럼) FROM TABLE_NM

22/04/07(향)2mg/0.5mL Ativan inj.(Lorazepam)
22/04/07(향)5mg/5mL Midazolam(Midazolam)
22/04/07(BAG) NS 1000ml (Sodium Chloride)
22/04/07(Peri) 1,875ml Nutriflex lipid peri(Nutriflex Lipid Plus)
22/04/07(BAG) NS 500ml (Sodium Chloride)
22/04/07(AMP) N/S 20ml(plastic)(Sodium Chloride)</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>인덱스 없는 테이블 강제 인덱스 </QUERY_NAME>
    <QUERY_TEXT>SELECT /*+ PARALLEL(A 8) */ * FROM HMED.MOOOREXM_LOG A WHERE ORD_ID='150371180'</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>DBLINK 조회</QUERY_NAME>
    <QUERY_TEXT>select *
from all_db_links</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>동적 쿼리 (오라클)</QUERY_NAME>
    <QUERY_TEXT>FUNCTION      FT_GET_PACS_HISORDERID ( IN_HSP_TP_CD    IN VARCHAR2
                                     , IN_ORD_ID       IN VARCHAR2  )        
    RETURN VARCHAR2
    /**********************************************************************
    작 성 자 : 오원빈 
    작 성 일 : 2021-10-05
    내    용 : ORD_ID 를 받아서 PACS의 HISORDERID를 리턴함.
               
    수정이력 : 인터페이스 중간테이블의 가장 최근 상태값이 CA(캔슬)이라면 조회해오지 않도록 수정 
    **********************************************************************/        
IS
    R_ORD_ID                VARCHAR2(100) :='';                    --PACS ORD_ID
    V_ORD_ID                VARCHAR2(100) := '';    
    V_ACCS_ID               VARCHAR2(100) := '';        
    
    V_DB_LINK    VARCHAR2(4000) := '';
    V_QUERY VARCHAR2(4000) :='';
BEGIN  
    BEGIN                            
        IF IN_HSP_TP_CD = '01' THEN
            V_DB_LINK := '@DL_PACS_HAKDONG';
        ELSIF IN_HSP_TP_CD = '02' THEN
            V_DB_LINK := '@DL_PACS_HWASUN';
        ELSIF IN_HSP_TP_CD = '03' THEN
            V_DB_LINK := '@DL_PACS_BITGOUEL';
        ELSIF IN_HSP_TP_CD = '04' THEN
            V_DB_LINK := '@DL_PACS_DENTAL';                        
        END IF;
    END;                        
                    
    BEGIN
        SELECT ORD_ID
              ,ACCS_ID            
          INTO V_ORD_ID
              ,V_ACCS_ID
          FROM MSERMAAD
         WHERE HSP_TP_CD = IN_HSP_TP_CD
           AND ORD_ID = IN_ORD_ID;                                               
    END;
    BEGIN                                               
        SELECT ORD_ID                  --ORD_ID로 매칭된게 없으면 ACCS_ID 로 조회
          INTO R_ORD_ID
          FROM HINF.MSERMINF_ORU A
                ,MSERMAAD B
                ,(SELECT EVENTTYPE,HISORDERID
                 FROM (
                          SELECT EVENTTYPE,HISORDERID
                         FROM HINF.MSERMINF_ORR
                           WHERE HISORDERID = V_ORD_ID
                           ORDER BY QUEUEID DESC
                            )
                   WHERE ROWNUM =1
                  )C
         WHERE B.HSP_TP_CD = IN_HSP_TP_CD
           AND B.ORD_ID = A.HISORDERID          
           AND B.ORD_ID = C.HISORDERID
           AND C.EVENTTYPE &lt;&gt; 'CA'
           AND B.ORD_ID = IN_ORD_ID
           AND A.READSTATUS IN ('M','L','C')  
           AND ROWNUM = 1 
           ;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            BEGIN
                SELECT ACCS_ID
                  INTO R_ORD_ID
                  FROM HINF.MSERMINF_ORU A
                      ,MSERMAAD B
                      ,(SELECT EVENTTYPE,HISORDERID
                       FROM (
                                SELECT EVENTTYPE,HISORDERID
                               FROM HINF.MSERMINF_ORR
                                 WHERE HISORDERID = V_ACCS_ID
                                 ORDER BY QUEUEID DESC
                                )
                         WHERE ROWNUM =1
                  )C
                 WHERE B.HSP_TP_CD = IN_HSP_TP_CD
                   AND B.ACCS_ID   = A.HISORDERID             
                   AND B.ACCS_ID   = C.HISORDERID
                   AND C.EVENTTYPE &lt;&gt; 'CA'                        
                   AND B.ORD_ID = IN_ORD_ID                                 
                   AND A.READSTATUS IN ('M','L','C')            
                   AND ROWNUM = 1                    
                   ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                    BEGIN
                        V_QUERY :=  'SELECT HISORDERID FROM DORDER' || V_DB_LINK || ' WHERE HISORDERID = ''' || V_ACCS_ID  || '''';   
                    END; 
                    BEGIN
                        EXECUTE IMMEDIATE V_QUERY
                           INTO R_ORD_ID;
                    EXCEPTION
                        WHEN OTHERS THEN
                            R_ORD_ID := NULL;
                            RETURN R_ORD_ID ;
                    END ;
            END;
    END;

    RETURN R_ORD_ID;
   
END;


FUNCTION      FT_MSE_USECNTR ( IN_HSP_TP_CD    IN VARCHAR2
                                     , IN_COMN_GRP_CD  IN VARCHAR2
                                     , IN_COMN_CD      IN VARCHAR2
                                     , IN_COMN_CD_NM   IN VARCHAR2  )        
    RETURN VARCHAR2
    /**********************************************************************
    작 성 자 : 오원빈 
    작 성 일 : 2022-04-28
    내    용 : 해당 DB의 특정 로직의 사용여부를 컨트롤함 
               COMN_GRP_CD : USECNTR
               COMN_CD     : 해당 로직의 실행 여부를 결정할 코드
               COMN_CD_NM  : 해당 로직(패키지명 , EQS명 , 등등)
               
    수정이력 : 
    **********************************************************************/        
IS
    R_USE_YN                VARCHAR2(100) :='';                    --리턴값, (사용여부 Y면 해당 로직 사용함, N이면 사용안함.)
    
    V_QUERY VARCHAR2(4000) :='';
BEGIN                            
    BEGIN
--        V_QUERY :=  'SELECT USE_YN FROM CCCMCSTE WHERE HSP_TP_CD = ''' || IN_HSP_TP_CD || ''' AND COMN_GRP_CD = ''' ||IN_COMN_GRP_CD || ''' AND COMN_CD = ''' || IN_COMN_CD || ''' AND COMN_CD_NM = ''' ||IN_COMN_CD_NM || '''';
        V_QUERY :=  'SELECT USE_YN 
                       FROM CCCMCSTE 
                      WHERE HSP_TP_CD = :1 
                        AND COMN_GRP_CD = :2 
                        AND COMN_CD = :3 
                        AND COMN_CD_NM = :4';      
    END; 
    BEGIN
        EXECUTE IMMEDIATE V_QUERY
           INTO R_USE_YN
          USING IN_HSP_TP_CD,IN_COMN_GRP_CD,IN_COMN_CD,IN_COMN_CD_NM;
    EXCEPTION
        WHEN OTHERS THEN   
        /*DEFAULT는 사용함 .*/
            R_USE_YN := 'Y';
            RETURN R_USE_YN ;
    END ;

    RETURN R_USE_YN;
   
END;

</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>창고부서 목록</QUERY_NAME>
    <QUERY_TEXT>SELECT NEXTG_FMR_COMN_CD,a.* FROM cnlrcste a WHERE 1=1 AND hsp_Tp_Cd = '02' AND comn_grp_cd = 'RPIA099'</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>마이그 영상검사 강제 판독처리</QUERY_NAME>
    <QUERY_TEXT>UPDATE MSERMAAD A
 SET EXM_PRGR_STS_CD = 'N'
 WHERE HSP_TP_CD='02'
  AND EXM_PRGR_STS_CD = 'D'
  AND ORD_CTG_CD = 'BR1'
  AND NOT EXISTS(SELECT 1 FROM MOOOREXM WHERE HSP_TP_CD= A.HSP_TP_CD AND ORD_ID = A.ORD_ID)
;  
COMMIT;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>OnSendHISMessage(화면 열려있을때 데이터 재조회)</QUERY_NAME>
    <QUERY_TEXT>//OnSendHISMessage  --메세지를 보내는 부분으로 해당 메뉴가 이미 열려있을 경우 메뉴아이디와 파라미터를 HashTable 형식으로 넘겨준다.
/// &lt;summary&gt;
        /// name         : 검사의뢰서 조회
        /// desc         : 검사의뢰서 조회
        /// author       : 오원빈
        /// create date  : 2021-11-01
        /// update date  : 2021-11-01
        /// &lt;/summary&gt;
        /// &lt;remarks&gt;&lt;/remarks&gt;
        private void PopupExmForm(object p)
        {
            if (SELECTORDERPRESCRIPTION_SEL == null) return;
              
            string menu_id = "RM_POPUP_SelectExaminationReferralForm";
            if (DoYouHaveTheMenu(menu_id) == true)
            {
                List&lt;string&gt; targetList = new List&lt;string&gt;();
                targetList.Add(menu_id);
                Hashtable message = new Hashtable();
                message.Add("MENU_ID", menu_id);                
                message.Add("PT_NO", SELECTORDERPRESCRIPTION_SEL.PT_NO);
                message.Add("ORD_DT", SELECTORDERPRESCRIPTION_SEL.ORD_DT);
                message.Add("ORD_CD", SELECTORDERPRESCRIPTION_SEL.ORD_CD);
                message.Add("MDFM_ID", Convert.ToDecimal(SELECTORDERPRESCRIPTION_SEL.MDFM_ID));
                message.Add("IPPR_ID", SELECTORDERPRESCRIPTION_SEL.IPPR_ID);

                this.OnSendHISMessage(targetList, message);
            }
            else
            {
                PopUpBase pop = this.OnLoadPopupMenu("RM_POPUP_SelectExaminationReferralForm", new object[] { SELECTORDERPRESCRIPTION_SEL.PT_NO, Convert.ToDateTime(SELECTORDERPRESCRIPTION_SEL.ORD_DT),
                    SELECTORDERPRESCRIPTION_SEL.ORD_CD, Convert.ToDecimal(SELECTORDERPRESCRIPTION_SEL.MDFM_ID), SELECTORDERPRESCRIPTION_SEL.IPPR_ID });
                pop.WindowStartupLocation = WindowStartupLocation.CenterScreen;
                pop.Topmost = true; //부모창 항상 위에
                pop.Show();
                pop.ShowInTaskbar = false;
              
            }
           
        }
//OnReceiveHISMessage  --메세지를 받는 부분으로, try,catch를 이용하여 null예외처리를 해준다. 넘겨받은 MENU_ID와 EAM의 MENU_ID가 같은 것이 있다면 조회 이벤트를 태운다. if문 안에는 상황에 맞춰 짤 수 있음.  
public override void OnReceiveHISMessage(Hashtable message)
        {
            foreach (DictionaryEntry entry in message)
            {
                if (string.Equals(entry.Key, this.EAM_INFO.MENU_CD) || string.Equals(entry.Key, "*"))
                {
                    HISMessageAgent agent = entry.Value as HISMessageAgent;
                    if (agent != null) agent.Invoke(this);
                }
            }
            //2022-04-09추가 , 검사의뢰서가 열려있을 때 바뀐 환자정보로 의뢰서 재조회
            try
            {
                if (message.ContainsKey("MENU_ID") &amp;&amp; string.Equals(message["MENU_ID"].ToString(),this.EAM_INFO.MENU_CD))
                {
                    PreSetRefFormInfo(message["PT_NO"].ToString(), Convert.ToDateTime(message["ORD_DT"].ToString()), message["ORD_CD"].ToString(), Convert.ToDecimal(message["MDFM_ID"].ToString()), message["IPPR_ID"].ToString());
                    this.model.Search();
                }
            }
            catch { }
        }</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>기존창 유지한채 환자정보만 변경</QUERY_NAME>
    <QUERY_TEXT>/// &lt;summary&gt;
        /// name         : BM검사결과관리 Open
        /// desc         : BM검사결과관리 Open
        /// author       : ezCaretech 송창수
        /// create date  : 2022-04-09
        /// update date  : 2022-04-09
        /// &lt;/summary&gt;
        /// &lt;remarks&gt;&lt;/remarks&gt;
        PopUpBase popBMExamResultMgmt;
        private void miOpenBMExamRsultMgmt_Click(object sender, RoutedEventArgs e)
        {
            if (this.EXAMRESULT_SEL == null) return;

            string menu_id = "LM_RESULT_GENEXAMNG_SaveExamResultMgmtTypeBM";

            if (this.popBMExamResultMgmt == null)
            {
                popBMExamResultMgmt = this.OnLoadPopupMenu(menu_id);
                popBMExamResultMgmt.WindowStartupLocation = WindowStartupLocation.CenterScreen;
                //popBMExamResultMgmt.Owner = Window.GetWindow(this);
                popBMExamResultMgmt.Show(); //Show()를 반드시 먼저 실행해야 됨
            }
            else
            {
                Window window = Window.GetWindow(popBMExamResultMgmt);

                if (window.WindowState == WindowState.Minimized)
                    window.WindowState = WindowState.Normal;

                window.Focus();
            }

            MainMenuInfo mainMenuInfo = popBMExamResultMgmt.Content as MainMenuInfo;
            if (mainMenuInfo == null) return;

            SaveExamResultMgmt uc = mainMenuInfo.INSTANCE_OF_MENU as SaveExamResultMgmt;
            if (uc == null) return;

            uc.ChangePtNo(EXAMRESULT_SEL.PT_NO);
        }</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>대용량 저장 </QUERY_NAME>
    <QUERY_TEXT>//C#--
/// &lt;summary&gt;
        /// name         : 원내판독건수 저장
        /// desc         : 원내판독건수 저장
        /// author       : 오원빈
        /// create date  : 2022-03-19
        /// update date  : 2022-03-19
        /// &lt;/summary&gt;
        /// &lt;remarks&gt;&lt;/remarks&gt;
        private void SaveHspInIptnCnt()
        {
            if (MsgBox.Display("저장하겠습니까?", MessageType.MSG_TYPE_QUESTION, messageButton: MessageBoxButton.YesNo) != MessageBoxResult.Yes) return;

            HSFDTOCollectionBaseObject&lt;SaveHspInIptnCntManagement_INOUT&gt; param = new HSFDTOCollectionBaseObject&lt;SaveHspInIptnCntManagement_INOUT&gt;();
            SaveHspInIptnCntManagement_INOUT inObj = new SaveHspInIptnCntManagement_INOUT();
            foreach (var inExmCd in EXAMCODE_LIST)
            {
                foreach (var item in HSPINIPTNCNT_LIST)
                {
                    item.PT_HME_DEPT_CD = item.PT_HME_DEPT_CD ?? "X"; //진료과를 넣어주다가 진료과를 안쓴다고 하여서 진료과 정보가 없으면 X로 Insert 후 Null로 Update

                    if (inObj.IN_SAVE_DATA == null)
                        inObj.IN_SAVE_DATA = inObj.IN_SAVE_DATA + item.RSV_DT + "," + inExmCd.EXM_GRP_DTL_CD + "," + item.PACT_TP_CD + "," + item.PT_HME_DEPT_CD + "," + item.HSIN_IPTN_CNT + "@";
                    else if (System.Text.Encoding.Default.GetByteCount(inObj.IN_SAVE_DATA) &lt; 3800)
                        inObj.IN_SAVE_DATA = inObj.IN_SAVE_DATA + item.RSV_DT + "," + inExmCd.EXM_GRP_DTL_CD + "," + item.PACT_TP_CD + "," + item.PT_HME_DEPT_CD + "," + item.HSIN_IPTN_CNT + "@";
                    else if (System.Text.Encoding.Default.GetByteCount(inObj.IN_SAVE_DATA) &gt;= 3800)
                    {
                        inObj.IN_SAVE_DATA = inObj.IN_SAVE_DATA + item.RSV_DT + "," + inExmCd.EXM_GRP_DTL_CD + "," + item.PACT_TP_CD + "," + item.PT_HME_DEPT_CD + "," + item.HSIN_IPTN_CNT + "@";
                        inObj.IN_SAVE_DATA = inObj.IN_SAVE_DATA.Substring(0, inObj.IN_SAVE_DATA.Length - 1);
                        param.Add(inObj);
                        inObj = new SaveHspInIptnCntManagement_INOUT();
                    }
                }
            }
            if (!string.IsNullOrEmpty(inObj.IN_SAVE_DATA))
            {
                inObj.IN_SAVE_DATA = inObj.IN_SAVE_DATA.Substring(0, inObj.IN_SAVE_DATA.Length - 1);
                param.Add(inObj);
            }
            
            Result_OUT result = (Result_OUT)UIMiddlewareAgent.InvokeBizService(this, BIZ_CLASS, "SaveHspInIptnCnt", param);

            if (result.IsSucess)
            {
                MsgBox.Display("저장 되었습니다.", MessageType.MSG_TYPE_INFORMATION, Owner: this.OwnerWindow, TimeSpan: 3000);
            }
            else
            {
                MsgBox.Display("저장에 실패 하였습니다.", MessageType.MSG_TYPE_ERROR);
            }
        }
//쿼리

&lt;sql id="HIS.MS.IV.RM.MS.SaveHspInIptnCnt"&gt;&lt;!--
    Clss :  text
    Desc :  원내판독건수 저장
    Author : 오원빈 
    Create date : 2022-03-19
    Update date : 
--&gt;
DECLARE 
 V_SAVE_DATA VARCHAR2(4000) := :IN_SAVE_DATA
 ;
BEGIN
 FOR REC IN 
 (
 WITH EXMV AS
  (
   SELECT V_SAVE_DATA AS TXT
     FROM DUAL
  )
 SELECT REGEXP_SUBSTR(A.EXM,'[^,]+',1,1) AS RSV_DT
   ,REGEXP_SUBSTR(A.EXM,'[^,]+',1,2) AS ORD_CD
   ,REGEXP_SUBSTR(A.EXM,'[^,]+',1,3) AS PACT_TP_CD
   ,REGEXP_SUBSTR(A.EXM,'[^,]+',1,4) AS PT_HME_DEPT_CD  
   ,REGEXP_SUBSTR(A.EXM,'[^,]+',1,5) AS HSIN_IPTN_CNT
 FROM(
  SELECT DISTINCT TRIM(REGEXP_SUBSTR(A.TXT,'[^@]+',1,LEVEL)) EXM
   FROM EXMV A
   CONNECT BY INSTR(A.TXT,'@',1,LEVEL-1)&gt;0
  )A 
 )
 LOOP
  MERGE /*HIS.MS.IV.RM.MS.SaveHspInIptnCnt*/
   INTO MSERMHID A
    USING (SELECT :HIS_HSP_TP_CD   HSP_TP_CD
                 ,REC.RSV_DT       RSV_DT
                 ,REC.ORD_CD       ORD_CD
                 ,REC.PACT_TP_CD   PACT_TP_CD
                 --,REC.PT_HME_DEPT_CD  PT_HME_DEPT_CD
             FROM DUAL
          )B
     ON (A.HSP_TP_CD = B.HSP_TP_CD
     AND A.RSV_DT = B.RSV_DT
     AND A.ORD_CD = B.ORD_CD
     AND A.PACT_TP_CD = B.PACT_TP_CD
    -- AND A.PT_HME_DEPT_CD = B.PT_HME_DEPT_CD
       )
   WHEN MATCHED THEN
    UPDATE SET
     A.HSIN_IPTN_CNT = REC.HSIN_IPTN_CNT
    ,A.LSH_DTM   = SYSDATE
    ,A.LSH_STF_NO    = :HIS_STF_NO
    ,A.LSH_PRGM_NM   = :HIS_PRGM_NM
    ,A.LSH_IP_ADDR  = :HIS_IP_ADDR
   WHEN NOT MATCHED THEN
    INSERT 
    (HSP_TP_CD
    ,RSV_DT
    ,ORD_CD
    ,PACT_TP_CD
    ,PT_HME_DEPT_CD
    ,HSIN_IPTN_CNT
    ,FSR_DTM
    ,FSR_STF_NO
    ,FSR_PRGM_NM
    ,FSR_IP_ADDR
    ,LSH_DTM
    ,LSH_STF_NO
    ,LSH_PRGM_NM
    ,LSH_IP_ADDR
    )
    VALUES
    (:HIS_HSP_TP_CD
    ,REC.RSV_DT
    ,REC.ORD_CD
    ,REC.PACT_TP_CD
    ,REC.PT_HME_DEPT_CD
    ,REC.HSIN_IPTN_CNT
    ,SYSDATE
    ,:HIS_STF_NO
    ,:HIS_PRGM_NM
    ,:HIS_IP_ADDR
    ,SYSDATE
    ,:HIS_STF_NO
    ,:HIS_PRGM_NM
    ,:HIS_IP_ADDR
    );
 END LOOP; 
END;  
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>탭사이즈 조절 텍스트박스 생성</QUERY_NAME>
    <QUERY_TEXT>public class MyTextBox : TextBox
{
    public MyTextBox()
    {
        //Defaults to 4
        TabSize = 4;
    }

    public int TabSize
    {
        get;
        set;
    }

    protected override void OnPreviewKeyDown(KeyEventArgs e)
    {
        if (e.Key == Key.Tab)
        {
            String tab = new String(' ', TabSize);
            int caretPosition = base.CaretIndex;
            base.Text = base.Text.Insert(caretPosition, tab);
            base.CaretIndex = caretPosition + TabSize + 1;
            e.Handled = true;
        }
    }
}</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>고위험병원체</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.CM.IF.IF.SelectMersExaminationPatientAsk"&gt;&lt;!--
    Clss :  text
    Desc : 메르스검사환자조회
    Author : 정원준 
    Create date : 2015-06-09
    Update date : 2015-06-09
                  2016-12-26 강민현 메르스 검사환자조회를 활용한 인플루엔자 검사 환자 조회 요청(201612-00478) 
                  2021-10-07 오원빈,날짜 형식 오류 수정
--&gt;

/*◐◐◐◐◐ *** 병원구분 : 문병길 *** ◑◑◑◑◑*/ 

SELECT /* 진료-메르스검사환자조회-HIS.MC.CM.IF.IF.SelectMersExaminationPatientAsk */
       A.PT_TP_NM                       PT_TP_NM          -- 환자구분
     , A.PT_NO                          PT_NO             -- 환자번호
     , A.PT_NM                          PT_NM             -- 환자성명
     , A.SEX_TP_CD                      SEX_TP_CD         -- 성별
     , A.PT_BRDY_DT                     PT_BRDY_DT        -- 생년월일
     , A.ADS_DT                         ADS_DT            -- 입원일자
     , A.DS_EXPT_DT                     DS_EXPT_DT        -- 퇴원일자
     , A.ACPT_DTM                       ACPT_DTM          -- 접수일자
     , A.BRFG_DTM                       BRFG_DTM          -- 보고일자
     , A.PT_HME_DEPT_CD                 PT_HME_DEPT_CD    -- 진료과
     , A.PBSO_DEPT_CD                   PBSO_DEPT_CD      -- 의뢰처
     , A.EXRS                           EXRS              -- 검사결과
     , A.SPC_NM                         SPC_NM            -- 검체종류
     , A.STF_YN                         STF_YN            -- 직원여부
     , DECODE(A.CLCTN, NULL, 'N', 'Y')  CUR_SIHS_YN       -- 현재재원여부
     , A.CLCTN                          CLCTN             -- 현위치
     , A.ORD_CD                         EXM_CD
     , A.ORD_NM                         EXM_NM
     , A.ORD_DT       ORD_DT     --처방일 
     , TO_CHAR(A.ORD_DTM,'YYYY-MM-DD HH24:MI:SS')      ORD_DTM     --최초처방일시
     , A.MED_MIFI_TP_NM     MED_MIFI_TP_NM    --보험구분명
     , A.MED_MIFI_TP_CD     MED_MIFI_TP_CD   --진료수가보험구분코드
     , DECODE(UPPER(A.EXRS),'POSITIVE','Y','N')  POSITIVE_YN --양성여부
  FROM (
        SELECT (
                CASE B.PACT_TP_CD
                    WHEN 'O' THEN '외래'
                    WHEN 'I' THEN '입원'
                    WHEN 'E' THEN '응급'
                END
               ) PT_TP_NM
             , A.PT_NO
             , C.PT_NM
             , C.SEX_TP_CD
             , C.PT_BRDY_DT
             , D.ADS_DT
             , D.DS_EXPT_DT
             , B.ACPT_DTM
             , B.BRFG_DTM
             , B.ORD_DT
             , B.FSR_DTM   ORD_DTM
             , B.MED_MIFI_TP_CD                     MED_MIFI_TP_CD
             , (SELECT COMN_CD_NM FROM CCCCCSTE WHERE COMN_GRP_CD = 'DR00033' AND COMN_CD = B.MED_MIFI_TP_CD)  MED_MIFI_TP_NM
             , A.PT_HME_DEPT_CD
             , A.PBSO_DEPT_CD
             , (
                SELECT SMP_EXRS_CNTE
                  FROM MSELMAID
                 WHERE SPCM_NO          = B.SPCM_PTHL_NO
                   AND SPEX_PRGR_STS_CD = '3'
                   AND EXM_CD           = B.ORD_CD
                   AND HSP_TP_CD        = :HIS_HSP_TP_CD
               ) EXRS
             
--             , (
--                SELECT CASE WHEN INSTR(UPPER(SMP_EXRS_CNTE),'NEGATIVE') &gt; 0 THEN
--                                'Negative'
--                            WHEN INSTR(UPPER(SMP_EXRS_CNTE),'POSITIVE') &gt; 0 THEN
--                                'Positive'
--                            WHEN INSTR(UPPER(SMP_EXRS_CNTE),'양성') &gt; 0 THEN   --2020-06-29, KEH : 검사결과 표출
--                                'Positive'
--                            WHEN INSTR(UPPER(SMP_EXRS_CNTE),'음성') &gt; 0 THEN
--                                'Negative'
--                            WHEN INSTR(UPPER(SMP_EXRS_CNTE),'VARICELLA ZOSTER VIRUS ISOLATE') &gt; 0 THEN
--                                'Positive'
--                       END
--                  FROM MSELMAID
--                 WHERE SPCM_NO          = B.SPCM_PTHL_NO
--                   AND SPEX_PRGR_STS_CD = '3'
--                   AND EXM_CD           = B.ORD_CD
--                  AND HSP_TP_CD        = :HIS_HSP_TP_CD
--                   AND ROWNUM = 1
--               ) EXRS

             , (
                SELECT SPCM_NM
                  FROM MSELMCCC
                 WHERE SPCM_CD   = B.TH1_SPCM_CD
                   AND HSP_TP_CD = :HIS_HSP_TP_CD
               ) SPC_NM
             , (
                SELECT DECODE(COUNT(*), 0, 'N', 'Y')
                  FROM PCTPCPAM_DAMO P
                 WHERE P.PT_NO = A.PT_NO
                   AND (P.CTRC_ORG_CD LIKE 'MA%' OR P.CTRC_ORG_CD LIKE 'PA%')
               ) STF_YN
             , (
                SELECT M.CLCTN_WD_DEPT_CD || '병동-' || M.CLCTN_PRM_NO || '호실'
                  FROM ACPPRAAM M
                 WHERE M.PT_NO   = A.PT_NO
                   AND M.HSP_TP_CD = :HIS_HSP_TP_CD
                   AND M.SIHS_YN = 'Y'
                   AND M.APCN_YN = 'N'
               ) CLCTN
             , (
                SELECT M.CLCTN_WD_DEPT_CD
                  FROM ACPPRAAM M
                 WHERE M.PT_NO   = A.PT_NO
                   AND M.HSP_TP_CD = :HIS_HSP_TP_CD
                   AND M.SIHS_YN = 'Y'
                   AND M.APCN_YN = 'N'
               ) WD_DEPT_CD
             , A.ORD_CD
             , A.ORD_NM
          FROM MOOORPTD A
             , MOOOREXM B
             , PCTPCPAM_DAMO C
             , ACPPRAAM D
         WHERE A.ORD_ID         = B.ORD_ID
           AND A.PT_NO          = C.PT_NO
           AND A.MED_PACT_ID    = D.PACT_ID(+)
           AND D.APCN_YN(+)     = 'N'
           AND A.ODDSC_TP_CD    = 'C'
           AND A.ORD_CD        IN (
                                   --SELECT CDSS_COMN_CD
                                   --  FROM BCCCSCBE AA
                                   -- WHERE AA.CDSS_COMN_GRP_CD = 'DR000019'
                                   --   AND AA.HSP_TP_CD    = :HIS_HSP_TP_CD
                                   --   AND AA.DTRL1_NM         = NVL(:EXM_GUBUN, AA.DTRL1_NM)
                                   --   AND AA.USE_YN           = 'Y'
                                   SELECT TH1_RMK_CNTE
          FROM MSELMSID
            WHERE HSP_TP_CD = :HIS_HSP_TP_CD
              AND LCLS_COMN_CD = 'EXRM_RESULT_1'
              AND SCLS_COMN_CD_NM = :EXM_GUBUN
              AND (   ( :IN_EXM_CD = 'ALL' AND TH1_RMK_CNTE = TH1_RMK_CNTE )
                  OR (:IN_EXM_CD &lt;&gt; 'ALL' AND TH1_RMK_CNTE IN  (select TRIM(REGEXP_SUBSTR(:IN_EXM_CD,'[^'||','||']+',1,LEVEL)) AS txt
                       from dual
                       CONNECT BY INSTR(:IN_EXM_CD,',',1,LEVEL-1)&gt;0
                      )
             )
               )

                                    UNION ALL
                                    --홍역(A0020), 수두(A0021), 결핵(A0002/A0040) L2510, L4101, L41061, L41062  ** 2020.02.24
                                   SELECT X.SCLS_COMN_CD    
                                     FROM MSELMSID X     
                                    WHERE X.LCLS_COMN_CD = 'LCLS022'
                                      AND X.HSP_TP_CD    = :HIS_HSP_TP_CD
                                      AND X.USE_YN       = 'Y'
                                      AND X.SORT_SEQ     = 1
                                      AND X.SCLS_COMN_CD_NM IN (
                                                                    CASE :EXM_GUBUN  WHEN '03' THEN  'A0021'       --수두
                                                                                     WHEN '04' THEN  'A0020'       --홍역 
                                                                                     WHEN '05' THEN  'A0002' --결핵
                                                                                     ELSE NULL   
                                                                     END 
                                                               )
                                     UNION ALL
                                    --2020-06-29, KEH : 전체 조회 가능하도록 함
                                   SELECT X.SCLS_COMN_CD
                                     FROM MSELMSID X
                                    WHERE X.LCLS_COMN_CD = 'LCLS022'
                                      AND X.HSP_TP_CD    = :HIS_HSP_TP_CD
                                      AND X.USE_YN       = 'Y'
                                      AND X.SORT_SEQ     = 1
                                      AND X.SCLS_COMN_CD_NM IN ('A0021','A0020','A0002')
                                      AND NVL(:EXM_GUBUN,'A') = 'A'
                                   )                            
           AND A.MED_PACT_TP_CD = NVL(:PT_TP, A.MED_PACT_TP_CD)
           --AND B.ACPT_DTM BETWEEN TO_DATE(:STR_DT) AND TO_DATE(:END_DT) + 0.99999
           AND B.ORD_DT BETWEEN TO_DATE(:STR_DT) AND TO_DATE(:END_DT) + 0.99999
           --AND B.ACPT_DTM BETWEEN TO_DATE(:STR_DT,'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(:END_DT,'YYYY-MM-DD HH24:MI:SS') +0.99999
           AND B.PT_NO          = NVL(:PT_NO, B.PT_NO)           
           AND A.HSP_TP_CD      = :HIS_HSP_TP_CD
           AND A.HSP_TP_CD      = B.HSP_TP_CD
           AND A.HSP_TP_CD  = D.HSP_TP_CD(+)
       ) A
 WHERE A.STF_YN                        IN (SELECT STR FROM TABLE(XMED.FT_MOO_COL_TO_ROW(:STF_TP, ',')))
   AND DECODE(A.CLCTN, NULL, 'N', 'Y') IN (SELECT STR FROM TABLE(XMED.FT_MOO_COL_TO_ROW(:CUR_SIHS_YN, ',')))
   AND DECODE(:WD_DEPT_CD, NULL, '*', A.WD_DEPT_CD) = DECODE(:WD_DEPT_CD, NULL, '*', :WD_DEPT_CD)
   AND (
      (:EXM_GUBUN = 'COVID19' AND A.PT_HME_DEPT_CD NOT IN ('LM'))
      OR
      (:EXM_GUBUN &lt;&gt; 'COVID19' AND A.PT_HME_DEPT_CD = A.PT_HME_DEPT_CD)
     )
 ORDER BY A.ACPT_DTM

 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>나이계산함수</QUERY_NAME>
    <QUERY_TEXT>/**************************************************************************************************
*    서비스이름  : FT_PCT_AGE
*    최초 작성일 : 2012.03.26
*    최초 작성자 : EZCARETECH 윤선하
*                  생년월일과 , 비교일자를 받아서 생년월일부터 비교일자까지의
*                  나이,나이+개월,나이+개월+일수,개월,일수를 구분값에 따리서 반환함
*
* IN_GUBN   (나이타입을 리턴받을 구분값)
*
*     나이                'AGE'           34         - 34세
*     나이+개월           'AGEMONTH'      34_11      - 34세 11개월
*                                         0_2        - 0세   2개월
*    나이+개월+일        'AGEMONTHDAY'    34_11_9    - 34세 11개월  9일
*    총개월수            'MONTH'          10         - 10개월(0010)
*    총일수                 'DAY'            3060       - 3060일
*
*     나이               'F_AGE'          - 34세
*     나이+개월          'F_AGEMONTH'     - 34세 11개월
*                                         - 0세   2개월
*    나이+개월+일        'F_AGEMONTHDAY'  - 34세 11개월 9일
*    총개월수            'F_MONTH'        - 10개월
*    총일수                 'F_DAY'          - 3060일
*
*    자동                'AUTO'           - 2세 미만 개월로표시(1개월이 안되면 DAY로 표시)
*    자동                'AUTO_@@'        - @@세 미만 개월로표시(1개월이 안되면 DAY로 표시)"
*
* IN_DATE      (나이를 계산할 기준일자)
* IN_BIRTHDAY  (생년월일)
**************************************************************************************************/

--select /*+ XBI.FT_PCT_AGE_S00 */
--       FT_PCT_AGE( 'AGE',sysdate,to_date('19880416','yyyymmdd')) as "나이"
--     , FT_PCT_AGE( 'AGEMONTH',sysdate,to_date('19880416','yyyymmdd'))   as "나이_개월"
--     , FT_PCT_AGE( 'AGEMONTHDAY',sysdate,to_date('19880416','yyyymmdd')) as "나이_개월_일"
--     , FT_PCT_AGE( 'MONTH',sysdate,to_date('19880416','yyyymmdd'))  as "총개월"
--     , FT_PCT_AGE( 'DAY',sysdate,to_date('19880416','yyyymmdd'))  as "총일수"
--     , FT_PCT_AGE( 'AUTO',sysdate,to_date('20100501','yyyymmdd'))  as "4세 미만 개월로표시(1개월이안되면 DAY로 표시) 진료간호표준"
--     , FT_PCT_AGE( 'AUTO_@@',sysdate,to_date('20100501','yyyymmdd'))  as "@@세 미만 개월로표시(1개월이 안되면 DAY로 표시)"
--from dual ;
--
--select /*+ XBI. FT_PCT_AGE_S00 */
--       FT_PCT_AGE( 'F_AGE',to_date('20130101','yyyymmdd'),to_date('19880416','yyyymmdd'))
--     , FT_PCT_AGE( 'F_AGEMONTH',to_date('20130101','yyyymmdd'),to_date('19880416','yyyymmdd'))
--     , FT_PCT_AGE( 'F_AGEMONTHDAY',to_date('20130101','yyyymmdd'),to_date('19880416','yyyymmdd'))
--     , FT_PCT_AGE( 'F_MONTH',to_date('20130101','yyyymmdd'),to_date('19880416','yyyymmdd'))
--     , FT_PCT_AGE( 'F_DAY',to_date('20130101','yyyymmdd'),to_date('19880416','yyyymmdd'))
--     , FT_PCT_AGE( 'AUTO_01',sysdate,to_date('20120501','yyyymmdd'))
--from dual ;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>일괄저장</QUERY_NAME>
    <QUERY_TEXT>IList list = ((HDataGridEx)p).SelectedItems;
            HSFDTOCollectionBaseObject&lt;ReadPatList_INOUT&gt; data = new HSFDTOCollectionBaseObject&lt;ReadPatList_INOUT&gt;(list.Cast&lt;ReadPatList_INOUT&gt;());

            foreach (ReadPatList_INOUT item in data)
            {

                #region [선택된 행을 저장처리]
                SavePatList.Add(item);
                #endregion

            }



 /// &lt;summary&gt;
        /// name               : 발행처별 가야할곳 저장
        /// i/f inheritance yn : N
        /// logic              : 발행처별 가야할곳 저장
        /// desc               : 발행처별 가야할곳 저장
        /// author             : 오원빈
        /// create date        : 2021-10-30
        /// update date        : 2021-10-30
        /// &lt;/summary&gt;
        /// &lt;param name="inobj"&gt;&lt;/param&gt;
        [HSFTransaction(HSFTransactionOption.Required)]
        public Result_OUT SavePbsoGuide(HSFDTOCollectionBaseObject&lt;SaveGuideExaminationRoomMaster_INOUT&gt; inObj)
        {
            Result_OUT result_OUT = new Result_OUT();

            using (SaveGuideExaminationRoomMasterDL com = new SaveGuideExaminationRoomMasterDL())
            {
                foreach (var item in inObj) 
                {
                    result_OUT = com.SavePbsoGuide(item);
                }
            }

            return result_OUT;
        }</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진단명</QUERY_NAME>
    <QUERY_TEXT>SELECT M.ICD10_CD, N.CLDG_NM, N.PT_NO, N.MED_PACT_TP_CD, N.MED_PACT_ID, N.MED_DEPT_CD
FROM MOODIPAM M, MOODIPCD N
WHERE M.HSP_TP_CD = N.HSP_TP_CD
AND M.DGNS_ID = N.DGNS_ID
AND N.DGNS_REG_DT BETWEEN M.DGNS_STR_DT AND M.DGNS_END_DT
AND N.TDY_DGNS_DEL_YN = 'N'
AND N.DGNS_PSD_YN = 'N'
AND M.HSP_TP_CD = '01'
AND M.ICD10_CD LIKE 'C34%'</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>직환 데이터 처리 백업</QUERY_NAME>
    <QUERY_TEXT>#14428379 박순옥 OEM3  (mammography 검사취소), # 10455547 김성은 OEM1 (전체검사 취소) # 19322856 김현리 OEM1(전체검사 취소), # 17107007  오채영 OEM3(stool HB  검사 취소)</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ROW를 COLUMN으로 (PIVOT)</QUERY_NAME>
    <QUERY_TEXT>SELECT 출력할 컬럼
FROM [PIVOT 대상 테이블]
PIVOT (
    [집계함수] FOR [가로로 출력할 열] IN ([조건 대상 값])
)
ORDER BY DEPTNO;


출처: https://dololak.tistory.com/811 [코끼리를 냉장고에 넣는 방법]</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수술부위 감염</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.IF.IF.OI.SelectOperationInfectionRecord"&gt;&lt;!--
    Clss :  sp (쿼리유형)
    Desc : 수술부위 감염감시 기록 조회
    Author : 신광희
    Create date : 2012-10-09
    Update date : 2013-03-11 PKG_MOO_OPERATION_INFECTION.PC_SELECT_SURVEILLANCERECORD 프로시저를 사용하였으나 동적쿼리사용으로 인한 메모리 파싱이 계속되는 현상으로 DA 권고사항으로 수정 함.
                  MDFM_CLS_CD : 'D011'  ASA Class 마취전상태평가 코드로 변경
                  2013-07-12  전영식 소팅 순서를 수술예정일로 변경함.
                  2013-08-02,  양준환, 프로시저로 변경함.
                  2020-06-29, 전지원, 총 수술시간 조건 수정 
                                
--&gt;
--PKG_MOO_OPERATION_INFECTION.PC_SELECT_SURVEILLANCERECORD 
  SELECT distinct
         OP_EXPT_REG_ID                                                           -- 수술예정등록ID
       , PACT_ID                                                                  -- 원무접수ID
       , DISPLAY_REGYN                                                            -- 화면표시용(감시여부)
       , REGYN                                                                    -- 등록여부
--       , OP_INFC_OCUR_YN                                                          -- 감염여부
       , OP_INFC_TRK_YN                                                           -- 수술감염추적여부 = 감시완료
       , OP_INFC_OCUR_YN                                                          -- 감염여부
       , INFC_SRVL_CMPL_TP_CD                                                     -- 대상여부
       , INFC_SRVL_CMPL_TP_NM                                                     -- SSI추적
       , PT_NO                                                                    -- 환자번호
       , PT_NM                                                                    -- 환자명
       , DIAGNOSIS                                                                  -- 진단명
       , MED_DEPT_CD                                                              -- 진료부서
       , MED_DEPT_NM                                                              -- 진료부서 명칭
       , to_char(OP_EXPT_DT, 'YYYY-MM-DD') OP_EXPT_DT                             -- 수술일
       , ADS_DT                                                                    -- 입원일
       , DS_DT                                                                      -- 퇴원일
       , BIRTHDAY                                                                   -- 생년월일
       , AGE                                                                        -- 나이
       , SEX_TP_CD                                                               -- 성별
       , PFDR_SID                                                                -- 집도의직원식별ID
       , PFDR_NM                                                                 -- 집도의직원명
       , OPRM_NO                                                                 -- 수술실번호
       , OP_NM                                                                   -- 수술명
       , NVL(CASE WHEN OP_WND_GRD_CD IS NOT NULL THEN (SELECT CC.COMN_CD_NM
                                                         FROM CCCCCSTE CC
                                                        WHERE CC.COMN_GRP_CD = 'N0000163'
                                                          AND CC.COMN_CD     = OP_WND_GRD_CD
                                                          AND CC.USE_YN      = 'Y')   -- 간호 상처등급코드
                  ELSE WOUNDCLASS
             END, '')                                                     WOUNDCLASS  --창상분류
       , CASE WHEN OP_WND_GRD_CD IS NOT NULL THEN OP_WND_GRD_CD
              ELSE NVL((SELECT CC.COMN_CD
                          FROM CCCCCSTE CC
                         WHERE CC.COMN_GRP_CD = 'N0000163'
                           AND CC.COMN_CD_NM  = WOUNDCLASS
                           AND CC.USE_YN      = 'Y'), '')                       --간호 상처등급코드 : NVL 0은 뺌

         END               WOUNDCLASS_CD
         
       , CASE WHEN ASA_SCR IS NOT NULL THEN TO_CHAR(ASA_SCR)
              ELSE NVL(SUBSTR(ASA_CD, 1, 1) ,'0')
         END                                    ASA_SCORE2   -- ASA점수

       , ASA_CD                                 ASA_CD
       , ASA_SCORE                              ASA_SCORE  
       
       , T_HOUR
       , TO_CHAR(OPSTRDTM,'YYYY-MM-DD HH24:MI')  OP_STR_DTM --수술시작(절개시간)
       , TO_CHAR(OPENDDTM ,'YYYY-MM-DD HH24:MI') OP_END_DTM --봉합종료
       , TO_CHAR(OPENDDTM1 ,'YYYY-MM-DD HH24:MI') OP_END_DTM1 --수술종료
       
       , CASE WHEN OP_TM IS NOT NULL AND OP_TM &gt; 0 THEN TO_CHAR(OP_TM)                       --2013-08-23 수술시간은 0보다 무조건 크다..
              ELSE CASE WHEN OP_EXPT_DT &lt;= TO_DATE('2016-11-18','YYYY-MM-DD') AND OPSTRDTM IS NOT NULL AND OPENDDTM1 IS NOT NULL  THEN TO_CHAR(ROUND((OPENDDTM1 - OPSTRDTM)  * (24*60)))
                      WHEN OPSTRDTM IS NOT NULL AND OPENDDTM IS NOT NULL THEN TO_CHAR(ROUND((OPENDDTM - OPSTRDTM)  * (24*60)))
               ELSE ''
         END
       END OPERATION_TIME       --수술시간 [봉합종료 - 수술시작(절개시간)]
       
       , ADD_OP_TM                                                   -- 추가수술시간
       , CASE WHEN ADD_OP_TM IS NOT NULL AND OP_TM IS NOT NULL AND OP_TM &gt; 0 THEN OP_TM+ADD_OP_TM
              WHEN ADD_OP_TM IS NOT NULL AND OP_TM IS NULL AND OPSTRDTM IS NOT NULL AND OPENDDTM1 IS NOT NULL THEN TO_NUMBER(ROUND((OPENDDTM1 - OPSTRDTM)  * (24*60)))+ADD_OP_TM
         ELSE CASE WHEN ADD_OP_TM IS NULL AND OPSTRDTM IS NOT NULL AND OPENDDTM1 IS NOT NULL AND OP_TM IS NULL THEN TO_NUMBER(ROUND((OPENDDTM1 - OPSTRDTM)  * (24*60)))
                   WHEN ADD_OP_TM IS NULL AND OP_TM IS NOT NULL AND OP_TM &gt; 0 THEN OP_TM
           ELSE ADD_OP_TM
          END
         END WHL_OP_TM                                             -- 총수술시간    
       , TRK_SRVL_PRD                                                -- 추적감시기간
       , HR24_WTHN_ROP_YN                                            -- 24시간이내재수술여부
--       , INFC_SRVL_CMPL_TP_CD
       , EDSC_YN                                                     -- 내시경여부
       , EMRG_OP_EN                                                  -- 응급수술유무
       , TRMA_YN                                                     -- 트라우마여부
       , MLTP_PROC_YN                                                -- multiple procedure여부
       , GNAN_YN                                                          -- 전신마취여부
       , ROP_YN                                                           -- 재수술여부
--       , OP_INFC_TRK_YN                                                   -- 수술감염추적여부
       , OP_INFC_TRK_NM                                                   -- SSI추적
       , OP_INFC_TRK_DC_RSN_CNTE                                          -- 추적중단사유내용
       , OP_INFC_LST_TRK_DT                                               -- 수술감염최종추적일자
       , OP_INFC_TRK_DC_RSN_CD                                            -- 2020-06-29, KEH : 중단사유
       , TRK_SRVL_PRD                                                     -- 추적감시기간
       , HGH_NM                                                           -- 키
       , WT_NM                                                            -- 몸무게
       , CASE WHEN (WT_NM = '-') OR (WT_NM = 0) OR (HGH_NM = 0) THEN 0
      ELSE round((WT_NM / power((HGH_NM / 100), 2)), 2)
          END BMI_NM                                                      -- BMI
       , to_char(AGE) || ', ' || to_char(a.HGH_NM)|| 'cm' || ', ' || to_char(a.WT_NM) || 'kg' || ', ' || to_char(CASE WHEN (WT_NM = '-') OR (WT_NM = 0) OR (HGH_NM = 0) THEN 0
                                                                                                              ELSE round((WT_NM / power((HGH_NM / 100), 2)), 2)
                                                                                                                  END) HWB_NM                                                    -- 나이,키,몸무게,BMI
       , GLYC_YN                                                          -- 당뇨여부
       , SSI_YN                                                           -- SSI여부
       , PRY_SSI_OCUR_DT                                                  -- 주요SSI발생일자
       , PRY_SSI_CD                                                       -- 주요SSI코드
       , PRY_SSI_NM
       , PRY_SSI_TCV_INFC_RGN_CD                                          -- 주요기관강감염부위
       , PRY_SSI_ROP_YN                    -- 주요SSI재수술여부
       , PRY_SSI_TM2S_BLCC_INFC_YN         -- 주요SSI2차혈류감염여부
       , PRY_OP_AFT_OCUR_PRD               -- 수술후발생일까지기간
       , SCND_SSI_OCUR_DT                  -- SECONDARYSSI발생일자
       , SCND_SSI_CD                       -- SECONDARYSSI 코드
       , SCND_SSI_NM
       , SCND_SSI_TCV_INFC_RGN_CD          -- SECONDARYSSI기관강감염부위코드
       , SCND_SSI_ROP_YN                   -- SECONDARYSSI재수술여부
       , SCND_SSI_TM2S_BLCC_INFC_YN        -- SECONDARYSSI2차혈류감염여부
       , SCND_OP_AFT_OCUR_PRD              -- 수술후발생일까지기간
       , PVTN_ATBA_KND_CD                  -- 예방적항생제
       , PVTN_ATBA_KND_NM                  -- 2020-06-29, KEH : 예방적항생제명 조회 추가
       , case when PVTN_ATBA_AMD_USE_STR_DTM = '' then 0
              else TO_NUMBER(ROUND((OPSTRDTM - PVTN_ATBA_AMD_USE_STR_DTM) * 1440))
          end                               OP_FMR_PVTN_ATBA_AMD_PTM      -- 수술전 예방적항생제 투여시점  B.수술시작시간 - 항생제투여시간  = 수술전예방적항생제투여시점
       , PVTN_ATBA_AMD_USE_STR_DTM          -- 예방항생제투여사용시작시간
       , PVTN_ATBA_AMD_USE_END_DTM          -- 예방항생제투여사용종료시간
       , (TRUNC(PVTN_ATBA_AMD_USE_END_DTM) - TRUNC(PVTN_ATBA_AMD_USE_STR_DTM)) +1 AS PVTN_ATBA_AMD_USE_TM  -- 2020-06-29, KEH : 예방적항생제사용기간(day)
       , DTH_YN                            -- 사망여부
       , SSI_DTH_YN                        -- SSI사망여부
       , ( SELECT DTRL1_NM
             FROM CCCCCSTE
            WHERE COMN_GRP_CD = 'N0001076'
              AND COMN_CD = INS_EDI_CD
         ) AS EDI_CODE
--       , INS_EDI_CD
       , OP_KND_CD
       , OP_ITHD_INFC_YN
       , PRY_SPCM_CD                       -- 주요검체코드
       , PRY_SPCM_CNTE                     -- 주요검체내용
       , PRY_REBTC_MVM_TP_CD               -- 주요원인균동정구분코드
       , PRY_REBTC_NM                      -- 주요원인균명
       , PRY_MCB_INCB_EXM_DTM              -- 주요미생물배양검사일시
       , PRY_MVRT_CNTE                     -- 주요동정결과내용
       , SCND_REBTC_MVM_TP_CD              -- SECONDARY원인균동정구분코드
       , SCND_REBTC_NM                     -- SECONDARY원인균명
       , SCND_SPCM_CD                      -- SECONDARY검체코드
       , SCND_SPCM_CNTE                    -- SECONDARY검체내용
       , SCND_MCB_INCB_EXM_DTM             -- SECONDARY미생물배양검사일시
       , SCND_MVRT_CNTE                    -- SECONDARY동정결과내용
       , SRVL_REC_MEMO
       , CASE WHEN PRY_REBTC_MVM_TP_CD = 'Y' THEN 'Y' ELSE 'N' END PRY_REBTC_MVM_TP_CD_Y
       , CASE WHEN PRY_REBTC_MVM_TP_CD = 'N' THEN 'Y' ELSE 'N' END PRY_REBTC_MVM_TP_CD_N
       , CASE WHEN PRY_REBTC_MVM_TP_CD = 'X' THEN 'Y' ELSE 'N' END PRY_REBTC_MVM_TP_CD_X
       , CASE WHEN SCND_REBTC_MVM_TP_CD = 'Y' THEN 'Y' ELSE 'N' END SCND_REBTC_MVM_TP_CD_Y
       , CASE WHEN SCND_REBTC_MVM_TP_CD = 'N' THEN 'Y' ELSE 'N' END SCND_REBTC_MVM_TP_CD_N
       , CASE WHEN SCND_REBTC_MVM_TP_CD = 'X' THEN 'Y' ELSE 'N' END SCND_REBTC_MVM_TP_CD_X
       , SUBSTR(CATEGORY,  1, 1)    CATEGORY1
       , SUBSTR(CATEGORY,  2, 1)    CATEGORY2
       , SUBSTR(CATEGORY,  3, 1)    CATEGORY3
       , SUBSTR(CATEGORY,  4, 1)    CATEGORY4
       , SUBSTR(CATEGORY,  5, 1)    CATEGORY5
       , SUBSTR(CATEGORY,  6, 1)    CATEGORY6
       , SUBSTR(CATEGORY,  7, 1)    CATEGORY7
       , SUBSTR(CATEGORY,  8, 1)    CATEGORY8
       , SUBSTR(CATEGORY,  9, 1)    CATEGORY9
       , SUBSTR(CATEGORY, 10, 1)    CATEGORY10
       , SUBSTR(CATEGORY, 11, 1)    CATEGORY11
       , SUBSTR(CATEGORY, 12, 1)    CATEGORY12
       , SUBSTR(CATEGORY, 13, 1)    CATEGORY13
       , SUBSTR(CATEGORY, 14, 1)    CATEGORY14
       , SUBSTR(CATEGORY, 15, 1)    CATEGORY15
       , SUBSTR(CATEGORY, 16, 1)    CATEGORY16
       , SUBSTR(CATEGORY, 17, 1)    CATEGORY17
       , SUBSTR(CATEGORY, 18, 1)    CATEGORY18
       , SUBSTR(CATEGORY, 19, 1)    CATEGORY19
       , SUBSTR(CATEGORY, 20, 1)    CATEGORY20
    FROM (
          SELECT  /* 감염관리 - HIS.MC.IF.IF.OI.SelectOperationInfectionRecord */
                 A.OP_EXPT_REG_ID                                                          --수술예정등록ID
               , C.PACT_ID                                                                 --원무접수ID
               , B.HST_SEQ                                                                 -- 작성순번
               , A.PT_NO                                                                   --환자번호
               , D.PT_NM                                                                   --환자명
               , A.OP_EXPT_DT                                                              --수술예정일자
               , A.OP_NM                                                                   --수술명
               , A.OPRM_NO                                                                 --수술실번호
               , TO_CHAR(D.PT_BRDY_DT,'YYYY-MM-DD') BIRTHDAY                               --생년월일
               , XBIL.FT_PCT_AGE('AUTO_01', SYSDATE, D.PT_BRDY_DT) AGE                     --나이
               , DECODE(D.SEX_TP_CD,'M','남','F','여', ' ') SEX_TP_CD                      --성별
               , A.MED_DEPT_CD                                                             --진료부서
               , XMED.FT_MOO_DEPTNM(A.MED_DEPT_CD, 'H',A.HSP_TP_CD) MED_DEPT_NM            --진료부서 명칭
               , '' GUBUN                                                                  --구분
               , A.WD_DEPT_CD || '/' || A.PRM_NO WD_DEPT_PRM_NO                            --병동/병실
               , A.PFDR_SID                                                                --집도의직원식별ID
               , XCOM.FT_CNL_SELSTFINFO('5',A.PFDR_SID, A.HSP_TP_CD, null )      PFDR_NM                      --집도의직원명
               , XCOM.FT_CNL_SELSTFINFO('5',A.ANST_CHDR_SID, A.HSP_TP_CD, null ) ANST_CHDR_NM                 --마취선택의직원식별ID
               , XCOM.FT_CNL_SELSTFINFO('5',A.ANST_DR_SID,A.HSP_TP_CD,  null )   ANST_DR_NM                   --마취의사직원식별ID
               , B.CTRA_OP_TM                                                    T_HOUR
               , B.SRVL_REC_MEMO                                                          --감시기록메모
               , DECODE(A.EMRG_CSLT_TP_CD,'Y','Y','N') EMRG_OP_EN                         --응급수술유무
               , DECODE(A.EMRG_CSLT_TP_CD,'C','Y','N') STM_OP_YN                          --협진수술여부
               , NVL(B.ROP_YN, 'N')                ROP_YN                                 --재수술여부
               , DECODE(A.ANST_KND_CD,'0','Y','N') GNAN_YN                                --전신마취여부
               , B.OP_INFC_TRK_YN                                                         --수술감염추적여부
               , CASE WHEN B.OP_INFC_TRK_YN = 'Y' THEN '완료'
                      WHEN B.OP_INFC_TRK_YN = 'N' THEN '중단'
                      ELSE ' '
                 END OP_INFC_TRK_NM
               , B.OP_INFC_LST_TRK_DT                                                    --수술감염최종추적일자
               , B.OP_INFC_TRK_DC_RSN_CD
               , XMED.FT_MOO_GET_COMN_CD_NAME('N0001022', B.OP_INFC_TRK_DC_RSN_CD,'Y') OP_INFC_TRK_DC_RSN_CNTE  --수술감염추적중단사유내용                                                      --기관강감염부위코드
               , B.LST_YN                                                                    --최종여부
               , XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I') ADS_DT                             --입원일
               , XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O') DS_DT                              --퇴원일
               , CASE WHEN B.OP_EXPT_REG_ID IS NULL THEN '0' ELSE '1' END AS REGYN           --등록여부
               , XMED.FT_MOO_GET_COMN_CD_NAME('N0000163', B.OP_WND_GRD_CD,'Y') WOUNDCLASS    --창상분류
               , (SELECT XMED.FT_MRD_GET_ELMT_INFO ('MDFM_ELMT_ID',BB.HSP_TP_CD, BB.MDRC_ID,'10286')
                    FROM MRDDRECM BB             --진료기록기본
                   WHERE BB.OP_EXPT_REG_ID        = A.OP_EXPT_REG_ID
                     AND BB.PT_NO                 = A.PT_NO
                     AND BB.HSP_TP_CD             = A.HSP_TP_CD
                     AND BB.MDFM_CLS_CD           = 'D011'
                     AND BB.LST_YN                = 'Y'
                     AND BB.MDRC_DC_TP_CD         = 'C'
                     AND BB.MDF_REC_DTM = ( SELECT MAX(Z.MDF_REC_DTM)
                                              FROM MRDDRECM Z
                                             WHERE Z.PT_NO = BB.PT_NO
                                               AND Z.OP_EXPT_REG_ID = BB.OP_EXPT_REG_ID
                                               AND Z.LST_YN = 'Y'
                                               AND Z.MDFM_CLS_CD = 'D011'
                                               AND Z.MDRC_DC_TP_CD = 'C')
                  ) ASA_CD
                  
               , (SELECT XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, '7433c5e8-8fc4-4b85-aafc-83480bb3df53') || -- 1
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, '55077580-dbcb-4d47-80f9-91cdfe034867') || -- 2
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, 'a1a43bba-b524-4d0e-93f6-00158f9628af') || -- 3
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, '89e5b296-c057-4544-a856-8ad842a54779') || -- 4
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, 'de3f34a9-04ce-448e-863b-06bcea16d30f') || -- 5
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, '9dccb546-272d-4022-80b2-e1ad8ac0a05d') || -- 6
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, '4771d47c-d149-41f1-bfff-88220c8eac81') || -- 1E
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, '408e171a-f9c6-4e19-9bf8-79997527730b') || -- 2E
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, '74fe7374-5d34-4c03-8287-2178d505281e') || -- 3E
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, 'a24ce213-fca0-4ba1-b733-1ba0d7c6eb1f') || -- 4E
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, 'cc55c1e2-f8b7-4086-933c-8e1f72ad0d00') || -- 5E
       XMED.FT_MRD_GET_ELMT_INFO('MDFM_CPEM_NO', BB.HSP_TP_CD, BB.MDRC_ID, 'e94a668d-024c-4602-b0b1-fb179a5ea9da')    -- 6E
                    FROM MRDDRECM BB             --진료기록기본
                   WHERE BB.OP_EXPT_REG_ID        = A.OP_EXPT_REG_ID
                     AND BB.PT_NO                 = A.PT_NO
                     AND BB.HSP_TP_CD             = A.HSP_TP_CD
                     AND BB.MDFM_CLS_CD           = 'D011'
                     AND BB.LST_YN                = 'Y'
                     AND BB.MDRC_DC_TP_CD         = 'C'
                     AND BB.MDF_REC_DTM = ( SELECT MAX(Z.MDF_REC_DTM)
                                              FROM MRDDRECM Z
                                             WHERE Z.PT_NO = BB.PT_NO
                                               AND Z.OP_EXPT_REG_ID = BB.OP_EXPT_REG_ID
                                               AND Z.LST_YN = 'Y'
                                               AND Z.MDFM_CLS_CD = 'D011'
                                               AND Z.MDRC_DC_TP_CD = 'C')
                  ) ASA_SCORE                  

               , XMED.FT_MRN_OPNRECTIME(A.OP_EXPT_REG_ID, '04', A.HSP_TP_CD) OPSTRDTM  --수술시작(절개시간) 05
               , XMED.FT_MRN_OPNRECTIME(A.OP_EXPT_REG_ID, '05', A.HSP_TP_CD) OPENDDTM  --봉합종료
               , XMED.FT_MRN_OPNRECTIME(A.OP_EXPT_REG_ID, '06', A.HSP_TP_CD) OPENDDTM1 --수술종료 06
               , NVL(XMED.FT_MRD_GET_ANESTH_RECORD('ASA_CLASS',  A.OP_EXPT_REG_ID,  A.HSP_TP_CD), B.ASA_SCR) ASA_SCR
               , B.OP_TM
               , B.ADD_OP_TM                                                    -- 추가수술시간
               , B.OP_TM + B.ADD_OP_TM             WHL_OP_TM                    -- 총수술시간
               , NVL(B.HR24_WTHN_ROP_YN, 'N')      HR24_WTHN_ROP_YN             -- 24시간이내재수술여부
               , B.OP_WND_GRD_CD
               , B.INFC_SRVL_CMPL_TP_CD                                         --감염감시완료구분코드
               , XMED.FT_MOO_GET_COMN_CD_NAME('N0001009', B.INFC_SRVL_CMPL_TP_CD,'Y') INFC_SRVL_CMPL_TP_NM   --감염감시완료구분명칭
               , CASE WHEN B.OP_EXPT_REG_ID IS NOT NULL THEN 'Y' ELSE 'N'END   DISPLAY_REGYN
               , XMED.FT_MOO_GET_COMN_CD_NAME('MD00137', A.ANST_KND_CD,'Y') ANST_KND_CD --마취종류
               , XMED.FT_MOO_DIAGNOSIS(A.PT_NO, '', A.MED_DEPT_CD, C.PACT_ID, A.HSP_TP_CD, 'H') DIAGNOSIS
               --
               , DECODE((CASE WHEN B.PRY_SSI_OCUR_DT IS NOT NULL THEN 'Y' ELSE 'N' END), 'Y', 'Y', DECODE((CASE WHEN B.SCND_SSI_OCUR_DT IS NOT NULL THEN 'Y' ELSE 'N' END), 'Y', 'Y', 'N')) OP_INFC_OCUR_YN -- 감염여부
               , NVL(B.EDSC_YN, 'N')         EDSC_YN                        -- 내시경여부
               , NVL(B.TRMA_YN, 'N')         TRMA_YN                        -- 트라우마여부
               , NVL(B.MLTP_PROC_YN, 'N')    MLTP_PROC_YN                   -- multiple procedure여부
               , case when B.OP_INFC_LST_TRK_DT = '' then 0
                                            else  B.OP_INFC_LST_TRK_DT - A.OP_EXPT_DT
                                  end                      TRK_SRVL_PRD -- 추적감시기간  B.OP_INFC_LST_TRK_DT - A.OP_EXPT_DT  TRK_SRVL_PRD
               , (SELECT
                         DECODE(DIABETES, '당뇨', 'Y', 'N') DIABETES
                    FROM
                (SELECT xmed.FT_MRN_INITNRINFLSTITEMVAL('ILLNESSKIND', A.PT_NO, C.PACT_ID, A.HSP_TP_CD) DIABETES
                   FROM dual
                )
                  ) GLYC_YN  -- 당뇨여부
--                 , decode(decode(xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT), '', xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), '0', xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT)), '', xmed.FT_MRN_INITNRINFLSTITEMVAL('BODYHEIGHT' , A.PT_NO, C.PACT_ID, A.HSP_TP_CD), '0', xmed.FT_MRN_INITNRINFLSTITEMVAL('BODYHEIGHT' , A.PT_NO, C.PACT_ID, A.HSP_TP_CD), decode(xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT), '', xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), '0', xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT))) HGH_NM
--                 , decode(decode(xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT), '', xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), '0', xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT)), '', xmed.FT_MRN_INITNRINFLSTITEMVAL('BODYWEIGHT' , A.PT_NO, C.PACT_ID, A.HSP_TP_CD), '0', xmed.FT_MRN_INITNRINFLSTITEMVAL('BODYWEIGHT' , A.PT_NO, C.PACT_ID, A.HSP_TP_CD), decode(xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT), '', xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), '0', xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_F_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', A.OP_EXPT_DT, XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'O')), xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'PRD_L_NUMBER', 'N', A.PT_NO, A.HSP_TP_CD, '', '', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT))) WT_NM
               , xmed.FT_MRN_BODYMSMTINF('BODYHEIGHT', 'ACPT_F', 'N', A.PT_NO, A.HSP_TP_CD, A.PACT_ID, 'I', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT) HGH_NM
               , xmed.FT_MRN_BODYMSMTINF('BODYWEIGHT', 'ACPT_F', 'N', A.PT_NO, A.HSP_TP_CD, A.PACT_ID, 'I', XMED.FT_MOO_GET_INOUTDAY(C.PACT_ID, 'I'), A.OP_EXPT_DT) WT_NM
               , NVL(B.SSI_YN, 'N')             SSI_YN                       -- SSI여부
               , B.PRY_SSI_OCUR_DT                                           -- 주요SSI발생일자
               , B.PRY_SSI_CD                                                -- 주요SSI코드
               , (select COMN_CD_NM
                    from CCCCCSTE
                   where COMN_GRP_CD = 'N0001077'
                     and COMN_CD = B.PRY_SSI_CD
                     and USE_YN  = 'Y'
                 )           PRY_SSI_NM       -- 주요SSI코드명
               , B.PRY_SSI_TCV_INFC_RGN_CD                                   -- 주요SSI기관강감염부위코드
               , NVL(B.PRY_SSI_ROP_YN, 'N')                PRY_SSI_ROP_YN              -- 주요SSI재수술여부
               , NVL(B.PRY_SSI_TM2S_BLCC_INFC_YN, 'N')     PRY_SSI_TM2S_BLCC_INFC_YN   -- 주요SSI2차혈류감염여부
               , B.PRY_SSI_OCUR_DT - A.OP_EXPT_DT AS PRY_OP_AFT_OCUR_PRD     -- 수술후발생일까지기간
               , B.SCND_SSI_OCUR_DT                       -- SECONDARYSSI발생일자
               , B.SCND_SSI_CD                            -- SECONDARYSSI 코드
               , (select COMN_CD_NM
                    from HCOM.CCCCCSTE
                   where COMN_GRP_CD = 'N0001078'
                     and COMN_CD = B.SCND_SSI_CD
                     and USE_YN  = 'Y'
                 )                                                         SCND_SSI_NM                   -- SECONDARYSSI코드명
               , B.SCND_SSI_TCV_INFC_RGN_CD                                                              -- SECONDARYSSI기관강감염부위코드
               , NVL(B.SCND_SSI_ROP_YN, 'N')                               SCND_SSI_ROP_YN               -- SECONDARYSSI재수술여부
               , NVL(B.SCND_SSI_TM2S_BLCC_INFC_YN, 'N')                    SCND_SSI_TM2S_BLCC_INFC_YN    -- SECONDARYSSI2차혈류감염여부
               , B.SCND_SSI_OCUR_DT - A.OP_EXPT_DT AS                      SCND_OP_AFT_OCUR_PRD          -- 수술후발생일까지기간
               , B.PVTN_ATBA_KND_CD                                                                      -- 예방적항생제
               , (SELECT FLPRS_MDPR_NM
                    FROM MSDMDBAM S
                   WHERE S.HSP_TP_CD = B.HSP_TP_CD
                     AND S.MDPR_CD   = B.PVTN_ATBA_KND_CD
                     AND ROWNUM = 1)                                       PVTN_ATBA_KND_NM              -- 2020-06-29, KEH : 예방적항생제명 조회 추가
               , B.PVTN_ATBA_AMD_USE_STR_DTM                                                             -- 예방항생제투여사용시작시간
               , B.PVTN_ATBA_AMD_USE_END_DTM                                                             -- 예방항생제투여사용종료시간
               , NVL(B.DTH_YN, 'N')        DTH_YN                                                        -- 사망여부
               , NVL(B.SSI_DTH_YN, 'N')    SSI_DTH_YN                                                    -- SSI사망여부
               --, X.INS_EDI_CD
               , '' INS_EDI_CD
               , NVL(B.OP_KND_CD, (SELECT INFC_SRVL_OP_CTG
                      FROM CCVMVDCM C
                     WHERE C.HSP_TP_CD = A.HSP_TP_CD
                       AND C.VOC_ID    = A.OP_VOC_ID
                       AND ROWNUM    = 1
                            )
              )                           OP_KND_CD                                                -- 수술종류코드
               , NVL(B.OP_ITHD_INFC_YN, 'N')    OP_ITHD_INFC_YN                                          -- 수술당시감염여부(PATOS)
               , B.PRY_SPCM_CD
               , B.PRY_SPCM_CNTE                                                                         -- 주요검체내용
               , B.PRY_REBTC_MVM_TP_CD                                                                   -- 주요원인균동정구분코드
               , B.PRY_REBTC_NM                                                                          -- 주요원인균명
               , B.PRY_MCB_INCB_EXM_DTM                                                                  -- 주요미생물배양검사일시
               , B.PRY_MVRT_CNTE                                                                         -- 주요동정결과내용
               , B.SCND_REBTC_MVM_TP_CD                                                                  -- SECONDARY원인균동정구분코드
               , B.SCND_REBTC_NM                                                                         -- SECONDARY원인균명
               , B.SCND_SPCM_CD                                                                          -- SECONDARY검체코드
               , B.SCND_SPCM_CNTE                                                                        -- SECONDARY검체내용
               , B.SCND_MCB_INCB_EXM_DTM                                                                 -- SECONDARY미생물배양검사일시
               , B.SCND_MVRT_CNTE                                                                        -- SECONDARY동정결과내용
               , (SELECT NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '1'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '2'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '3'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '4'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '5'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '6'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '7'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '8'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '9'  THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '10' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '11' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '12' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '13' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '14' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '15' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '16' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '17' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '18' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '19' THEN 'Y' END), 'N') ||
                         NVL(MAX(CASE WHEN BB.TCV_INFC_RGN_STD_CTG_CD = '20' THEN 'Y' END), 'N')
                   FROM BSIIFSPD BB
                  WHERE BB.PACT_ID         = B.PACT_ID
                    AND BB.OP_EXPT_REG_ID  = B.OP_EXPT_REG_ID
                  ) AS CATEGORY
            FROM                 
                 MOOOPPAM A --수술예정기본
               , BSIIFSID B --수술부위감염감시정보
               , MRNNROAD C --수술간호기록정보
               , PCTPCPAM_DAMO D --환자 기본
           WHERE 
                 A.OP_EXPT_DT BETWEEN TO_DATE(:IN_SDATE, 'YYYY-MM-DD')
                                  AND TO_DATE(:IN_EDATE, 'YYYY-MM-DD')
             AND A.OP_DEL_YN            = 'N'
             AND A.OP_CNCL_DTMN_YN      = 'N'
             AND NVL(A.PACT_ID, ' ')    &lt;&gt; ' '
                   
             AND A.MED_DEPT_CD          = NVL(:IN_MED_DEPT_CD, A.MED_DEPT_CD)               -- 진료과
             AND NVL(A.WD_DEPT_CD, '*') = NVL(:IN_WD_DEPT_CD, NVL(A.WD_DEPT_CD, '*'))       -- 병동
             AND A.OP_EXPT_REG_ID       = B.OP_EXPT_REG_ID(+) --수술예정등록ID
             AND A.PACT_ID              = B.PACT_ID(+)
             AND (    (((:IN_INFC_SRVL_CMPL_TP_CD IS NULL)OR(:IN_INFC_SRVL_CMPL_TP_CD = 'N')) AND NVL(B.INFC_SRVL_CMPL_TP_CD,'*') != 'X')  -- 대상여부    :IN_INFC_SRVL_CMPL_TP_CD
                   OR (:IN_INFC_SRVL_CMPL_TP_CD = 'Y' AND B.INFC_SRVL_CMPL_TP_CD = :IN_INFC_SRVL_CMPL_TP_CD )
                  )
             AND ( -- 발생일자가 두가지로 나눠져서 둘중에 하나만 존재해도 감염 'Y'인것으로 판단.   재확인 필요.
                      (NVL(B.PRY_SSI_OCUR_DT, TRUNC(SYSDATE)) = CASE WHEN :IN_OP_INFC_OCUR_DT_YN = 'Y' THEN B.PRY_SSI_OCUR_DT              -- 감염여부
                                                                     ELSE NVL(B.PRY_SSI_OCUR_DT, TRUNC(SYSDATE))
                                                                 END)
                   OR
                      (NVL(B.SCND_SSI_OCUR_DT, TRUNC(SYSDATE)) = CASE WHEN :IN_OP_INFC_OCUR_DT_YN = 'Y' THEN B.SCND_SSI_OCUR_DT
                                                                      ELSE NVL(B.SCND_SSI_OCUR_DT, TRUNC(SYSDATE))
                                                                  END)
                 )
             AND (  ( ((:IN_OP_INFC_TRK_YN IS NULL) OR (:IN_OP_INFC_TRK_YN = 'N'))  AND ((B.OP_INFC_TRK_YN is null) OR (B.OP_INFC_TRK_YN = '')) )
                   OR
                    ( (:IN_OP_INFC_TRK_YN = 'Y') AND ((B.OP_INFC_TRK_YN = 'Y') OR (B.OP_INFC_TRK_YN = 'N')) )
                 )                                                                          -- 감시완료여부 
           --  AND (    ((:IN_OP_KND_CD is not null) AND (B.OP_KND_CD = :IN_OP_KND_CD))       -- 감시수술분류코드
           --       OR  ((:IN_OP_KND_CD is null) AND (NVL(B.OP_KND_CD, '*') = NVL('', NVL(B.OP_KND_CD, '*'))))
           --      )             
             AND B.USE_YN(+) = 'Y'
             AND B.LST_YN(+) = 'Y'
             AND C.OP_EXPT_REG_ID = A.OP_EXPT_REG_ID
             AND C.USE_YN = 'Y'
             AND A.PT_NO = D.PT_NO
             AND (    
                   D.PT_NO = NVL(:IN_PT_NO, D.PT_NO) OR D.PT_NM = NVL(:IN_PT_NO, D.PT_NM)
                 )
         ) A
 WHERE 1=1
  AND    CASE WHEN :IN_OP_KND_CD IS NOT NULL THEN :IN_OP_KND_CD
               WHEN :IN_OP_KND_CD IS NULL THEN NVL(OP_KND_CD,'*')
             END = NVL(OP_KND_CD,'*')         
   ORDER BY EDI_CODE
          , OP_STR_DTM
          , PT_NO

 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>LINQ GROUP BY (람다식 그룹핑)</QUERY_NAME>
    <QUERY_TEXT>var tSum = from p in db.TBSimulation    // from절
            where p.USERID == ""         // where절
           group p by new { p.GROUPID,p.USERID } into grouping  // group by
          select new // sum column
          {
                 grouping.Key,
                 Totalprice = grouping.Sum(p =&gt; p.RESULT)
          };            
        // sum값 바인딩
        foreach (var grp in tSum)
        {
                this.lblTPROFIT.Text = grp.Totalprice.ToString();
        }
--------------------
  var afOrdList = from p in SELECTTM2SORDINFO_OUT
                            where p.RPY_STS_CD == "Y"
                            group p by new { p.SGL_MIF_CD, p.AF_RPY_USE_QTY } into grouping
                            select new
                            {
                                grouping.Key,
                                TotalQty = grouping.Sum(p =&gt; p.AF_RPY_USE_QTY),
                                ord_Cd = grouping.Select(p =&gt; p.SGL_MIF_CD)
                          };


--var 부분은 그룹핑되서 나온 데이터 리스트 
--from p in에서 p는 테이블의 식별자 부분
--SELECTTM2SORDINFO_OUT부분은 오라클의 테이블 부분 
--where 조건절
--group p by new {} 중괄호 안에 그룹핑 할 컬럼 명들 나열 
--select new {} 부분은 grouping으로 KEY로 묶어서 원하는 그룹 함수 컬럼을 지정 한다.
-- SELECT SUM(p.AF_RPY_USE_QTY)  TOtalQty, ord_CD 
--   FROM SELECTTM2SORDINFO_OUT p 
--   WHERE p.RPY_STS_CD = 'Y'
--  GROUP BY p.AF_RPY_USE_QTY, p.SGL_MIF_CD 와 같음.
</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진단명 조회</QUERY_NAME>
    <QUERY_TEXT>FUNCTION      FT_MOO_DIAGNOSIS(V_PT_NO            IN VARCHAR2         -- 환자번호
                             , V_DGNS_END_DT      IN VARCHAR2         -- 진단종료일자 YYYYMMDD
                             , V_MED_DEPT_CD      IN VARCHAR2         -- 진료부서코드
                             , V_PACT_ID          IN VARCHAR2         -- 원무접수ID
                             , HIS_HSP_TP_CD      IN VARCHAR2         -- 병원구분코드 
                             , V_SEARCH_TYPE      IN VARCHAR2         -- 조회조건        
                             , V_PAIL_YN          IN VARCHAR2 DEFAULT 'N'  -- 기왕증여부 
                             )  
    RETURN VARCHAR2 IS                                                                                
    /**********************************************************************
    작 성 자 :  지승용
    작 성 일 : 2012-03-28
    내    용 : 진단 조회 
    수정이력 : ◐◐◐◐◐ *** 병원구분 : 문병길 *** ◑◑◑◑◑ 
    조회조건별 필요 Parameter : 
    A : V_PT_NO, HIS_TP_CD                                                                  
    B : V_PT_NO, V_DGNS_END_DT, HIS_TP_CD                                       
    C : V_PT_NO, V_DGNS_END_DT, HIS_TP_CD
    D : V_PT_NO, V_DGNS_END_DT, HIS_TP_CD                                                                      
    E : V_PT_NO, V_DGNS_END_DT, V_MED_DEPT_CD, HIS_TP_CD
    F : V_PT_NO, V_DGNS_END_DT, V_MED_DEPT_CD, HIS_TP_CD
    G : V_PT_NO, V_DGNS_END_DT, HIS_TP_CD
    H : V_PT_NO, V_DGNS_END_DT, V_MED_DEPT_CD, V_PACT_ID, HIS_TP_CD
    I : V_PT_NO, V_MED_DEPT_CD, HIS_TP_CD 
    J : V_PT_NO, V_DGNS_END_DT, V_MED_DEPT_CD, V_PACT_ID, HIS_TP_CD, V_SEARCH_TYPE
    K : V_PACT_ID
    L : V_PT_NO, V_MED_DEPT_CD, HIS_TP_CD , V_PACT_ID
    M : V_PT_NO, V_MED_DEPT_CD, HIS_TP_CD 
    M2 : V_PT_NO, V_MED_DEPT_CD, HIS_TP_CD     
    M3 : V_PT_NO, V_MED_DEPT_CD, HIS_TP_CD 환자의 진료과 최근 주진단명(한글) + 마이그진단 리턴 2022.02.03 (진료지원) CT실 동의서에서만 사용함
    N : V_PT_NO, V_MED_DEPT_CD, HIS_TP_CD 
    V : V_PT_NO, V_MED_DEPT_CD, V_PACT_ID HIS_TP_CD  2016-07-21 상처장루 교육실 의뢰 화면 요청(201607-00358)  
    W : V_PT_NO, V_DGNS_END_DT, V_MED_DEPT_CD, V_PACT_ID, HIS_TP_CD    2017-02-16 처방전 관련 간접진료 요청(SR201702-00257)
    X : V_PACT_ID, HIS_TP_CD 2018-10-29 경증질환 고시로 인해 추가.            
    Y : V_PT_NO, V_PACT_ID, HIS_HSP_TP_CD 2022-03-01 응급진료 정신질환자 가산적용대상 상병 체크 
    **********************************************************************/          
    V_CLDG_NM           VARCHAR2(4000):='';         -- 임상진단명
    V_RETURN            VARCHAR2(4000);  
    V_TMP_CNT           NUMBER(3);
    V_TMP_MED_DEPT_CD   VARCHAR2(10);            
    V_TMP_PACT_ID   ACPPRETM.PACT_ID%TYPE :='';  
    D_EMRM_ARVL_DTM     DATE;
    V_DATA_CHK          VARCHAR2(5):='N';
    D_DGNS_REG_DT       DATE;
    
    V_CLDG_VOC_ID       VARCHAR2(100);
    V_ICD10_CD          VARCHAR2(100);
    V_ICD_CD          VARCHAR2(100);          
    V_ICD_CD_KOR_NM       VARCHAR2(500);
    N_SNOMED_CNPT_ID    NUMBER(18); 
    
    V_LIGHT_DISEASE_YN  VARCHAR2(1);
    V_INSULIN_YN        VARCHAR2(1);
    V_OUTORD_YN         VARCHAR2(1);
    V_252CHECK_YN       VARCHAR2(1) := 'N'; --V252체크
    V_252DIAG_YN        VARCHAR2(1) := 'N'; --V252체크 진단 체크 경우 Y
    V_352CHECK_YN       VARCHAR2(1) := 'N'; --V352체크
    V_352DIAG_YN        VARCHAR2(1) := 'N'; --V352체크 진단 체크 경우 Y     
    V_452CHECK_YN       VARCHAR2(1) := 'N'; --V452체크 2022.03.02
    V_AGE               NUMBER(3) := 0;     --나이
    V_AGECHECK_YN       VARCHAR2(1) := 'N'; --6세미만일 경우 Y
    
    
    
    BEGIN
        IF (V_SEARCH_TYPE = 'A') THEN
           /*#######################################################
                여러진단명을 하나의 컬럼으로 RETURN
                ASIS 함수명 : FT_SD_DIAGNOSIS
           ########################################################*/
            BEGIN
               SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                          LISTAGG(M.CLDG_NM, ', ') WITHIN GROUP (ORDER BY M.DGNS_STR_DT DESC)
                 INTO V_CLDG_NM
                 FROM MOODIPAM M                            -- 환자진단기본
                WHERE M.PT_NO = V_PT_NO                     -- 환자번호
                  AND M.HSP_TP_CD = HIS_HSP_TP_CD
                  AND NVL(M.TDY_DGNS_DEL_YN,'N') = 'N'      -- 당일진단삭제여부   
                  AND EXISTS (  
                                  SELECT 1
                                    FROM MOODIPCD A
                                   WHERE A.DGNS_ID = M.DGNS_ID
                                     AND A.TDY_DGNS_DEL_YN = 'N'  --당일진단삭제여부
                                     AND A.HSP_TP_CD = M.HSP_TP_CD
                                     AND ROWNUM = 1
                                  )  
                        ;                                  
                  
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        V_CLDG_NM := '';                                                              
            END;
            RETURN V_CLDG_NM;
                               
        ELSIF (V_SEARCH_TYPE = 'B') THEN
            /*#####################################################
                종료일자기준 살아있는 주진단 1개 코드와 명칭 RETURN
                ASIS 함수명 : FT_SD_DISS                           
                현 AS-IS를 기준으로 작성을 했으나 진료과 마다 주진단이 다르므로 아래 주진단으로 나오는 진단은 잘못된 결과 인듯 함. 
                환자가 최초에 내원 하여 진단등록 한 결과만 리턴을 하는 기게 맞을까?? 
            ######################################################*/
            IF (V_DGNS_END_DT = '') THEN
                RETURN '진단종료일자 누락';
            END IF;
            
            BEGIN 
                   
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           CLDG_NM       
                      INTO V_CLDG_NM
                      FROM (
                            SELECT M.ICD10_CD || '    ' || MAX(M.CLDG_NM)  CLDG_NM
                                  ,MAX(P.DGNS_REG_DT)  DGNS_REG_DT
                                  ,RANK() OVER(ORDER BY MAX(P.DGNS_REG_DT) DESC ) RNK
                              FROM MOODIPAM M  -- 환자진단기본
                                  ,MOODIPCD P  -- 환자수진일별진단정보 
                             WHERE M.PT_NO = V_PT_NO
                               AND M.HSP_TP_CD = HIS_HSP_TP_CD 
                               AND M.HSP_TP_CD = P.HSP_TP_CD
                               AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                               AND DGNS_END_DT &gt; TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                               AND P.TDY_DGNS_DEL_YN = 'N'  --당일진단삭제여부
                                  AND P.MAIN_SKNS_YN = 'Y'     --주상병여부
                               AND M.DGNS_ID = P.DGNS_ID
                             GROUP BY  M.ICD10_CD
                          )
                    WHERE RNK = 1
                      AND ROWNUM = 1 ;
            
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        V_CLDG_NM := '';                                                              
            END;       
            
            RETURN V_CLDG_NM;
               
        ELSIF (V_SEARCH_TYPE = 'C') THEN
            /*#####################################################
                진단등록일자가 입력일자보다 작거나 같고 
                종료일자가 입력일자보다 큰 진단 1개
                ASIS 함수명 : FT_SD_DISS2
            ######################################################*/   
           
             SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                     CLDG_NM       
                      INTO V_CLDG_NM
                      FROM (
                            SELECT M.ICD10_CD || '    ' || MAX(M.CLDG_NM)  CLDG_NM
                                  ,MAX(P.DGNS_REG_DT)  DGNS_REG_DT
                                  ,RANK() OVER(ORDER BY MAX(P.DGNS_REG_DT) DESC ) RNK
                              FROM MOODIPAM M  -- 환자진단기본
                                  ,MOODIPCD P  -- 환자수진일별진단정보 
                             WHERE M.PT_NO = V_PT_NO
                               AND M.HSP_TP_CD = HIS_HSP_TP_CD
                               AND M.HSP_TP_CD = P.HSP_TP_CD
                               AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                               AND M.DGNS_STR_DT &lt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                               AND M.DGNS_END_DT &gt; TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') 
                               AND P.TDY_DGNS_DEL_YN = 'N'  --당일진단삭제여부
                               AND P.MAIN_SKNS_YN = 'Y'     --주상병여부
                               AND M.DGNS_ID = P.DGNS_ID
                             GROUP BY  M.ICD10_CD
                          )
                    WHERE RNK = 1 
                      AND ROWNUM = 1;
                                                                              
            RETURN V_CLDG_NM;  
            
        ELSIF (V_SEARCH_TYPE = 'D') THEN
            /*#####################################################
                진단등록일자가 입력일자보다 작거나 같고 
                종료일자가 입력일자보다 큰 진단중 30개 이하를 
                하나의 CELL 에 CRLF 값으로 구분하여 RETURN
                ASIS 함수명 : FT_SD_DISS3
            ######################################################*/
            BEGIN
                 SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                          LISTAGG(DIAG_NM, (CHR(13) || CHR(10))) WITHIN GROUP  (ORDER BY RN ) 
                   INTO V_CLDG_NM
                   FROM (
--                             SELECT '[' || DECODE(M2.MAIN_SKNS_YN,'Y','주', ' ') || TO_CHAR(M2.DGNS_REG_DT,'YYYY-MM-DD ') || RPAD(M1.ICD10_CD,4) || '] ' ||  M1.CLDG_NM DIAG_NM
--                                   ,RANK() OVER (ORDER BY M2.MAIN_SKNS_YN DESC, M2.DGNS_REG_DT DESC, M2.DTMN_SKNS_YN DESC )  RN
--                              FROM MOODIPAM M1                      -- 환자진단기본
--                                 , MOODIPCD M2                      -- 환자수진일별진단정보
--                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
--                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD
--                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
--                               AND M1.DGNS_STR_DT &lt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
--                               AND M1.DGNS_END_DT &gt; TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')  -- 진단종료일자
--                               AND M2.DGNS_REG_DT &gt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                            
                             SELECT '[' || DECODE(MAX(M2.MAIN_SKNS_YN),'Y','주', ' ') || TO_CHAR(MAX(M2.DGNS_REG_DT),'YYYY-MM-DD ') || RPAD(M1.ICD10_CD,4) || '] ' ||  MAX(M1.CLDG_NM) DIAG_NM
                                   ,RANK() OVER (ORDER BY MAX(M2.MAIN_SKNS_YN) DESC, MAX(M2.DGNS_REG_DT) DESC, MAX(M2.DTMN_SKNS_YN) DESC )  RN
                              FROM MOODIPAM M1                      -- 환자진단기본
                                 , MOODIPCD M2                      -- 환자수진일별진단정보
                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                               AND M1.HSP_TP_CD = M2.HSP_TP_CD
                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
                               AND M1.DGNS_STR_DT &lt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                               AND M1.DGNS_END_DT &gt; TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')  -- 진단종료일자
                               AND M2.DGNS_REG_DT &gt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                             GROUP BY M1.ICD10_CD
                 
                            )
                  WHERE ROWNUM &lt; 30;
            
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        V_CLDG_NM := '';                                                              
                                                           
            END;
            RETURN V_CLDG_NM;
        ELSIF (V_SEARCH_TYPE = 'E') THEN
            /*#####################################################
                응급관련 진단 코드 RETURN
                ASIS 함수명 : FT_SD_DISS4
            ######################################################*/
            BEGIN
      

                        SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                               LISTAGG(DIAG_NM, ' ') WITHIN GROUP  (ORDER BY MAIN_SKNS_YN DESC)
                          INTO V_CLDG_NM
                          FROM (        
                          
                                SELECT DISTINCT
                                       SUBSTR(M1.ICD10_CD,1,3) || DECODE(SIGN(LENGTH(M1.ICD10_CD)-3),1,'.' || SUBSTR(M1.ICD10_CD,4,1), NULL) DIAG_NM
                                      , M3.MAIN_SKNS_YN
                                  FROM MOODIPAM M1 -- 환자진단기본
                                      ,MOODIPCD M3 -- 환자수진일별진단정보
                                 WHERE M1.PT_NO = V_PT_NO
                                   AND M1.DGNS_ID = M3.DGNS_ID
                                   AND M3.MED_DEPT_CD IN (V_MED_DEPT_CD, DECODE(V_MED_DEPT_CD, 'EMO','AER'))
                                   AND M3.DGNS_REG_DT &gt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') 
                                   AND M3.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                   AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                                   AND M1.HSP_TP_CD = M3.HSP_TP_CD
                                   AND M3.MED_PACT_ID  = (
                                                           SELECT PACT_ID
                                                             FROM (
                                                                   SELECT PACT_ID
                                                                     FROM ACPPRAAM   --입원접수기본
                                                                    WHERE PT_NO = V_PT_NO
                                                                      AND ADS_DT = TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                                                                      AND EXISTS(
                                                                             SELECT 1
                                                                               FROM MOODIPCD M
                                                                              WHERE M.MED_PACT_ID  = PACT_ID
                                                                                AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                                AND ROWNUM = 1
                                                                             )
                                                                             
                                                                    UNION ALL
                        
                                                                   SELECT PACT_ID
                                                                     FROM ACPPRODM             --외래예약접수기본
                                                                    WHERE PT_NO = V_PT_NO
                                                                      AND MED_DT = TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                                                                      AND MED_DEPT_CD = V_MED_DEPT_CD
                                                                      AND EXISTS(
                                                                             SELECT 1
                                                                               FROM MOODIPCD M
                                                                              WHERE M.MED_PACT_ID  = PACT_ID
                                                                                AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                                AND ROWNUM = 1
                                                                             )
                                                                                                     
                                                                    UNION ALL
                        
                                                                    SELECT PACT_ID
                                                                      FROM ACPPRETM             --응급접수기본
                                                                     WHERE PT_NO = V_PT_NO
                                                                       AND EMRM_ARVL_DTM BETWEEN TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') AND TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')+ 0.99999  --응급실도착일시
                                                                       AND EXISTS(
                                                                             SELECT 1
                                                                               FROM MOODIPCD M
                                                                              WHERE M.MED_PACT_ID  = PACT_ID
                                                                                AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                                AND ROWNUM = 1
                                                                             )                                                                       
                                                                   )
                                                            WHERE ROWNUM = 1                                                                   
                        
                                                          )
                                     )  ;                                          
            END;
            RETURN V_CLDG_NM;                
        ELSIF (V_SEARCH_TYPE = 'F') THEN
            /*#####################################################
                종료되지 않는 주 진단코드 RETURN
                주진단 코드 없을경우 부진단 코드 RETURN  
                ASIS 함수명 : FT_SD_DISS5
            ######################################################*/
            BEGIN
   
               SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           CLDG_NM
                     ,DGNS_REG_DT
                 INTO V_CLDG_NM
                    , D_DGNS_REG_DT
                 FROM (
                    SELECT SUBSTR(M1.ICD10_CD,1,3) || DECODE(SIGN(LENGTH(M1.ICD10_CD)-3),1,'.' || SUBSTR(M1.ICD10_CD,4,1), NULL) || '  ' || M1.CLDG_NM  CLDG_NM
                          , M3.DGNS_REG_DT
                          , M3.MED_DEPT_CD
                          , RANK() OVER(ORDER BY  DECODE(M3.MED_DEPT_CD, V_MED_DEPT_CD ,1 ,2), MAIN_SKNS_YN DESC  ) RNK
                      FROM MOODIPAM M1 -- 환자진단기본
                          ,MOODIPCD M3 -- 환자수진일별진단정보
                     WHERE M1.PT_NO = V_PT_NO 
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M1.HSP_TP_CD = M3.HSP_TP_CD
                       AND M1.DGNS_ID = M3.DGNS_ID
                       AND M3.DGNS_REG_DT &gt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                       AND M3.MED_PACT_ID  IN (
                                               SELECT PACT_ID
                                                 FROM (
                                                       SELECT PACT_ID
                                                         FROM ACPPRAAM   --입원접수기본
                                                        WHERE PT_NO = V_PT_NO
                                                          AND ADS_DT = TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') 
                                                          AND HSP_TP_CD = HIS_HSP_TP_CD
                                                          AND EXISTS(
                                                                     SELECT 1
                                                                       FROM MOODIPCD M
                                                                      WHERE M.MED_PACT_ID  = PACT_ID
                                                                        AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                        AND ROWNUM = 1
                                                                     )
            
            
                                                        UNION ALL
            
                                                        SELECT PACT_ID
                                                          FROM ACPPRETM             --응급접수기본
                                                         WHERE PT_NO = V_PT_NO
                                                           AND EMRM_ARVL_DTM BETWEEN TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') AND TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')+ 0.99999  --응급실도착일시
                                                           AND HSP_TP_CD = HIS_HSP_TP_CD
                                                           AND EXISTS(
                                                                     SELECT 1
                                                                       FROM MOODIPCD M
                                                                      WHERE M.MED_PACT_ID  = PACT_ID
                                                                        AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                        AND ROWNUM = 1
                                                                     )
            
                                                         UNION ALL
            
                                                       SELECT PACT_ID
                                                         FROM ACPPRODM             --외래예약접수기본
                                                        WHERE PT_NO = V_PT_NO
                                                          AND MED_DT = TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') 
                                                          AND HSP_TP_CD = HIS_HSP_TP_CD
                                                          --AND MED_DEPT_CD = 'IMH'
                                                          AND EXISTS(
                                                                     SELECT 1
                                                                       FROM MOODIPCD M
                                                                      WHERE M.MED_PACT_ID  = PACT_ID
                                                                        AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                        AND ROWNUM = 1
                                                                     )
            
                                                       )
            
                                              )
                            )
                    WHERE  RNK = 1
                      AND ROWNUM = 1   ;


            END;
            RETURN V_CLDG_NM;
        ELSIF (V_SEARCH_TYPE = 'G') THEN 
           /*#####################################################
                진단등록일자가 입력일자보다 작거나 같고 
                입력진료과의 진단입력 종료일자가 
                입력일자보다 큰 진단 1개
                ASIS 함수명 : FT_SD_DISS6
            ######################################################*/
            BEGIN
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                      CLDG_NM
                 INTO V_CLDG_NM
                 FROM (
                    SELECT  M1.ICD10_CD || '    ' || M1.CLDG_NM   CLDG_NM
                          , M3.MED_DEPT_CD
                          , RANK() OVER(ORDER BY  DECODE(M3.MED_DEPT_CD, V_MED_DEPT_CD ,1 ,2), MAIN_SKNS_YN DESC  ) RNK
                      FROM MOODIPAM M1 -- 환자진단기본
                          ,MOODIPCD M3 -- 환자수진일별진단정보
                     WHERE M1.PT_NO = V_PT_NO 
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M1.HSP_TP_CD = M3.HSP_TP_CD
                       AND M1.DGNS_ID = M3.DGNS_ID
                       AND M3.DGNS_REG_DT &gt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
                       AND M3.MED_PACT_ID  IN (
                                               SELECT PACT_ID
                                                 FROM (
                                                       SELECT PACT_ID
                                                         FROM ACPPRAAM   --입원접수기본
                                                        WHERE PT_NO = V_PT_NO
                                                          AND ADS_DT = TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') 
                                                          AND HSP_TP_CD = HIS_HSP_TP_CD
                                                          AND EXISTS(
                                                                     SELECT 1
                                                                       FROM MOODIPCD M
                                                                      WHERE M.MED_PACT_ID  = PACT_ID
                                                                        AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                        AND ROWNUM = 1
                                                                     )
            
            
                                                        UNION ALL
            
                                                        SELECT PACT_ID
                                                          FROM ACPPRETM             --응급접수기본
                                                         WHERE PT_NO = V_PT_NO
                                                           AND EMRM_ARVL_DTM BETWEEN TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') AND TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')+ 0.99999  --응급실도착일시
                                                           AND HSP_TP_CD = HIS_HSP_TP_CD
                                                           AND EXISTS(
                                                                     SELECT 1
                                                                       FROM MOODIPCD M
                                                                      WHERE M.MED_PACT_ID  = PACT_ID
                                                                        AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                        AND ROWNUM = 1
                                                                     )
            
                                                         UNION ALL
            
                                                       SELECT PACT_ID
                                                         FROM ACPPRODM             --외래예약접수기본
                                                        WHERE PT_NO = V_PT_NO
                                                          AND MED_DT = TO_DATE(V_DGNS_END_DT, 'YYYYMMDD') 
                                                          AND HSP_TP_CD = HIS_HSP_TP_CD
                                                          --AND MED_DEPT_CD = 'IMH'
                                                          AND EXISTS(
                                                                     SELECT 1
                                                                       FROM MOODIPCD M
                                                                      WHERE M.MED_PACT_ID  = PACT_ID
                                                                        AND M.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부
                                                                        AND ROWNUM = 1
                                                                     )
            
                                                       )
            
                                              )
                            )
                    WHERE  RNK = 1
                      AND ROWNUM = 1   ; 
                  END;                                      
         
--            FOR A1 IN (
--                         SELECT M1.ICD10_CD || '    ' || M1.CLDG_NM DIAG_NM
--                          FROM MOODIPAM M1                      -- 환자진단기본
--                             , MOODIPCD M2                      -- 환자수진일별진단정보 
--                         WHERE M1.PT_NO = V_PT_NO               -- 환자번호
--                           AND M1.HSP_TP_CD = HIS_HSP_TP_CD
--                           AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
--                           AND M1.DGNS_STR_DT &lt;= TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')
--                           AND M1.DGNS_END_DT &gt; TO_DATE(V_DGNS_END_DT, 'YYYYMMDD')  -- 진단종료일자
--                           AND M2.MED_DEPT_CD = V_MED_DEPT_CD
--                         ORDER BY DECODE(M2.MAIN_SKNS_YN,'Y','A','Z')
--                                , M2.DGNS_REG_DT DESC
--                                , DECODE(M2.DTMN_SKNS_YN,'Y','A','Z')
--                        ) LOOP
--                V_CLDG_NM := A1.DIAG_NM;
--                EXIT;                            
--            END LOOP;
                                                                             
            RETURN V_CLDG_NM;

        ELSIF (V_SEARCH_TYPE = 'H') THEN
            /*#####################################################
                환자번호, 원무접수ID, 진료과 에 해당하는 주진단명 RETURN
                ASIS 함수명 : 
            ######################################################*/
            IF V_PAIL_YN = 'Y' THEN    
                     
          BEGIN
          
             SELECT /*+ LEADING (M2) USE_NL(M1 M2) XMED.FT_MOO_DIAGNOSIS */
                        '[' || M1.ICD10_CD || '] ' || DECODE(INSTR(UPPER(M1.CLDG_NM),'AIDS'), 0, DECODE(INSTR(UPPER(M1.CLDG_NM), 'HIV'), 0, M1.CLDG_NM, '*****'), '*****' )  DIAG_NM
                   INTO V_CLDG_NM
                   FROM MOODIPAM M1                      -- 환자진단기본
                      , MOODIPCD M2                      -- 환자수진일별진단정보
                  WHERE M1.PT_NO = V_PT_NO               -- 환자번호
                    AND M1.HSP_TP_CD =  HIS_HSP_TP_CD
                    AND M1.HSP_TP_CD = M2.HSP_TP_CD
                    AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
                    AND M2.MED_PACT_ID = V_PACT_ID       -- 원무접수ID
                    AND M2.TDY_DGNS_DEL_YN = 'N'
                    AND M2.PAIL_YN = 'Y'
                    AND M2.MED_DEPT_CD IN (
                                          SELECT MED_DEPT_CD
                                            FROM ACPPRODM A
                                           WHERE A.PACT_ID = V_PACT_ID
                                          UNION
                                          SELECT MED_DEPT_CD
                                            FROM ACPPRETM A
                                           WHERE A.PACT_ID = V_PACT_ID
                                          UNION
                                          SELECT MED_DEPT_CD
                                            FROM ACPPRAAM A
                                           WHERE A.PACT_ID = V_PACT_ID
                                         )
                      AND ROWNUM = 1
                    ORDER BY M2.MAIN_SKNS_YN DESC, M2.SCRN_SORT_SEQ
                    ;       
                    
                  EXCEPTION
                      WHEN NO_DATA_FOUND THEN
                          V_CLDG_NM := '';  
            
             END;
             
            ELSE
            
              BEGIN
                  SELECT /*+ LEADING (M2) USE_NL(M1 M2) XMED.FT_MOO_DIAGNOSIS */
                         '[' || M1.ICD10_CD || '] ' || DECODE(INSTR(UPPER(M1.CLDG_NM),'AIDS'), 0, DECODE(INSTR(UPPER(M1.CLDG_NM), 'HIV'), 0, M1.CLDG_NM, '*****'), '*****' )  DIAG_NM
                    INTO V_CLDG_NM 
                    FROM MOODIPAM M1                      -- 환자진단기본
                       , MOODIPCD M2                      -- 환자수진일별진단정보 
                   WHERE M1.PT_NO = V_PT_NO               -- 환자번호
                     AND M1.HSP_TP_CD = HIS_HSP_TP_CD 
                     AND M1.HSP_TP_CD = M2.HSP_TP_CD
                     AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
                     AND M2.MED_PACT_ID = V_PACT_ID       -- 원무접수ID
                     AND M2.TDY_DGNS_DEL_YN = 'N'
                     AND M2.MAIN_SKNS_YN = 'Y'
                     AND M2.MED_DEPT_CD IN (
                                           SELECT MED_DEPT_CD
                                             FROM ACPPRODM A
                                            WHERE A.PACT_ID = V_PACT_ID
                                           UNION
                                           SELECT MED_DEPT_CD
                                             FROM ACPPRETM A
                                            WHERE A.PACT_ID = V_PACT_ID
                                           UNION
                                           SELECT MED_DEPT_CD
                                             FROM ACPPRAAM A
                                            WHERE A.PACT_ID = V_PACT_ID
                                          )
                     AND ROWNUM = 1;
              
                  EXCEPTION
                      WHEN NO_DATA_FOUND THEN
                          V_CLDG_NM := '';                                                              
              END; 
              
           END IF;
           
            RETURN V_CLDG_NM;
        ELSIF (V_SEARCH_TYPE = 'I') THEN
            BEGIN
--                SELECT DIAG_NM 
--                  INTO V_CLDG_NM
--                  FROM (
--                            SELECT
--                                   '[' || M1.ICD10_CD || '] ' || DECODE(INSTR(UPPER(M1.CLDG_NM),'AIDS'), 0, DECODE(INSTR(UPPER(M1.CLDG_NM), 'HIV'), 0, M1.CLDG_NM, '*****'), '*****' )  DIAG_NM
--                                   ,DGNS_REG_DT
--                                   ,RANK() OVER(ORDER BY DGNS_REG_DT DESC ) RNK
--                              FROM MOODIPAM M1   -- 환자진단기본
--                                  ,MOODIPBD M2   -- 환자진료과별진단정보
--                                  ,MOODIPCD M3   -- 환자수진일별진단정보
--                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
--                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
--                               AND M2.MED_DEPT_CD = V_MED_DEPT_CD
--                               AND M2.HME_MTD_LST_DGNS_YN = 'Y'
--                               AND M3.MED_PACT_ID = M2.LST_MED_PACT_ID
--                               AND M3.MAIN_SKNS_YN = 'Y'
--                               AND M3.TDY_DGNS_DEL_YN = 'N'
--                       ) A
--                 WHERE RNK = 1
--                   AND ROWNUM = 1 ;


              
--                            SELECT /*+ LEADING(M1 M2 M3) INDEX(M3 MOODIPCD_SI03) */
--                                   '[' || M1.ICD10_CD || '] ' || DECODE(INSTR(UPPER(M1.CLDG_NM),'AIDS'), 0, DECODE(INSTR(UPPER(M1.CLDG_NM), 'HIV'), 0, M1.CLDG_NM, '*****'), '*****' )  DIAG_NM
--                              INTO V_CLDG_NM
--                              FROM MOODIPAM M1   -- 환자진단기본
--                                  ,MOODIPBD M2   -- 환자진료과별진단정보
--                                  ,MOODIPCD M3   -- 환자수진일별진단정보
--                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
--                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
--                               AND M1.DGNS_ID = M3.DGNS_ID          -- 진단ID   
--                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD
--                               and M2.HSP_TP_CD = HIS_HSP_TP_CD
--                               and M3.HSP_TP_CD = HIS_HSP_TP_CD
--                               AND M2.MED_DEPT_CD = V_MED_DEPT_CD 
--                               AND M2.MED_DEPT_CD = M3.MED_DEPT_CD
--                               AND M2.HME_MTD_LST_DGNS_YN = 'Y'
--                               AND M3.MED_PACT_ID = M2.LST_MED_PACT_ID  
--                               AND M3.TDY_DGNS_DEL_YN = 'N'  
--                               AND M3.MAIN_SKNS_YN = 'Y'
--                               
--                               AND ROWNUM = 1;


                           SELECT /*+ LEADING(M2) INDEX (M2 MOODIPBD_SI02) USE_NL(M2 M1 M3) XMED.FT_MOO_DIAGNOSIS */
                             '[' || M1.ICD10_CD || '] ' || DECODE(INSTR(UPPER(M1.CLDG_NM), 'AIDS'), 0, DECODE(INSTR(UPPER(M1.CLDG_NM), 'HIV'), 0, M1.CLDG_NM, '*****'), '*****') DIAG_NM
                            INTO V_CLDG_NM
                            FROM MOODIPAM M1 --  환자진단기본
                                ,MOODIPBD M2 -- 환자진료과별진단정보
                                ,MOODIPCD M3 -- 환자수진일별진단정보
                            WHERE 
                                   --M1.PT_NO = V_PT_NO               -- 환자번호
                                    M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
                               AND M1.DGNS_ID = M3.DGNS_ID        --   진단ID   
                               AND M3.PT_NO= V_PT_NO
                               AND M2.PT_NO= V_PT_NO
                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                               AND M1.HSP_TP_CD = M2.HSP_TP_CD
                               AND M1.HSP_TP_CD = M3.HSP_TP_CD
                               AND M2.MED_DEPT_CD = V_MED_DEPT_CD
                               AND M3.MED_DEPT_CD = V_MED_DEPT_CD 
                               --AND M2.MED_DEPT_CD = M3.MED_DEPT_CD
                               AND M2.HME_MTD_LST_DGNS_YN = 'Y'
                               --AND M2.MED_DEPT_CD = M3.MED_DEPT_CD
                               AND M3.MED_PACT_ID = M2.LST_MED_PACT_ID  
                               --AND M3.MED_PACT_ID = VV_LST_MED_PACT_ID
                               AND M3.TDY_DGNS_DEL_YN = 'N'  
                               AND M3.MAIN_SKNS_YN = 'Y'
                               AND ROWNUM=1
                               ;
              
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        NULL;
                    WHEN OTHERS THEN
                        RETURN NULL;                                       
            END;
        ELSIF (V_SEARCH_TYPE = 'I2') THEN
         /*#####################################################
                V_SEARCH_TYPE = 'I' 쿼리에서 진단코드 삭제 
            ######################################################*/
            BEGIN
             SELECT /*+ LEADING(M2) INDEX (M2 MOODIPBD_SI02) USE_NL(M2 M1 M3) XMED.FT_MOO_DIAGNOSIS */
               DECODE(INSTR(UPPER(M1.CLDG_NM), 'AIDS'), 0, DECODE(INSTR(UPPER(M1.CLDG_NM), 'HIV'), 0, M1.CLDG_NM, '*****'), '*****') DIAG_NM
              INTO V_CLDG_NM
              FROM MOODIPAM M1 --  환자진단기본
                  ,MOODIPBD M2 -- 환자진료과별진단정보
                  ,MOODIPCD M3 -- 환자수진일별진단정보
              WHERE 
                     --M1.PT_NO = V_PT_NO               -- 환자번호
                      M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
                 AND M1.DGNS_ID = M3.DGNS_ID        --   진단ID   
                 AND M3.PT_NO= V_PT_NO
                 AND M2.PT_NO= V_PT_NO
                 AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                 AND M1.HSP_TP_CD = M2.HSP_TP_CD
                 AND M1.HSP_TP_CD = M3.HSP_TP_CD
                 AND M2.MED_DEPT_CD = V_MED_DEPT_CD
                 AND M3.MED_DEPT_CD = V_MED_DEPT_CD 
                 --AND M2.MED_DEPT_CD = M3.MED_DEPT_CD
                 AND M2.HME_MTD_LST_DGNS_YN = 'Y'
                 --AND M2.MED_DEPT_CD = M3.MED_DEPT_CD
                 AND M3.MED_PACT_ID = M2.LST_MED_PACT_ID  
                 --AND M3.MED_PACT_ID = VV_LST_MED_PACT_ID
                 AND M3.TDY_DGNS_DEL_YN = 'N'  
                 AND M3.MAIN_SKNS_YN = 'Y'
                 AND ROWNUM=1
                 ;
              
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        NULL;
                    WHEN OTHERS THEN
                        RETURN NULL;                                       
            END;    
        ELSIF (SUBSTR(V_SEARCH_TYPE,1,1) = 'J') THEN    
            /*#####################################################
                환자번호, 원무접수ID, 진료과 에 해당하는 주진단명 RETURN
                ASIS 함수명 : FT_GET_JINDAN
            ######################################################*/
            BEGIN
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           CLDG_NM
                         , CLDG_VOC_ID
                         , ICD10_CD
                         , SNOMED_CNPT_ID 
                         , DGNS_REG_DT
                      INTO V_CLDG_NM
                         , V_CLDG_VOC_ID
                         , V_ICD10_CD
                         , N_SNOMED_CNPT_ID
                         , D_DGNS_REG_DT
                      FROM (
                            SELECT 
                                   M1.CLDG_NM
                                 , M1.CLDG_VOC_ID
                                 , M1.ICD10_CD
                                 , C1.SNOMED_CNPT_ID
                                 , M2.DGNS_REG_DT
                              FROM MOODIPAM M1                      -- 환자진단기본
                                 , MOODIPCD M2                      -- 환자수진일별진단정보 
                                 , CCVMVDCM C1                      -- 진단용어기본 
                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD  
                               AND M1.HSP_TP_CD = M2.HSP_TP_CD
                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
                               AND M1.DGNS_END_DT = TO_DATE('99991231','YYYYMMDD')
--                               AND M2.MED_DEPT_CD = NVL(V_MED_DEPT_CD, M2.MED_DEPT_CD)
                               AND (   M2.MED_PACT_ID = V_PACT_ID
                                       or m2.dgns_reg_dt &lt;= (
                                                               SELECT MED_DT
                                                              FROM XBIL.ACPPRHIV A
                                                             WHERE A.PACT_ID = V_PACT_ID
                                                            )
                                    )
                            
                               AND NVL(M2.TDY_DGNS_DEL_YN, 'N') = 'N'
                            --   AND M2.DSTM_DGNS_YN = 'Y' 
                               AND M1.CLDG_VOC_ID = C1.VOC_ID
                             ORDER BY DECODE(M2.MED_DEPT_CD, V_MED_DEPT_CD, 1,2)
                                    , DECODE(NVL(M2.MAIN_SKNS_YN,'N'), 'Y',1,'N',2,9)
                                    , M2.DGNS_REG_DT DESC
                            )                            
                     WHERE ROWNUM = 1;
                    
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            NULL;
                        WHEN OTHERS THEN
                            RETURN NULL;                                       
                END;
                      
                IF SUBSTR(V_SEARCH_TYPE,2,1) = 'N' THEN
                    V_CLDG_NM := V_CLDG_NM;
                ELSIF SUBSTR(V_SEARCH_TYPE,2,1) = 'Y' THEN
                    V_CLDG_NM := V_ICD10_CD;
                ELSIF SUBSTR(V_SEARCH_TYPE,2,1) = 'A' THEN
                    V_CLDG_NM := RPAD(V_CLDG_NM, 250, ' ') || RPAD(V_CLDG_VOC_ID,10,' ') || RPAD(V_ICD10_CD, 10, ' ') || RPAD(TO_CHAR(N_SNOMED_CNPT_ID), 100, ' ') || TO_CHAR(D_DGNS_REG_DT,'YYYY-MM-DD');
                ELSIF SUBSTR(V_SEARCH_TYPE,2,1) = 'V' THEN
                    V_CLDG_NM := V_CLDG_VOC_ID; 
                ELSE
                    V_CLDG_NM := V_CLDG_NM;               
                END IF;
            END;    
            
        ELSIF (V_SEARCH_TYPE = 'NIMSJN') THEN    
            /*#####################################################
                환자번호, 원무접수ID, 진료과 에 해당하는 주진단명 RETURN
                ASIS 함수명 : FT_GET_JINDAN
                2019-07-09 : 진료지원 NIMS 진단 보낼때 종료된 후 진단까지 조회하도록 추가(NIMS전용)
            ######################################################*/
            BEGIN
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
--                           CLDG_NM
--                         , CLDG_VOC_ID
--                         , ICD10_CD
                           ICD10_CD
--                         , SNOMED_CNPT_ID 
--                         , DGNS_REG_DT
                      INTO 
--                           V_CLDG_NM
--                         , V_CLDG_VOC_ID
                           V_RETURN
--                         , N_SNOMED_CNPT_ID
--                         , D_DGNS_REG_DT
                      FROM (
                            SELECT 
--                                   M1.CLDG_NM
--                                 , M1.CLDG_VOC_ID
                                   LISTAGG(DISTINCT M1.ICD10_CD, '/') WITHIN GROUP  (ORDER BY M2.DGNS_REG_DT DESC)     ICD10_CD
--                                 , C1.SNOMED_CNPT_ID
--                                 , M2.DGNS_REG_DT
                              FROM MOODIPAM M1                      -- 환자진단기본
                                 , MOODIPCD M2                      -- 환자수진일별진단정보 
                                 , CCVMVDCM C1                      -- 진단용어기본 
                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD  
                               AND M1.HSP_TP_CD = M2.HSP_TP_CD
                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
--                               AND M1.DGNS_END_DT = TO_DATE('99991231','YYYYMMDD')
--                               AND M2.MED_DEPT_CD = NVL(V_MED_DEPT_CD, M2.MED_DEPT_CD)
                               AND (   M2.MED_PACT_ID = V_PACT_ID
                                       or m2.dgns_reg_dt &lt;= (
                                                               SELECT MED_DT
                                                              FROM XBIL.ACPPRHIV A
                                                             WHERE A.PACT_ID = V_PACT_ID
                                                            )
                                    )
                            
--                               AND NVL(M2.TDY_DGNS_DEL_YN, 'N') = 'N'
                            --   AND M2.DSTM_DGNS_YN = 'Y' 
                               AND M1.CLDG_VOC_ID = C1.VOC_ID
                             ORDER BY DECODE(M2.MED_DEPT_CD, V_MED_DEPT_CD, 1,2)
                                    , DECODE(NVL(M2.MAIN_SKNS_YN,'N'), 'Y',1,'N',2,9)
                                    , M2.DGNS_REG_DT DESC
                            )                            
                     WHERE ROWNUM = 1;
                    
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            NULL;
                        WHEN OTHERS THEN
                            RETURN NULL;                                       
                END;
                      
                V_CLDG_NM := V_RETURN;
                
            END;
            
        ELSIF (V_SEARCH_TYPE = 'K') THEN
            /*#####################################################
                경증진단이 존재하고 인슐린 처방이 없으며 원외처방이 존재하면 'Y'를 반환한다.            
                ASIS 함수명 : FN_GET_V252_YN 
            ######################################################*/
            BEGIN
            -- 해당환자의 당일진단내역에 경증진단이 존재하는지 확인한다.
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       'Y'
                  INTO V_LIGHT_DISEASE_YN
                  FROM MOODIPAM M1      -- 환자진단기본
                     , MOODIPCD M2      -- 환자수진일별진단정보 
                     , CCVMVDAD C       -- 보험관계진단속성정보
                 WHERE 1 = 1
                   AND M2.MED_PACT_ID = V_PACT_ID   -- 원무접수ID
                   AND M2.MAIN_SKNS_YN = 'Y'
                   AND NVL(M2.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부
                   AND M1.DGNS_ID = M2.DGNS_ID      --진단ID
                   AND NVL(M1.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부 
                   AND M1.CLDG_VOC_ID = C.VOC_ID     -- ICD10코드
                   AND M2.DGNS_REG_DT BETWEEN  AVL_STR_DTM AND AVL_END_DTM                                            
                   AND C.SILL_ILNS_CFSC_CD IS NOT NULL         -- 경질환여부 
                   AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                   AND M1.HSP_TP_CD = M2.HSP_TP_CD
                   AND ROWNUM = 1;
                   
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN                   
                       V_CLDG_NM := 'N';
                       RETURN V_CLDG_NM;
                    WHEN OTHERS THEN
                       RETURN SQLCODE||':'||SQLERRM;
            END;
            
            BEGIN
                -- 해당환자의 당일진단내역에 인슐린처방이 존재하는지 확인한다.
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       'Y'
                  INTO V_INSULIN_YN
                  FROM MOOORDRM M           -- 환자투약처방기본 
                     , MSDMDBAM S           -- 약품기본
                 WHERE 1=1 
                   AND M.PT_NO = V_PT_NO 
                   AND M.ORD_DT = (SELECT MED_DT            -- 원무접수에 해당하는 진료일자에 발생한 모든 처방을 검색해야함.(ASIS 기준) 
                                     FROM ACPPRODM 
                                    WHERE PACT_ID = V_PACT_ID    -- 원무접수ID
                                      AND APCN_YN = 'N'         -- 접수취소여부
                                    )                                      
                   AND M.ODDSC_TP_CD = 'C'      -- 처방중단구분코드 
                   AND M.DG_RINS_STF_NO IS NULL -- 약반납지시직원번호 
                   AND M.ORD_CD = S.MDPR_CD     -- 약품코드
--                   AND S.SNUH_EFCC_CTG_NO = '842402'    -- 서울대병원효능분류코드  
                   AND S.ATC_CD LIKE 'A10A%'  -- INSULINS AND ANALOGUES    -- 2018-07-26 정원준 : 인슐린 계열 조건을 ATC 코드로 변경
                   AND M.HSP_TP_CD = HIS_HSP_TP_CD
                   AND M.HSP_TP_CD = S.HSP_TP_CD
                   AND ROWNUM = 1;
                EXCEPTION
                    WHEN NO_DATA_FOUND THEN                   
                       V_INSULIN_YN := 'N';
                    WHEN OTHERS THEN
                       RETURN SQLCODE||':'||SQLERRM;
                   
            END;
            
            -- 해당환자의 당일처방내역에 원외처방이 존재하는지 확인한다.
            IF V_INSULIN_YN = 'Y' THEN
                V_CLDG_NM := 'N';
                RETURN V_CLDG_NM;
            ELSE
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           'Y'
                      INTO V_OUTORD_YN
                      FROM MOOORDRM     -- 환자투약처방기본
                     WHERE PACT_ID = V_PACT_ID      -- 원무접수ID
                       AND ODDSC_TP_CD = 'C'        -- 처방중단구분코드
                       AND PACT_TP_CD = 'O'         -- 원무접수구분코드 
                       AND DG_RINS_STF_NO IS NULL -- 약반납지시직원번호 
                       AND NVL(IORD_PSB_YN,'N') = 'N'   -- 원내처방가능여부     
                       AND HSP_TP_CD = HIS_HSP_TP_CD
                       AND ROWNUM = 1;
    
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN                   
                           V_OUTORD_YN := 'N';
                           RETURN V_OUTORD_YN;
                        WHEN OTHERS THEN
                           RETURN SQLCODE||':'||SQLERRM;
                       
                END;
                V_CLDG_NM := V_OUTORD_YN;
                RETURN V_OUTORD_YN;
            END IF;                
        
        ELSIF (V_SEARCH_TYPE = 'L') THEN
        /*#####################################################       
         ASIS 함수명 : FT_GET_SANG  // 기존 함수에 원무ID를 추가하시로 함.
        ######################################################*/
            BEGIN
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       DECODE(INSTR(UPPER(B.VOC_NM), 'AIDS'), 0, DECODE(INSTR(UPPER(B.VOC_NM), 'HIV'),0,B.VOC_NM, '*****')
                                                          , '*****')
                  INTO V_CLDG_NM
                  FROM MOODIPAM M1
                     , MOODIPCD M2
                     , CCVMVDCM B
                 WHERE M1.PT_NO = V_PT_NO
                   AND M1.DGNS_ID = M2.DGNS_ID
                   AND M2.TDY_DGNS_DEL_YN = 'N'
                   AND M2.MAIN_SKNS_YN = DECODE(V_MED_DEPT_CD , NULL, 'Y', DECODE('DM', 'IMHP', M2.MAIN_SKNS_YN, 'Y'))
                   AND M2.MED_DEPT_CD = DECODE( V_MED_DEPT_CD , NULL, M2.MED_DEPT_CD , V_MED_DEPT_CD)
                   AND M2.MED_PACT_ID = DECODE( V_PACT_ID, NULL, M2.MED_PACT_ID, V_PACT_ID)
                   AND M1.CLDG_VOC_ID = B.VOC_ID
                   AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                   AND M2.HSP_TP_CD = HIS_HSP_TP_CD
                   AND ROWNUM = 1;
              EXCEPTION
                 WHEN NO_DATA_FOUND THEN NULL ;
                 WHEN OTHERS THEN  RETURN('') ;
            END  ;
            
            IF ( V_MED_DEPT_CD NOT IN  ('IMHP', 'PHODC')) AND (V_CLDG_NM IS NULL) THEN
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           DECODE(INSTR(UPPER(B.VOC_NM), 'AIDS'), 0, DECODE(INSTR(UPPER(B.VOC_NM), 'HIV'),0,B.VOC_NM, '*****')
                                                          , '*****')
                      INTO V_CLDG_NM
                      FROM MOODIPAM M1
                         , MOODIPCD M2
                         , CCVMVDCM B
                     WHERE M1.PT_NO = V_PT_NO
                       AND M1.DGNS_ID = M2.DGNS_ID
                       AND M2.TDY_DGNS_DEL_YN = 'N'
                       AND M2.MAIN_SKNS_YN = 'Y'
                       AND M2.MED_PACT_ID = DECODE( V_PACT_ID, NULL, M2.MED_PACT_ID, V_PACT_ID)
                       AND M1.CLDG_VOC_ID = B.VOC_ID
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M2.HSP_TP_CD = HIS_HSP_TP_CD
                       AND ROWNUM = 1    ;
                       
                       EXCEPTION
                        WHEN OTHERS THEN  RETURN('') ;
                END;
            END IF;  
        ELSIF (V_SEARCH_TYPE = 'M') THEN
        /*#####################################################       
         환자의 최근 진단명 하나 리턴
        ######################################################*/
            BEGIN
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       A.CLDG_NM
                  INTO V_CLDG_NM
                  FROM MOODIPAM A
                     , MOODIPCD B
                 WHERE A.PT_NO = V_PT_NO
                   AND B.MED_DEPT_CD =  DECODE(V_MED_DEPT_CD, NULL, B.MED_DEPT_CD, V_MED_DEPT_CD)
                   AND NVL(B.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                   AND A.DGNS_ID = B.DGNS_ID
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.DGNS_REG_DT =  ( SELECT MAX(D.DGNS_REG_DT )
                                              FROM MOODIPAM C
                                                 , MOODIPCD D
                                             WHERE C.PT_NO = V_PT_NO
                                               AND D.MED_DEPT_CD =  DECODE(V_MED_DEPT_CD, NULL, D.MED_DEPT_CD, V_MED_DEPT_CD)
                                               AND NVL(D.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                                               AND C.DGNS_ID = D.DGNS_ID
                                               AND C.HSP_TP_CD = HIS_HSP_TP_CD
                                               AND D.HSP_TP_CD = HIS_HSP_TP_CD
                                               AND ROWNUM = 1 )
                   AND ROWNUM  =1 ;
                   
                     EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        NULL;
                    WHEN OTHERS THEN
                        RETURN NULL;  
              END;

        ELSIF (V_SEARCH_TYPE = 'M2') THEN
        /*#####################################################       
         환자의 진료과 최근 주진단명 (한글)리턴 2022.01.27
        ######################################################*/
            BEGIN
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       C.CD_KOR_NM
                  INTO V_CLDG_NM
                  FROM MOODIPAM A
                     , MOODIPCD B
                     , CCVMVDCM C
                 WHERE A.PT_NO = V_PT_NO
                   AND B.MED_DEPT_CD =  V_MED_DEPT_CD
                   AND B.MAIN_SKNS_YN = 'Y'
                   AND NVL(B.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                   AND A.DGNS_ID = B.DGNS_ID
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.HSP_TP_CD = HIS_HSP_TP_CD   
                   AND C.VOC_ID = A.CLDG_VOC_ID
                   AND B.DGNS_REG_DT =  ( SELECT MAX(D.DGNS_REG_DT )
                                              FROM MOODIPAM C
                                                 , MOODIPCD D
                                             WHERE C.PT_NO = V_PT_NO
                                               AND D.MED_DEPT_CD =  V_MED_DEPT_CD
                                               AND D.MAIN_SKNS_YN = 'Y'
                                               AND NVL(D.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                                               AND C.DGNS_ID = D.DGNS_ID
                                               AND C.HSP_TP_CD = HIS_HSP_TP_CD
                                               AND D.HSP_TP_CD = HIS_HSP_TP_CD
                                               AND ROWNUM = 1 )
                   AND ROWNUM  =1 ;
                   
                     EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        NULL;
                    WHEN OTHERS THEN
                        RETURN NULL;  
              END;
        ELSIF (V_SEARCH_TYPE = 'M3') THEN
        /*#####################################################       
         환자의 진료과 최근 주진단명(한글) + 마이그진단 리턴 2022.02.03 (진료지원) CT실 동의서에서만 사용함
        ######################################################*/
            BEGIN
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       C.CD_KOR_NM
                  INTO V_CLDG_NM
                  FROM MOODIPAM A
                     , MOODIPCD B
                     , CCVMVDCM C
                 WHERE A.PT_NO = V_PT_NO
                   AND B.MED_DEPT_CD =  V_MED_DEPT_CD
                   AND B.MAIN_SKNS_YN = 'Y'
                   AND NVL(B.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                   AND A.DGNS_ID = B.DGNS_ID
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.HSP_TP_CD = HIS_HSP_TP_CD   
                   AND C.VOC_ID = A.CLDG_VOC_ID
                   AND B.DGNS_REG_DT =  ( SELECT MAX(D.DGNS_REG_DT )
                                              FROM MOODIPAM C
                                                 , MOODIPCD D
                                             WHERE C.PT_NO = V_PT_NO
                                               AND D.MED_DEPT_CD =  V_MED_DEPT_CD
                                               AND D.MAIN_SKNS_YN = 'Y'
                                               AND NVL(D.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                                               AND C.DGNS_ID = D.DGNS_ID
                                               AND C.HSP_TP_CD = HIS_HSP_TP_CD
                                               AND D.HSP_TP_CD = HIS_HSP_TP_CD
                                               AND ROWNUM = 1 )
                   AND ROWNUM  =1 ;
                   
                   EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                        BEGIN   
                         /*마이그 데이터 조회. MAIN으로 주진단 이 있으면 주진단으로 주진단 없으면 부진단이라도 가져오도록 함*/ 
       SELECT
            DX
         INTO V_CLDG_NM   
         FROM HOCS.OCSDIAGN A
        WHERE A.PATIENT_NO = V_PT_NO
                               --AND A.CLINICAL_DEPT = V_MED_DEPT_CD   진료과 조건은 제외. 전체봄
                               AND A.HSP_TP_CD = HIS_HSP_TP_CD
                               AND A.START_DATE &lt;= TO_DATE('20211231','YYYYMMDD')
                               AND (TO_CHAR(A.START_DATE, 'YYYYMMDD') || A.MAIN_YN) = (SELECT MAX(TO_CHAR(X.START_DATE, 'YYYYMMDD') || X.MAIN_YN)
                                                                                         FROM HOCS.OCSDIAGN X
                                                                                        WHERE X.PATIENT_NO = V_PT_NO
                                                                                          --AND X.CLINICAL_DEPT = V_MED_DEPT_CD  진료과 조건은 제외. 전체봄
                                                                                          AND X.HSP_TP_CD = HIS_HSP_TP_CD
                                                                                          AND X.START_DATE &lt;= TO_DATE('20211231','YYYYMMDD')
                                                                                          --AND X.MAIN_YN = 'Y'
                                                                                       )
                               AND ROWNUM = 1
                               ;
                      EXCEPTION
                       WHEN NO_DATA_FOUND THEN
                           NULL;
                       WHEN OTHERS THEN
                           RETURN NULL;  
                        END;
                    WHEN OTHERS THEN
                        RETURN NULL;  
              END;
        ELSIF (V_SEARCH_TYPE = 'N') THEN
        /*#####################################################       
         ASIS 함수명 : FT_GET_SANG_DISS
        ######################################################*/
            BEGIN
                   SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                          A.ICD10_CD
                     INTO V_CLDG_NM
                  FROM (
                        SELECT M1.ICD10_CD
                             , M2.DGNS_REG_DT
                          FROM MOODIPAM M1
                             , MOODIPCD M2
                             , CCVMVDCM B
                         WHERE M1.PT_NO = V_PT_NO
                           AND M1.DGNS_ID = M2.DGNS_ID
                           AND M2.TDY_DGNS_DEL_YN = 'N'
                           AND M2.MAIN_SKNS_YN = DECODE(V_MED_DEPT_CD , NULL, 'Y', DECODE('DM', 'IMHP', M2.MAIN_SKNS_YN, 'Y'))
                           AND M2.MED_DEPT_CD = DECODE( V_MED_DEPT_CD , NULL, M2.MED_DEPT_CD , V_MED_DEPT_CD)
                           --AND M2.MED_PACT_ID = DECODE( V_PACT_ID, NULL, M2.MED_PACT_ID, V_PACT_ID)
                           AND M1.CLDG_VOC_ID = B.VOC_ID
                           AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                           AND M2.HSP_TP_CD = HIS_HSP_TP_CD
                           --AND B.HSP_TP_CD = HIS_HSP_TP_CD
                           ORDER BY M2.DGNS_REG_DT DESC, M2.DGNS_REG_SEQ
                           ) A
                  WHERE ROWNUM = 1;
              EXCEPTION
                 WHEN NO_DATA_FOUND THEN NULL ;
                 WHEN OTHERS THEN  RETURN('') ;
            END  ;
            
            IF ( V_MED_DEPT_CD NOT IN ('IMHP', 'PHODC')) AND (V_CLDG_NM IS NULL) THEN
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           A.ICD10_CD
                      INTO V_CLDG_NM
                      FROM (
                            SELECT M1.ICD10_CD
                                 , M2.DGNS_REG_DT
                              FROM MOODIPAM M1
                                 , MOODIPCD M2
                                 , CCVMVDCM B
                             WHERE M1.PT_NO = V_PT_NO
                               AND M1.DGNS_ID = M2.DGNS_ID
                               AND M2.TDY_DGNS_DEL_YN = 'N'
                               AND M2.MAIN_SKNS_YN = 'Y'
                               AND M1.CLDG_VOC_ID = B.VOC_ID
                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                               AND M2.HSP_TP_CD = HIS_HSP_TP_CD
                            ORDER BY M2.DGNS_REG_DT DESC, M2.DGNS_REG_SEQ
                            ) A
                    WHERE ROWNUM = 1    ;
                       
                       EXCEPTION
                        WHEN OTHERS THEN  RETURN('') ;
                END;
            END IF;    
            
        ELSIF (V_SEARCH_TYPE = 'O') THEN
        /*#####################################################       
         환자의 마지막 주진단명
        ######################################################*/
            BEGIN
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       DATA.CLDG_NM 
                  INTO V_CLDG_NM
                  FROM  (SELECT B.*
                          FROM MOODIPAM A
                             , MOODIPCD B
                         WHERE A.PT_NO = V_PT_NO
                           AND A.DGNS_ID = B.DGNS_ID
                           AND B.MAIN_SKNS_YN = 'Y'  --주상병여부
                           AND B.TDY_DGNS_DEL_YN = 'N'
                           AND A.HSP_TP_CD = HIS_HSP_TP_CD
                           AND B.HSP_TP_CD = HIS_HSP_TP_CD
                           ORDER BY B.DGNS_REG_DT DESC   ) DATA
                 WHERE ROWNUM = 1  ;
            END;
        ELSIF (V_SEARCH_TYPE = 'P') THEN
        /*#####################################################       
         응급실 환자의 퇴원시 주진단명
        ######################################################*/
            BEGIN
                SELECT /*XMED.FT_MOO_DIAGNOSIS*/ 
                       B.CLDG_NM  --임상진단명
                  INTO V_CLDG_NM                                                  
                  FROM MOODIPAM A
                     , MOODIPCD B
                 WHERE A.PT_NO = V_PT_NO
                   AND A.DGNS_ID = B.DGNS_ID
                   AND B.TDY_DGNS_DEL_YN = 'N' --당일진단삭제여부
                   AND B.MAIN_SKNS_YN = 'Y'
                   AND B.MED_PACT_TP_CD = 'E'
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.MED_PACT_ID = V_PACT_ID
                   AND ROWNUM = 1  ;
            END;
        ELSIF (V_SEARCH_TYPE = 'Q') THEN  
        /*#####################################################       
         AS-IS : FT_GET_SANG_WARDPATIENT
        ######################################################*/ 
            BEGIN 
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           C.VOC_NM
                      INTO V_CLDG_NM
                      FROM MOODIPAM A
                         , MOODIPCD B
                         , CCVMVDCM C
                     WHERE A.PT_NO = V_PT_NO
                       AND A.DGNS_ID = B.DGNS_ID
                       AND B.TDY_DGNS_DEL_YN = 'N'  --당일진단삭제여부
                       AND B.MED_DEPT_CD = DECODE(V_MED_DEPT_CD, NULL, B.MED_DEPT_CD, V_MED_DEPT_CD)
                       AND A.CLDG_VOC_ID = C.VOC_ID
                       AND A.HSP_TP_CD  = HIS_HSP_TP_CD  
                       AND B.HSP_TP_CD  = HIS_HSP_TP_CD
                       --AND C.HSP_TP_CD  = HIS_HSP_TP_CD
                       AND ROWNUM = 1;
                    EXCEPTION
                     WHEN NO_DATA_FOUND THEN NULL ;
                     WHEN OTHERS THEN  RETURN('') ;            
                END;
            
                IF  (V_MED_DEPT_CD NOT IN ('IMHP', 'PHODC')) AND (V_CLDG_NM IS NULL) THEN
                    BEGIN
                        SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                               C.VOC_NM
                          INTO V_CLDG_NM
                          FROM MOODIPAM A
                             , MOODIPCD B
                             , CCVMVDCM C
                         WHERE A.PT_NO = V_PT_NO
                           AND A.DGNS_ID = B.DGNS_ID
                           AND B.TDY_DGNS_DEL_YN = 'N'  --당일진단삭제여부
                           AND A.CLDG_VOC_ID = C.VOC_ID                   
                           AND B.MAIN_SKNS_YN = 'Y'    --주상병여부
                           AND A.HSP_TP_CD  = HIS_HSP_TP_CD  
                              AND B.HSP_TP_CD  = HIS_HSP_TP_CD
                             --AND C.HSP_TP_CD  = HIS_HSP_TP_CD
                           AND ROWNUM = 1
                           ORDER BY  B.DGNS_REG_DT  DESC ;
                            EXCEPTION
                         WHEN OTHERS THEN  RETURN('') ;     
                    END;      
                END IF;
                
            END;  
        ELSIF (V_SEARCH_TYPE = 'R') THEN  
        /*#####################################################       
         퇴원주진단 반환, pact_id가 없으면 
        ######################################################*/     
            if V_PACT_ID is null then --1. pact_id가 null이면 최종주진단 반환
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                       A.CLDG_NM || ' ' || A.DGNS_STEP_CTG_NM
                  INTO V_CLDG_NM
                  FROM MOODIPAM A
                     , MOODIPCD B
                 WHERE A.PT_NO = V_PT_NO
--                   AND B.MED_DEPT_CD =  DECODE(V_MED_DEPT_CD, NULL, B.MED_DEPT_CD, V_MED_DEPT_CD)
                   AND NVL(B.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                   AND B.MAIN_SKNS_YN = 'Y'
                   AND A.DGNS_ID = B.DGNS_ID
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.DGNS_REG_DT =  ( SELECT MAX(D.DGNS_REG_DT )
                                              FROM MOODIPAM C
                                                 , MOODIPCD D
                                             WHERE C.PT_NO = V_PT_NO
--                                               AND D.MED_DEPT_CD =  DECODE(V_MED_DEPT_CD, NULL, D.MED_DEPT_CD, V_MED_DEPT_CD)
                                               AND NVL(D.TDY_DGNS_DEL_YN,'N') &lt;&gt; 'Y'
                                               AND D.MAIN_SKNS_YN = 'Y'
                                               AND C.DGNS_ID = D.DGNS_ID
                                               AND C.HSP_TP_CD = HIS_HSP_TP_CD
                                               AND D.HSP_TP_CD = HIS_HSP_TP_CD )
                   AND ROWNUM  =1 ;                   
                   EXCEPTION
                         WHEN OTHERS THEN  RETURN('') ;     
                
                END;
            ELSE                      --2. pact_id가 있으면 해당 퇴원시주진단 반환   
                BEGIN
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           A.CLDG_NM || ' ' || A.DGNS_STEP_CTG_NM
                      INTO V_CLDG_NM
                      FROM MOODIPAM A
                         , MOODIPCD B
                     WHERE A.DGNS_ID = B.DGNS_ID
                       AND A.PT_NO = V_PT_NO
                       AND B.DSTM_DGNS_YN = 'Y'   --퇴원시점진단여부
                       AND B.MAIN_SKNS_YN = 'Y'
                       AND B.MED_PACT_ID = V_PACT_ID
                       AND B.TDY_DGNS_DEL_YN = 'N'
                       AND A.HSP_TP_CD = HIS_HSP_TP_CD
                       AND B.HSP_TP_CD = HIS_HSP_TP_CD ;
                       EXCEPTION
                         WHEN OTHERS THEN  RETURN('') ;     
                END;
            end if;  
        ELSIF (V_SEARCH_TYPE = 'S') THEN  
        /*#####################################################       
         AS-IS : 수진ID에 해당하는 주진단명 반환
        ######################################################*/ 
            BEGIN 
                SELECT A.CLDG_NM || ' ' || A.DGNS_STEP_CTG_NM
                  INTO V_CLDG_NM
                  FROM MOODIPAM A
                      , MOODIPCD B
                 WHERE A.DGNS_ID = B.DGNS_ID
                   AND A.PT_NO = V_PT_NO
                   AND B.MED_PACT_ID = V_PACT_ID
                   AND B.MAIN_SKNS_YN = 'Y'
                   AND B.TDY_DGNS_DEL_YN = 'N'
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.HSP_TP_CD = HIS_HSP_TP_CD 
                   AND ROWNUM = 1 ;
            END;      
       ELSIF (V_SEARCH_TYPE = 'T') THEN  
        /*#####################################################       
         AS-IS : 폐암(C34) 진단 여부 반환
        ######################################################*/ 
            BEGIN 
                SELECT DECODE(COUNT(1), '0', 'N', 'Y')
                  INTO V_CLDG_NM
                  FROM MOODIPAM A
                       , MOODIPCD B
                 WHERE A.DGNS_ID = B.DGNS_ID
                   AND A.ICD10_CD LIKE 'C34%'
                   AND A.PT_NO = V_PT_NO
                   AND B.MED_PACT_ID = V_PACT_ID
                   AND B.TDY_DGNS_DEL_YN = 'N'
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND B.HSP_TP_CD = HIS_HSP_TP_CD ;
            END;                     
       ELSIF (SUBSTR(V_SEARCH_TYPE,1,1) = 'U') THEN  
        /*#####################################################       
        U1 : ICD10 코드 
        U2 : ICD10 명
        ######################################################*/        
            BEGIN
                BEGIN    
                
                      SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                          M.ICD_CD
                        , C.CD_KOR_NM
                      INTO
                           V_ICD_CD
                         , V_ICD_CD_KOR_NM
                      FROM (
                            SELECT M2.DGNS_REG_DT
                                 , M2.FSR_DTM
                                 , M1.ICD10_CD || M1.DGNS_NM_STEP_CTG_CD as ICD_CD
                              FROM MOODIPAM M1                      -- 환자진단기본
                                 , MOODIPCD M2                      -- 환자수진일별진단정보
                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                               AND M1.HSP_TP_CD = M2.HSP_TP_CD
                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
                               AND M2.MED_DEPT_CD = V_MED_DEPT_CD
                               AND M2.MED_PACT_ID = V_PACT_ID
                               AND NVL(M2.TDY_DGNS_DEL_YN, 'N') = 'N'
                               AND NVL(M1.TDY_DGNS_DEL_YN, 'N') = 'N'
                               AND M2.MAIN_SKNS_YN = 'Y'
                             ORDER BY M2.DGNS_REG_DT, M2.DGNS_REG_SEQ
                            ) M
                          , CCVMVICC C            --국제표준질병분류코드
                      WHERE M.ICD_CD = C.ICD_CD
                        AND C.ICD_TP_CD = '2'
                        AND M.FSR_DTM BETWEEN  C.AVL_STR_DTM AND C.AVL_END_DTM
                        AND ROWNUM = 1
                        ;                
                
                
                                        
--                      SELECT /*XMED.FT_MOO_DIAGNOSIS*/
--                          ICD_CD
--                        , CD_KOR_NM
--                      INTO
--                           V_ICD_CD
--                         , V_ICD_CD_KOR_NM
--                      FROM (
--                            SELECT
--                                   C1.ICD_CD
--                                 , C1.CD_KOR_NM                                                    --코드한글명                                                               
--    
--                              FROM MOODIPAM M1                      -- 환자진단기본
--                                 , MOODIPCD M2                      -- 환자수진일별진단정보
--                                 , CCVMVICC C1            --국제표준질병분류코드
--                             WHERE M1.PT_NO = V_PT_NO               -- 환자번호
--                               AND M1.HSP_TP_CD = HIS_HSP_TP_CD
--                               AND M1.DGNS_ID = M2.DGNS_ID          -- 진단ID
--                               AND M2.MED_DEPT_CD = V_MED_DEPT_CD
--                               AND M2.MED_PACT_ID = V_PACT_ID
--                               AND NVL(M2.TDY_DGNS_DEL_YN, 'N') = 'N'
--                               AND NVL(M1.TDY_DGNS_DEL_YN, 'N') = 'N'
--                               AND M2.MAIN_SKNS_YN = 'Y'
--                               AND C1.ICD_CD = M1.ICD10_CD || M1.DGNS_NM_STEP_CTG_CD
--                               AND C1.ICD_TP_CD = '2'
--                               AND M2.DGNS_REG_DT BETWEEN  C1.AVL_STR_DTM AND C1.AVL_END_DTM
--                             ORDER BY M2.DGNS_REG_DT, M2.DGNS_REG_SEQ  
--                            )
--                         WHERE ROWNUM = 1  
--                         ;
                         
                         
                           
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            RETURN NULL;
                        WHEN OTHERS THEN
                            RETURN NULL;                                       
                END;
                      
                IF SUBSTR(V_SEARCH_TYPE,2,1) = '1' THEN
                    V_CLDG_NM := V_ICD_CD;
                ELSIF SUBSTR(V_SEARCH_TYPE,2,1) = '2' THEN
                    V_CLDG_NM := V_ICD_CD_KOR_NM;
                ELSE
                    V_CLDG_NM := V_ICD_CD_KOR_NM||'('||V_ICD_CD||')';
                END IF;
            END;     
                            
       ELSIF (SUBSTR(V_SEARCH_TYPE,1,1) = 'V') THEN  
        /*#####################################################       
        2016-07-21 2016-07-21 상처장루 교육실 의뢰 화면 요청(201607-00358) 
        V: [ICD10_CD] + 진단명
        V1: 진단명
        ######################################################*/                                
              BEGIN
                 
                 SELECT MAIN_DGNS_NM 
                      , ICD10_CD
                   INTO V_CLDG_NM
                      , V_ICD_CD
                   FROM (      
                          SELECT BB.CLDG_NM || NVL2(BB.DGNS_STEP_CTG_NM, ' ' || BB.DGNS_STEP_CTG_NM, NULL)     MAIN_DGNS_NM 
                               , BB.ICD10_CD    ICD10_CD
                            FROM MOODIPCD AA
                            , MOODIPAM BB
                              WHERE AA.PT_NO        = V_PT_NO
                          AND AA.PT_NO        = BB.PT_NO 
                          AND AA.MED_DEPT_CD  = V_MED_DEPT_CD
                          AND AA.MED_PACT_ID  = V_PACT_ID   
                          AND AA.DGNS_ID      = BB.DGNS_ID
                          AND AA.DGNS_REG_DT BETWEEN BB.DGNS_STR_DT AND BB.DGNS_END_DT
                          AND NVL(AA.TDY_DGNS_DEL_YN, 'N') = 'N'
                          AND NVL(BB.TDY_DGNS_DEL_YN, 'N') = 'N'  
                          AND AA.MAIN_SKNS_YN = 'Y'                   
                          AND AA.HSP_TP_CD = HIS_HSP_TP_CD
                          AND AA.HSP_TP_CD = BB.HSP_TP_CD
                        ORDER BY AA.DGNS_REG_DT DESC , AA.DGNS_REG_SEQ DESC                                         
                       )
               WHERE ROWNUM = 1 ;
                
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                       RETURN NULL;
                WHEN OTHERS THEN
                       RETURN NULL;         
                     
               END;
               
               IF SUBSTR(V_SEARCH_TYPE,2,1) = '1' THEN
                V_CLDG_NM := V_CLDG_NM ;
            ELSE
                V_CLDG_NM := '[' || V_ICD_CD ||']' || V_CLDG_NM;
            END IF;
       ELSIF (V_SEARCH_TYPE = 'X') THEN
            /*#####################################################
                특정기호가 V252대상이면서, E119, E129, E139, E149 상병인사람중, 인슐린 처방이 있는 경우 V100 아니면 V252
                특정기호가 V352대상이면서, A044, B008, G538, J41  상병인 사람 중, 6세이만의 소아인 경우 V100 아니면 V352                
            ######################################################*/
            BEGIN
                BEGIN
                --  V252 경증질환 여부체크
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           'Y'
                      INTO V_252CHECK_YN
                      FROM MOODIPAM M1      -- 환자진단기본
                         , MOODIPCD M2      -- 환자수진일별진단정보 
                         , CCVMVDAD C       -- 보험관계진단속성정보
                     WHERE 1 = 1
                       AND M2.MED_PACT_ID = V_PACT_ID   -- 원무접수ID
                       AND M2.MAIN_SKNS_YN = 'Y'
                       AND NVL(M2.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부
                       AND M1.DGNS_ID = M2.DGNS_ID      --진단ID
                       AND NVL(M1.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부 
                       AND M1.CLDG_VOC_ID = C.VOC_ID     -- ICD10코드
                       AND M2.DGNS_REG_DT BETWEEN  AVL_STR_DTM AND AVL_END_DTM                                            
                       --AND C.SILL_ILNS_CFSC_CD IS NOT NULL         -- 경질환여부 
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M1.HSP_TP_CD = M2.HSP_TP_CD
                       
                       AND C.SILL_ILNS_CFSC_CD = 'V252'
                       
                       AND ROWNUM = 1;
                       
                   EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            V_252CHECK_YN := 'N';
                        WHEN OTHERS THEN
                            V_252CHECK_YN := 'N';
                END;
                
                BEGIN
                --  V252 경증질환 여부체크 'E119', 'E129','E139', 'E149' 인 진단이 있는지 여부 체크.
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           'Y'
                      INTO V_252DIAG_YN
                      FROM MOODIPAM M1      -- 환자진단기본
                         , MOODIPCD M2      -- 환자수진일별진단정보 
                         , CCVMVDAD C       -- 보험관계진단속성정보
                     WHERE 1 = 1
                       AND M2.MED_PACT_ID = V_PACT_ID   -- 원무접수ID
                       AND M2.MAIN_SKNS_YN = 'Y'
                       AND NVL(M2.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부
                       AND M1.DGNS_ID = M2.DGNS_ID      --진단ID
                       AND NVL(M1.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부 
                       AND M1.CLDG_VOC_ID = C.VOC_ID     -- ICD10코드
                       AND M2.DGNS_REG_DT BETWEEN  AVL_STR_DTM AND AVL_END_DTM                                            
                       --AND C.SILL_ILNS_CFSC_CD IS NOT NULL         -- 경질환여부 
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M1.HSP_TP_CD = M2.HSP_TP_CD
                       
                       AND C.SILL_ILNS_CFSC_CD = 'V252'
                       AND M1.ICD10_CD IN ('E119', 'E129','E139', 'E149')
                       AND ROWNUM = 1;
                       
                   EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            V_252DIAG_YN := 'N';
                        WHEN OTHERS THEN
                            V_252DIAG_YN := 'N';
                END;
                
                BEGIN
                    -- 해당환자의 당일진단내역에 인슐린처방이 존재하는지 확인한다.
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           'Y'
                      INTO V_INSULIN_YN
                      FROM MOOORDRM M           -- 환자투약처방기본 
                         , MSDMDBAM S           -- 약품기본
                     WHERE 1=1 
                       AND M.PT_NO = V_PT_NO 
                       AND M.ORD_DT = (SELECT MED_DT            -- 원무접수에 해당하는 진료일자에 발생한 모든 처방을 검색해야함.(ASIS 기준) 
                                         FROM ACPPRODM 
                                        WHERE PACT_ID = V_PACT_ID    -- 원무접수ID
                                          AND APCN_YN = 'N'         -- 접수취소여부
                                        )                                      
                       AND M.ODDSC_TP_CD = 'C'      -- 처방중단구분코드 
                       AND M.DG_RINS_STF_NO IS NULL -- 약반납지시직원번호 
                       AND M.ORD_CD = S.MDPR_CD     -- 약품코드
    --                   AND S.SNUH_EFCC_CTG_NO = '842402'    -- 서울대병원효능분류코드  
                       AND S.ATC_CD LIKE 'A10A%'  -- INSULINS AND ANALOGUES    -- 2018-07-26 정원준 : 인슐린 계열 조건을 ATC 코드로 변경
                       AND M.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M.HSP_TP_CD = S.HSP_TP_CD
                       AND ROWNUM = 1;
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN                   
                           V_INSULIN_YN := 'N';
                        WHEN OTHERS THEN
                           V_INSULIN_YN := 'N';
                       
                END;
                
                BEGIN
                --  V352 경증질환 여부체크
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           'Y'
                      INTO V_352CHECK_YN
                      FROM MOODIPAM M1      -- 환자진단기본
                         , MOODIPCD M2      -- 환자수진일별진단정보 
                         , CCVMVDAD C       -- 보험관계진단속성정보
                     WHERE 1 = 1
                       AND M2.MED_PACT_ID = V_PACT_ID   -- 원무접수ID
                       AND M2.MAIN_SKNS_YN = 'Y'
                       AND NVL(M2.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부
                       AND M1.DGNS_ID = M2.DGNS_ID      --진단ID
                       AND NVL(M1.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부 
                       AND M1.CLDG_VOC_ID = C.VOC_ID     -- ICD10코드
                       AND M2.DGNS_REG_DT BETWEEN  AVL_STR_DTM AND AVL_END_DTM                                            
                       AND C.SILL_ILNS_CFSC_CD IS NOT NULL         -- 경질환여부 
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M1.HSP_TP_CD = M2.HSP_TP_CD
                       
                       AND C.SILL_ILNS_CFSC_CD = 'V352'
                       
                       AND ROWNUM = 1;
                   EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            V_352CHECK_YN := 'N';
                        WHEN OTHERS THEN
                            V_352CHECK_YN := 'N';
                END;
                
                BEGIN
                --  V352 경증질환 여부체크 'A044', 'B008','G538', 'J41' 인 진단이 있는지 여부 체크.
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           'Y'
                      INTO V_352DIAG_YN
                      FROM MOODIPAM M1      -- 환자진단기본
                         , MOODIPCD M2      -- 환자수진일별진단정보 
                         , CCVMVDAD C       -- 보험관계진단속성정보
                     WHERE 1 = 1
                       AND M2.MED_PACT_ID = V_PACT_ID   -- 원무접수ID
                       AND M2.MAIN_SKNS_YN = 'Y'
                       AND NVL(M2.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부
                       AND M1.DGNS_ID = M2.DGNS_ID      --진단ID
                       AND NVL(M1.TDY_DGNS_DEL_YN,'N') = 'N'    -- 당일진단삭제여부 
                       AND M1.CLDG_VOC_ID = C.VOC_ID     -- ICD10코드
                       AND M2.DGNS_REG_DT BETWEEN  AVL_STR_DTM AND AVL_END_DTM                                            
                       AND C.SILL_ILNS_CFSC_CD IS NOT NULL         -- 경질환여부 
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M1.HSP_TP_CD = M2.HSP_TP_CD
                       
                       AND C.SILL_ILNS_CFSC_CD = 'V352'
                       AND M1.ICD10_CD IN ('A044', 'B008','G538', 'J41')
                       AND ROWNUM = 1;
                   EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            V_352DIAG_YN := 'N';
                        WHEN OTHERS THEN
                            V_352DIAG_YN := 'N';
                END;
                
                BEGIN
                     SELECT XBIL.FT_PCT_AGE('AGE',SYSDATE, PT_BRDY_DT)
                       INTO V_AGE
                       FROM PCTPCPAM_DAMO 
                      WHERE PT_NO = V_PT_NO;
                END;
                
                IF V_AGE &lt; 6 THEN
                   V_AGECHECK_YN :='Y';
                ELSE 
                   V_AGECHECK_YN :='N';
                END IF;
                        
                
                
                
                BEGIN
                --  V452 경증질환 여부체크 진단이 있는지 여부 체크.
                    SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                           'Y'
                      INTO V_452CHECK_YN
                      FROM MOODIPAM M1      -- 환자진단기본
                         , MOODIPCD M2      -- 환자수진일별진단정보 
                         , CCVMVDAD C       -- 보험관계진단속성정보
                     WHERE 1 = 1
                       AND M2.MED_PACT_ID = V_PACT_ID   -- 원무접수ID
                       AND M2.MAIN_SKNS_YN = 'Y'   
                       --AND M2.DTMN_SKNS_YN = 'Y' -- 확정여부    
                       AND M1.DGNS_ID = M2.DGNS_ID      --진단ID    
                       AND M2.DGNS_REG_DT BETWEEN M1.DGNS_STR_DT AND M1.DGNS_END_DT   
                       AND M2.TDY_DGNS_DEL_YN = 'N'    -- 당일진단삭제여부                  
                       AND M2.DGNS_PSD_YN = 'N'                                  
                       AND M1.CLDG_VOC_ID = C.VOC_ID     -- 용어ID   
                       AND M2.DGNS_REG_DT BETWEEN  C.AVL_STR_DTM AND C.AVL_END_DTM        
                       AND C.SILL_ILNS_CFSC_CD = 'V452'
                       AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                       AND M1.HSP_TP_CD = M2.HSP_TP_CD
                       
                       AND ROWNUM = 1;
                   EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            V_452CHECK_YN := 'N';
                        WHEN OTHERS THEN
                            V_452CHECK_YN := 'N';
                END;
                
                -- 경증질환코드 V252, V352 둘다 없는 경우 RETURN값은 N으로 리턴한다.
                -- 
                IF (V_252CHECK_YN || V_352CHECK_YN || V_452CHECK_YN = 'NNN') THEN -- 경증질환코드 V252, V352, V452 셋다 아닌 경우 RETURN값은 N으로 리턴한다.
                    RETURN('N') ;
                ELSIF ( V_252CHECK_YN = 'Y' AND V_252DIAG_YN = 'Y' AND V_INSULIN_YN = 'Y') THEN --경증질환코드 V252이고, 'E119', 'E129','E139', 'E149'이고 인슐린처방이 있을경우 V100으로 리턴.
                    RETURN('V100') ;
                ELSIF ( V_252CHECK_YN = 'Y' AND V_252DIAG_YN = 'N' AND V_INSULIN_YN = 'Y') THEN --경증질환코드 V252이고, 'E119', 'E129','E139', 'E149'이 아니고, 인슐린처방이 있을경우 V252로 리턴.
                    RETURN('V252') ;
                ELSIF ( V_252CHECK_YN = 'Y' AND V_252DIAG_YN = 'Y' AND V_INSULIN_YN = 'N') THEN --경증질환코드 V252이고, 'E119', 'E129','E139', 'E149'이고, 인슐린처방이 없을 V252로 리턴.
                    RETURN('V252') ;
                ELSIF ( V_252CHECK_YN = 'Y' AND V_252DIAG_YN = 'N' AND V_INSULIN_YN = 'N') THEN --경증질환코드 V252이고, 'E119', 'E129','E139', 'E149'이 아니고, 인슐린처방이 없을 V252로 리턴.
                    RETURN('V252') ;                    
                ELSIF ( V_352CHECK_YN = 'Y' AND V_352DIAG_YN = 'Y' AND V_AGECHECK_YN = 'Y') THEN --경증질환코드 V352이고, 'A044', 'B008','G538', 'J41'이고, 나이가 만 6세 미만일 경우 V100으로 리턴.
                    RETURN('V100') ;
                ELSIF ( V_352CHECK_YN = 'Y' AND V_352DIAG_YN = 'N' AND V_AGECHECK_YN = 'Y') THEN --경증질환코드 V352이고, 'A044', 'B008','G538', 'J41'이 아니고, 나이가 만 6세 미만일 경우 V352로 리턴.
                    RETURN('V352') ;
                ELSIF ( V_352CHECK_YN = 'Y' AND V_352DIAG_YN = 'Y' AND V_AGECHECK_YN = 'N') THEN --경증질환코드 V352이고, 'A044', 'B008','G538', 'J41'이고, 나이가 만 6세 이상일 경우 V352로 리턴.
                    RETURN('V352') ;                
                ELSIF ( V_352CHECK_YN = 'Y' AND V_352DIAG_YN = 'N' AND V_AGECHECK_YN = 'N') THEN --경증질환코드 V352이고, 'A044', 'B008','G538', 'J41'이 아니고, 나이가 만 6세 이상일 경우 V352로 리턴.
                    RETURN('V352') ;          
                ELSIF (V_452CHECK_YN = 'Y') THEN
                 RETURN('V452');
                ELSE 
                    RETURN('N') ;                
                END IF;
            END;           
       ELSIF (V_SEARCH_TYPE = 'Y') THEN
            BEGIN  
            /****************************************************************************
            Y : V_PT_NO, V_PACT_ID, HIS_HSP_TP_CD 2022-03-01 응급진료 정신질환자 가산적용대상 상병 체크 
            *****************************************************************************/
                 SELECT 'Y'  
                   INTO V_CLDG_NM
                   FROM MOODIPAM M1 -- 환자진단기본
                       ,MOODIPCD M3 -- 환자수진일별진단정보
                  WHERE M1.PT_NO = V_PT_NO        
                    AND M1.DGNS_ID = M3.DGNS_ID
                    AND M3.DGNS_REG_DT BETWEEN M1.DGNS_STR_DT AND M1.DGNS_END_DT
                    AND M3.MED_PACT_ID = V_PACT_ID             
                    AND M3.MED_PACT_TP_CD = 'E' -- 응급수진만                 
                    AND M1.ICD10_CD LIKE 'F%'  -- F 상병만
                    AND M3.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부     
                    AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                    AND M1.HSP_TP_CD = M3.HSP_TP_CD     
                    AND ROWNUM = 1
                    ;  
                   EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                            V_CLDG_NM := 'N';                                      
            END;
            RETURN V_CLDG_NM; 
       /* 2017-02-16, 박제영, 처방전 관련 간접진료 요청(SR201702-00257) */
       --2019-06-12 천창권 진료지원 원외처방전 진병분류코드 마지막자리까지 표시 추가 (전산팀-01036)
       ELSIF (V_SEARCH_TYPE = 'W') THEN
            BEGIN
                        SELECT /*XMED.FT_MOO_DIAGNOSIS*/
                               LISTAGG(DIAG_NM, ' ') WITHIN GROUP  (ORDER BY MAIN_SKNS_YN DESC)
                          INTO V_CLDG_NM
                          FROM (        
                          
                                SELECT DISTINCT
                                       --SUBSTR(M1.ICD10_CD,1,3) || DECODE(SIGN(LENGTH(M1.ICD10_CD)-3),1,'.' || SUBSTR(M1.ICD10_CD,4,1), NULL) DIAG_NM  
                                       SUBSTR(M1.ICD10_CD,1,3) || DECODE(SIGN(LENGTH(M1.ICD10_CD)-3),1,'.' || SUBSTR(M1.ICD10_CD,4), NULL) DIAG_NM
                                      , M3.MAIN_SKNS_YN
                                  FROM MOODIPAM M1 -- 환자진단기본
                                      ,MOODIPCD M3 -- 환자수진일별진단정보
                                 WHERE M1.PT_NO = V_PT_NO
                                   AND M1.DGNS_ID = M3.DGNS_ID
                                   AND M3.MED_PACT_ID = V_PACT_ID
                                   AND M3.TDY_DGNS_DEL_YN = 'N'  -- 당일진단삭제여부     
                                   AND M1.HSP_TP_CD = HIS_HSP_TP_CD
                                   AND M1.HSP_TP_CD = M3.HSP_TP_CD
                                   AND ((V_PAIL_YN = 'Y' AND M3.PAIL_YN = 'Y') OR ( V_PAIL_YN = 'N' ))

                                     )  ;                                          
            END;
            RETURN V_CLDG_NM; 
        END IF;
        RETURN V_CLDG_NM;
    END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Converter</QUERY_NAME>
    <QUERY_TEXT>using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Data;


namespace HIS.MC.JE.DP.DLKPAT.UI.Converters
{
    public class DLKCommonConverters : IValueConverter
    {
        public Object Convert(object value, Type targetType,
                    object parameter, CultureInfo culture)
        {
            if (value == null) return null;
            if (value.ToString() == parameter.ToString().Split('*')[1].Split(',')[int.Parse(parameter.ToString().Split('*')[0])]) return true;
            return false;
        }

        public Object ConvertBack(object value, Type targetType,
            object parameter, CultureInfo culture)
        {
            if (value == null) return null;
            if ((bool)value == true) return parameter.ToString().Split('*')[1].Split(',')[int.Parse(parameter.ToString().Split('*')[0])];
            return null;
        }
    }    

    /// &lt;summary&gt;
    /// value가 null이면 defalut값 반환
    /// &lt;/summary&gt;
    public class RadioConverters : IValueConverter
    {
        public Object Convert(object value, Type targetType,
                    object parameter, CultureInfo culture)
        {
            string Default = parameter.ToString().Split('*')[0];
            string Index = parameter.ToString().Split('*')[1];
            if (value == null &amp;&amp; Default == Index) return true;
            if (value == null) return null;
            else if (value.ToString() == Index) return true;
            return false;
        }

        public Object ConvertBack(object value, Type targetType,
            object parameter, CultureInfo culture)
        {            
            string Index = parameter.ToString().Split('*')[1];

            if (value == null) return null;
            if ((bool)value == true) return Index;
            return null;
        }
    }
    /// &lt;summary&gt;
    /// 넘겨받은 value값중 하나라도 True가 있으면 활성화, 없으면 비활성화
    /// &lt;/summary&gt;
    public class VisiblityConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter.ToString() == "999") return Visibility.Visible;
            if (value == null)
                return Visibility.Collapsed;
            if (value.ToString() == parameter.ToString()) return Visibility.Visible;

            return Visibility.Collapsed;
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }

    /// &lt;summary&gt;
    /// Text ", " 붙여서 반환
    /// &lt;/summary&gt;
    public class TextAddComConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null) return string.Empty;
            string str = string.Empty;

            for(int i = 0;i&lt; value.ToString().Length; i++)
            {
                str = str + value.ToString().Substring(i, 1) + ", ";
            }
            str = str.Substring(0, str.Length - 2);
            return str;
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }

    /// &lt;summary&gt;
    /// 2012.03.13 선택된 객체의 파라미터값을 구분자를 붙여 넘겨받음 by 임형순
    /// &lt;/summary&gt;
    public class CheckedStringWithConverter : IValueConverter
    {
        Hashtable htb_0;
        Hashtable htb_1;
        Hashtable htb_2;
        Hashtable htb_3;
        Hashtable htb_4;
        Hashtable htb_5;
        Hashtable htb_6;
        Hashtable htb_7;
        Hashtable htb_8;
        Hashtable htb_9;
        Hashtable htb_10;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckedStringWithConverter()
        {            
            htb_0 = new Hashtable();
            htb_1 = new Hashtable();
            htb_2 = new Hashtable();
            htb_3 = new Hashtable();
            htb_4 = new Hashtable();
            htb_5 = new Hashtable();
            htb_6 = new Hashtable();
            htb_7 = new Hashtable();
            htb_8 = new Hashtable();
            htb_9 = new Hashtable();
            htb_10 = new Hashtable();
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {             
            if ( parameter == null)
                return false;
   
            //Length == 2이면 체크박스 역할 , 체크박스 그룹내용을 각 해쉬테이블에 저장
            if (parameter.ToString().Split('*').Length == 2)
            {
                var hash = parameter.ToString().Split('*')[0];
                var data = parameter.ToString().Split('*')[1];

                if (hash == "0")
                {
                    if (htb_0.Count == 0 || !htb_0.Contains(data))
                        htb_0.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_0.Contains(data))
                                htb_0[data] = true;

                            return true;
                        }
                    }

                }
                else if (hash == "1")
                {
                    if (htb_1.Count == 0 || !htb_1.Contains(data))
                        htb_1.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_1.Contains(data))
                                htb_1[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "2")
                {
                    if (htb_2.Count == 0 || !htb_2.Contains(data))
                        htb_2.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_2.Contains(data))
                                htb_2[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "3")
                {
                    if (htb_3.Count == 0 || !htb_3.Contains(data))
                        htb_3.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_3.Contains(data))
                                htb_3[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "4")
                {
                    if (htb_4.Count == 0 || !htb_4.Contains(data))
                        htb_4.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_4.Contains(data))
                                htb_4[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "5")
                {
                    if (htb_5.Count == 0 || !htb_5.Contains(data))
                        htb_5.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_5.Contains(data))
                                htb_5[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "6")
                {
                    if (htb_6.Count == 0 || !htb_6.Contains(data))
                        htb_6.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_6.Contains(data))
                                htb_6[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "7")
                {
                    if (htb_7.Count == 0 || !htb_7.Contains(data))
                        htb_7.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_7.Contains(data))
                                htb_7[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "8")
                {
                    if (htb_8.Count == 0 || !htb_8.Contains(data))
                        htb_8.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_8.Contains(data))
                                htb_8[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "9")
                {
                    if (htb_9.Count == 0 || !htb_9.Contains(data))
                        htb_9.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_9.Contains(data))
                                htb_9[data] = true;

                            return true;
                        }
                    }
                }
                else if (hash == "10")
                {
                    if (htb_10.Count == 0 || !htb_10.Contains(data))
                        htb_10.Add(data, false);

                    if (value != null)
                    {
                        if (value.ToString().Contains(data.ToString()))
                        {
                            if (htb_10.Contains(data))
                                htb_10[data] = true;

                            return true;
                        }
                    }
                }


            }
            //length == 3 이면 라디오버튼 컨버터 역할
            if (parameter.ToString().Split('*').Length == 3)
            {
                var hash = parameter.ToString().Split('*')[0];
                var data = parameter.ToString().Split('*')[1];
                var radioGubn = parameter.ToString().Split('*')[2];

                if (value == null) return null;
                if (value.ToString() == radioGubn) return true;
                return false;

                //if (radioGubn == "Y" || radioGubn == "N")
                //{
                //    if (value == null) return null;
                //    if (value.ToString() == radioGubn) return true;
                //    return false;
                //}
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            ////Length == 3 이면 라디오버튼 , 라디오버튼 파라미터가 N 이면 해쉬테이블 초기화
            //if (parameter.ToString().Split('*').Length == 3)
            //{
            //    var hash = parameter.ToString().Split('*')[0];
            //    var data = parameter.ToString().Split('*')[1];
            //    var radioGubn = parameter.ToString().Split('*')[2];

                
            //    if (radioGubn == "N")
            //    {
            //        if (hash == "0")
            //            htb_0.Clear();
            //        else if (hash == "1")
            //            htb_1.Clear();
            //        else if (hash == "2")
            //            htb_2.Clear();
            //        else if (hash == "3")
            //            htb_3.Clear();
            //        else if (hash == "4")
            //            htb_4.Clear();
            //        else if (hash == "5")
            //            htb_5.Clear();
            //        else if (hash == "6")
            //            htb_6.Clear();
            //        else if (hash == "7")
            //            htb_7.Clear();
            //        else if (hash == "8")
            //            htb_8.Clear();
            //        else if (hash == "9")
            //            htb_9.Clear();
            //        else if (hash == "10")
            //            htb_10.Clear();

            //        if (value == null) return null;
            //        if ((bool)value == true) return radioGubn;
            //        return null;

            //    }
            //    else
            //    {
            //        if (value == null) return null;
            //        if ((bool)value == true) return radioGubn;
            //        return null;

            //    }
            //}
            //Length == 2 이면 문자열 연결하여 값 반환
            if (parameter.ToString().Split('*').Length == 2)
            {
                var hash = parameter.ToString().Split('*')[0];
                var data = parameter.ToString().Split('*')[1];

                if (hash == "0")
                {
                    if (value != null)
                    {
                        if (htb_0.Count == 0 &amp;&amp; (bool)value)
                            htb_0.Add(data, true);
                    }

                    if (htb_0.Contains(data))
                        htb_0[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_0);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "1")
                {
                    if (value != null)
                    {
                        if (htb_1.Count == 0 &amp;&amp; (bool)value)
                            htb_1.Add(data, true);
                    }

                    if (htb_1.Contains(data))
                        htb_1[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_1);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "2")
                {
                    if (value != null)
                    {
                        if (htb_2.Count == 0 &amp;&amp; (bool)value)
                            htb_2.Add(data, true);
                    }

                    if (htb_2.Contains(data))
                        htb_2[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_2);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "3")
                {
                    if (value != null)
                    {
                        if (htb_3.Count == 0 &amp;&amp; (bool)value)
                            htb_3.Add(data, true);
                    }

                    if (htb_3.Contains(data))
                        htb_3[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_3);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "4")
                {
                    if (value != null)
                    {
                        if (htb_4.Count == 0 &amp;&amp; (bool)value)
                            htb_4.Add(data, true);
                    }

                    if (htb_4.Contains(data))
                        htb_4[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_4);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "5")
                {
                    if (value != null)
                    {
                        if (htb_5.Count == 0 &amp;&amp; (bool)value)
                            htb_5.Add(data, true);
                    }

                    if (htb_5.Contains(data))
                        htb_5[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_5);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "6")
                {
                    if (value != null)
                    {
                        if (htb_6.Count == 0 &amp;&amp; (bool)value)
                            htb_6.Add(data, true);
                    }

                    if (htb_6.Contains(data))
                        htb_6[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_6);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "7")
                {
                    if (value != null)
                    {
                        if (htb_7.Count == 0 &amp;&amp; (bool)value)
                            htb_7.Add(data, true);
                    }

                    if (htb_7.Contains(data))
                        htb_7[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_7);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "8")
                {
                    if (value != null)
                    {
                        if (htb_8.Count == 0 &amp;&amp; (bool)value)
                            htb_8.Add(data, true);
                    }

                    if (htb_8.Contains(data))
                        htb_8[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_8);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "9")
                {
                    if (value != null)
                    {
                        if (htb_9.Count == 0 &amp;&amp; (bool)value)
                            htb_9.Add(data, true);
                    }

                    if (htb_9.Contains(data))
                        htb_9[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_9);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
                else if (hash == "10")
                {
                    if (value != null)
                    {
                        if (htb_10.Count == 0 &amp;&amp; (bool)value)
                            htb_10.Add(data, true);
                    }

                    if (htb_10.Contains(data))
                        htb_10[data] = (Boolean)value;

                    SortedList sorter = new SortedList(htb_10);
                    foreach (DictionaryEntry item in sorter)
                    {
                        if ((Boolean)item.Value == true)
                            _str += item.Key;
                    }
                }
            }
            return _str;

        }
    }
    /// &lt;summary&gt;
    /// 
    /// &lt;/summary&gt;
    public class RadioUnCheck : IValueConverter
    {
        Dictionary&lt;string, Dictionary&lt;string,int&gt;&gt; DicCnt;       

        int ClickCnt;
        string Keys;

        public RadioUnCheck()
        {
            DicCnt = new Dictionary&lt;string, Dictionary&lt;string,int&gt;&gt;();         
            for (int i = 0; i &lt; 100; i++)
            {  
                DicCnt.Add(i.ToString(), new Dictionary&lt;string, int&gt;{ });
            }
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            

            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];
           
            if (DicCnt[hash].Count == 0 || !DicCnt[hash].ContainsKey(data))
                DicCnt[hash].Add(data, 0);
            if (value == null) 
                return null;
            else if (value != null)
            {
                ClickCnt = DicCnt[hash][data] % 2;

                if (value.ToString() == data &amp;&amp; DicCnt[hash][data] == 0)
                    return true;
                else if (value.ToString() == data &amp;&amp; ClickCnt == 1)
                    return true;
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {           
            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];          

            if (DicCnt[hash].ContainsKey(data))
            {               
                //이미 클릭되어 있으면 0으로 세팅
                if (DicCnt[hash][data] == 1)
                {
                    DicCnt[hash][data] = 0;
                }
                //클릭되어 있지 않은 상태면 전부 0으로 초기화 후 클릭한 값만 1로 세팅
                else
                {
                    Keys = string.Empty;
                    
                    foreach(var item in DicCnt[hash].Keys)
                    {
                        Keys = string.Concat(Keys, item, "^");
                    }
                    var arrKey = Keys.Split('^');
                    for (int i = 0; i &lt; arrKey.Count()-1; i++)
                    {
                        if (DicCnt[hash].ContainsKey(arrKey[i]))
                            DicCnt[hash][arrKey[i]] = 0;
                    }              
                    DicCnt[hash][data] = 1;

                    if ((bool)value &amp;&amp; DicCnt[hash][data] == 1)
                    {
                        return data;
                    }
                }
            }       
            return null;

        }
    }
    /// &lt;summary&gt;
    /// 라디오버튼 체크 해제 컨버터 ver2 (외부 이벤트로 인해 ConvertBack 없이 다른 라디오버튼이 체크되었을 경우 생기는 문제 보완)
    /// &lt;/summary&gt;
    public class RadioUnCheck2 : IValueConverter
    {
        Dictionary&lt;string, Dictionary&lt;string, int&gt;&gt; DicCnt;

        int ClickCnt;
        string Keys;

        public RadioUnCheck2()
        {
            DicCnt = new Dictionary&lt;string, Dictionary&lt;string, int&gt;&gt;();
            for (int i = 0; i &lt; 100; i++)
            {
                DicCnt.Add(i.ToString(), new Dictionary&lt;string, int&gt; { });
            }
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];

            if (DicCnt[hash].Count == 0 || !DicCnt[hash].ContainsKey(data))
                DicCnt[hash].Add(data, 0);
            if (value == null)
                return null;
            else if (value != null)
            {
                if (value.ToString() == data)
                {
                    foreach (var item in DicCnt[hash].Keys)
                    {
                        Keys = string.Concat(Keys, item, "^");
                    }
                    var arrKey = Keys.Split('^');
                    for (int i = 0; i &lt; arrKey.Count() - 1; i++)
                    {
                        if (DicCnt[hash].ContainsKey(arrKey[i]))
                            DicCnt[hash][arrKey[i]] = 0;
                    }
                }
                    DicCnt[hash][value.ToString()] = 1;

                ClickCnt = DicCnt[hash][data] % 2;
            
                if (value.ToString() == data &amp;&amp; ClickCnt == 1)
                    return true;
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];
            int Cnt = 0;
            if (DicCnt[hash].ContainsKey(data))
            {                    
                foreach(var Key in DicCnt[hash].Keys)
                {
                    if (DicCnt[hash][Key] == 1)
                        Cnt++;
                }
                //이미 클릭되어 있으면 0으로 세팅
                if (DicCnt[hash][data] == 1 &amp;&amp; Cnt &gt;= 1)
                {
                    DicCnt[hash][data] = 0;
                }
                //클릭되어 있지 않은 상태면 전부 0으로 초기화 후 클릭한 값만 1로 세팅
                else
                {
                    Keys = string.Empty;

                    foreach (var item in DicCnt[hash].Keys)
                    {
                        Keys = string.Concat(Keys, item, "^");
                    }
                    var arrKey = Keys.Split('^');
                    for (int i = 0; i &lt; arrKey.Count() - 1; i++)
                    {
                        if (DicCnt[hash].ContainsKey(arrKey[i]))
                            DicCnt[hash][arrKey[i]] = 0;
                    }
                    DicCnt[hash][data] = 1;

                    if ((bool)value &amp;&amp; DicCnt[hash][data] == 1)
                    {
                        return data;
                    }
                }
            }
            return null;

        }
    }
    /// &lt;summary&gt;
    /// 
    /// &lt;/summary&gt;
    public class CheckedStringWithConverter2 : IValueConverter
    {      
        Dictionary&lt;string, Hashtable&gt; Dic;       
     
        public CheckedStringWithConverter2()
        {
            Dic = new Dictionary&lt;string, Hashtable&gt;();        
            
            for(int i =0; i&lt;100; i++)
            {                               
                Dic.Add(i.ToString(), new Hashtable { });
            }
        }       

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];

            if (Dic[hash].Count == 0 || !Dic[hash].Contains(data))
                Dic[hash].Add(data, false);
            if (value != null)
            {
                if (value.ToString().Contains(data.ToString()))
                {
                    if (Dic[hash].Contains(data))
                        Dic[hash][data] = true;
                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;
            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];
           
            if (value != null)
            {
                if (Dic[hash].Count == 0 &amp;&amp; (bool)value)
                    Dic[hash].Add(data, true);
            }

            if (Dic[hash].Contains(data))
                Dic[hash][data] = (Boolean)value;

            SortedList sorter = new SortedList(Dic[hash]);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }
            return _str;

        }
    }

    public class CheckBoxConverters : IValueConverter
    {
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {           
            if (value == null) return false;
            if (value.ToString() == parameter.ToString()) return true;
            return false;           
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null) return null;
            if ((bool)value == true) return parameter.ToString();
            return null;
            
        }
    }

    /// &lt;summary&gt;
    ///
    /// &lt;/summary&gt;
    public class EnableConverters : IValueConverter
    {

        public object Convert(object value, Type targetType,
                    object parameter, CultureInfo culture)
        {
            if (value == null) return false;

            if ((bool)value == true) return true;            

            return false;
        }
        public object ConvertBack(object value, Type targetType,
            object parameter, CultureInfo culture)
        {
            if (value == null) return null;            
            return null;            
        }
    }
    public class TxtEnableConverters : IValueConverter
    {

        public object Convert(object value, Type targetType,
                    object parameter, CultureInfo culture)
        {
            if (string.IsNullOrEmpty(value.ToString())) return false;

            if (!string.IsNullOrEmpty(value.ToString())) return true;

            return false;
        }
        public object ConvertBack(object value, Type targetType,
            object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }
    /// &lt;summary&gt;
    ///
    /// &lt;/summary&gt;
    public class RevEnableConverters : IValueConverter
    {

        public object Convert(object value, Type targetType,
                    object parameter, CultureInfo culture)
        {
            if (value == null) return null;

            if ((bool)value == true) return false;

            return true;
        }
        public object ConvertBack(object value, Type targetType,
            object parameter, CultureInfo culture)
        {
            if (value == null) return null;
            return null;
        }
    }
    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    ///파라미터를 '*'로 split하여 앞부분의 값에 따라 체크박스 항목 그룹핑 하여 저장
    /// &lt;/summary&gt;
    public class MultiChkNonConverter : IValueConverter
    {        
        Dictionary&lt;string, Hashtable&gt; Dic;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public MultiChkNonConverter()
        {     
            Dic = new Dictionary&lt;string, Hashtable&gt;();            

            for (int i = 0; i &lt; 100; i++)
            {
                Dic.Add(i.ToString(), new Hashtable { });
            }
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;
            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];

            if (Dic[hash].Count == 0 || !Dic[hash].Contains(data))
                Dic[hash].Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (Dic[hash].Contains(data))
                        Dic[hash][data] = true;

                    return true;
                }
            }

            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var hash = parameter.ToString().Split('*')[0];
            var data = parameter.ToString().Split('*')[1];

            if (data == "0")
            {
                Dic[hash].Clear();
                Dic[hash].Add(data, true);
            }
            else
            {
                if (Dic[hash].Contains("0"))
                    Dic[hash]["0"] = false;
            }
            if (Dic[hash].Contains(data))
                Dic[hash][data] = (Boolean)value;

            SortedList sorter = new SortedList(Dic[hash]);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }
    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter: IValueConverter
    {
        Hashtable htb;        
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter()
        {
            htb = new Hashtable();          

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {            
            if (parameter == null)
                return false;

            var data = parameter.ToString();         
            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }           
            
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }
            
            return _str;

         }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter01 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter01()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter02 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter02()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter03 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter03()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter04 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter04()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter05 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter05()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter06 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter06()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter07 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter07()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter08 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter08()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter09 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter09()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter10 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter10()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 선택한 객체의 파라미터가 0이면 0빼고 초기화, 0이 아닐경우 0에 해당하는 객체에 false 반환, 선택한 체크박스들의 파라미터값을 이어서 반환함
    /// &lt;/summary&gt;
    public class CheckBoxsNonConverter11 : IValueConverter
    {
        Hashtable htb;
        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        public CheckBoxsNonConverter11()
        {
            htb = new Hashtable();

        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (parameter == null)
                return false;

            var data = parameter.ToString();

            if (htb.Count == 0 || !htb.Contains(data))
                htb.Add(data, false);

            if (value != null)
            {
                if (value.ToString().Contains(data))
                {
                    if (htb.Contains(data))
                        htb[data] = true;

                    return true;
                }
            }
            return false;
        }

        /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="value"&gt;&lt;/param&gt;
        /// &lt;param name="targetType"&gt;&lt;/param&gt;
        /// &lt;param name="parameter"&gt;&lt;/param&gt;
        /// &lt;param name="culture"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;

            var data = parameter.ToString();

            if (data == "0")
            {
                htb.Clear();
                htb.Add(data, true);
            }
            else
            {
                if (htb.Contains("0"))
                    htb["0"] = false;
            }
            if (htb.Contains(data))
                htb[data] = (Boolean)value;

            SortedList sorter = new SortedList(htb);
            foreach (DictionaryEntry item in sorter)
            {
                if ((Boolean)item.Value == true)
                    _str += item.Key;
            }

            return _str;

        }
    }

    /// &lt;summary&gt;
    /// 지역 사회 자원 연계 진행상태 Radio Value -&gt; Text Converter
    /// &lt;/summary&gt;
    public class LNK_STAT_Converter : IValueConverter
    {
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;
            if (value == null)
                return null;
            if (value.ToString().Equals("1"))
                _str = "지속";
            else if (value.ToString().Equals("2"))
                _str = "종료";
            else if (value.ToString().Equals("3"))
                _str = "중단";
            else
                return null;

            return _str;
        }
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            return null;
        }
    }

    /// &lt;summary&gt;
    /// 지역 사회 자원 연계 만족여부 Radio Value -&gt; Text Converter
    /// &lt;/summary&gt;
    public class LNK_SATISFY_Converter : IValueConverter
    {
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;
            if (value == null)
                return null;
            if (value.ToString().Equals("1"))
                _str = "만족";
            else if (value.ToString().Equals("2"))
                _str = "개선필요";            
            else
                return null;

            return _str;
        }
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            return null;
        }
    }

    /// &lt;summary&gt;
    /// 뇌혈관 모니터링 기타 단계 컨버터
    /// &lt;/summary&gt;
    public class RdoMntTimeConverter : IValueConverter
    {
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null)
                return null;
            var step = value.ToString() ?? string.Empty;
            if (step != "1" &amp;&amp; step != "6" &amp;&amp; step != "12")
                return true;
            else if (string.IsNullOrEmpty(step))
                return true;

            return null;
        }
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;
            return _str;
        }
    }


    /// &lt;summary&gt;
    /// 뇌혈관 모니터링 기타 단계 텍스트 컨버터
    /// &lt;/summary&gt;
    public class RdoMntTimeTextConverter : IValueConverter
    {
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;
            if (value == null)
                return null;
            var step = value.ToString();
            if (step != "1" &amp;&amp; step != "6" &amp;&amp; step != "12")
            {
                _str = value.ToString();
                return _str;
            }
            
            return null;
        }
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
       {
            string _str = string.Empty;         
            _str = value.ToString();

            return _str;
        }
    }
    /// &lt;summary&gt;
    /// 넘겨받은 value값중 하나라도 True가 있으면 활성화, 없으면 비활성화
    /// &lt;/summary&gt;
    public class MultiEnableConverter : IMultiValueConverter
    {
        public object Convert(object[] values ,Type targetType, object parameter,CultureInfo culture)
        {
            return values.Any(v =&gt; (v is bool &amp;&amp; (bool)v)) ? true : false;
        }
        public object[] ConvertBack(object value,Type[] targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }

    /// &lt;summary&gt;
    /// 넘겨받은 value값중 하나라도 True가 있으면 활성화, 없으면 비활성화
    /// &lt;/summary&gt;
    public class MultiTextConverter : IMultiValueConverter
    {
        public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)
        {
            string _str = string.Empty;
            Hashtable Htb = new Hashtable();
            Htb = (Hashtable)values[0];
            var Key = values[1];
            if(Htb.ContainsKey(Key))
                _str = Htb[Key].ToString();

            return _str;
            
        }
        public object[] ConvertBack(object value, Type[] targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }
    /// &lt;summary&gt;
    /// 넘겨받은 value값중 하나라도 True가 있으면 활성화, 없으면 비활성화
    /// &lt;/summary&gt;
    public class TextConverter : IValueConverter
    {
        Dictionary&lt;string, string&gt; Dic;
        public TextConverter()
        {
            Dic = new Dictionary&lt;string, string&gt;();
        }
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            
            Dic = (Dictionary&lt;string,string&gt;)value;
           
            if (!Dic.ContainsKey(parameter.ToString()))
                return false;
            else if (Dic.ContainsKey(parameter.ToString()))
            {
                if(Dic[parameter.ToString()] == "1")
                    return true;
            }
                
            return false;

        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if ((bool)value)
            {
                if (!Dic.ContainsKey(parameter.ToString()))
                    Dic.Add(parameter.ToString(), "1");
                else if(Dic.ContainsKey(parameter.ToString()))
                    Dic[parameter.ToString()] = "1";
            }
            else
            {
                if (!Dic.ContainsKey(parameter.ToString()))
                    Dic.Add(parameter.ToString(), "0");
                else if (Dic.ContainsKey(parameter.ToString()))
                    Dic[parameter.ToString()] = "0";

            }
            return Dic;
        }
    }
}
using HIS.MS.JE.CU.GH.DTO;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Data;

namespace HIS.MS.JE.CU.GH.UI.CommonService
{

    /// &lt;summary&gt;
    /// 넘겨받은 value값중 하나라도 True가 있으면 활성화, 없으면 비활성화
    /// &lt;/summary&gt;
    public class VisiblityConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null)
                return Visibility.Collapsed;
            if (value.ToString() == parameter.ToString()) return Visibility.Visible;

            return Visibility.Collapsed;
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }
    /// &lt;summary&gt;
    /// 오더취소,예약취소면 배경색 변경
    /// &lt;/summary&gt;
    public class BackGroundConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            string str = "Transparent";
            
            if (value.ToString() == "05"|| value.ToString() == "12") //예약취소 , 오더 취소
            {
                str = "#FFABB221";
                return str;
            }
            return str;
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }
    /// &lt;summary&gt;
    /// 추가패키지 글자색 변경
    /// &lt;/summary&gt;
    public class ForeGroundConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            string str = "#FFB3BDC7";
            if (value.ToString() == "CUSB000192" || value.ToString() == "CUSB001629" || value.ToString() == "CUSB000190" || value.ToString() == "CUSB001262") //인지, 정신,생활,노인
            {
                str = "#FFE400";
                return str;
            }
            return str;
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }
    /// &lt;summary&gt;
    /// 넘겨받은 value값중 하나라도 True가 있으면 활성화, 없으면 비활성화
    /// &lt;/summary&gt;
    public class EnableConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null)
                return false;
            if (value.ToString() == parameter.ToString()) return true;

            return false;
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }

    /// &lt;summary&gt;
    /// 넘겨받은 value값중 하나라도 True가 있으면 활성화, 없으면 비활성화
    /// &lt;/summary&gt;
    public class DisableConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null)
                return true;
            if (value.ToString() == parameter.ToString()) return false;

            return true;
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }

    /// &lt;summary&gt;
    /// 데이터그리드에서 선택하면 활성화 선택 안하면 비활성화
    /// &lt;/summary&gt;
    public class TextEnableConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null)
                return false;
            else 
                return true;            
        }
        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotSupportedException();
        }
    }

    public class ReplaceEnterToSpaceConverter : IValueConverter
    {
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            string str = value as string;
            string result = "";
            if (!string.IsNullOrEmpty(str))
            {
                result = str.Replace("\r\n", " ");
                result = result.Replace("\r\r", " ");
                result = result.Replace("\r", " ");
            }

            return result;
        }

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }
    }
    public class CheckBoxConverters : IValueConverter
    {
        public object Convert(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null) return false;
            if (value.ToString() == parameter.ToString()) return true;
            return false;
        }
     
        public object ConvertBack(object value, System.Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null) return null;
            if ((bool)value == true) return parameter.ToString();
            return null;

        }
    }
}

</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>의료기구(C,F,V)합계</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_HIS_HSP_TP_CD := '02';
EXEC :IN_WD_DEPT_CD := '82';
EXEC :IN_NR_SPL_MCLS_CD := 'C';
EXEC :IN_FROM_DT := '2022-04-01';
EXEC :IN_TO_DT :='2022-04-16';
SELECT T1.PT_NO
                               , T1.PT_CLCTN_DEPT_CD
                               , T2.NR_SPL_MCLS_CD
                               , T2.NR_INTB_CTG_NM
                               , T3.NR_INTB_ITEM_NM
                               , TRUNC(NVL(INTB_EXCH_DTM, T1.INTB_STR_DTM))                 AS INTB_STR_DTM
                               , NVL(TRUNC(T1.INTB_END_DTM),TO_DATE(IN_TO_DT,'YYYY-MM-DD')) AS INTB_END_DTM
                            FROM MRNNRTDD T1
                               , MRNNRTMD T2
                               , MRNNRTME T3
                           WHERE T1.HSP_TP_CD        = :IN_HIS_HSP_TP_CD
                             AND T1.PT_CLCTN_DEPT_CD = :IN_WD_DEPT_CD
                             AND T2.NR_SPL_MCLS_CD   = :IN_NR_SPL_MCLS_CD
                             AND T1.HSP_TP_CD        = T2.HSP_TP_CD
                             AND T1.USE_YN = 'Y'
                             AND T1.LST_YN = 'Y'
                             AND T2.USE_YN = 'Y'
                             AND T2.LST_YN = 'Y'
                             AND T3.USE_YN = 'Y'
                             AND T1.NR_INTB_ITEM_ID = T3.NR_INTB_ITEM_ID
                             AND T2.HSP_TP_CD       = T3.HSP_TP_CD
                             AND T2.NR_INTB_CTG_ID  = T3.UPR_NR_INTB_CTG_ID
                             AND TRUNC(NVL(INTB_EXCH_DTM, T1.INTB_STR_DTM)) BETWEEN TO_DATE(:IN_FROM_DT,'YYYY-MM-DD')      
                                                                                AND TO_DATE(:IN_TO_DT,'YYYY-MM-DD')</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>원내판독 강제업데이트</QUERY_NAME>
    <QUERY_TEXT>EXEC :V_RSV_DT := '2022-04-22';
EXEC :V_PACT_TP_CD_NEW := 'O';
EXEC :HIS_HSP_TP_CD := '02';
EXEC :V_ORD_CD := 'RC04007';
DECLARE
 HSIN_CNT NUMBER :=0;
 SEQ NUMBER := 1;
BEGIN
 BEGIN
  SELECT HSIN_IPTN_CNT
     INTO HSIN_CNT
     FROM MSERMHID A
    WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
      AND A.ORD_CD = :V_ORD_CD
   AND A.PACT_TP_CD = :V_PACT_TP_CD_NEW
   AND A.RSV_DT BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
   ;
 END ;
FOR REC IN(
      SELECT X.EXM_CHDR_STF_NO,X.RSV_DTM,X.ORD_ID,X.RPY_STS_CD
      FROM(
            SELECT B.EXM_CHDR_STF_NO,B.RSV_DTM,B.ORD_ID,B.RPY_STS_CD
                   FROM MSERMRRD A
                      , MOOOREXM B
                        , MSERMCCC C
                     WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND A.RSV_DTM BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
                    AND A.HSP_TP_CD = C.HSP_TP_CD
                    AND A.ORD_CD = C.EXM_GRP_DTL_CD
                    AND C.EXM_GRP_CD = 'HEXM'
                    AND C.ORD_CTG_CD = 'BR1'
                    AND A.RSV_DTM = B.RSV_DTM
                    AND A.HSP_TP_CD = B.HSP_TP_CD
                    AND B.PACT_TP_CD = :V_PACT_TP_CD_NEW
                    AND A.ORD_ID = B.ORD_ID
                    AND C.TH1_ASST_GRP_NM =(SELECT MAX(TH1_ASST_GRP_NM) FROM MSERMCCC WHERE HSP_TP_CD = A.HSP_TP_CD AND EXM_GRP_CD ='HEXM' AND ORD_CTG_CD = 'BR1' AND EXM_GRP_DTL_CD = :V_ORD_CD)
                    AND B.EXM_PRGR_STS_CD &lt;&gt; 'X'
                    AND NVL(B.EXM_CHDR_STF_NO,'9999') &lt;&gt; 'YY99999'
      UNION ALL
      SELECT B.EXM_CHDR_STF_NO,B.RSV_DTM,B.ORD_ID,B.RPY_STS_CD
                   FROM MSERMRRD A
                      , MOOOREXM B
                        , MSERMCCC C
                     WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND A.RSV_DTM BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
                    AND A.HSP_TP_CD = C.HSP_TP_CD
                    AND A.ORD_CD = C.EXM_GRP_DTL_CD
                    AND C.EXM_GRP_CD = 'HEXM'
                    AND C.ORD_CTG_CD = 'BR1'
                    AND A.RSV_DTM = B.RSV_DTM
                    AND A.HSP_TP_CD = B.HSP_TP_CD
                    AND B.PACT_TP_CD = :V_PACT_TP_CD_NEW
                    AND A.ORD_ID = B.ORD_ID
                    AND C.TH1_ASST_GRP_NM =(SELECT MAX(TH1_ASST_GRP_NM) FROM MSERMCCC WHERE HSP_TP_CD = A.HSP_TP_CD AND EXM_GRP_CD ='HEXM' AND ORD_CTG_CD = 'BR1' AND EXM_GRP_DTL_CD = :V_ORD_CD)
                    AND B.EXM_PRGR_STS_CD &lt;&gt; 'X'
                    AND NVL(B.EXM_CHDR_STF_NO,'9999') = 'YY99999'
                    AND NVL(B.RPY_STS_CD,'N') = 'N'
                    ORDER BY RSV_DTM
      )X
      ORDER BY X.EXM_CHDR_STF_NO DESC
     )
     LOOP
      BEGIN
       IF SEQ &lt;= HSIN_CNT AND NVL(REC.RPY_STS_CD,'N') = 'N' THEN
        UPDATE MOOOREXM
           SET EXM_CHDR_STF_NO = NULL
           WHERE HSP_TP_CD = :HIS_HSP_TP_CD
             AND ORD_ID = REC.ORD_ID
             ;
        SEQ := SEQ + 1;
       END IF;
      END;
     END LOOP;
END;

</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>원내판독 업데이트조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :V_RSV_DT := '2022-04-22';
EXEC :V_PACT_TP_CD_NEW := 'O';
EXEC :HIS_HSP_TP_CD := '02';
EXEC :V_ORD_CD := 'RC04007';
      SELECT ROWNUM,X.EXM_CHDR_STF_NO,X.RSV_DTM,X.ORD_ID,X.RPY_STS_CD
      FROM(
            SELECT B.EXM_CHDR_STF_NO,B.RSV_DTM,B.ORD_ID,B.RPY_STS_CD
                   FROM MSERMRRD A
                      , MOOOREXM B
                        , MSERMCCC C
                     WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND A.RSV_DTM BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
                    AND A.HSP_TP_CD = C.HSP_TP_CD
                    AND A.ORD_CD = C.EXM_GRP_DTL_CD
                    AND C.EXM_GRP_CD = 'HEXM'
                    AND C.ORD_CTG_CD = 'BR1'
                    AND A.RSV_DTM = B.RSV_DTM
                    AND A.HSP_TP_CD = B.HSP_TP_CD
                    AND B.PACT_TP_CD = :V_PACT_TP_CD_NEW
                    AND A.ORD_ID = B.ORD_ID
                    AND C.TH1_ASST_GRP_NM =(SELECT MAX(TH1_ASST_GRP_NM) FROM MSERMCCC WHERE HSP_TP_CD = A.HSP_TP_CD AND EXM_GRP_CD ='HEXM' AND ORD_CTG_CD = 'BR1' AND EXM_GRP_DTL_CD = :V_ORD_CD)
                    AND B.EXM_PRGR_STS_CD &lt;&gt; 'X'
                    AND NVL(B.EXM_CHDR_STF_NO,'9999') &lt;&gt; 'YY99999'
      UNION ALL
      SELECT B.EXM_CHDR_STF_NO,B.RSV_DTM,B.ORD_ID,B.RPY_STS_CD
                   FROM MSERMRRD A
                      , MOOOREXM B
                        , MSERMCCC C
                     WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND A.RSV_DTM BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
                    AND A.HSP_TP_CD = C.HSP_TP_CD
                    AND A.ORD_CD = C.EXM_GRP_DTL_CD
                    AND C.EXM_GRP_CD = 'HEXM'
                    AND C.ORD_CTG_CD = 'BR1'
                    AND A.RSV_DTM = B.RSV_DTM
                    AND A.HSP_TP_CD = B.HSP_TP_CD
                    AND B.PACT_TP_CD = :V_PACT_TP_CD_NEW
                    AND A.ORD_ID = B.ORD_ID
                    AND C.TH1_ASST_GRP_NM =(SELECT MAX(TH1_ASST_GRP_NM) FROM MSERMCCC WHERE HSP_TP_CD = A.HSP_TP_CD AND EXM_GRP_CD ='HEXM' AND ORD_CTG_CD = 'BR1' AND EXM_GRP_DTL_CD = :V_ORD_CD)
                    AND B.EXM_PRGR_STS_CD &lt;&gt; 'X'
                    AND NVL(B.EXM_CHDR_STF_NO,'9999') = 'YY99999'
                    AND NVL(B.RPY_STS_CD,'N') = 'N'
                    ORDER BY RSV_DTm
      )X
      ORDER BY X.EXM_CHDR_STF_NO DESC
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>LPAD</QUERY_NAME>
    <QUERY_TEXT>LPAD(TO_CHAR(SEQ_ACCS_ID.NEXTVAL ),6,'0')</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>LEVEL </QUERY_NAME>
    <QUERY_TEXT>select distinct trim(regexp_substr(a.txt,'[^,]+',1,LEVEL)) exm
 from EXMV a
CONNECT BY INSTR(a.txt,',',1,LEVEL-1)&gt;0</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>해당 월 날짜구하기</QUERY_NAME>
    <QUERY_TEXT>EXEC :YYYY := '2022';
EXEC :MM := '02';
select :YYYY || :MM || LPAD(LEVEL,2,'0') DT
   , TO_CHAR(TO_DATE((:YYYY || :MM || LPAD(LEVEL,2,'0')),'YYYY-MM-DD'),'DD') DAYS
 from dual
CONNECT BY LEVEL &lt;= TO_CHAR(LAST_DAY(TO_DATE(:YYYY||:MM,'yyyy-mm')),'DD')
;


--해당 일 ','로 구분 
SELECT LISTAGG(DAYS,',') WITHIN GROUP (ORDER BY DAYS) DAYS
FROM(
select :YYYY || :MM || LPAD(LEVEL,2,'0') DT
   , TO_CHAR(TO_DATE((:YYYY || :MM || LPAD(LEVEL,2,'0')),'YYYY-MM-DD'),'DD') DAYS
 from dual
CONNECT BY LEVEL &lt;= TO_CHAR(LAST_DAY(TO_DATE(:YYYY||:MM,'yyyy-mm')),'DD')
)</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>세션자동연동</QUERY_NAME>
    <QUERY_TEXT>SELECT *
  FROM MSERMCCC A -- 검사그룹코드
 WHERE A.HSP_TP_CD = :IN_HSP_TP_CD
   AND ORd_CTG_CD = 'MS'
   and A.EXM_GRP_CD = 'AUTO_TITLE'

   ;

EAM MENU ID를 추가하면 타이틀에 환자정보를 자동으로 표시해줌.(세션 변경시)</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>동명이인 아이콘</QUERY_NAME>
    <QUERY_TEXT>&lt;HImage Source="{StaticResource SameNameImage}" Margin="5,0,0,0" Stretch="None" VerticalAlignment="Center"  ToolTip="동명의 환자가 존재합니다."&gt;
                                        &lt;HImage.Style&gt;
                                            &lt;Style TargetType="{x:Type HImage}"&gt;
                                                &lt;Setter Property="Visibility" Value="Collapsed"/&gt;
                                                &lt;Style.Triggers&gt;
                                                    &lt;DataTrigger Binding="{Binding SAMENAME_YN}" Value="Y"&gt;
                                                        &lt;Setter Property="Visibility" Value="Visible"/&gt;
                                                    &lt;/DataTrigger&gt;
                                                &lt;/Style.Triggers&gt;
                                            &lt;/Style&gt;
                                        &lt;/HImage.Style&gt;
                                    &lt;/HImage&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ALERT 다제내성균 수동 입력</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :IN_STR_DT := '2022-01-01';
EXEC :IN_END_DT := '2022-05-10';
SELECT *
 FROM MOOPTIPD
 WHERE HSP_TP_CD = :HIS_HSP_TP_CD
  AND PT_NO = '15254412'
  ;

DECLARE
 V_PT_NO VARCHAR2(4000) := '';
 V_TRANS_YN VARCHAR2(1) := 'N';
BEGIN
 /*최초 초기화*/
 BEGIN
  UPDATE MSELMSID
    SET TH3_RMK_CNTE = 'N'
    WHERE HSP_TP_CD = :HIS_HSP_TP_CD
      AND LCLS_COMN_CD = 'ANTI_LN'
      AND USE_YN = 'Y'
      AND CRE_SEQ &lt;&gt; 0
      ;
 END;
 BEGIN
  FOR REC IN
  (
  SELECT
       C.HSP_TP_CD,A.SCLS_COMN_CD_NM,G.PT_NO, A.TH1_RMK_CNTE,A.TH2_RMK_CNTE,E.ATBA_SSBT_RSLT_CNTE,C.ACPT_DTM,H.ORD_ID
     , H.ORD_CD
     , C.LSH_IP_ADDR
  FROM MSELMAID C
     , MSELMSID A
     , MSELMCRD D
     , MSELMMRD E
     , MSELMSID F
     , PCTPCPAM_DAMO G
     , MOOOREXM H
   WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
     AND A.HSP_TP_CD = C.HSP_TP_CD
     AND A.HSP_TP_CD = D.HSP_TP_CD
     AND A.HSP_TP_CD = E.HSP_TP_CD
     AND A.HSP_TP_CD = F.HSP_TP_CD
     AND A.HSP_TP_CD = H.HSP_TP_CD
     AND A.USE_YN = F.USE_YN
     AND A.USE_YN = 'Y'
     AND C.RSLT_BRFG_YN = 'Y'
     AND D.LN_SEQ = E.LN_SEQ
     AND C.SPCM_NO = D.SPCM_NO
     AND C.SPCM_NO = E.SPCM_NO
     AND C.PT_NO = G.PT_NO
     AND C.SPCM_NO = H.SPCM_PTHL_NO
     AND C.PT_NO = H.PT_NO
     AND C.ORD_ID = H.ORD_ID
     AND D.EXM_CD = C.EXM_CD
     AND A.LCLS_COMN_CD = 'ANTI'
     AND F.LCLS_COMN_CD = 'ANTI_GUBN'
     AND A.LCLS_COMN_CD = F.TH1_RMK_CNTE
     AND A.TH1_RMK_CNTE = F.SCLS_COMN_CD_NM
     AND A.SCLS_COMN_CD = D.MVM_CD
     AND F.SCLS_COMN_CD = E.ATBA_CD
     AND H.ODDSC_TP_CD = 'C'
     AND C.LST_RSLT_VRFC_DTM BETWEEN TRUNC(TO_DATE(:IN_STR_DT,'YYYY-MM-DD'))
                                 AND TRUNC(TO_DATE(:IN_END_DT,'YYYY-MM-DD')) + 0.99999
     AND EXISTS(SELECT 1
                  FROM MOOPTICC X
                 WHERE X.HSP_TP_CD = A.HSP_TP_CD
                   AND X.INFC_INF_CD = A.SCLS_COMN_CD_NM)
                   AND E.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
                                                   FROM MSELMSID
                                                  WHERE HSP_TP_CD = A.HSP_TP_CD
                                                    AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
                                                    AND USE_YN = 'Y'
                                                    )
   GROUP BY C.HSP_TP_CD,A.SCLS_COMN_CD_NM,G.PT_NO, A.TH1_RMK_CNTE,A.TH2_RMK_CNTE,E.ATBA_SSBT_RSLT_CNTE,C.ACPT_DTM,H.ORD_ID,H.ORD_CD,C.LSH_IP_ADDR
   ORDER BY PT_NO,SCLS_COMN_CD_NM
   )
   LOOP
       IF V_PT_NO = '' OR V_PT_NO IS NULL THEN --환자번호 초기화
        V_PT_NO := REC.PT_NO    ;
       END IF;
       IF V_PT_NO = REC.PT_NO THEN --환자번호가 같으면 ALERT와 항생제분류코드와 내성도가 같은지 확인 후 Y처리
           UPDATE MSELMSID
              SET TH3_RMK_CNTE = 'Y'
            WHERE HSP_TP_CD = :HIS_HSP_TP_CD
              AND LCLS_COMN_CD = 'ANTI_LN'
              AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM       --ALERT
              AND TH2_RMK_CNTE = REC.ATBA_SSBT_RSLT_CNTE   --내성도
              AND TH1_RMK_CNTE = REC.TH2_RMK_CNTE      --항생제분류코드
              AND USE_YN = 'Y'
              ;
       ELSIF V_PT_NO &lt;&gt; REC.PT_NO THEN
          BEGIN                        --환자번호가 달라지면 연동기준 초기화
           UPDATE MSELMSID
             SET TH3_RMK_CNTE = 'N'
             WHERE HSP_TP_CD = :HIS_HSP_TP_CD
               AND LCLS_COMN_CD = 'ANTI_LN'
               AND USE_YN = 'Y'
               AND CRE_SEQ &lt;&gt; 0
               ;
          END;

          V_PT_NO := REC.PT_NO ; --기준환자번호 변경

          UPDATE MSELMSID
                  SET TH3_RMK_CNTE = 'Y'
                WHERE HSP_TP_CD = :HIS_HSP_TP_CD
                  AND LCLS_COMN_CD = 'ANTI_LN'
                  AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM
                  AND TH2_RMK_CNTE = REC.ATBA_SSBT_RSLT_CNTE
                  AND TH1_RMK_CNTE = REC.TH2_RMK_CNTE
                  AND USE_YN = 'Y'
                  ;
      END IF;
      BEGIN
           SELECT MIN(TH3_RMK_CNTE)                 --해당 ALERT 코드의 연동기준이 전부 Y인지 확인 . Y이면 연동
             INTO V_TRANS_YN
              FROM MSELMSID
             WHERE HSP_TP_CD = :HIS_HSP_TP_CD
               AND LCLS_COMN_CD = 'ANTI_LN'
               AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM
               AND UPPER(TH4_RMK_CNTE) = 'AND'
               AND USE_YN = 'Y'
                  ;
      END;
      IF V_TRANS_YN IS NULL THEN
          BEGIN
              SELECT MAX(TH3_RMK_CNTE)                 --해당 ALERT 코드의 연동기준이 전부 Y인지 확인 . Y이면 연동
                INTO V_TRANS_YN
                FROM MSELMSID
               WHERE HSP_TP_CD = :HIS_HSP_TP_CD
                 AND LCLS_COMN_CD = 'ANTI_LN'
                 AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM
                 AND UPPER(TH4_RMK_CNTE) = 'OR'
                 AND USE_YN = 'Y'
                 ;
          END;
      END IF;
       IF NVL(V_TRANS_YN,'N') = 'Y' THEN
--           DBMS_OUTPUT.PUT_LINE('ALERT : ' || REC.SCLS_COMN_CD_NM || ' PT_NO : ' || REC.PT_NO || ' ATBA_NM : ' || REC.TH1_RMK_CNTE || ' RSLT : ' || REC.ATBA_SSBT_RSLT_CNTE|| ' ACPT_DTM : ' || REC.ACPT_DTM || ' ORD_CD : ' || REC.ORD_CD || ' ORD_ID : ' || REC.ORD_ID  );
           BEGIN
                    XMED.PKG_MOO_ALERT.PC_MOO_SAVE_INFECTIONITEM ( REC.PT_NO              -- 01. 환자번호
                                                                 , NULL                   -- 02. 환자감염임신수유등록순번
                                                                 , REC.HSP_TP_CD          -- 03. 병원구분코드
                                                                 , REC.SCLS_COMN_CD_NM        -- 04. 감염임신수유코드
                                                                 , NULL                   -- 05. 삭제사유내용
                                                                 , NULL                   -- 06. 비고내용
                                                                 , 'I'                    -- 07. alert작업구분코드
                                                                 , 'SSUP04'                -- 08. 작업자직원번호
                                                                 , 'PC_MSE_ALERT_BATCH'   -- 09. 작업프로그램내용
                                                                 , REC.LSH_IP_ADDR        -- 10. 작업PC_IP
                                                                 , REC.ORD_ID             -- 11. 관련처방ID
                                                                 , 'R001'                    -- 12. 자동등록구분코드
                                                                 , REC.ACPT_DTM                -- 13. 자동등록일자( = 양성검체접수일 )
                                                                 ) ;
           END;
       END IF;
   END LOOP;
  END;
END;
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>RTM_FMT_DTM 백업</QUERY_NAME>
    <QUERY_TEXT>--create table CHK_RTM_FMT_DTM_0502 AS
select a.hsp_tp_cd,rpy_pact_Id,RPY_CLS_SEQ,RTM_FMT_DTM,RTM_CLSN_DT,rpy_Ord_ID  as ord_id,'MSERMAMD' AS TBL_NM,'실시일이 계산상세에 없음' RMK
    from msermamd a
    where a.hsp_TP_Cd in ('01','02')
    and rtm_fmt_dtm is not null
     and exists(select 1
                 from acppeoce
                where hsp_TP_CD= a.hsp_TP_cd
                  and ord_Id = a.rpy_Ord_ID
                  and ord_inpt_tbl_Nm = 'MSERMAMD'
                  and rtm_fmt_dtm is null
                  and rtm_clsn_dt is not null
                  and rpy_Seq = (select max(rpy_seq)
                                  from acppeoce
                                  where hsp_TP_cd = a.hsp_TP_Cd
                                    and ord_Id = a.rpy_Ord_ID
                                      and ord_inpt_tbl_Nm = 'MSERMAMD'
                  )
                  )

union all
select a.hsp_tp_cd,rpy_pact_Id,RPY_CLS_SEQ,RTM_FMT_DTM,RTM_CLSN_DT,ord_id,'MOOORFED' AS TBL_NM ,'실시일이 계산상세에 없음' RMK
    from mooorfed a
    where a.hsp_TP_Cd in( '01','02')
    and rtm_fmt_dtm is not null
     and exists(select 1
                 from acppeoce
                where hsp_TP_CD= a.hsp_TP_cd
                  and ord_Id = a.Ord_ID
                  and ord_inpt_tbl_Nm = 'MOOORFED'
                  and rtm_fmt_dtm is null
                  and rtm_clsn_dt is not null
                  and rpy_Seq = (select max(rpy_seq)
                                  from acppeoce
                                  where hsp_TP_cd = a.hsp_TP_Cd
                                    and ord_Id = a.Ord_ID
                                      and ord_inpt_tbl_Nm = 'MOOORFED'
                  )
                  )

union all
select   a.hsp_tp_cd,rpy_pact_Id,RPY_CLS_SEQ,RTM_FMT_DTM,RTM_CLSN_DT,rpy_Ord_ID  as ord_id,'MSERMAMD' AS TBL_NM,'실시일이 마감일 이후' RMK
    from msermamd a
    where a.hsp_TP_Cd in( '01','02')
    and rtm_fmt_dtm is not null
     and exists(select 1
                 from acppeoce
                where hsp_TP_CD= a.hsp_TP_cd
                  and ord_Id = a.rpy_Ord_ID
                  and ord_inpt_tbl_Nm = 'MSERMAMD'
                  and rtm_fmt_dtm is not null
                  and a.rtm_fmt_dtm &gt; rtm_clsn_dt + .99999
                  and rpy_Seq = (select max(rpy_seq)
                                  from acppeoce
                                  where hsp_TP_cd = a.hsp_TP_Cd
                                    and ord_Id = a.rpy_Ord_ID
                                      and ord_inpt_tbl_Nm = 'MSERMAMD'
                  )
                  )

union all
select a.hsp_tp_cd,rpy_pact_Id,RPY_CLS_SEQ,RTM_FMT_DTM,RTM_CLSN_DT,ord_id,'MOOORFED' AS TBL_NM   ,'실시일이 마감일 이후' RMK
    from mooorfed a
    where a.hsp_TP_Cd in( '01','02')
    and rtm_fmt_dtm is not null
     and exists(select 1
                 from acppeoce
                where hsp_TP_CD= a.hsp_TP_cd
                  and ord_Id = a.Ord_ID
                  and ord_inpt_tbl_Nm = 'MOOORFED'
                  and rtm_fmt_dtm is not null
                  and a.rtm_fmt_dtm &gt; rtm_clsn_dt + .99999
                  and rpy_Seq = (select max(rpy_seq)
                                  from acppeoce
                                  where hsp_TP_cd = a.hsp_TP_Cd
                                    and ord_Id = a.Ord_ID
                                      and ord_inpt_tbl_Nm = 'MOOORFED'
                  )
                  )

;</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CCCMCSTE(멀티공통코드) 추가</QUERY_NAME>
    <QUERY_TEXT>--EXEC :HSP_TP_CD := '01';
EXEC :COMN_GRP_CD := 'USECNTR';
EXEC :COMN_CD := 'TRM_DC';
EXEC :COMN_CD_NM := 'PC_MSE_SIDEAUTOPBL';
EXEC :USE_YN := 'N';
;
SELECT *
    FROM CCCMCSTE
    WHERE 1=1
--and HSP_TP_CD = :HSP_TP_CD
    AND COMN_GRP_CD = :COMN_GRP_CD
;
BEGIN
    FOR REC IN (SELECT COMN_CD    HSP_TP_CD
                  FROM CCCCCSTE
                 WHERE COMN_GRP_CD = '101')
    LOOP
        BEGIN
            INSERT INTO CCCMCSTE
            (HSP_TP_CD,COMN_GRP_CD,COMN_CD,COMN_CD_NM,COMN_CD_EXPL,SCRN_MRK_SEQ,USE_YN,DTRL1_NM,DTRL2_NM,DTRL3_NM,DTRL4_NM,DTRL5_NM,DTRL6_NM,NEXTG_FMR_COMN_CD,FSR_DTM,FSR_SID,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_SID,LSH_PRGM_NM,LSH_IP_ADDR)
            VALUES(REC.HSP_TP_CD,:COMN_GRP_CD,:COMN_CD,:COMN_CD_NM,'','999',:USE_YN,'','','','','','','',SYSDATE,'SSSUP11','GOLDEN','GOLDEN',SYSDATE,'SSSUP11','GOLDEN','GOLDEN')
            ;
        EXCEPTION
            WHEN OTHERS THEN
                NULL;
        END;
    END LOOP;
END;
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>XSUP 12시30분 배치</QUERY_NAME>
    <QUERY_TEXT>PC_MOO_BATCH_MSOPTLOD</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>합본 반복문</QUERY_NAME>
    <QUERY_TEXT>--temp_exm_table3 테이블에 exm_Cd = 이전 환자번호 , cd_nm = 변경할 환자번호, mif_Cd = 병원구분코드 , kor_exm_nm에  '합본' 넣고 실행하면 됨.
exec :IN_STF_NO := 'SSSUP01';       --직원번호
exec :IN_MSM_YN := 'N';       --의무기록 합본여부
exec :IN_MSD_YN := 'Y';       --약제     합본여부
exec :IN_MSQ_YN := 'Y';       --급식영양 합본여부
exec :IN_MST_YN := 'Y';       --재활/방종 합본여부
exec :IN_MSP_YN := 'Y';       --병리 합본여부
exec :IN_MSE_YN := 'Y';       --진검 합본여부
exec :IN_MSR_YN := 'Y';       --진방 (영상, 핵체내, 과내, 특검)합본여부
exec :IN_MSU_YN := 'Y';      --건증 합본여부
exec :IN_CRM_YN := 'Y';       --CRM 합본여부
--exec :IN_HSP_TP_CD := '01';    --병원구분
exec :IO_ERRYN := '';
exec :IO_ERRMSG := '';
VAR OUT_CURSOR REFCURSOR;
BEGIN
FOR REC IN
(SELECT EXM_CD     OLD_PT_NO
       ,CD_NM      NEW_PT_NO
       ,B.HSP_TP_CD
   FROM TEMP_EXM_TABLE3 A
      , AIMIPHID_DAMO B
  WHERE KOR_EXM_NM = '합본'
)
LOOP
begin
 xsup.PKG_MS_BIND_PTNO.PC_MS_BIND_PTNO(
                                REC.OLD_PT_NO   --이전등록번호
                              , REC.NEW_PT_NO    --변경할등록번호
                              , :IN_STF_NO       --직원번호
                              , :IN_MSM_YN       --의무기록 합본여부
                              , :IN_MSD_YN       --약제     합본여부
                              , :IN_MSQ_YN       --급식영양 합본여부
                              , :IN_MST_YN       --재활/방종 합본여부
                              , :IN_MSP_YN       --병리 합본여부
                              , :IN_MSE_YN       --진검 합본여부
                              , :IN_MSR_YN       --진방 (영상, 핵체내, 과내, 특검)합본여부
                              , :IN_MSU_YN      --건증 합본여부
                              , :IN_CRM_YN       --CRM 합본여부
                              , REC.HSP_TP_CD    --병원구분
                              , :IO_ERRYN
                              , :IO_ERRMSG
                              , :OUT_CURSOR
                              );


    DBMS_OUTPUT.PUT_LINE(:IO_ERRYN);
    DBMS_OUTPUT.PUT_LINE(:IO_ERRMSG);
--    DBMS_OUTPUT.PUT_LINE(:OUT_CURSOR);
end;
END LOOP;
BEGIN
    DELETE TEMP_EXM_TABLE3
     WHERE KOR_EXM_NM = '합본';
END;
COMMIT;
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>숫자,문자체크 정규식</QUERY_NAME>
    <QUERY_TEXT>WHERE REGEXP_LIKE(컬럼,'[0-9]') --데이터에 숫자가 하나라도 있으면 조회
WHERE REGEXP_LIKE(컬럼,'[^0-9]') -- 데이터에 숫자가 아닌게 하나라도 있으면 조회

WHERE NOT REGEXP_LIKE(컬럼,'[0-9]') --데이터에 숫자가 하나라도 있으면 제외
WHERE NOT REGEXP_LIKE(컬럼,'[^0-9]') -- 데이터에 숫자가 아닌게 하나라도 있으면 제외

SELECT REGEXP_REPLACE(컬럼,'[0-9]') --문자만 추출
SELECT REGEXP_REPLACE(컬럼,'[^0-9]') --숫자만 추출</QUERY_TEXT>
    <GROUP>정규식</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>원내판독 건수 확인</QUERY_NAME>
    <QUERY_TEXT>EXEC :V_RSV_DT := '2022-05-12';
EXEC :V_PACT_TP_CD_NEW := 'O';
EXEC :HIS_HSP_TP_CD := '02';
EXEC :GRP := '2';
SELECT '원내' HISN_YN,B.PT_NO,B.ORD_CD,B.rPY_STS_CD
                   FROM MSERMRRD A
                      , MOOOREXM B
                        , MSERMCCC C
                     WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND A.RSV_DTM BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
                    AND A.HSP_TP_CD = C.HSP_TP_CD
                    AND A.ORD_CD = C.EXM_GRP_DTL_CD
                    AND C.EXM_GRP_CD = 'HEXM'
                    AND C.ORD_CTG_CD = 'BR1'
                    AND A.RSV_DTM = B.RSV_DTM
                    AND A.HSP_TP_CD = B.HSP_TP_CD
                    AND B.PACT_TP_CD = :V_PACT_TP_CD_NEW
                    AND A.ORD_ID = B.ORD_ID
                    AND UPPER(C.TH1_ASST_GRP_NM) = DECODE(:GRP,'1','CHEST','2','ABDOMEN')
                    AND B.EXM_PRGR_STS_CD &lt;&gt; 'X'
                    AND B.EXM_RTN_REQ_DTM IS NULL
                    AND NVL(B.EXM_CHDR_STF_NO,'99999') &lt;&gt; 'YY99999'
;
SELECT '원내' HISN_YN,COUNT(*)
                   FROM MSERMRRD A
                      , MOOOREXM B
                        , MSERMCCC C
                     WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND A.RSV_DTM BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
                    AND A.HSP_TP_CD = C.HSP_TP_CD
                    AND A.ORD_CD = C.EXM_GRP_DTL_CD
                    AND C.EXM_GRP_CD = 'HEXM'
                    AND C.ORD_CTG_CD = 'BR1'
                    AND A.RSV_DTM = B.RSV_DTM
                    AND A.HSP_TP_CD = B.HSP_TP_CD
                    AND B.PACT_TP_CD = :V_PACT_TP_CD_NEW
                    AND A.ORD_ID = B.ORD_ID
                    AND UPPER(C.TH1_ASST_GRP_NM) = DECODE(:GRP,'1','CHEST','2','ABDOMEN')
                    AND B.EXM_PRGR_STS_CD &lt;&gt; 'X'
                    AND B.EXM_RTN_REQ_DTM IS NULL
                    AND NVL(B.EXM_CHDR_STF_NO,'99999') &lt;&gt; 'YY99999'
UNION ALL
SELECT '원외' HISN_YN,COUNT(*)
                   FROM MSERMRRD A
                      , MOOOREXM B
                        , MSERMCCC C
                     WHERE A.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND A.RSV_DTM BETWEEN TO_DATE(:V_RSV_DT,'YYYY-MM-DD') AND TO_DATE(:V_RSV_DT,'YYYY-MM-DD') + .99999
                    AND A.HSP_TP_CD = C.HSP_TP_CD
                    AND A.ORD_CD = C.EXM_GRP_DTL_CD
                    AND C.EXM_GRP_CD = 'HEXM'
                    AND C.ORD_CTG_CD = 'BR1'
                    AND A.RSV_DTM = B.RSV_DTM
                    AND A.HSP_TP_CD = B.HSP_TP_CD
                    AND B.PACT_TP_CD = :V_PACT_TP_CD_NEW
                    AND A.ORD_ID = B.ORD_ID
                    AND UPPER(C.TH1_ASST_GRP_NM) = DECODE(:GRP,'1','CHEST','2','ABDOMEN')
                    AND B.EXM_PRGR_STS_CD &lt;&gt; 'X'
                    --AND NVL(B.RPY_STS_CD ,'N') = 'N'
                    AND B.EXM_RTN_REQ_DTM IS NULL
                    AND NVL(B.EXM_CHDR_STF_NO,'99999') = 'YY99999'
;

</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>다제내성균 튜닝2</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :ATBA_TLR_TP_CD := '012';
--EXEC :IN_PT_NO := 'ALL';
EXEC :IN_STR_DT := '2022-01-13';
EXEC :IN_END_DT := '2022-05-13';
EXEC :IN_SCLS_COMN_CD := '';
EXEC :ADS_GUBN := '0';
with c_c as
      (SELECT --/*+ USE_HASH(C I) */
               I.ADS_DTM
             , I.DS_DTM
             , I.PACT_ID     PACT_ID_I
             , C.*
          FROM MSELMAID C, ACPPRAAM I
         WHERE     C.HSP_TP_CD = :HIS_HSP_TP_CD
               AND C.PACT_TP_CD = 'I'
               AND I.SIHS_YN = 'Y'
               AND C.PACT_TP_CD = 'I'
               AND I.PT_NO = C.PT_NO
               AND C.HSP_TP_CD = I.HSP_TP_CD
               AND C.LST_RSLT_VRFC_DTM BETWEEN TRUNC(TO_DATE( :IN_STR_DT, 'YYYY-MM-DD')) AND TRUNC(TO_DATE( :IN_END_DT, 'YYYY-MM-DD')) + 0.99999
               AND NVL(I.APCN_YN, 'N') = 'N'
               AND C.RSLT_BRFG_YN = 'Y')
              SELECT-- /*+ LEADING(c) use_nl(a c) */
       G.PT_NO
     , XBIL.FT_PCT_AGE('AUTO_01', SYSDATE, G.PT_BRDY_DT)    AGE
     , G.PT_NM
     , H.WD_DEPT_CD
     , H.PRM_NO
     , H.PT_HME_DEPT_CD                                     MED_DEPT_CD_NM
     , H.TH1_SPCM_CD
     , C.EXM_CD                                             ORD_NM
     , TO_CHAR(C.ADS_DTM, 'YYYY-MM-DD HH24:MI:SS')          ADS_DT
     , TO_CHAR(C.DS_DTM, 'YYYY-MM-DD HH24:MI:SS')           DS_DTM
     , TO_CHAR(H.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')         ACPT_DTM
     , TO_CHAR(C.LST_RSLT_VRFC_DTM, 'YYYY-MM-DD')           LST_RSLT_VRFC_DTM
     , (SELECT MVRT_CNTE
          FROM MSELMSYC
         WHERE     HSP_TP_CD = A.HSP_TP_CD
               AND MVM_CD = D.MVM_CD)                       MVRT_CNTE
     , D.MVM_CD
     , E.ATBA_CD
     , E.ATBA_DMTR_CNTE
     , E.ATBA_SSBT_RSLT_CNTE
     , (SELECT PRM_GRD_NM
          FROM (  SELECT (SELECT COMN_CD_NM
                            FROM CCCCCSTE
                           WHERE     COMN_GRP_CD = '358'
                                 AND COMN_CD = X.PRM_GRD_CD)    PRM_GRD_NM
                    FROM ACPPRTSD X
                   WHERE     1 = 1
                         AND hsp_tp_Cd = :HIS_HSP_TP_CD
                         AND pt_no = C.PT_NO
                         AND apy_end_Dt = '9999-12-31'
                ORDER BY apy_str_dt DESC)
         WHERE ROWNUM = 1)                                  PRM_GRD_NM
     , (SELECT PRM_TP_NM
          FROM (  SELECT (SELECT COMN_CD_NM
                            FROM CCCCCSTE
                           WHERE     COMN_GRP_CD = '359'
                                 AND COMN_CD = X.PRM_TP_CD)    PRM_TP_NM
                    FROM ACPPRTSD X
                   WHERE     1 = 1
                         AND hsp_tp_Cd = :HIS_HSP_TP_CD
                         AND pt_no = C.PT_NO
                         AND apy_end_Dt = '9999-12-31'
                ORDER BY apy_str_dt DESC)
         WHERE ROWNUM = 1)                                  PRM_TP_NM
  FROM (SELECT *
          FROM MSELMSID A
         WHERE     EXISTS
                       (SELECT 1
                          FROM MOOPTICC X
                         WHERE     X.HSP_TP_CD = A.HSP_TP_CD
                               AND X.INFC_INF_CD = A.SCLS_COMN_CD_NM
                               AND EXISTS
                                       (SELECT COMN_CD_NM
                                          FROM CCCCCSTE
                                         WHERE     COMN_GRP_CD = 'DR00108'
                                               AND INSTR(UPPER(REPLACE(X.INFC_INF_NM, ' ', '')), UPPER(REPLACE(COMN_CD_NM, ' ', ''))) &gt; 0
                                               AND COMN_CD = :ATBA_TLR_TP_CD))
               AND LCLS_COMN_CD = 'ANTI'
               AND HSP_TP_CD = :HIS_HSP_TP_CD
               AND A.USE_YN = 'Y'
                                 ) A

     , MSELMCRD       D
     , MSELMMRD       E
     , MSELMSID       F
     , PCTPCPAM_DAMO  G
     , MOOOREXM       H
     , c_c C
 WHERE     A.HSP_TP_CD = :HIS_HSP_TP_CD
       AND A.HSP_TP_CD = C.HSP_TP_CD
       AND D.EXM_cD = C.EXM_cD
       AND A.HSP_TP_CD = D.HSP_TP_CD
       AND A.HSP_TP_CD = E.HSP_TP_CD
       AND A.HSP_TP_CD = F.HSP_TP_CD
       AND A.HSP_TP_CD = H.HSP_TP_CD
       AND A.USE_YN = F.USE_YN
       AND A.USE_YN = 'Y'
       AND D.LN_SEQ = E.LN_SEQ
       AND C.SPCM_NO = D.SPCM_NO
       AND C.SPCM_NO = E.SPCM_NO
       AND C.SPCM_NO = H.SPCM_PTHL_NO
       AND C.PT_NO = C.PT_NO
       AND C.PT_NO = G.PT_NO
       AND C.PT_NO = H.PT_NO         
       AND C.ORD_ID = H.ORD_ID
       AND A.LCLS_COMN_CD = 'ANTI'
       AND F.LCLS_COMN_CD = 'ANTI_GUBN'
       AND A.LCLS_COMN_CD = F.TH1_RMK_CNTE
       AND A.TH1_RMK_CNTE = F.SCLS_COMN_CD_NM
       AND A.SCLS_COMN_CD = D.MVM_CD
       AND F.SCLS_COMN_CD = E.ATBA_CD
       AND H.ODDSC_TP_CD = 'C'
       AND H.PACT_ID = C.PACT_ID_I
       AND H.PACT_TP_CD &lt;&gt; 'O'
       AND E.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
                                       FROM MSELMSID
                                      WHERE     1 = 1
                                            AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
                                            AND HSP_TP_CD = :HIS_HSP_TP_CD
                                            AND USE_YN = 'Y'
                                            AND SCLS_COMN_CD LIKE :IN_SCLS_COMN_CD || '%')
       AND :ADS_GUBN = :ADS_GUBN
UNION ALL
SELECT /*+ LEADING(Y) */
       G.PT_NO
     , XBIL.FT_PCT_AGE('AUTO_01', SYSDATE, G.PT_BRDY_DT)    AGE
     , G.PT_NM
     , H.WD_DEPT_CD
     , H.PRM_NO
     , H.PT_HME_DEPT_CD                                     MED_DEPT_CD_NM
     , H.TH1_SPCM_CD
     , C.EXM_CD                                             ORD_NM
     , TO_CHAR(J.ADS_DT, 'YYYY-MM-DD')                      ADS_DT
     , ''                                                   DS_DTM
     , TO_CHAR(H.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')         ACPT_DTM
     , TO_CHAR(C.LST_RSLT_VRFC_DTM, 'YYYY-MM-DD')           LST_RSLT_VRFC_DTM
     , (SELECT MVRT_CNTE
          FROM MSELMSYC
         WHERE     HSP_TP_CD = A.HSP_TP_CD
               AND MVM_CD = D.MVM_CD)                       MVRT_CNTE
     , D.MVM_CD
     , E.ATBA_CD
     , E.ATBA_DMTR_CNTE
     , E.ATBA_SSBT_RSLT_CNTE
     , (SELECT PRM_GRD_NM
          FROM (  SELECT (SELECT COMN_CD_NM
                            FROM CCCCCSTE
                           WHERE     COMN_GRP_CD = '358'
                                 AND COMN_CD = X.PRM_GRD_CD)    PRM_GRD_NM
                    FROM ACPPRTSD X
                   WHERE     1 = 1
                         AND hsp_tp_Cd = :HIS_HSP_TP_CD
                         AND pt_no = C.PT_NO
                         AND apy_end_Dt = '9999-12-31'
                ORDER BY apy_str_dt DESC)
         WHERE ROWNUM = 1)                                  PRM_GRD_NM
     , (SELECT PRM_TP_NM
          FROM (  SELECT (SELECT COMN_CD_NM
                            FROM CCCCCSTE
                           WHERE     COMN_GRP_CD = '359'
                                 AND COMN_CD = X.PRM_TP_CD)    PRM_TP_NM
                    FROM ACPPRTSD X
                   WHERE     1 = 1
                         AND hsp_tp_Cd = :HIS_HSP_TP_CD
                         AND pt_no = C.PT_NO
                         AND apy_end_Dt = '9999-12-31'
                ORDER BY apy_str_dt DESC)
         WHERE ROWNUM = 1)                                  PRM_TP_NM
  FROM (SELECT *
          FROM MSELMSID A
         WHERE EXISTS
                   (SELECT 1
                      FROM MOOPTICC X
                     WHERE     X.HSP_TP_CD = A.HSP_TP_CD
                           AND X.INFC_INF_CD = A.SCLS_COMN_CD_NM
                           AND EXISTS
                                   (SELECT COMN_CD_NM
                                      FROM CCCCCSTE
                                     WHERE     COMN_GRP_CD = 'DR00108'
                                           AND INSTR(UPPER(REPLACE(X.INFC_INF_NM, ' ', '')), UPPER(REPLACE(COMN_CD_NM, ' ', ''))) &gt; 0
                                           AND COMN_CD = :ATBA_TLR_TP_CD)
                           AND A.USE_YN = 'Y'
                           AND A.HSP_TP_CD = :HIS_HSP_TP_CD
                           AND A.LCLS_COMN_CD = 'ANTI')) A
     , MSELMAID       C
     , MSELMCRD       D
     , MSELMMRD       E
     , MSELMSID       F
     , PCTPCPAM_DAMO  G
     , MOOOREXM       H
     , ACPPRETM       J
 WHERE     A.HSP_TP_CD = :HIS_HSP_TP_CD
       AND A.HSP_TP_CD = C.HSP_TP_CD
       AND A.HSP_TP_CD = D.HSP_TP_CD
       AND A.HSP_TP_CD = E.HSP_TP_CD
       AND A.HSP_TP_CD = F.HSP_TP_CD
       AND A.HSP_TP_CD = H.HSP_TP_CD
       AND D.EXM_cD = C.EXM_cD
       AND H.HSP_TP_CD = J.HSP_TP_CD
       AND A.USE_YN = F.USE_YN
       AND A.USE_YN = 'Y'
       AND C.RSLT_BRFG_YN = 'Y'
       AND D.LN_SEQ = E.LN_SEQ
       AND C.SPCM_NO = D.SPCM_NO
       AND C.SPCM_NO = E.SPCM_NO
       AND C.SPCM_NO = H.SPCM_PTHL_NO
       AND C.PT_NO = G.PT_NO
       AND C.PT_NO = H.PT_NO
       AND C.PT_NO = J.PT_NO
       AND C.ORD_ID = H.ORD_ID
       AND A.LCLS_COMN_CD = 'ANTI'
       AND F.LCLS_COMN_CD = 'ANTI_GUBN'
       AND A.LCLS_COMN_CD = F.TH1_RMK_CNTE
       AND A.TH1_RMK_CNTE = F.SCLS_COMN_CD_NM
       AND A.SCLS_COMN_CD = D.MVM_CD
       AND F.SCLS_COMN_CD = E.ATBA_CD
       AND H.ODDSC_TP_CD = 'C'
       AND H.PACT_ID = J.PACT_ID
       AND NVL(J.APCN_YN, 'N') = 'N'
       AND J.SIHS_YN = 'Y'
       AND H.PACT_TP_CD &lt;&gt; 'O'
       AND C.LST_RSLT_VRFC_DTM BETWEEN TRUNC(TO_DATE( :IN_STR_DT, 'YYYY-MM-DD')) AND TRUNC(TO_DATE( :IN_END_DT, 'YYYY-MM-DD')) + 0.99999
       AND E.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
                                       FROM MSELMSID
                                      WHERE     1 = 1
                                            AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
                                            AND HSP_TP_CD = :HIS_HSP_TP_CD)
       AND :ADS_GUBN = :ADS_GUBN
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오늘할일</QUERY_NAME>
    <QUERY_TEXT>05/26
HIS.MS.IV.RM.EX.DeleteTm2SOrdInfo
HIS.MS.IV.RM.EX.SelectTm2SOrdInfoNew
HIS.MS.IV.RM.RC.SelectPtExrmHst


05/18
TAT개발
검사결과관리 수정 


05/17
1. 지출결의서 출력  (Y)
2. 가야할곳IMP 마스터 조정 (Y)
3. 범위기술서 요구사항 일정 정리 (Y)
4. 코드인스펙션(X)
5. ACCS_ID 시퀀스 정리 (YYMMDD + 5자리 시퀀스 제안) + ADT 업데이트문에 병원구분 추가(Y)
6. 빛고을 마스터 정리 요청(X)
7. 외부영상 DB링크에 관련해서 어떻게 할 지 정리(H)
8. 핵체내 검사통계 (Y)
</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>판독률조회</QUERY_NAME>
    <QUERY_TEXT>/SelectExrmCbIptnRto.xaml?EAMPARAM=A&amp;ORD_CTG_CD=BR1

EAMPARAM이 A면 검사실별 판독률 조회
           I면 검사명별 판독률 조회 </QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>데이터그리드 숫자 콤마 StringFormat</QUERY_NAME>
    <QUERY_TEXT>&lt;HDataGridTextColumn Header="전체" Width="60" Binding="{Binding TST_NUM ,StringFormat=\{0:N0\}}" TextAlignment="Right" VerticalAlignment="Center"
                                         HDataGridColumnHeaderManager.IsMerged="True" 
                                         HDataGridColumnHeaderManager.MergeHeader="검사건수" 
                                         HDataGridColumnHeaderManager.MergeSpan="4" /&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>DependencyProperty </QUERY_NAME>
    <QUERY_TEXT> public static readonly DependencyProperty MaskCommaProperty = DependencyProperty.Register(
            "MaskComma",
            typeof(bool),
            typeof(HDataGridEx2),
            new FrameworkPropertyMetadata(new PropertyChangedCallback(OnMaskCommaPropertyChanged))
            );
            
            

        public bool MaskComma
        {
            get { return (bool)GetValue(HDataGridEx2.MaskCommaProperty); }
            set { SetValue(HDataGridEx2.MaskCommaProperty, value); }
        }

        private static void OnMaskCommaPropertyChanged(DependencyObject o, DependencyPropertyChangedEventArgs e)
        {
            
       
        }</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Delegate(델리게이트)</QUERY_NAME>
    <QUERY_TEXT>delegate + 반환타입 + Delegate명(보통Delegate을 접미사로 사용) + (매개변수)
-&gt; delegate void SelDelegate(SelectOrderINOUT param); 클래스에 선언. 

SelectPatientInfo selPt = new SelectPatienInfo();
SelDelegate sel = selPt.Select;
sel(param);

=

SelectPatientInfo selPt = new SelectPatienInfo();
selPt.Select(param);

두개가 같은 결과이나

delegate는 타입이고 두번째는 selPt로 직접 메서드를 호출한다. 
 

delegate에 += 으로 추가하면 추가된 메서드를 전부 사용가능하며

메서드의 인자로 delegate를 넘겨주면 메서드의 인자로 메서드를 넘기는것이 가능하다.</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사시행 환자리스트 EQS</QUERY_NAME>
    <QUERY_TEXT>HIS.MS.IV.RM.EX.SelectGnrDgnsExmImpl

&lt;sql id="HIS.MS.IV.RM.EX.SelectGnrDgnsExmImpl"&gt;&lt;!--
    Clss : [text]
    Desc : 일반진단 실시를 위한 환자정보를 조회합니다.(PKG_SUP_SR_D_21.pc_sr_sel_srexamdt_1)
    Author : 유영하 
    Create date : 2012-07-02
    Update date : 2012-07-02 
    조영제 변경환자 식별 : 2016-05-12 김세용  XMED.FT_MOO_INFECT_CLS  1 -&gt; 9 
                        2017-01-02  김세용  통합 IV 대상 여부 추가 
                  2017-04-05 윤정식 수정 : 이대 병원 구분작업
                  2021-12-16 오원빈 수정 : 검사실 코드 그대로 분류가 달라질 경우 조회되지 않아서 해당 분류의 검사실코드로 접수된 리스트 전부 조회되도록 수정
--&gt;

SELECT /* HIS.MS.IV.RM.EX.SelectGnrDgnsExmImpl */
       A.EXRM_TP_CD     
     , A.PT_NO                                                                    PT_NO
     , XSUP.FT_MSE_ACP_NOINFOYN(:HIS_HSP_TP_CD, A.PT_NO,NULL ) || B.PT_NM || XSUP.FT_MSE_GET_TADS_YN(:HIS_HSP_TP_CD, A.PT_NO) PT_NM
     , MAX(DECODE(A.PACT_TP_CD, 'O', A.MED_DEPT_CD, 'I', A.WD_DEPT_CD, 'E', A.MED_DEPT_CD))  MED_DEPT_CD
     , MAX(FT_MSD_DEPT(M.HSP_TP_CD, M.PT_HME_DEPT_CD)) MED_DEPT_NM
     , TO_CHAR(B.PT_BRDY_DT, 'YYYY-MM-DD')                                        PT_BRDY_DT
     , B.SEX_TP_CD                                                               SEX_TP_CD
     , XBIL.FT_PCT_AGE('F_AGE', SYSDATE, B.PT_BRDY_DT)                           PT_BRDY_DT
     , XMED.FT_MOO_INFECT_CLS(A.PT_NO, TO_CHAR(SYSDATE, 'YYYYMMDD'), :HIS_HSP_TP_CD, '9')  INFECT_CLS
     , DECODE(MIN(NVL(TO_CHAR(M.RSV_DTM,'YYYY-MM-DD HH24:MI'),'2999-12-31 23:59')), '2999-12-31 23:59', ''
            , MIN(NVL(TO_CHAR(M.RSV_DTM,'YYYY-MM-DD HH24:MI'),'2999-12-31 23:59')))       RSV_DTM
     , TO_CHAR(MIN(A.INIT_ACPT_DTM), 'HH24:MI')                                    INIT_ACPT_DTM
     --, TO_CHAR(MAX(A.ACPT_DTM), 'HH24:MI')                                         ACPTDT2
     , TO_CHAR(MIN(A.ARVL_DTM), 'HH24:MI')                                         ACPTDT2
     , TO_CHAR(A.ACPT_DTM, 'YYYY-MM-DD')                                           ACPT_DTM
     , LISTAGG(A.ORD_ID,',') WITHIN GROUP(ORDER BY A.HSP_TP_CD, A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_ID_LIST
--     , A.PT_NO || ' ' || TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI') || ' ' || TO_CHAR(MIN(M.RSV_DTM), 'YYYY-MM-DD HH24:MI:SS') || chr(13) ||
--       MAX(DECODE(A.PACT_TP_CD, 'O', A.MED_DEPT_CD, 'I', A.WD_DEPT_CD, 'E', A.MED_DEPT_CD))|| ' ' ||LISTAGG(M.ORD_NM,', ') WITHIN GROUP(ORDER BY A.HSP_TP_CD, A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_NM_LIST

     , '환자번호 : ' || A.PT_NO || chr(13) || 
       '접수시간 : ' || TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI') || chr(13) ||
       '오더명 : ' || LISTAGG(M.ORD_NM,', ') WITHIN GROUP(ORDER BY A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_NM_LIST



     , A.PT_NO || ' ' || TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI') || ' ' || TO_CHAR(MIN(M.RSV_DTM), 'YYYY-MM-DD HH24:MI:SS') || chr(13) ||
       LISTAGG(M.ORD_NM,', ') WITHIN GROUP(ORDER BY A.HSP_TP_CD, A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_NM_LIST
     , FT_MSE_CLDG_NM(A.PT_NO, :HIS_HSP_TP_CD)                                    CLDG_NM_LIST
     --, MAX(XMED.FT_MRN_BODYMSMTINF('BODYWEIGHT','PT_L','Y',A.PT_NO,A.HSP_TP_CD,M.PACT_ID, M.PACT_TP_CD,NULL,NULL)) PT_WEIGHT
     ,(SELECT TO_CHAR(Q.BDWT)||' ('|| TO_CHAR(Q.LSH_DTM, 'YYYY-MM-DD') || ')' FROM MOOPTHWD Q WHERE Q.PT_NO=A.PT_NO AND Q.HSP_TP_CD=A.HSP_TP_CD)   PT_WEIGHT
     --, MAX(XMED.FT_MRN_BODYMSMTINF('BODYHEIGHT','PT_L','Y',A.PT_NO,A.HSP_TP_CD,M.PACT_ID, M.PACT_TP_CD,NULL,NULL)) PT_HEIGHT
     ,(SELECT TO_CHAR(Q.BDHT)||' ('|| TO_CHAR(Q.LSH_DTM, 'YYYY-MM-DD') || ')' FROM MOOPTHWD Q WHERE Q.PT_NO=A.PT_NO AND Q.HSP_TP_CD=A.HSP_TP_CD)   PT_HEIGHT
     , MIN(CASE WHEN A.EXM_PRGR_STS_CD = 'C' THEN 'Y' ELSE 'N' END)               EXM_PRGR_STS_YN
     , (SELECT CASE WHEN MAX(R.FTIL_CMSY_KND_CD) IS NOT NULL THEN '3'
                    WHEN MAX(R.SRIL_CMSY_KND_CD) IS NOT NULL THEN '2'
                    WHEN MAX(R.SILL_CMSY_KND_CD) IS NOT NULL THEN '1'
                    WHEN MAX(R.PT_NO)            IS NOT NULL THEN '0'
                    ELSE 'N' END SIDE_YN
          FROM MSERMMSD R
         WHERE R.PT_NO           = A.PT_NO
           AND R.CNMD_SDEF_TP_CD = 'S'
           ) SIDE_YN
     , (SELECT NVL2(MAX(R.PT_NO), 'Y', 'N')
          FROM MSERMMSD R
         WHERE R.PT_NO           = A.PT_NO
           AND R.CNMD_SDEF_TP_CD = 'D'
           ) SED_YN
     , DECODE(FT_MSE_DR_NOTE_YN(A.PT_NO, '00'), 'Y', '★', '')        DR_NOTE_YN
     , DECODE(A.EXRM_TP_CD, :EXRM_CD, DECODE(MAX(A.INJC_YN), 'Y', '★', ''),'') INJC_YN
     , MAX(XSUP.FT_MSE_GET_IVYN(A.PT_NO, :ACPT_DTM, A.HSP_TP_CD))               IV_YN  --2017-01-02  김세용  통합 IV 대상 여부 추가
     , NVL2(XBIL.FT_ACP_ACPPRGCD_D_DAY_COMMON(:HIS_HSP_TP_CD, A.PT_NO, SYSDATE , 'EMR'),'중증','') SRIL_YN
     , XBIL.FT_ACP_ACPPRGCD_D_DAY_COMMON(:HIS_HSP_TP_CD, A.PT_NO, SYSDATE , 'EMR')                SRIL_CNTE
  FROM MSERMAAD A
     , MOOOREXM M
     , PCTPCPAM_DAMO B
     --, MSERMMRD C
     , MSERMMMC D
 WHERE A.ACPT_DTM  BETWEEN TO_DATE(:ACPT_DTM, 'YYYY-MM-DD')
                         AND TO_DATE(:ACPT_DTM, 'YYYY-MM-DD') + 0.99999
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
   --AND A.EXRM_TP_CD LIKE :EXRM_CD || '%'
   AND A.EXRM_TP_CD IN (SELECT EXRM_TP_CD 
           FROM MSERMMRD
          WHERE HSP_TP_CD = A.HSP_TP_CD
            AND ORD_CTG_CD = A.ORD_CTG_CD
            AND USE_YN = 'Y'
            AND CASE WHEN (SELECT 'Y'
           FROM MSERMCCC
             WHERE HSP_TP_CD ='01'
            AND ORD_CTG_CD = 'BR1'
            AND EXM_GRP_CD = 'ROOM'
            AND USE_YN = 'Y'
            AND SCRN_MRK_SEQ &lt;&gt; 1
            AND EXM_GRP_DTL_CD = :EXRM_CD) = 'Y' THEN IEXM_KND_CD --검사실 분류로 파라미터가 넘어왔을 경우 검사실분류 공통코드와 비교
                              ELSE EXRM_TP_CD --검사실 코드로 넘어왔을 경우에는 해당 검사실로 조회 
                END
               = :EXRM_CD)   --검사실 코드 그대로 분류가 달라질 경우 조회되지 않아서 해당 분류의 검사실코드로 접수된 리스트 전부 조회되도록 수정       
   AND (A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD1 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD2 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD3 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD4 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD5)
   AND A.PACT_TP_CD   LIKE :PACT_TP_CD  || '%'
   --AND A.EXRM_TP_CD  = C.EXRM_TP_CD
   --AND A.HSP_TP_CD   = C.HSP_TP_CD
   AND A.PT_NO     = B.PT_NO
   AND M.ORD_ID    = A.ORD_ID
   AND M.HSP_TP_CD = A.HSP_TP_CD
   AND M.ODDSC_TP_CD = 'C' 
   --AND (A.EXRM_TP_CD = 'RDG00' AND (M.ORD_SLIP_CTG_CD NOT IN ('RDG4','RG4') AND M.ORD_SLIP_CTG_CD NOT LIKE 'RZ%' AND M.ORD_CD != 'RG00') OR A.EXRM_TP_CD = A.EXRM_TP_CD )
   --AND M.ORD_SLIP_CTG_CD NOT LIKE 'RZ%'
   AND A.ORD_CD      = D.EXM_CD
   AND A.HSP_TP_CD   = D.HSP_TP_CD
--   AND D.ORD_SLIP_CTG_CD NOT LIKE 'RZ%'

GROUP BY A.EXRM_TP_CD, A.PT_NO
        , B.PT_NM
        , TO_CHAR(B.PT_BRDY_DT, 'YYYY-MM-DD')
        , B.SEX_TP_CD
        , TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI')
        --, TO_CHAR(A.INIT_ACPT_DTM,'MM-DD HH24:MI')
        , XBIL.FT_PCT_AGE('F_AGE', SYSDATE, B.PT_BRDY_DT)
        , TO_CHAR(A.ACPT_DTM, 'YYYY-MM-DD')
        , A.HSP_TP_CD
        --, A.ORD_ID
 ORDER BY A.EXRM_TP_CD, DECODE(:ORDER_GB, '1', TO_CHAR(MAX(A.ACPT_DTM), 'HH24:MI:SS')) DESC


&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 오더발행</QUERY_NAME>
    <QUERY_TEXT>PC_MST_MSTRHODD_ADD_NEW</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>프로시저 Default 사용법</QUERY_NAME>
    <QUERY_TEXT>PROCEDURE      PC_MSE_ACCEPT_PROC     (  IN_ORD_ID              IN        VARCHAR2          -- 처방ID
                                           , IN_W_TYPE              IN        VARCHAR2
                                           , IN_T_TYPE              IN        VARCHAR2
                                           , IN_R_TYPE              IN         VARCHAR2
                                           , IN_EXRM_TP_CD          IN        VARCHAR2
                                           , IN_ACPT_DTM            IN        VARCHAR2
                                           , IN_RSV_DTM             IN        VARCHAR2
                                           , IN_PT_NO               IN        VARCHAR2
                                           , IN_PACT_ID             IN        VARCHAR2
                                           , IN_PACT_TP_CD          IN        VARCHAR2
                                           , HIS_HSP_TP_CD          IN        VARCHAR2
                                           , HIS_STF_NO            IN        VARCHAR2
                                           , HIS_PRGM_NM            IN        VARCHAR2
                                           , HIS_IP_ADDR            IN        VARCHAR2
                                           , IO_ERRYN               IN OUT    VARCHAR2          -- ERROR여부
                                           , IO_ERRMSG              IN OUT    VARCHAR2 
                                           , IN_SAVE_TYPE           IN VARCHAR2 DEFAULT '1' -- 1 : 일반 접수(단일접수), 2 : 일괄접수
                                           , IN_EMERGENCY           IN VARCHAR2 DEFAULT 'N'




DEFAULT로 추가하게 되면 해당 프로시저를 호출시 해당 매개변수를 안넘겨도 에러가 나지 않는다.</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>DB접근제어 계정</QUERY_NAME>
    <QUERY_TEXT>EZ00152
qwer1234!

</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상과내 공통코드추가 (전병원)</QUERY_NAME>
    <QUERY_TEXT>SELECT *
         FROM MSERMCCC
         WHERE HSP_TP_CD = :HIS_HSP_TP_CD
           AND EXM_GRP_CD = :TITLE
;
exec :TITLE := 'OUTO_CPAD';
exec :TITLE_NAME := '외주업체 연락처정보';
exec :CD :='01';
exec :CD_NM := '대한의료영상진단협회';
exec :ORD_CTG_CD := 'BR1';
exec :TITLE_ADD_YN := 'Y'; --타이틀 추가여부
exec :HIS_HSP_TP_CD := '02';
BEGIN
    FOR REC IN (SELECT COMN_CD    HSP_TP_CD
                  FROM CCCCCSTE
                 WHERE COMN_GRP_CD = '101')
    LOOP
         IF :TITLE_ADD_YN = 'Y' THEN
          BEGIN
           INSERT INTO MSERMCCC
           SELECT REC.HSP_TP_CD HSP_TP_CD
             ,:ORD_CTG_CD
             ,'0'
             ,:TITLE
             ,:TITLE_NAME
             ,1
             ,''
             ,''
             ,''
             ,''
             ,''
             ,''
             ,'Y'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,''
             FROM DUAL;
          EXCEPTION
              WHEN OTHERS THEN
                  NULL;
          END;
         END IF;
         BEGIN
          INSERT INTO MSERMCCC
          (HSP_TP_CD,ORD_CTG_CD,EXM_GRP_CD,EXM_GRP_DTL_CD,EXM_GRP_DTL_CD_NM,SCRN_MRK_SEQ,USE_YN,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR)
          VALUES
          ( REC.HSP_TP_CD
             ,:ORD_CTG_CD
             ,:TITLE
             ,:CD
             ,:CD_NM
             ,1
             ,'Y'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0');
          EXCEPTION
              WHEN OTHERS THEN
                  NULL;
         END;
      END LOOP;
END;

</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상과내 공통코드 추가 (전병원) V2</QUERY_NAME>
    <QUERY_TEXT>exec :TITLE := 'TAT_EX_CD';
exec :TITLE_NAME := '검사실별 판독률 조회 제외 코드';
exec :CD :='RF02001';
exec :CD_NM := 'RF02001';
exec :ORD_CTG_CD := 'BR1';
exec :TITLE_ADD_YN := 'N'; --타이틀 추가여부
exec :HIS_HSP_TP_CD := '02';
BEGIN
    FOR REC IN (SELECT COMN_CD    HSP_TP_CD
                  FROM CCCCCSTE
                 WHERE COMN_GRP_CD = '101')
    LOOP
         IF :TITLE_ADD_YN = 'Y' THEN
          BEGIN
           INSERT INTO MSERMCCC
           SELECT REC.HSP_TP_CD HSP_TP_CD
             ,:ORD_CTG_CD
             ,'0'
             ,:TITLE
             ,:TITLE_NAME
             ,1
             ,''
             ,''
             ,''
             ,''
             ,''
             ,''
             ,'Y'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,''
             FROM DUAL;
          EXCEPTION
              WHEN OTHERS THEN
                  NULL;
          END;
         END IF;
         BEGIN
          INSERT INTO MSERMCCC
          (HSP_TP_CD,ORD_CTG_CD,EXM_GRP_CD,EXM_GRP_DTL_CD,EXM_GRP_DTL_CD_NM,SCRN_MRK_SEQ,USE_YN,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR)
          SELECT REC.HSP_TP_CD
             ,:ORD_CTG_CD
             ,:TITLE
             ,A.EXM_CD
             ,A.CD_NM
             ,1
             ,'Y'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             FROM MSERMMMC A
                , CCOOCCSC B
            WHERE A.HSP_TP_CD = B.HSP_TP_CD
              AND A.HSP_TP_CD = REC.HSP_TP_CD
              AND A.ORD_SLIP_CTG_CD = B.ORD_SLIP_CTG_CD
              AND A.ORD_SLIP_CTG_CD &lt;&gt; 'RF01'
              AND B.UPR_ORD_SLIP_CTG_CD = 'RF'
              AND NOT EXISTS (SELECT 1 FROM MSERMCCC
                                    WHERE HSP_TP_CD = REC.HSP_TP_CD
                                      AND EXM_GRP_CD = :TITLE
                                      AND EXM_GRP_DTL_CD = A.EXM_CD)
             ;
          EXCEPTION
              WHEN OTHERS THEN
                  NULL;
         END;
      END LOOP;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>발행처별 가야할곳</QUERY_NAME>
    <QUERY_TEXT>SELECT A.*,B.PT_GUID_PLC_NM,B.GUID_PSTN_NM
    FROM MSERMPLD A
        ,MSERMZMD B
    WHERE A.HSP_TP_CD='01'
     AND A.HSP_TP_CD=  B.HSP_TP_CD
     AND A.PT_GUID_PLC_CD = B.PT_GUID_PLC_CD
     AND A.EXM_CD = 'LTS001'
     AND A.PBSO_DEPT_CD= 'NM'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수동 ALERT 연동 (숫자,텍스트,균,다제내성균 통합)</QUERY_NAME>
    <QUERY_TEXT>DECLARE
TO_DT DATE := '2022-06-01';
FROM_DT DATE := '2022-06-13';
V_PT_NO VARCHAR2(4000) := '';
V_TRANS_YN VARCHAR2(1) := 'N';
BEGIN          
 --TEXT
    BEGIN
        FOR REC_TEXT IN
        (
        SELECT DISTINCT PT_NO
                      , HSP_TP_CD
                      , INFC_INF_CD
                      , INFC_NM
                      , ORD_ID
                      , LSH_IP_ADDR
                      , ACPT_DTM
                      , SMP_EXRS_CNTE
                      , EXM_CD
           FROM (
                     SELECT G.PT_NO
                       , C.SMP_EXRS_CNTE
                       , C.EXM_CD
                       , A.SCLS_COMN_CD_NM                               INFC_INF_CD
                       ,(SELECT ALERT_INF_MRK_ABBR_NM
                           FROM MOOPTICC -- 감염임신수유정보코드
                          WHERE 1=1
                            AND HSP_TP_CD= A.HSP_TP_CD
                            AND ALERT_INF_ICLS_YN = 'Y'
                            AND INFC_INF_CD = A.SCLS_COMN_CD_NM)         INFC_NM
                       , C.ORD_ID
                       , A.HSP_TP_CD
                       , C.LSH_IP_ADDR
                       , C.ACPT_DTM                                      ACPT_DTM
                    FROM MSELMSID A
                       , MSELMAID C
                       , PCTPCPAM_DAMO G
                       , MOOOREXM H
                   WHERE A.HSP_TP_CD = HIS_HSP_TP_CD
                     AND A.HSP_TP_CD = C.HSP_TP_CD
                     AND A.HSP_TP_CD = H.HSP_TP_CD
                     AND A.USE_YN = 'Y'
                     AND C.RSLT_BRFG_YN = 'Y'
                     AND C.SPCM_NO = H.SPCM_PTHL_NO
                     AND C.PT_NO = G.PT_NO
                     AND C.PT_NO = H.PT_NO
                     AND C.ORD_ID = H.ORD_ID
                     AND A.LCLS_COMN_CD = 'TEXT'        -- SCLS_COMN_CD = 균코드 , SCLS_COMN_CD_NM = ALERT코드 (A0028등), TH1_RMK_CNTE = 항생제분류 , LCLS_COMN_CD = ANTI
                     AND H.ODDSC_TP_CD = 'C'
                     AND C.LST_RSLT_VRFC_DTM BETWEEN  TO_DT  AND FROM_DT  + 0.99999
                     AND REPLACE(UPPER(C.SMP_EXRS_CNTE),' ','') LIKE CASE WHEN A.TH1_RMK_CNTE = 'POSITIVE' THEN '%' ||REPLACE(UPPER(A.TH1_RMK_CNTE),' ','') || '%'
                                                                          ELSE REPLACE(UPPER(A.TH1_RMK_CNTE),' ','') || '%'
                                                                      END
                     AND A.SCLS_COMN_CD = C.ORD_CD
                     AND A.TH2_RMK_CNTE IS NULL --검체코드
                     AND A.TH3_RMK_CNTE IS NULL
                     
                     UNION ALL

                     SELECT G.PT_NO
                       , C.SMP_EXRS_CNTE
                       , C.EXM_CD
                       , A.SCLS_COMN_CD_NM                               INFC_INF_CD
                       ,(SELECT ALERT_INF_MRK_ABBR_NM
                           FROM MOOPTICC -- 감염임신수유정보코드
                          WHERE 1=1
                            AND HSP_TP_CD= A.HSP_TP_CD
                            AND ALERT_INF_ICLS_YN = 'Y'
                            AND INFC_INF_CD = A.SCLS_COMN_CD_NM)         INFC_NM
                       , C.ORD_ID
                       , A.HSP_TP_CD
                       , C.LSH_IP_ADDR
                       , C.ACPT_DTM                                      ACPT_DTM
                    FROM MSELMSID A
                       , MSELMAID C
                       , PCTPCPAM_DAMO G
                       , MOOOREXM H
                   WHERE A.HSP_TP_CD = HIS_HSP_TP_CD
                     AND A.HSP_TP_CD = C.HSP_TP_CD
                     AND A.HSP_TP_CD = H.HSP_TP_CD
                     AND A.USE_YN = 'Y'
                     AND C.RSLT_BRFG_YN = 'Y'
                     AND C.SPCM_NO = H.SPCM_PTHL_NO
                     AND C.PT_NO = G.PT_NO
                     AND C.PT_NO = H.PT_NO
                     AND C.ORD_ID = H.ORD_ID
                     AND A.LCLS_COMN_CD = 'TEXT'        -- SCLS_COMN_CD = 균코드 , SCLS_COMN_CD_NM = ALERT코드 (A0028등), TH1_RMK_CNTE = 항생제분류 , LCLS_COMN_CD = ANTI
                     AND H.ODDSC_TP_CD = 'C'
                       AND C.LST_RSLT_VRFC_DTM BETWEEN  TO_DT  AND FROM_DT  + 0.99999
                     AND REPLACE(UPPER(C.SMP_EXRS_CNTE),' ','') LIKE CASE WHEN A.TH1_RMK_CNTE = 'POSITIVE' THEN '%' ||REPLACE(UPPER(A.TH1_RMK_CNTE),' ','') || '%'
                                                                          ELSE REPLACE(UPPER(A.TH1_RMK_CNTE),' ','') || '%'
                                                                      END
                     AND A.SCLS_COMN_CD = C.ORD_CD
                     AND A.TH2_RMK_CNTE = C.TH1_SPCM_CD
                     AND A.TH2_RMK_CNTE IS NOT NULL   --검체코드
                     AND A.TH3_RMK_CNTE IS NULL
                    UNION ALL      --판넬검사 안에서 특정 검사코드만 양성일때 연동하려면 TH3_RMK_CNTE에 해당 검사코드를 넣음.

                     SELECT G.PT_NO
                       , C.SMP_EXRS_CNTE
                       , C.EXM_CD
                       , A.SCLS_COMN_CD_NM                               INFC_INF_CD
                       ,(SELECT ALERT_INF_MRK_ABBR_NM
                           FROM MOOPTICC -- 감염임신수유정보코드
                          WHERE 1=1
                            AND HSP_TP_CD= A.HSP_TP_CD
                            AND ALERT_INF_ICLS_YN = 'Y'
                            AND INFC_INF_CD = A.SCLS_COMN_CD_NM)         INFC_NM
                       , C.ORD_ID
                       , A.HSP_TP_CD
                       , C.LSH_IP_ADDR
                       , C.ACPT_DTM                                      ACPT_DTM
                    FROM MSELMSID A
                       , MSELMAID C
                       , PCTPCPAM_DAMO G
                       , MOOOREXM H
                   WHERE A.HSP_TP_CD = HIS_HSP_TP_CD
                     AND A.HSP_TP_CD = C.HSP_TP_CD
                     AND A.HSP_TP_CD = H.HSP_TP_CD
                     AND A.USE_YN = 'Y'
                     AND C.RSLT_BRFG_YN = 'Y'
                     AND C.SPCM_NO = H.SPCM_PTHL_NO
                     AND C.PT_NO = G.PT_NO
                     AND C.PT_NO = H.PT_NO
                     AND C.ORD_ID = H.ORD_ID
                     AND A.LCLS_COMN_CD = 'TEXT'        -- SCLS_COMN_CD = 균코드 , SCLS_COMN_CD_NM = ALERT코드 (A0028등), TH1_RMK_CNTE = 항생제분류 , LCLS_COMN_CD = ANTI
                     AND H.ODDSC_TP_CD = 'C'
                       AND C.LST_RSLT_VRFC_DTM BETWEEN  TO_DT  AND FROM_DT  + 0.99999
                     AND REPLACE(UPPER(C.SMP_EXRS_CNTE),' ','') LIKE CASE WHEN A.TH1_RMK_CNTE = 'POSITIVE' THEN '%' ||REPLACE(UPPER(A.TH1_RMK_CNTE),' ','') || '%'
                                                                          ELSE REPLACE(UPPER(A.TH1_RMK_CNTE),' ','') || '%'
                                                                      END
                     AND A.SCLS_COMN_CD = C.ORD_CD
                     AND A.TH3_RMK_CNTE = C.EXM_CD
                     AND A.TH2_RMK_CNTE = C.TH1_SPCM_CD
                     AND A.TH2_RMK_CNTE IS NOT NULL   --검체코드
                     AND A.TH3_RMK_CNTE IS NOT NULL
                )
        )
        LOOP
             BEGIN
                XMED.PKG_MOO_ALERT.PC_MOO_SAVE_INFECTIONITEM ( REC_TEXT.PT_NO              -- 01. 환자번호
                                                             , NULL                   -- 02. 환자감염임신수유등록순번
                                                             , REC_TEXT.HSP_TP_CD          -- 03. 병원구분코드
                                                             , REC_TEXT.INFC_INF_CD        -- 04. 감염임신수유코드
                                                             , NULL                   -- 05. 삭제사유내용
                                                             , NULL                   -- 06. 비고내용
                                                             , 'I'                    -- 07. alert작업구분코드
                                                             , 'SSUP04'                -- 08. 작업자직원번호
                                                             , 'PC_MSE_ALERT_BATCH'   -- 09. 작업프로그램내용
                                                             , REC_TEXT.LSH_IP_ADDR        -- 10. 작업PC_IP
                                                             , REC_TEXT.ORD_ID             -- 11. 관련처방ID
                                                             , 'R001'                    -- 12. 자동등록구분코드
                                                             , REC_TEXT.ACPT_DTM                -- 13. 자동등록일자( = 양성검체접수일 )
                                                             ) ;
             END;
        END LOOP;
    END;
   --숫자
    BEGIN
        FOR REC1 IN(
            SELECT DISTINCT PT_NO
                          , HSP_TP_CD
                          , INFC_INF_CD
                          , INFC_NM
                          , ORD_ID
                          , LSH_IP_ADDR
                          , ACPT_DTM
                          , SMP_EXRS_CNTE
                          , EXM_CD
               FROM (
                        SELECT  G.PT_NO
                              , C.SMP_EXRS_CNTE
                              , C.EXM_CD
                        , A.SCLS_COMN_CD_NM    INFC_INF_CD
                        ,(SELECT ALERT_INF_MRK_ABBR_NM
                            FROM MOOPTICC -- 감염임신수유정보코드
                           WHERE 1=1
                             AND HSP_TP_CD= A.HSP_TP_CD
                             AND ALERT_INF_ICLS_YN = 'Y'
                             AND INFC_INF_CD = A.SCLS_COMN_CD_NM
                         ) INFC_NM
                            , C.ORD_ID
                            , A.HSP_TP_CD
                            , C.LSH_IP_ADDR
                            , C.ACPT_DTM                ACPT_DTM
                        FROM MSELMSID A
                        , MSELMAID C
                        , PCTPCPAM_DAMO G
                        , MOOOREXM H
                        WHERE A.HSP_TP_CD IN('01','02')
                        AND A.HSP_TP_CD = C.HSP_TP_CD
                        AND A.HSP_TP_CD = H.HSP_TP_CD
                        AND A.USE_YN = 'Y'
                        AND C.RSLT_BRFG_YN = 'Y'
                        AND C.SPCM_NO = H.SPCM_PTHL_NO
                        AND C.PT_NO = G.PT_NO
                        AND C.PT_NO = H.PT_NO
                        AND C.ORD_ID = H.ORD_ID
                        AND A.LCLS_COMN_CD = 'NUMBER'        -- SCLS_COMN_CD = 균코드 , SCLS_COMN_CD_NM = ALERT코드 (A0028등), TH1_RMK_CNTE = 항생제분류 , LCLS_COMN_CD = ANTI
                        AND H.ODDSC_TP_CD = 'C'
                        AND C.LST_RSLT_VRFC_DTM BETWEEN TO_DT  AND FROM_DT  + 0.99999
                        AND REGEXP_LIKE(C.SMP_EXRS_CNTE,'[0-9]')
                        AND A.SCLS_COMN_CD = C.EXM_CD
                        )
        )
        LOOP
            BEGIN
                XMED.PKG_MOO_ALERT.PC_MOO_SAVE_INFECTIONITEM ( REC1.PT_NO              -- 01. 환자번호
                                                            , NULL                   -- 02. 환자감염임신수유등록순번
                                                            , REC1.HSP_TP_CD          -- 03. 병원구분코드
                                                            , REC1.INFC_INF_CD        -- 04. 감염임신수유코드
                                                            , NULL                   -- 05. 삭제사유내용
                                                            , NULL                   -- 06. 비고내용
                                                            , 'I'                    -- 07. alert작업구분코드
                                                            , 'SSUP04'                -- 08. 작업자직원번호
                                                            , 'PC_MSE_ALERT_BATCH'   -- 09. 작업프로그램내용
                                                            , REC1.LSH_IP_ADDR        -- 10. 작업PC_IP
                                                            , REC1.ORD_ID             -- 11. 관련처방ID
                                                            , 'R001'                    -- 12. 자동등록구분코드
                                                            , REC1.ACPT_DTM                -- 13. 자동등록일자( = 양성검체접수일 )
                                                            ) ;
            END;
        END LOOP;
    END;
    --균
    BEGIN
        FOR REC1 IN(
           SELECT DISTINCT PT_NO
                                    , HSP_TP_CD
                                    , INFC_INF_CD
                        ,INFC_NM
                                    , ORD_ID
                                    , LSH_IP_ADDR
                                    , ACPT_DTM
                                    ,SMP_EXRS_CNTE
                                    ,EXM_CD
                                    ,BRFG_DTM
                                     FROM (
                                        SELECT G.PT_NO
                                        ,B.BRFG_DTM
                                        ,C.SMP_EXRS_CNTE
                                        ,C.EXM_CD
                                    , A.SCLS_COMN_CD_NM    INFC_INF_CD
                                    ,(SELECT ALERT_INF_MRK_ABBR_NM
                          FROM MOOPTICC -- 감염임신수유정보코드
                         WHERE 1=1
                          AND HSP_TP_CD= A.HSP_TP_CD
                          AND ALERT_INF_ICLS_YN = 'Y'
                          AND INFC_INF_CD = A.SCLS_COMN_CD_NM) INFC_NM
                                    , C.ORD_ID
                                    , A.HSP_TP_CD
                                    , B.LSH_IP_ADDR
                                    , B.ACPT_DTM                ACPT_DTM
                                       FROM MSELMSID A
                                       , MSELMCED B
                                       , MSELMAID C
                                       , MSELMCRD D
                                       , PCTPCPAM_DAMO G
                                       , MOOOREXM H
                                      WHERE A.HSP_TP_CD IN('01', '02')
                                        AND A.HSP_TP_CD = B.HSP_TP_CD
                                        AND A.HSP_TP_CD = C.HSP_TP_CD
                                        AND A.HSP_TP_CD = D.HSP_TP_CD
                                        AND A.HSP_TP_CD = H.HSP_TP_CD
                                        AND A.USE_YN = 'Y'
                                           AND C.RSLT_BRFG_YN = 'Y'
                                        AND B.SPCM_NO = C.SPCM_NO
                                        AND B.SPCM_NO = D.SPCM_NO
                                        AND C.SPCM_NO = H.SPCM_PTHL_NO
                                        AND B.PT_NO = C.PT_NO
                                        AND C.PT_NO = G.PT_NO
                                        AND C.PT_NO = H.PT_NO
                                        AND B.ORD_ID = H.ORD_ID
                                        AND C.ORD_ID = H.ORD_ID
                                           AND A.LCLS_COMN_CD = 'VAC'        -- SCLS_COMN_CD = 균코드 , SCLS_COMN_CD_NM = ALERT코드 (A0028등), TH1_RMK_CNTE = 항생제분류 , LCLS_COMN_CD = ANTI
                                           AND A.TH1_RMK_CNTE = D.MVM_CD
                                           AND H.ODDSC_TP_CD = 'C'
                                        AND B.BRFG_DTM BETWEEN TO_DT  AND FROM_DT  + 0.99999
                                        AND A.SCLS_COMN_CD = C.EXM_CD
                                         )
        )
        LOOP
         BEGIN
                        XMED.PKG_MOO_ALERT.PC_MOO_SAVE_INFECTIONITEM ( REC1.PT_NO              -- 01. 환자번호
                                                                     , NULL                   -- 02. 환자감염임신수유등록순번
                                                                     , REC1.HSP_TP_CD          -- 03. 병원구분코드
                                                                     , REC1.INFC_INF_CD        -- 04. 감염임신수유코드
                                                                     , NULL                   -- 05. 삭제사유내용
                                                                     , NULL                   -- 06. 비고내용
                                                                     , 'I'                    -- 07. alert작업구분코드
                                                                     , 'SSUP04'                -- 08. 작업자직원번호
                                                                     , 'PC_MSE_ALERT_BATCH'   -- 09. 작업프로그램내용
                                                                     , REC1.LSH_IP_ADDR        -- 10. 작업PC_IP
                                                                     , REC1.ORD_ID             -- 11. 관련처방ID
                                                                     , 'R001'                    -- 12. 자동등록구분코드
                                                                     , REC1.ACPT_DTM                -- 13. 자동등록일자( = 양성검체접수일 )
                                                                     ) ;
         END;
        END LOOP;
    END;
    --다제내성균
    BEGIN
        BEGIN
            FOR HSP IN (SELECT COMN_CD    HSP_TP_CD
                          FROM CCCCCSTE
                         WHERE COMN_GRP_CD = '101'
                           AND COMN_CD IN ('01','02'))
            LOOP
                 /*최초 초기화*/
                 BEGIN
                  UPDATE MSELMSID
                    SET TH3_RMK_CNTE = 'N'
                    WHERE HSP_TP_CD = HSP.HSP_TP_CD
                      AND LCLS_COMN_CD = 'ANTI_LN'
                      AND USE_YN = 'Y'
                      AND CRE_SEQ &lt;&gt; 0
                      ;
                 END;
                 BEGIN
                  FOR REC IN
                  (
                  SELECT
                       C.HSP_TP_CD,A.SCLS_COMN_CD_NM,G.PT_NO, A.TH1_RMK_CNTE,A.TH2_RMK_CNTE,E.ATBA_SSBT_RSLT_CNTE,C.ACPT_DTM,H.ORD_ID
                     , H.ORD_CD
                     , C.LSH_IP_ADDR
                  FROM MSELMAID C
                     , MSELMSID A
                     , MSELMCRD D
                     , MSELMMRD E
                     , MSELMSID F
                     , PCTPCPAM_DAMO G
                     , MOOOREXM H
                   WHERE A.HSP_TP_CD = HSP.HSP_TP_CD
                     AND A.HSP_TP_CD = C.HSP_TP_CD
                     AND A.HSP_TP_CD = D.HSP_TP_CD
                     AND A.HSP_TP_CD = E.HSP_TP_CD
                     AND A.HSP_TP_CD = F.HSP_TP_CD
                     AND A.HSP_TP_CD = H.HSP_TP_CD
                     AND A.USE_YN = F.USE_YN
                     AND A.USE_YN = 'Y'
                     AND C.RSLT_BRFG_YN = 'Y'
                     AND D.LN_SEQ = E.LN_SEQ
                     AND C.SPCM_NO = D.SPCM_NO
                     AND C.SPCM_NO = E.SPCM_NO
                     AND C.PT_NO = G.PT_NO
                     AND C.SPCM_NO = H.SPCM_PTHL_NO
                     AND C.PT_NO = H.PT_NO
                     AND C.ORD_ID = H.ORD_ID
                     AND D.EXM_CD = C.EXM_CD
                     AND A.LCLS_COMN_CD = 'ANTI'
                     AND F.LCLS_COMN_CD = 'ANTI_GUBN'
                     AND A.LCLS_COMN_CD = F.TH1_RMK_CNTE
                     AND A.TH1_RMK_CNTE = F.SCLS_COMN_CD_NM
                     AND A.SCLS_COMN_CD = D.MVM_CD
                     AND F.SCLS_COMN_CD = E.ATBA_CD
                     AND H.ODDSC_TP_CD = 'C'
                     AND C.LST_RSLT_VRFC_DTM BETWEEN TRUNC(TO_DT)
                                                 AND TRUNC(FROM_DT) + 0.99999
                     AND EXISTS(SELECT 1
                                  FROM MOOPTICC X
                                 WHERE X.HSP_TP_CD = A.HSP_TP_CD
                                   AND X.INFC_INF_CD = A.SCLS_COMN_CD_NM)
                                   AND E.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
                                                                   FROM MSELMSID
                                                                  WHERE HSP_TP_CD = A.HSP_TP_CD
                                                                    AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
                                                                    AND USE_YN = 'Y'
                                                                    )
                   GROUP BY C.HSP_TP_CD,A.SCLS_COMN_CD_NM,G.PT_NO, A.TH1_RMK_CNTE,A.TH2_RMK_CNTE,E.ATBA_SSBT_RSLT_CNTE,C.ACPT_DTM,H.ORD_ID,H.ORD_CD,C.LSH_IP_ADDR
                   ORDER BY PT_NO,SCLS_COMN_CD_NM
                   )
                   LOOP
                       IF V_PT_NO = '' OR V_PT_NO IS NULL THEN --환자번호 초기화
                        V_PT_NO := REC.PT_NO    ;
                       END IF;
                       IF V_PT_NO = REC.PT_NO THEN --환자번호가 같으면 ALERT와 항생제분류코드와 내성도가 같은지 확인 후 Y처리
                           UPDATE MSELMSID
                              SET TH3_RMK_CNTE = 'Y'
                            WHERE HSP_TP_CD = HSP.HSP_TP_CD
                              AND LCLS_COMN_CD = 'ANTI_LN'
                              AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM       --ALERT
                              AND TH2_RMK_CNTE = REC.ATBA_SSBT_RSLT_CNTE   --내성도
                              AND TH1_RMK_CNTE = REC.TH2_RMK_CNTE      --항생제분류코드
                              AND USE_YN = 'Y'
                              ;
                       ELSIF V_PT_NO &lt;&gt; REC.PT_NO THEN
                          BEGIN                        --환자번호가 달라지면 연동기준 초기화
                           UPDATE MSELMSID
                             SET TH3_RMK_CNTE = 'N'
                             WHERE HSP_TP_CD = HSP.HSP_TP_CD
                               AND LCLS_COMN_CD = 'ANTI_LN'
                               AND USE_YN = 'Y'
                               AND CRE_SEQ &lt;&gt; 0
                               ;
                          END;

                          V_PT_NO := REC.PT_NO ; --기준환자번호 변경

                          UPDATE MSELMSID
                                  SET TH3_RMK_CNTE = 'Y'
                                WHERE HSP_TP_CD = HSP.HSP_TP_CD
                                  AND LCLS_COMN_CD = 'ANTI_LN'
                                  AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM
                                  AND TH2_RMK_CNTE = REC.ATBA_SSBT_RSLT_CNTE
                                  AND TH1_RMK_CNTE = REC.TH2_RMK_CNTE
                                  AND USE_YN = 'Y'
                                  ;
                      END IF;
                      BEGIN
                           SELECT MIN(TH3_RMK_CNTE)                 --해당 ALERT 코드의 연동기준이 전부 Y인지 확인 . Y이면 연동
                             INTO V_TRANS_YN
                              FROM MSELMSID
                             WHERE HSP_TP_CD = HSP.HSP_TP_CD
                               AND LCLS_COMN_CD = 'ANTI_LN'
                               AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM
                               AND UPPER(TH4_RMK_CNTE) = 'AND'
                               AND USE_YN = 'Y'
                                  ;
                      END;
                      IF V_TRANS_YN IS NULL THEN
                          BEGIN
                              SELECT MAX(TH3_RMK_CNTE)                 --해당 ALERT 코드의 연동기준이 전부 Y인지 확인 . Y이면 연동
                                INTO V_TRANS_YN
                                FROM MSELMSID
                               WHERE HSP_TP_CD = HSP.HSP_TP_CD
                                 AND LCLS_COMN_CD = 'ANTI_LN'
                                 AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM
                                 AND UPPER(TH4_RMK_CNTE) = 'OR'
                                 AND USE_YN = 'Y'
                                 ;
                          END;
                      END IF;
                      BEGIN
                          SELECT 'N'
                            INTO V_TRANS_YN
                            FROM(
                                  SELECT *
                                    FROM MOOPTIPD
                                   WHERE HSP_TP_CD = REC.HSP_TP_CD
                                     AND PT_NO = REC.PT_NO
                                     AND NVL(DEL_YN,'N') = 'N'
                                     AND INFC_INF_CD = (SELECT TH5_RMK_CNTE
                                                          FROM MSELMSID
                                                         WHERE HSP_TP_CD = REC.HSP_TP_CD
                                                           AND LCLS_COMN_CD = 'ANTI_LN'
                                                           AND SCLS_COMN_CD = REC.SCLS_COMN_CD_NM
                                                           AND USE_YN = 'Y'
                                                           AND ROWNUM = 1)
                                    ORDER BY PT_INFC_REG_SEQ DESC
                                )
                           WHERE ROWNUM = 1;
                      EXCEPTION
                          WHEN NO_DATA_FOUND THEN
                              NULL;
                      END;
                       IF NVL(V_TRANS_YN,'N') = 'Y' THEN
                           DBMS_OUTPUT.PUT_LINE('ALERT : ' || REC.SCLS_COMN_CD_NM || ' PT_NO : ' || REC.PT_NO || ' ATBA_NM : ' || REC.TH1_RMK_CNTE || ' RSLT : ' || REC.ATBA_SSBT_RSLT_CNTE|| ' ACPT_DTM : ' || REC.ACPT_DTM || ' ORD_CD : ' || REC.ORD_CD || ' ORD_ID : ' || REC.ORD_ID  );
                           BEGIN
                                    XMED.PKG_MOO_ALERT.PC_MOO_SAVE_INFECTIONITEM ( REC.PT_NO              -- 01. 환자번호
                                                                                 , NULL                   -- 02. 환자감염임신수유등록순번
                                                                                 , REC.HSP_TP_CD          -- 03. 병원구분코드
                                                                                 , REC.SCLS_COMN_CD_NM        -- 04. 감염임신수유코드
                                                                                 , NULL                   -- 05. 삭제사유내용
                                                                                 , NULL                   -- 06. 비고내용
                                                                                 , 'I'                    -- 07. alert작업구분코드
                                                                                 , 'SSUP04'                -- 08. 작업자직원번호
                                                                                 , 'PC_MSE_ALERT_BATCH'   -- 09. 작업프로그램내용
                                                                                 , REC.LSH_IP_ADDR        -- 10. 작업PC_IP
                                                                                 , REC.ORD_ID             -- 11. 관련처방ID
                                                                                 , 'R001'                    -- 12. 자동등록구분코드
                                                                                 , REC.ACPT_DTM                -- 13. 자동등록일자( = 양성검체접수일 )
                                                                                 ) ;
                           END;
                       END IF;
                   END LOOP;
                  END;
            END LOOP;
       END;
    END;
END;
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>외상센터 등록환자 조회</QUERY_NAME>
    <QUERY_TEXT>SELECT PKG_MOO_TRAUMACENTER.FT_TRAUMACENTER_PT_YN(A.PT_NO, A.RPY_PACT_ID,A.HSP_TP_CD),A.*
FROM MOOOREXM A
WHERE HSP_TP_CD='01'
AND PT_NO = '10471752'
AND ORD_CTG_CD ='BR1'
AND ORD_CD LIKE 'RA%'
AND ROWNUM&lt;100
;




   /**********************************************************************
    작 성 자 : 한주안
    작 성 일 : 2021-10-26, 한주안, 해당환자 외상환자인지 YN리턴
    내    용 : 외상센터환자여부
    수정이력 :        
    **********************************************************************/    
    FUNCTION FT_TRAUMACENTER_PT_YN ( IN_PT_NO               IN VARCHAR2,    -- 환자번호     
                                     IN_PACT_ID             IN VARCHAR2,
                                     IN_HIS_HSP_TP_CD   IN VARCHAR2
                                    )   

              RETURN VARCHAR2                   
    IS  
        V_YN     VARCHAR2(2);
        
    BEGIN 

            SELECT NVL(MAX('Y'), 'N')
              INTO V_YN
              FROM MOODIPCD X -- 환자수진일별진단정보
                 , MOODIPAM Y -- 환자진단기본
             WHERE 1=1
               AND X.PT_NO                     = IN_PT_NO
               AND X.MED_PACT_ID               = IN_PACT_ID
               AND NVL(X.TDY_DGNS_DEL_YN, 'N') = 'N'
               AND X.DGNS_PSD_YN               = 'N'
               AND X.DGNS_ID                   = Y.DGNS_ID
               AND X.HSP_TP_CD                 = IN_HIS_HSP_TP_CD
               AND X.HSP_TP_CD                 = Y.HSP_TP_CD
               AND (Y.ICD10_CD LIKE 'S%' OR Y.ICD10_CD LIKE 'T%') 
               /*2021-12-30, 한주안, 제한의 경우에는 따로 분리된 코드가 아니라 모든 S 또는 T 코드 -&gt; 노상미 선생님 요청*/
--               AND TRIM(Y.ICD10_CD) NOT IN( SELECT CDSS_COMN_CD_NM
--             FROM BCCCSCBE A
--                                             WHERE CDSS_COMN_GRP_CD   = 'DR000155'
--              AND SUBSTR(CDSS_COMN_CD ,1,1) ='3'
--              AND HSP_TP_CD = IN_HIS_HSP_TP_CD
--                                    )
               AND ROWNUM = 1         
    ;         
            
    BEGIN
     IF V_YN IS NULL THEN
       V_YN := 'N';        
     END IF;
    END; 
    
    RETURN V_YN;
    
   END FT_TRAUMACENTER_PT_YN; </QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>치환</QUERY_NAME>
    <QUERY_TEXT>PC_MOO_PACTIDBIND_ORDER</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>콤보박스 하드코딩</QUERY_NAME>
    <QUERY_TEXT>&lt;HComboBox x:Name="cboCtg" Width="100" SelectedIndex="0" SelectedValuePath="Tag" SelectedValue="{Binding SEL_GUBN, UpdateSourceTrigger=PropertyChanged}"&gt;
                                        &lt;HComboBox.Items&gt;
                                            &lt;HComboBoxItem Content="CHEST" Tag="1"/&gt;
                                            &lt;HComboBoxItem Content="ABDOMEN" Tag="2"/&gt;
                                            &lt;HComboBoxItem Content="NEURO,HAN" Tag="3"/&gt;
                                        &lt;/HComboBox.Items&gt;
                                        &lt;i:Interaction.Triggers&gt;
                                            &lt;i:EventTrigger EventName="DropDownClosed"&gt;
                                                &lt;i:InvokeCommandAction Command="{Binding SelectExamCodeCommand}"/&gt;
                                            &lt;/i:EventTrigger&gt;
                                        &lt;/i:Interaction.Triggers&gt;
                                    &lt;/HComboBox&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ALERT 검증</QUERY_NAME>
    <QUERY_TEXT>exec :sys := '2022-05-27';
exec :sys2 := '2022-05-27';
SELECT TRUNC(B.EXRM_HH_DTM),TRUNC(B.ACPT_DTM),B.oRD_CD,A.*
    from MOOPTIPD A
       , MOOOREXM B
where 1=1
--and infc_inf_Cd = 'A0028'
--and A.lsh_prgm_nm = 'PC_MSE_ALERT_BATCH'
and A.lsh_dtm between to_date(:sys,'yyyy-mm-dd') and to_date(:sys2,'yyyy-mm-dd') + .99999
AND A.HSP_TP_CD =B.HSP_TP_CD
AND A.RLV_ORD_ID = B.ORD_ID
and a.hsp_TP_Cd in ('01','02')
--and a.pt_No ='05307541'
--AND B.ORD_CD = C.EXM_CD

--and pt_no ='72214807'
;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>동적쿼리2</QUERY_NAME>
    <QUERY_TEXT>DECLARE

IN_PT_NO VARCHAR2(8):='1';
IN_BOBD_PT_NO VARCHAR2(8):='2';
IN_BIND_STF_NO VARCHAR2(8):='1111111';
IN_HSP_TP_CD VARCHAR2(8):='01';

BEGIN

FOR R IN ( 
 SELECT 
 'UPDATE ' || OWNER ||'.'|| TABLE_NAME || ' SET  PT_NO=''' ||  IN_PT_NO || ''' ' 
 || CASE WHEN BOBD_Y='Y'  THEN ',BOBD_PT_NO=''' ||  IN_BOBD_PT_NO || '''' END
 || CASE WHEN BIND_STF_NO_Y='Y'  THEN ',BIND_STF_NO=''' ||  IN_BIND_STF_NO || '''' END
 || CASE WHEN LSH_PRGM_NM_Y='Y'  THEN ',LSH_PRGM_NM=''합본번호 변경'' ' END
 || 'WHERE ' || COLUMN_NAME || '=''' ||IN_BOBD_PT_NO || '''' 
 || CASE WHEN HSP_TP_CD_Y='Y'  THEN ' AND HSP_TP_CD=''' ||  IN_HSP_TP_CD || '''' END  SCRIPT
 FROM (
select  
OWNER,TABLE_NAME,COLUMN_NAME
,(SELECT 'Y' FROM all_tab_columns AA WHERE COLUMN_NAME='BOBD_PT_NO' AND A.OWNER=AA.OWNER AND A.TABLE_NAME=AA.TABLE_NAME) BOBD_Y
,(SELECT 'Y' FROM all_tab_columns AA WHERE COLUMN_NAME='HSP_TP_CD' AND A.OWNER=AA.OWNER AND A.TABLE_NAME=AA.TABLE_NAME) HSP_TP_CD_Y
,(SELECT 'Y' FROM all_tab_columns AA WHERE COLUMN_NAME='BIND_STF_NO' AND A.OWNER=AA.OWNER AND A.TABLE_NAME=AA.TABLE_NAME) BIND_STF_NO_Y
,(SELECT 'Y' FROM all_tab_columns AA WHERE COLUMN_NAME='LSH_PRGM_NM' AND A.OWNER=AA.OWNER AND A.TABLE_NAME=AA.TABLE_NAME) LSH_PRGM_NM_Y
  from all_tab_columns A where owner LIKE 'H___' AND COLUMN_NAME ='PT_NO'  --AND (LENGTH(TABLE_NAME)=8 OR LENGTH(TABLE_NAME)=13)
  )  --WHERE  HSP_TP_CD_Y IS NULL
)
LOOP
  DBMS_OUTPUT.PUT_LINE( R.SCRIPT);
EXECUTE IMMEDIATE R.SCRIPT;
END LOOP;
END;
</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>원격</QUERY_NAME>
    <QUERY_TEXT>CC00109 Wjstksrhk3#</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처방성물류집계(일반관리)</QUERY_NAME>
    <QUERY_TEXT>            INSERT INTO /*+ PKG_RCA_OM.PC_RCA_OM_RCADOOLD_RADIATION */
                        RCADOOLD( ORD_ID            /* 오더ID */
                                , PT_NO            /* 환자번호 */
                                , ORD_DT         /* 오더일자 */
                                , ORD_SEQ          /* 오더순번 */
                                , USE_DEPT_CD          /* 사용부서코드 */
                                , ASET_TP_CD        /* 자산구분 */
                                , ARCL_NO           /* 물품코드 */
                                , STD_QTY         /* 표준수량(타) */
                                , USE_QTY          /* 사용량 */
                                , USE_NOTM         /* 사용횟수 */
                                , OWH_MGMT_NO          /* 불출번호 */
                                , RTN_NOTM         /* 반납횟수 */
                                , RTN_QTY         /* 반납수량 */
                                , OCS_WK_GRP_CD         /* 작업그룹 */
                                , STK_MGMT_PSTN_CD          /* 재고관리위치(1:물류팀,2:사용부서) */
                                , ARCL_BUY_CLS_CD          /* 구입유형(1:직불,2:위탁재고,3:선납) */
                                , SPLY_CLS_CD        /* 공급유형(1:처방성,2:비처방성) */
                                , BZAQ_CD        /* 거래처코드 */
                                , CSCR_TP_CD        /* CASECART 청구 */
                                , WK_END_EN         /* 처리구분 */
                                , HSP_TP_CD
                                , FSR_STF_NO
                                , FSR_DTM
                                , FSR_PRGM_NM
                                , FSR_IP_ADDR
                                , LSH_STF_NO
                                , LSH_DTM
                                , LSH_PRGM_NM
                                , LSH_IP_ADDR )
                           SELECT MAX(ORD_ID)
                                , PT_NO
                                , ORD_DT
                                , ORD_SEQ
                                , DEPT_CD
                                , '1'
                                , ARCL_NO
                                , 0
                                , SUM(USE_QTY)
                                , 1
                                , NULL
                                , 0
                                , 0
                                , '2'
                                , STK_MGMT_PSTN_CD
                                , ARCL_BUY_CLS_CD
                                , ORD_SRNM_TP_CD
                                , BZAQ_CD
                                , 'N'
                                , 'N'
                                , IN_HSP_TP_CD
                                , IN_LSH_STF_NO
                                , SYSDATE
                                , IN_LSH_PRGM_NM
                                , IN_LSH_IP_ADDR
                                , IN_LSH_STF_NO
                                , SYSDATE
                                , IN_LSH_PRGM_NM
                                , IN_LSH_IP_ADDR
                             FROM XSUP.MSERUSEV
                            WHERE ORD_DT BETWEEN TO_DATE(SUBSTR(IN_ORDDTE,1,7),'YYYY-MM')
                                             AND LAST_DAY(TO_DATE(IN_ORDDTE,'YYYY-MM-DD')) + 0.99999      
                              --AND ORD_DT &lt; TRUNC(SYSDATE)
                              AND ORD_DT &lt;= TO_DATE((IN_ORDDTE), 'YYYY-MM-DD') + 0.99999
                              AND HSP_TP_CD = IN_HSP_TP_CD 
                              AND NVL(LGST_SND_YN, 'N') = 'N'
                            GROUP BY PT_NO
                                   , ORD_DT
                                   , ORD_SEQ
                                   , DEPT_CD
                                   , ARCL_NO
                                   , STK_MGMT_PSTN_CD
                                   , ARCL_BUY_CLS_CD
                                   , ORD_SRNM_TP_CD
                                   , BZAQ_CD ;
            EXCEPTION
                WHEN OTHERS THEN
                    IO_ERRYN  := 'Y';
                    IO_ERRMSG := '방사선 재료 사용량 및 그룹수가를 싱글수가로 변환 발췌 처리시 에러' || CHR(13) ||
                                 'PACKAGE : PKG_RCA_OM' || CHR(13) ||
                                 'PROCEDURE : PC_RCA_OM_RCADOOLD_RADIATION(0)' || CHR(13) ||
                                 'ACTION : RCADOOLD INSERT' || CHR(13) ||
                                 'SQLERRORMSG : ' || SQLERRM ;
                    RETURN ;
        END ;
 


--업데이트
-- IN_ORDDTE -&gt; SYSDATE 이고 해당 월 1일부터 월말까지 재료의 RTM_FMT_DTM이 오늘 이전인 경우에만 집계함. 
BEGIN
            UPDATE /*+ PKG_RCA_OM.PC_RCA_OM_RCADOOLD_RADIATION */
                   HSUP.MSERMAMD
               SET PREQ_YN  = 'Y' 
--                 , LSH_DTM      = SYSDATE         --최종변경일시           DH.KIM2 추가 2019.03.22  -- 03.26 다시 없애달라고 해서 변경함.
--                 , LSH_STF_NO   = IN_LSH_STF_NO   --최종변경직원번호
--                 , LSH_PRGM_NM  = IN_LSH_PRGM_NM  --최종변경프로그램명
--                 , LSH_IP_ADDR  = IN_LSH_IP_ADDR  --최종변경IP주소
             WHERE ( ORD_ID, HSP_TP_CD, ARCL_NO, OAN_TP_CD ) IN (SELECT A.ORD_ID 
                                                                         , A.HSP_TP_CD
                                                                         , A.ARCL_NO              
                                                                         , 'N'                                                      
                                                                      FROM XSUP.MSERUSEV A
                                                                     WHERE A.ORD_DT BETWEEN TO_DATE(SUBSTR(IN_ORDDTE,1,7),'YYYY-MM')
                                                                                        AND LAST_DAY(TO_DATE(IN_ORDDTE,'YYYY-MM-DD')) + 0.99999
                                           AND ORD_DT &lt;= TO_DATE((IN_ORDDTE), 'YYYY-MM-DD') + 0.99999
                                                                       AND A.HSP_TP_CD = IN_HSP_TP_CD
                                                                       AND NVL(LGST_SND_YN, 'N') = 'N'
                                                                       AND A.GRP_MIF_CD IS NULL  )
              AND HSP_TP_CD = IN_HSP_TP_CD;  --2017.04.11 이대병원 개발 병원구분 추가 양찬우

              --2015.10.16 그룹수가관련 집계추가 290, 590 계정만 GRP_MIF_CD값이 포함되어 있음.

            EXCEPTION
                WHEN OTHERS THEN
                    IO_ERRYN  := 'Y';
                    IO_ERRMSG := '진료재료소모정보에 발췌 처리 FLAG 수정시 에러' || CHR(13) ||
                                 'PACKAGE : PKG_RCA_OM' || CHR(13) ||
                                 'PROCEDURE : PC_RCA_OM_RCADOOLD_RADIATION(1)' || CHR(13) ||
                                 'ACTION : MSERMAMD UPDATE' || CHR(13) ||
                                 'SQLERRORMSG : ' || SQLERRM ;
                    RETURN ;
        END ;</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>PACS 판독결과 인터페이스 테스트</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '02';
insert into
    mserminf_oru
select TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') || LPAD(SEQ_PACS_QUE_NO.NEXTVAL, 4, '0')
     , 'Y'
     , SYSDATE
     , 'C'
     , ord_ID
     , pt_no
     , 'CONCTEST'
     , 'FINDTEST'
     , '' ADDENDUM
     , 'RECOMTEST'
     , TO_CHAR(SYSDATE,'yyyymmdd')
     ,TO_CHAR(SYSDATE,'hh24miss')
     ,'SSSUP11'
     ,'SSSUP17'
     ,'CCC0EMR'
     ,'' CONFDR4,'' READDR1,'' READDR2,'' READDR3,'' READDR4,'' TYPISTID,'' CHIEFDR,'' EXTEND1,'' EXTEND2,'' EXTEND3,'' EXTEND4,'' EXTEND5,'' SUITABLE,'' ERRCOUNT,'' REFIMGCENTER,'' MODALITY,'' SECTION,'' EXAMDATE,'' EXAMTIME,HSP_TP_CD,'' OPDEPTID,'' OPDEPT
    from msermaad
    where 1=1
    and ord_Id = 'MIG_OP_02_70415581_20211224_HD2_RD_RC101EP_0'
    and hsp_tp_Cd = '02'
    and rownuM = 1</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 진행중 처방 리스트</QUERY_NAME>
    <QUERY_TEXT>--&lt;sql id="HIS.MS.TR.RE.OR.SelectAvailableOrderList"&gt;&lt;!--
--    Clss : text
--    Desc : 유효한 처방리스트 조회
--    Author : 송창수
--    Create date : 2019-06-21
--    Update date :
----&gt;


--EXEC :HIS_HSP_TP_CD := '01';
--EXEC :PT_NO := '00705047';
EXEC :PACT_TP_CD := '';
EXEC :PT_NO := '24266753';
EXEC :HIS_HSP_TP_CD := '01';

SELECT /*HIS.MS.TR.RE.OR.SelectAvailableOrderList*/
       A.PT_NO                               PT_NO
     , A.RHTR_ORD_SEQ                        RHTR_ORD_SEQ

     , B.RHTR_CTR_TP_CD                                                   RHTR_CTR_TP_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'MSRH0002', B.RHTR_CTR_TP_CD)      RHTR_CTR_TP_NM
     --, (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='MSRH0002' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_CTR_TP_CD )  RHTR_CTR_TP_NM

     , B.RHTR_LCLS_CD                                                     RHTR_LCLS_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'RHB', B.RHTR_LCLS_CD)             RHTR_LCLS_NM
  --   , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHB' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_LCLS_CD )  RHTR_LCLS_NM

     , B.RHTR_MCLS_CD                                                     RHTR_MCLS_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'RHG', B.RHTR_MCLS_CD)             RHTR_MCLS_NM
  --   , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHG' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_MCLS_CD )  RHTR_MCLS_NM

     , B.RHTR_SCLS_CD                                                     RHTR_SCLS_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'RHN', B.RHTR_SCLS_CD)             RHTR_SCLS_NM
  --   , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHN' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_SCLS_CD )  RHTR_SCLS_NM


     , A.RHTR_ORD_CD                         RHTR_ORD_CD
     , B.RHTR_ORD_NM                         RHTR_ORD_NM
     , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')       ORD_DT
     , RTRIM(XMLAGG ( XMLELEMENT(A, TO_CHAR(A.RSV_DT, 'MM-DD') || ',') ORDER BY A.RSV_DT).EXTRACT('//text()'), ',')  RSV_DT_LIST
     , XCOM.FT_CNL_SELSTFINFO('4', A.FSR_STF_NO, A.HSP_TP_CD, '') ORD_PBR_STF_NM
     , XSUP.FT_MST_ROOMNAME(B.HSP_TP_CD, 'R', DECODE(:PACT_TP_CD, 'I', B.ADS_TYRM_CD, B.APCB_TYRM_CD)) TYRM_NM
     , CASE WHEN A.MED_MIFI_TP_CD = 'N' THEN '급여'
            WHEN A.MED_MIFI_TP_CD = 'B' THEN '본인80'
            WHEN A.MED_MIFI_TP_CD = 'D' THEN '본인100'
            WHEN A.MED_MIFI_TP_CD = 'S' THEN '비급여'
            ELSE NULL END                            MED_MIFI_TP_CD
  FROM (
        SELECT PT_NO
             , RHTR_ORD_CD
             , RHTR_ORD_SEQ
             , ORD_DT
             , RSV_DT
             , ODDSC_TP_CD
             , MIN(RSV_DT) S_RSV_DT
             , MAX(RSV_DT) E_RSV_DT
             , MED_MIFI_TP_CD
             , HSP_TP_CD
             , FSR_STF_NO
          FROM MSTRHODD
         WHERE PT_NO = :PT_NO
           AND HSP_TP_CD = :HIS_HSP_TP_CD
           AND ODDSC_TP_CD = 'C'
         GROUP BY PT_NO, RHTR_ORD_CD, RHTR_ORD_SEQ, ORD_DT, RSV_DT, ODDSC_TP_CD, HSP_TP_CD, MED_MIFI_TP_CD, FSR_STF_NO
         ORDER BY RSV_DT
     ) A
     , MSTRHCDC B
 WHERE A.PT_NO = :PT_NO
   AND A.ODDSC_TP_CD = 'C'
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
   -- 날짜가 오늘 기준으로 만기되지 않은 처방
   AND A.E_RSV_DT &gt;= TRUNC(SYSDATE)
   AND A.RHTR_ORD_CD = B.RHTR_ORD_CD
   AND A.HSP_TP_CD = B.HSP_TP_CD

GROUP BY A.PT_NO, A.RHTR_ORD_SEQ, A.RHTR_ORD_CD, B.RHTR_ORD_NM, TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')
       , A.HSP_TP_CD, A.FSR_STF_NO
       , B.HSP_TP_CD, B.RHTR_CTR_TP_CD, B.RHTR_LCLS_CD, B.RHTR_MCLS_CD, B.RHTR_SCLS_CD, B.ADS_TYRM_CD, B.APCB_TYRM_CD, A.MED_MIFI_TP_CD
ORDER BY TO_CHAR(A.ORD_DT, 'YYYY-MM-DD'), A.RHTR_ORD_SEQ

--&lt;/sql&gt;
</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 오더리스트 BIZ</QUERY_NAME>
    <QUERY_TEXT> /// &lt;summary&gt;
        /// name               : 오더 목록, 당일오더 목록, 수가발행 권고사항 조회
        /// i/f inheritance yn : Y
        /// logic              : 재활치료 발행 가능 한 오더 목록과 당일오더 목록, 수가발행 권고사항을 조회함
        /// desc               : 재활치료 발행 가능 한 오더 목록과 당일오더 목록, 수가발행 권고사항을 조회함
        /// author             : 정신비
        /// create date        : 2012-08-28
        /// update date        : 2015-04-06, 성시중, 일부 보완 및 환자의 더이상 발행되지 않는 오더가 있으면 이것도 리스트에 추가함.
        ///                    : 2015-09-24, 성시중, 파트별 분류 로직을 UI로 이동하고 간소화 함.
        /// &lt;/summary&gt;
        [HSFTransaction(HSFTransactionOption.Supported)]
        public ComOrderList_INOUT SelectOrderList(SelectTRCore_IN inObj)
        {
            using (InsertRHTPrescribeDL com = new InsertRHTPrescribeDL())
            {
                ComOrderList_INOUT outDTO = new ComOrderList_INOUT(); //retrun DTO
                
                // 전체 재활오더 목록 조회 및 대구분으로 리스트 구분
                outDTO.AllOrdList = com.OrderListWithPtNo(inObj);     // (2015-04-06, 성시중)기존에 대구분별로 각각 조회하던 것을 환자정보와 통합하여 한번에 조회함

                // 잔여오더 목록 조회
                outDTO.RemainOrdList = com.SelectRemainOrdList(inObj);

                // 현재유효한 오더 목록 조회
                outDTO.AvailableOrderList = com.SelectAvailableOrderList(inObj);

                // 현재만료된 오더 목록 조회
                outDTO.ExpiredOrderList = com.SelectExpiredOrderList(inObj);

                // 전오더 목록 조회
                outDTO.PreviousOrdList = com.SelectPreviousOrderList(inObj);

                // 수가발행 권고사항 목록 조회
                //outDTO.MifList = com.MifPblComment(inObj);    // 현재 쓰이고 있지 않아서, 일단 제외함..

                // 당일오더 중, 재활치료처방순번 Max값(취소처방 포함) 조회 - 0일 경우엔, 당일 오더 없는 것임(취소된 오더도 없음..)
                outDTO.TodayOrderMaxSeq = com.SelectTodayOrderMaxSeq(inObj).RHTR_ORD_SEQ.Value;     // RHTR_ORD_SEQ는 NVL 처리를 해서 항상 값이 있음.
                
                // 전체 정보 Return
                return outDTO;
            }
        }</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 종료된 처방(오더)리스트</QUERY_NAME>
    <QUERY_TEXT>--&lt;sql id="HIS.MS.TR.RE.OR.SelectExpiredOrderList"&gt;&lt;!--
--    Clss : text
--    Desc : 만료된 처방리스트 조회
--    Author : 송창수
--    Create date : 2019-06-21
--    Update date :
----&gt;
--EXEC :HIS_HSP_TP_CD := '01';
--EXEC :PT_NO := '00705047';
EXEC :PACT_TP_CD := '';
EXEC :PT_NO := '21969308';
EXEC :HIS_HSP_TP_CD := '01';


SELECT /*HIS.MS.TR.RE.OR.SelectExpiredOrderList*/
       A.PT_NO                               PT_NO
     , A.RHTR_ORD_SEQ                        RHTR_ORD_SEQ

     , B.RHTR_CTR_TP_CD                                                   RHTR_CTR_TP_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'MSRH0002', B.RHTR_CTR_TP_CD)      RHTR_CTR_TP_NM
   --  , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='MSRH0002' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_CTR_TP_CD )  RHTR_CTR_TP_NM

     , B.RHTR_LCLS_CD                                                     RHTR_LCLS_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'RHB', B.RHTR_LCLS_CD)             RHTR_LCLS_NM
   --  , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHB' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_LCLS_CD )  RHTR_LCLS_NM

     , B.RHTR_MCLS_CD                                                     RHTR_MCLS_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'RHG', B.RHTR_MCLS_CD)             RHTR_MCLS_NM
 --    , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHG' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_MCLS_CD )  RHTR_MCLS_NM

     , B.RHTR_SCLS_CD                                                     RHTR_SCLS_CD
     , XCOM.FT_CCC_CODENAME(B.HSP_TP_CD, 'RHN', B.RHTR_SCLS_CD)             RHTR_SCLS_NM
 --    , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHN' AND HSP_TP_CD = B.HSP_TP_CD AND COMN_CD = B.RHTR_SCLS_CD )  RHTR_SCLS_NM

     , A.RHTR_ORD_CD                         RHTR_ORD_CD
     , B.RHTR_ORD_NM                         RHTR_ORD_NM
     , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')       ORD_DT
     , RTRIM(XMLAGG ( XMLELEMENT(A, TO_CHAR(A.RSV_DT, 'MM-DD') || ',') ORDER BY A.RSV_DT).EXTRACT('//text()'), ',')  RSV_DT_LIST
     , XCOM.FT_CNL_SELSTFINFO('4', A.FSR_STF_NO, A.HSP_TP_CD, '') ORD_PBR_STF_NM
     , XSUP.FT_MST_ROOMNAME(B.HSP_TP_CD, 'R', DECODE(:PACT_TP_CD, 'I', B.ADS_TYRM_CD, B.APCB_TYRM_CD)) TYRM_NM
     , CASE WHEN A.MED_MIFI_TP_CD = 'N' THEN '급여'
            WHEN A.MED_MIFI_TP_CD = 'B' THEN '본인80'
            WHEN A.MED_MIFI_TP_CD = 'D' THEN '본인100'
            WHEN A.MED_MIFI_TP_CD = 'S' THEN '비급여'
            ELSE NULL END                             MED_MIFI_TP_CD
  FROM (
        SELECT AA.PT_NO
             , AA.RHTR_ORD_CD
             , AA.RHTR_ORD_SEQ
             , AA.ORD_DT
             , AA.RSV_DT
             , AA.ODDSC_TP_CD
             , MIN(AA.RSV_DT) S_RSV_DT
             , MAX(AA.RSV_DT) E_RSV_DT
             , AA.MED_MIFI_TP_CD
             , AA.HSP_TP_CD
             , AA.FSR_STF_NO
          FROM MSTRHODD AA
         WHERE AA.PT_NO = :PT_NO
           AND (AA.ODDSC_TP_CD IN ('D', 'N') OR AA.RSV_DT &lt; TRUNC(SYSDATE))
           AND AA.HSP_TP_CD = :HIS_HSP_TP_CD
           --  유효한 처방이 하나라도 존재하면 제외
           AND NOT EXISTS ( SELECT 1
                              FROM MSTRHODD
                             WHERE PT_NO = AA.PT_NO
                               AND ORD_DT = AA.ORD_DT
                               AND RHTR_ORD_SEQ = AA.RHTR_ORD_SEQ
                               AND HSP_TP_CD = AA.HSP_TP_CD
                               AND RSV_DT &gt;= TRUNC(SYSDATE)
                               AND ODDSC_TP_CD IN ('C')
                      )
         GROUP BY AA.PT_NO, AA.RHTR_ORD_CD, AA.RHTR_ORD_SEQ, AA.ORD_DT, AA.RSV_DT, AA.ODDSC_TP_CD, AA.MED_MIFI_TP_CD, AA.HSP_TP_CD, AA.FSR_STF_NO
         ORDER BY AA.RSV_DT
     ) A
     , MSTRHCDC B
 WHERE A.PT_NO = :PT_NO
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
   -- 날짜가 오늘 기준으로 만기되었거나 DC된 처방
   AND (A.ODDSC_TP_CD IN ('D', 'N') OR A.E_RSV_DT &lt; TRUNC(SYSDATE))
   AND A.RHTR_ORD_CD = B.RHTR_ORD_CD
   AND A.HSP_TP_CD = B.HSP_TP_CD

GROUP BY A.PT_NO, A.RHTR_ORD_SEQ, A.RHTR_ORD_CD, B.RHTR_ORD_NM, TO_CHAR(A.ORD_DT, 'YYYY-MM-DD'), A.HSP_TP_CD, A.FSR_STF_NO
       , B.HSP_TP_CD, B.RHTR_CTR_TP_CD, B.RHTR_LCLS_CD, B.RHTR_MCLS_CD, B.RHTR_SCLS_CD, B.ADS_TYRM_CD, B.APCB_TYRM_CD, A.MED_MIFI_TP_CD
ORDER BY TO_CHAR(A.ORD_DT, 'YYYY-MM-DD') DESC, B.RHTR_ORD_NM, A.RHTR_ORD_SEQ


--&lt;/sql&gt;
</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오라클 테이블 인덱스 추가</QUERY_NAME>
    <QUERY_TEXT>--CREATE INDEX 인덱스명 ON 테이블명(컬럼1,컬럼2....)
CREATE INDEX TEMP_CR_RSULT_SI01
    ON XSUP.TEMP_CR_RSULT(PT_NO, HSP_TP_CD) </QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>스테이징에만 있는 쿼리 (운영기 존재X)</QUERY_NAME>
    <QUERY_TEXT>exec PC_MSE_BATCH_COMPAREEQS;
COMMIT;

SELECT *
FROM
(
SELECT A.*
 FROM fxquerystore A
 WHERE 1=1
  AND NOT EXISTS (SELECT 1
                     from fxquerystore_ohwb
                     where queryid = a.queryid)
)X
,
(
select Z.*
FROM(
 select ROW_NUMBER() OVER(PARTITION BY A.QUERYID ORDER BY WKDTM DESC) SEQ,A.*
        from fxquerystore_log a
    where 1=1
    AND A.QUERYID LIKE 'HIS.%'
    and not exists(
                SELECT *
                   FROM (
                  select ROW_NUMBER() OVER(PARTITION BY QUERYID ORDER BY WKDTM DESC) SEQ,QUERYID,DML_TYPE
                    from fxquerystore_log@DL_STG2DEV
                   )
                   WHERE QUERYID = A.QUERYID
                     AND SEQ = 1
                     AND UPPER(DML_TYPE) = 'DELETE')
)Z
where SEQ =1
)Y
WHERE X.QUERYID = Y.QUERYID
 AND UPPER(OS_USER) = UPPER('ohwonbin')
;</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>그룹별 순번 가져오기(그룹별 가장 최근값)</QUERY_NAME>
    <QUERY_TEXT>PROCEDURE      PC_MSE_BATCH_EXMRESULT
/*
JOB 내용
CREATOR : 오원빈 2022-04-22
내용: 최근 6개월간의 가장 최근 CR값을 가져옴
*/
IS
BEGIN
    BEGIN
        /* */
        /**************************************************************************************/
        /* 최근 6개월중 가장 최근 CR 결과값을 가져옴,                                             */
        /**************************************************************************************/

        -- 초기화
        DELETE FROM XSUP.TEMP_CR_RSULT;

        -- 입력
        INSERT INTO XSUP.TEMP_CR_RSULT
        SELECT HSP_TP_CD,PT_NO, TO_CHAR(EXRS_CNTE) EXRS_CNTE, ACPT_DTM
          FROM (SELECT /*+ XSUP.FT_MSE_LM_RECENT_RESULT */
                       HSP_TP_CD
                     , PT_NO
                     , EXRS_CNTE
                     , TO_CHAR(ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')                  ACPT_DTM
                     , ROW_NUMBER() OVER(PARTITION BY PT_NO ORDER BY ACPT_DTM DESC)     SEQ
                  FROM HSUP.MSELMAID A
                 WHERE     1 = 1 --PT_NO = A.PT_NO
                       --AND A.HSP_TP_CD = A.HSP_TP_CD
                       AND A.ACPT_DTM BETWEEN TRUNC(SYSDATE) - 180 AND TRUNC(SYSDATE) + .99999
                       AND A.EXM_CD IN (SELECT TH1_RMK_CNTE
                                          FROM MSELMSID
                                         WHERE     HSP_TP_CD = A.HSP_TP_CD
                                               AND LCLS_COMN_CD = 'EXRM_RESULT_1'
                                               AND SCLS_COMN_CD_NM = 'CR')
                       AND A.SPEX_PRGR_STS_CD = '3'
                       AND TRIM(EXRS_CNTE) IS NOT NULL)
         WHERE SEQ = 1;

    END;
    
END;

--ROW_NUMBER() OVER(PARTITION BY A.QUERYID ORDER BY WKDTM DESC)
--PARTITION부분에 
SELECT *
FROM(
select ROW_NUMBER() OVER(PARTITION BY A.QUERYID ORDER BY WKDTM DESC) SEQ,A.*
        from fxquerystore_log a
)
where SEQ = 1</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>환자별 검사시행취소 스크립트</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_ORD_ID := '167280800';
EXEC :IN_HIS_HSP_TP_CD := '01';
EXEC :IO_ERRYN := '';
EXEC :IO_ERRMSG := '';
BEGIN
    FOR REC IN
    (
    SELECT /*+ XSUP.PC_MSE_MSERMAAD_WARD_INSERT */
                 A.ORD_CTG_CD    G_OLD_ORD_CTG_CD
               , A.EXRM_TP_CD   G_OLD_EXRM_TP_CD
               , A.ORD_CD        G_OLD_ORD_CD
               , A.EXM_PRGR_STS_CD  G_OLD_EXM_PRGR_STS_CD
               , A.ORD_SEQ                  G_OLD_ORD_SEQ
               , A.ORD_DT    G_OLD_ORD_DT
               , A.PT_NO         G_OLD_PT_NO
               , A.MED_DEPT_CD      G_OLD_MED_DEPT_CD
               , A.ACPT_DTM    G_OLD_ACPT_DTM
               , A.PHTG_DTM         G_OLD_PHTG_DTM
               , A.PACS_NSND_YN        G_OLD_PACS_NSND_YN
               , A.CHDR_STF_NO           G_OLD_CHDR_SID
               , A.PACT_TP_CD           G_OLD_PACT_TP_CD
               , A.EQUP_MGMT_NO       G_OLD_EQUP_MGMT_NO
               , A.WD_DEPT_CD        G_OLD_WD_DEPT_CD
               , A.ACCS_ID    G_OLD_ACCS_ID
               , A.TRTM_RMK      G_OLD_TRTM_RMK
               , A.SV_CTG_CD        G_OLD_SV_CTG_CD
               , A.IMPL_STF_NO      G_OLD_IMPL_SID
               , A.ANDR_STF_NO     G_OLD_ANDR_SID
               , A.IMPL_DR_STF_NO   G_OLD_IMPL_DR_SID
               , A.PHTG_TCHN_STF_NO   G_OLD_PHTG_TCHN_SID
               , A.ACPT_STF_NO         G_OLD_ACPT_SID
               , DECODE(A.PACT_TP_CD, 'O', 'Y', 'E', 'Y', DECODE(B.RPY_STS_CD, 'Y', DECODE(A.PHTG_DTM, NULL, 'Y', DECODE(TRUNC(A.PHTG_DTM),TRUNC(SYSDATE),'Y','N')), 'Y'))  G_OLD_CNCL_YN
            FROM MSERMAAD A, MOOOREXM B
           WHERE A.ORD_ID    =  :IN_ORD_ID
             AND A.HSP_TP_CD =  :IN_HIS_HSP_TP_CD
             AND A.ORD_ID    =  B.ORD_ID
             AND A.HSP_TP_CD =  B.HSP_TP_CD
    )
    LOOP
      BEGIN
          XSUP.PC_MSE_MSERMAAD_DELETE_TRG     (  :IN_ORD_ID                        -- 처방ID
                                               , REC.G_OLD_ORD_CTG_CD                 -- DELETE 전 FEEGRP
                                               , REC.G_OLD_EXRM_TP_CD                 -- DELETE 전 검사실코드
                                               , REC.G_OLD_ORD_CD                     -- DELETE 전 처방코드
                                               , REC.G_OLD_EXM_PRGR_STS_CD            -- DELETE 전  검사상태코드
                                               , REC.G_OLD_PACS_NSND_YN
                                               , REC.G_OLD_PT_NO
                                               , REC.G_OLD_ORD_DT
                                               , REC.G_OLD_ORD_SEQ
                                               , REC.G_OLD_CHDR_SID
                                               , REC.G_OLD_ACPT_DTM
                                               , REC.G_OLD_PHTG_DTM
                                               , REC.G_OLD_PACT_TP_CD
                                               , REC.G_OLD_EQUP_MGMT_NO
                                               , REC.G_OLD_MED_DEPT_CD
                                               , REC.G_OLD_WD_DEPT_CD
                                               , REC.G_OLD_ACCS_ID
                                               , REC.G_OLD_TRTM_RMK
                                               , REC.G_OLD_SV_CTG_CD
                                               , REC.G_OLD_ANDR_SID
                                               , REC.G_OLD_IMPL_DR_SID
                                               , REC.G_OLD_PHTG_TCHN_SID
                                               , REC.G_OLD_ACPT_SID
                                               , :IN_HIS_HSP_TP_CD
                                               , 'SSSUP11'
                                               , '시행취소 안되서 강제로 상태변경'
                                               , 'Golden'
                                               , :IO_ERRYN                         -- ERROR여부
                                               , :IO_ERRMSG              ) ;       -- ERROR MESSAGE
      END;
    END LOOP;
    BEGIN
         UPDATE /*+ XSUP.PC_MSE_MSERMAAD_WARD_INSERT */
                MOOOREXM
            SET
                --EXM_PRGR_STS_CD = 'F'
                EXM_PRGR_STS_CD = 'X'      -- 취소시, 처방초기상태로 돌려줌  2013.07.24  이지케어텍 이재필
              --, ACPT_DTM     = SYSDATE
              , ACPT_DTM     = NULL        -- 취소시, 처방초기상태로 돌려줌  2013.07.24  이지케어텍 이재필
              , EXRM_HH_DTM  = NULL
              , RTM_FMCN_DTM          = SYSDATE --실시간수행취소일시
              , RTM_FMCN_STF_NO       = 'SSSUP11'
              , LSH_STF_NO            = 'SSSUP11'                                        --최종변경직원번호
              , LSH_DTM               = SYSDATE                                              --최종변경일시
              , LSH_PRGM_NM           = '시행취소 안되서 강제로 상태 변경'                                       --최종변경프로그램명
              , LSH_IP_ADDR           = 'Golden'                                       --최종변경IP주소
          WHERE ORD_ID     = :IN_ORD_ID
            AND HSP_TP_CD  = :IN_HIS_HSP_TP_CD;
    END;
     BEGIN
          DELETE /*+ XSUP.PC_MSE_MSERMAAD_WARD_INSERT */
            FROM MSERMAAD
           WHERE ORD_ID     = :IN_ORD_ID
             AND HSP_TP_CD  = :IN_HIS_HSP_TP_CD;
     END;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>DB 로직 사용여부 컨트롤(멀티병원공통코드 추가)</QUERY_NAME>
    <QUERY_TEXT>--IF FT_MSE_USECNTR(IN_HSP_TP_CD,'USECNTR','AUTOSIDE_01','FT_MSE_GET_AUTOSIDE_INFO') = 'Y' THEN  
exec :COMN_GRP_CD := 'USECNTR';
exec :COMN_CD :='AUTOSIDE_01';
exec :COMN_CD_NM := 'FT_MSE_GET_AUTOSIDE_INFO';
exec :USE_YN := 'N';
SELECT FT_MSE_USECNTR('01',:COMN_GRP_CD,:COMN_CD,:COMN_CD_NM)
FROM DUAL
;
SELECT *
         FROM CCCMCSTE
         WHERE 1=1
           AND COMN_GRP_CD = :COMN_GRP_CD
;
BEGIN
    FOR REC IN (SELECT HSP_TP_CD
                  FROM AIMIPHID_DAMO)
    LOOP
          BEGIN
           INSERT INTO CCCMCSTE
           (HSP_TP_CD,COMN_GRP_CD,COMN_CD,COMN_CD_NM,USE_YN,FSR_DTM,FSR_SID,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_SID,LSH_PRGM_NM,LSH_IP_ADDR)
            VALUES
            (REC.HSP_TP_CD,:COMN_GRP_CD,:COMN_CD,:COMN_CD_NM,:USE_YN,SYSDATE,'SSSUP11','Golden.exe','Golden.exe',SYSDATE,'SSSUP11','Golden.exe','Golden.exe');
          EXCEPTION
              WHEN OTHERS THEN
                  RAISE_APPLICATION_ERROR(-20001,sqlerrm);
          END;
      END LOOP;
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>테이블 조회권한 추가</QUERY_NAME>
    <QUERY_TEXT>--권한부여 
GRANT SELECT ON HSUP.MSTRHODH TO XSUP
;        
--OWNER안붙여도 조회 되게끔 수정 
CREATE PUBLIC SYNONYM MSTRHODH FOR HSUP.MSTRHODH
</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>외주업체 연락처 업데이트</QUERY_NAME>
    <QUERY_TEXT>update msermddd x
    set OTSR_BZET_NM = '대한의료영상진단협회'
      , OTSR_BZET_TEL_NO = '02-2267-4912'
--select *
--    from msermddd x
    where hsp_TP_CD ='02'
    and exists(select b.*,a.*
                 from msermaad a
                    , msermccc b
                    , msermccc c
                 where a.hsp_TP_Cd = '02'
                   and a.hsp_TP_CD = b.hsp_TP_cd
                   and a.hsP_TP_CD = c.hsp_TP_Cd
                   and c.exm_GRP_CD = 'HEXM'
                   and UPPER(c.TH1_ASST_GRP_NM) = UPPER(b.exm_grp_Dtl_Cd)
                   and UPPER(c.TH1_ASST_GRP_NM) = 'CHEST'
                   and c.exm_grp_Dtl_Cd = a.ord_cd
                   and b.exm_grp_CD = 'OUTO_CPAD'
                   and ETNL_IPTN_YN = 'Y'
                   and a.iptn_no = x.iptn_NO
                   )
;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>입원등록프로시저</QUERY_NAME>
    <QUERY_TEXT>select *
    from acppraam
    where hsp_TP_Cd='03'
    and pt_NO = '19036736'
;
--대상자 조회
select PT_NO,a.*
     from  pctpcpam_damo a
    where 1=1
      and pt_nm like '%'||'검사교육'||'%'
      and not exists(select * from acppraam where pt_no = a.pt_no)
;
 EXEC :IN_HSP_TP_CD               :='03';   -- 02 병원구분
 EXEC :IN_PME_CLS_CD              :='BB';   -- 03 급종
 EXEC :IN_PSE_CLS_CD              :='DDD';   -- 04 급종보조
 EXEC :IN_MED_DEPT_CD             :='RH';   -- 05 진료과
 EXEC :IN_WD_DEPT_CD              :='1051';   -- 06 병동
 EXEC :IN_PRM_NO                  :='5161';   -- 07 병실
 EXEC :IN_BED_NO                  :='03';   -- 08 병상
 EXEC :IN_ADIS_MEDR_SID           :='1009158';   -- 09 입원지시의사
 EXEC :IN_CORG_CD                 :='';   -- 10 계약처
 EXEC :IN_CHDR_SID                :='';   -- 11 선택진료의사
 EXEC :IN_NCDR_SID                :='1007591';   -- 12 비선택교수
 EXEC :IN_ADS_ITHD_ICD10_CD       :='';   -- 13 입원상병
 EXEC :IN_ML_ORD_CD               :='';   -- 14 식이코드
 EXEC :IN_DLML_TP_CD              :='';   -- 15 끼니구분
 EXEC :IN_NCHC_RSN_CD             :='';   -- 16 비지정사유
 EXEC :IN_ANTC_SIHS_DYS           :='10';   -- 17 예상재원일수
 EXEC :IN_PCPN_CNTE               :='';   -- 18 비고
 EXEC :IN_ARVL_PATH_TP_CD         :='3';   -- 19 도착경로
 EXEC :IN_CLNL_RSCH_NO            :='';   -- 20 임상연구번호
 EXEC :IN_PRM_GRD_CD              :='B6';   -- 21 병싱등급
 EXEC :IN_PRM_TP_CD               :='00';   -- 22 병싱구분
 EXEC :IN_TADS_YN                 :='N';   -- 23 가입원구분
 EXEC :IN_ADS_INF_CST_OPN_YN      :='N';   -- 24 입원정보비공개여부
 EXEC :IN_QF_CFMT_TP_CD           :='6';   -- 25 자격확인
 EXEC :IN_SRIL_ADIS_YN            :='';   -- 26 중증으로입원지시여부(입원예정)
 EXEC :IN_ADS_PSB_TM_RMK          :='';   -- 29  입실비고
 EXEC :IN_LSH_DTM                 :=SYSDATE;   -- 30 최종변경일시
 EXEC :IN_LSH_STF_NO              :='SSSUP11';   -- 31 최종변경직원식별ID
 EXEC :IN_LSH_PRGM_NM             :='Golden';   -- 32 최종변경프로그램명
 EXEC :IN_LSH_IP_ADDR             :='0.0.0.0';   -- 33 최종변경IP주소
 EXEC :IN_ADS_FEE_P50_NN_ADN_YN   :='';   -- 34 입원료50%미가산여부
 EXEC :IN_RSV_SEQ                 :='';   -- 35 예약 순번
 EXEC :IN_ADS_EXPT_DT             :='';   -- 36 입원예정일자
 EXEC :IN_DRG_ADIS_YN             :='';   -- 37 DRG 여부
 EXEC :IN_ADS_RSV_TP_CD           :='';   -- 38 당일수술후입원_예약구분추가            --2014.04.04
 EXEC :IN_INS_APY_YN              :='';   -- 39 보험적용여부추가                       --2014.04.17
 EXEC :IN_PSYC_ADS_CSFM_YN        :='';   -- 40 정신건강의학과 동의서 지참/미지참여부  --2014.06.10
 EXEC :IN_PSYC_ADS_RMK_CNTE       :='';   -- 41 정신건강의학과 비고                    --2014.06.10
 EXEC :IN_PBDN_HGLM_AMT           :='';   -- 42 본인부담상한금액  --2018.01.10
 EXEC :IN_TRAI_PRM_PBDN_TP_CD     :='';    -- 43 자보병실본인부담구분코드
 EXEC :IN_TRAI_PRM_PBDN_RSN_CNTE  :='';  -- 44 자보병실본인부담사유내용
 EXEC :IO_ERRYN          :='';
 EXEC :IO_ERRMSG                  :='';

 BEGIN
    FOR REC IN
    (
    select PT_NO
     from  pctpcpam_damo a
    where 1=1
      and pt_nm like '%'||'검사교육'||'%'
      and not exists(select * from acppraam where pt_no = a.pt_no)
    )
    LOOP
   BEGIN
           PC_ACP_ACPPRAAM_INSERT ( REC.PT_NO                      -- 01 환자번호
                                      , :IN_HSP_TP_CD                  -- 02 병원구분
                                      , :IN_PME_CLS_CD                 -- 03 급종
                                      , :IN_PSE_CLS_CD                 -- 04 급종보조
                                      , :IN_MED_DEPT_CD                -- 05 진료과
                                      , :IN_WD_DEPT_CD                 -- 06 병동
                                      , :IN_PRM_NO                     -- 07 병실
                                      , :IN_BED_NO                     -- 08 병상
                                      , :IN_ADIS_MEDR_SID              -- 09 입원지시의사
                                      , :IN_CORG_CD                    -- 10 계약처
                                      , :IN_CHDR_SID                   -- 11 선택진료의사
                                      , :IN_NCDR_SID                   -- 12 비선택교수
                                      , :IN_ADS_ITHD_ICD10_CD          -- 13 입원상병
                                      , :IN_ML_ORD_CD                  -- 14 식이코드
                                      , :IN_DLML_TP_CD                 -- 15 끼니구분
                                      , :IN_NCHC_RSN_CD                -- 16 비지정사유
                                      , :IN_ANTC_SIHS_DYS              -- 17 예상재원일수
                                      , :IN_PCPN_CNTE                  -- 18 비고
                                      , :IN_ARVL_PATH_TP_CD            -- 19 도착경로
                                      , :IN_CLNL_RSCH_NO               -- 20 임상연구번호
                                      , :IN_PRM_GRD_CD                 -- 21 병싱등급
                                      , :IN_PRM_TP_CD                  -- 22 병싱구분
                                      , :IN_TADS_YN                    -- 23 가입원구분
                                      , :IN_ADS_INF_CST_OPN_YN         -- 24 입원정보비공개여부
                                      , :IN_QF_CFMT_TP_CD              -- 25 자격확인
                                      , :IN_SRIL_ADIS_YN               -- 26 중증으로입원지시여부(입원예정)
                                      , :IN_ADS_PSB_TM_RMK             -- 29  입실비고
                                      , :IN_LSH_DTM                    -- 30 최종변경일시
                                      , :IN_LSH_STF_NO                 -- 31 최종변경직원식별ID
                                      , :IN_LSH_PRGM_NM                -- 32 최종변경프로그램명
                                      , :IN_LSH_IP_ADDR                -- 33 최종변경IP주소
                                      , :IN_ADS_FEE_P50_NN_ADN_YN      -- 34 입원료50%미가산여부
                                      , :IN_RSV_SEQ                    -- 35 예약 순번
                                      , :IN_ADS_EXPT_DT                -- 36 입원예정일자
                                      , :IN_DRG_ADIS_YN                -- 37 DRG 여부
                                      , :IN_ADS_RSV_TP_CD              -- 38 당일수술후입원_예약구분추가            --2014.04.04
                                      , :IN_INS_APY_YN                 -- 39 보험적용여부추가                       --2014.04.17
                                      , :IN_PSYC_ADS_CSFM_YN           -- 40 정신건강의학과 동의서 지참/미지참여부  --2014.06.10
                                      , :IN_PSYC_ADS_RMK_CNTE          -- 41 정신건강의학과 비고                    --2014.06.10
                                      , :IN_PBDN_HGLM_AMT              -- 42 본인부담상한금액  --2018.01.10
                                      , :IN_TRAI_PRM_PBDN_TP_CD         -- 43 자보병실본인부담구분코드
                                      , :IN_TRAI_PRM_PBDN_RSN_CNTE    -- 44 자보병실본인부담사유내용
                                      , :IO_ERRYN
                                      , :IO_ERRMSG           );
      END;
    END LOOP;
--
--    COMMIT;
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>툴팁 추가 </QUERY_NAME>
    <QUERY_TEXT>&lt;HDataGridTextColumn Header="오더명"  Width="100*" MinWidth="220" Binding="{Binding RHTR_ORD_NM}"  IsReadOnly="True" HorizontalAlignment="Left" VerticalAlignment="Center" &gt;
                                            &lt;HDataGridTextColumn.CellStyle&gt;
                                                &lt;Style TargetType="{x:Type HDataGridCell}"&gt;
                                                    &lt;Style.Triggers&gt;
                                                        &lt;DataTrigger Binding="{Binding RSV_FLAG}" Value="Y"&gt;
                                                            &lt;Setter Property="Foreground" Value="DarkSlateGray"/&gt;
                                                            &lt;Setter Property="ToolTip" Value="{Binding TOOLTIP}" /&gt;
                                                        &lt;/DataTrigger&gt;
                                                        &lt;DataTrigger Binding="{Binding RSV_FLAG}" Value="N"&gt;
                                                            &lt;Setter Property="Foreground" Value="White"/&gt;
                                                            &lt;Setter Property="ToolTip" Value="{Binding TOOLTIP}" /&gt;
                                                        &lt;/DataTrigger&gt;
                                                        &lt;DataTrigger Binding="{Binding RSV_FLAG}" Value="I"&gt;
                                                            &lt;Setter Property="Foreground" Value="SandyBrown"/&gt;
                                                            &lt;Setter Property="ToolTip" Value="{Binding TOOLTIP}" /&gt;
                                                        &lt;/DataTrigger&gt;
                                                    &lt;/Style.Triggers&gt;
                                                &lt;/Style&gt;
                                            &lt;/HDataGridTextColumn.CellStyle&gt;
                                        &lt;/HDataGridTextColumn&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 퇴원시 처방 삭제</QUERY_NAME>
    <QUERY_TEXT>PC_MST_RE_RSV_DC</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 예약취소 </QUERY_NAME>
    <QUERY_TEXT>PROCEDURE      PC_MST_MSTRHODD_DC_RSV ( IN_PT_NO            IN VARCHAR2 -- 환자번호                 
                                      , IN_RHTR_ORD_CD      IN VARCHAR2 -- 재활치료코드 
                                      , IN_ORD_DT           IN VARCHAR2 -- 재활처방일자 
                                      , IN_RHTR_ORD_SEQ     IN NUMBER     
                                      , IN_SCHD_CRE_SEQ     IN NUMBER 
                                      , IN_DEL_FLAG         IN VARCHAR2   
                                      , HIS_HSP_TP_CD       IN VARCHAR2 
                                      , HIS_STF_NO          IN VARCHAR2
                                      , HIS_PRGM_NM         IN VARCHAR2
                                      , HIS_IP_ADDR         IN VARCHAR2 
                                      , IO_ERRYN            IN OUT VARCHAR2 --에러여부
                                      , IO_ERRMSG           IN OUT VARCHAR2 )
                               
 /**********************************************************************************************
 *    서비스이름  : PC_MST_MSTRHODD_DC_NEW
 *    최초 작성일 : 2015-11-12
 *    최초 작성자 : 성시중
 *    Description : 재활 오더 코드 하나씩 DC(Slot의 예약된 해당 처방도 DC) 후, Slot에 다른 잔여처방이 있을 경우, 해당 Slot 예약은 유지. 수가도 남은 것 없으면 정리 (신규 - 재활CA과제)
 *    Comment 1. 여러개의 수가가 1개의 Slot에 예약되어 있을 수도 있고, 1개의 수가가 여러개의 Slot에 쪼개져서 예약되어 있을 수도 있음.
              2. 부위정보는 기존오더(이전 치료일 또는 금일 접수되어 치료중인 것)와 매치되어 필요한 것일 수도 있으므로, 삭제하지 않고 모두 남겨둔다.
*     UPDATE : 2019-08-30 코드 패턴 예약 관련 전체 로직 수정. LCD               
               2022-01-02 각 테이블 RHTR_ORD_ID 생성하여 넣도록 추가.
 **********************************************************************************************/                               
    
IS  
   
--G_SEL_SUGACNT      NUMBER(3) := 0;
G_SYSDATE              DATE := NULL;         -- SYSDATE 값 기록의 동일성을 위한 변수
G_RHTR_RSV_CNCL_TP_CD  VARCHAR2(1) := NULL ; -- 재활치료예약취소구분코드 
G_MIN_SLOT_SEQ         NUMBER := 0;   
G_BTCH_RSV_YN          VARCHAR2(1) := NULL ; -- 재활치료 자동슬롯 추가 구분   
G_RSV_CNT              NUMBER := 0;  
G_RSV_DY_SEQ           NUMBER := 0;
G_RSV_DTM              DATE := NULL;         -- SYSDATE 값 기록의 동일성을 위한 변수 
S_RSVP_CD_CNT          NUMBER := 0;  
S_CNT                  NUMBER := 0;
S_RPY_STS_CD           NUMBER := 0;   

H_RSV_DT               DATE := NULL;
H_TRP_RSV_DTM          DATE := NULL;
H_RSV_THRP_SID         VARCHAR2(7) := NULL;
H_TRP_RSV_SEQ          NUMBER := 0; 
H_TRP_RSV_SLOT_SEQ     NUMBER := 0; 
H_RHTR_MTCH_MIF_CD     VARCHAR2(20) := NULL;
H_RHTR_ORD_MTCH_SEQ    NUMBER := 0;
H_RHTR_RSV_CNCL_TP_CD  VARCHAR2(10) := NULL;

BEGIN 
    
    BEGIN
        SELECT COUNT(*)
          INTO S_RPY_STS_CD
          FROM MSTRHODD C
             , MSTRHCDC D
             , MSTRHSUD E
         WHERE C.PT_NO = IN_PT_NO
           AND C.RSV_DT &gt;= TRUNC(SYSDATE)
           AND C.ODDSC_TP_CD = 'C'
           AND C.RHTR_ORD_CD = IN_RHTR_ORD_CD
           AND C.RHTR_ORD_SEQ = DECODE(IN_DEL_FLAG, 'ALL', IN_RHTR_ORD_SEQ , C.RHTR_ORD_SEQ) 
           AND C.SCHD_CRE_SEQ = DECODE(IN_DEL_FLAG, 'ALL', C.SCHD_CRE_SEQ, IN_SCHD_CRE_SEQ)
           AND C.HSP_TP_CD = HIS_HSP_TP_CD
           AND D.RHTR_ORD_CD = C.RHTR_ORD_CD
           AND D.HSP_TP_CD = C.HSP_TP_CD
           AND C.HSP_TP_CD = E.HSP_TP_CD
           AND C.PT_NO = E.PT_NO
           AND C.RSV_DT = E.RSV_DT
           AND C.RHTR_MTCH_MIF_CD  = E.ORD_MTCH_MIF_CD
           AND C.RHTR_ORD_MTCH_SEQ = E.RHTR_ORD_MTCH_SEQ
           AND C.ORD_DT = TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
           AND NVL(C.TRP_FMT_YN,'N') ='N'
           AND C.FMT_DTM IS NULL
           AND E.RPY_STS_CD = 'Y';  
           
         EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                 S_RPY_STS_CD := 0;
                 
            WHEN OTHERS THEN
                IO_ERRYN  := 'Y';
                IO_ERRMSG := '수납정보 조회중 오류 발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                RETURN;     
    END;   
    
    IF S_RPY_STS_CD &gt; 0 THEN  
        IO_ERRYN  := 'Y';
        IO_ERRMSG := '수납된 정보가 있습니다. 환불후 예약취소 진행해 주세요.!!' ;
        RETURN;
    END IF;
    
    
    BEGIN
        /* 시행되거나, 접수된 오더는 제외하고, 해당 처방코드의 오늘 이후 모든 일자 처방 정보를 조회한다 */               
        FOR REC IN ( SELECT C.PT_NO
                          , C.RSV_THRP_SID
                          , C.ORD_DT
                          , C.RHRM_CD
                          , TO_CHAR(C.TRP_RSV_DTM,'HH24:MI') RSV_TM 
                          , C.SCHD_CRE_SEQ
                          , C.TRP_RSV_DTM
                          , C.RHTR_ORD_ID
                       FROM MSTRHODD C
                          , MSTRHCDC D
                      WHERE C.PT_NO = IN_PT_NO
                        AND C.RSV_DT &gt;= TRUNC(SYSDATE)
                        AND C.ODDSC_TP_CD = 'C'
                        AND NVL(C.TRP_FMT_YN, 'N') = 'N'
                        AND C.RHTR_ORD_CD = IN_RHTR_ORD_CD
                        AND C.RHTR_ORD_SEQ = DECODE(IN_DEL_FLAG, 'ALL', IN_RHTR_ORD_SEQ , C.RHTR_ORD_SEQ) 
                        AND C.SCHD_CRE_SEQ = DECODE(IN_DEL_FLAG, 'ALL', C.SCHD_CRE_SEQ, IN_SCHD_CRE_SEQ)
                        AND C.FMT_DTM IS NULL
                        AND C.ACPT_DTM IS NULL
                        AND C.RSV_THRP_SID IS NOT NULL
                        AND C.HSP_TP_CD = HIS_HSP_TP_CD
                        AND D.RHTR_ORD_CD = C.RHTR_ORD_CD
                        AND D.HSP_TP_CD = C.HSP_TP_CD 
                        AND C.ORD_DT = TO_DATE(IN_ORD_DT,'YYYY-MM-DD')
                    )        
        LOOP
            
            BEGIN
                SELECT BTCH_RSV_YN  
                     , RSV_DY_SEQ 
                     , RSV_DTM
                  INTO G_BTCH_RSV_YN 
                     , G_RSV_DY_SEQ 
                     , G_RSV_DTM
                  FROM MSTRHSLD
                 WHERE RTST_SID     = REC.RSV_THRP_SID
                   AND RSV_PT_NO    = REC.PT_NO
                   AND RSV_DTM = REC.TRP_RSV_DTM
                   AND ORD_DT  = REC.ORD_DT 
                   AND SCHD_RSV_SEQ = REC.SCHD_CRE_SEQ
                   AND RHTR_ORD_ID  = REC.RHTR_ORD_ID
                   AND HSP_TP_CD    = HIS_HSP_TP_CD
                   AND TO_CHAR(RSV_DTM, 'HH24:MI') = REC.RSV_TM;
                
                EXCEPTION 
                    WHEN NO_DATA_FOUND THEN
                        IO_ERRYN := 'Y';
                        IO_ERRMSG := REC.RSV_THRP_SID || ' / ' || REC.PT_NO || ' / ' || REC.TRP_RSV_DTM || ' / ' || REC.ORD_DT || ' / ' || REC.SCHD_CRE_SEQ || ' / '||  REC.RSV_TM || '예약 한 슬롯 시퀀스 조회 중 에러! ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                        RETURN;                        
            END; 
            
            BEGIN                                        -- 그룹예약후 추가슬롯 예약은 살아있는 상태에서 기준 슬롯의 치료예약을 삭제할경우 기존 슬롯은 지워져야함...LCD
                
                SELECT COUNT(*)
                  INTO G_RSV_CNT
                  FROM MSTRHSLD
                 WHERE RTST_SID    = REC.RSV_THRP_SID 
                   AND RHTR_ORD_ID = REC.RHTR_ORD_ID
                   AND RSV_DTM    = G_RSV_DTM
                   AND HSP_TP_CD  = HIS_HSP_TP_CD
                   AND RSV_DY_SEQ = G_RSV_DY_SEQ
                   AND TO_CHAR(RSV_DTM, 'HH24:MI') = REC.RSV_TM
                   AND RHRM_CD = REC.RHRM_CD
                 GROUP BY HSP_TP_CD, RTST_SID,RSV_DTM, RSV_DY_SEQ;
            
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN
                    IO_ERRYN := 'Y';
                    IO_ERRMSG := '재활치료 정리슬롯 조회중.오류발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
            END ; 
            
            IF G_RSV_CNT = 1 THEN  
                G_BTCH_RSV_YN := 'N';
            END IF;
            
            IF G_BTCH_RSV_YN = 'A' THEN  
            
                BEGIN
                    DELETE MSTRHSLD
                     WHERE RTST_SID  = REC.RSV_THRP_SID
                       AND RSV_PT_NO = REC.PT_NO
                       AND RSV_DTM = G_RSV_DTM
                       AND ORD_DT  = REC.ORD_DT 
                       AND SCHD_RSV_SEQ = REC.SCHD_CRE_SEQ
                       AND RHTR_ORD_ID  = REC.RHTR_ORD_ID
                       AND RSV_DY_SEQ   = G_RSV_DY_SEQ
                       AND HSP_TP_CD    = HIS_HSP_TP_CD
                       AND TO_CHAR(RSV_DTM, 'HH24:MI') = REC.RSV_TM 
                       AND RHRM_CD = REC.RHRM_CD;
                         
                EXCEPTION 
                        WHEN OTHERS THEN
                             IO_ERRYN  := 'Y';
                             IO_ERRMSG := '재활치료 에약 슬롯 삭제중 오류 발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                             RETURN;       
                
                END ;  
        
            ELSE
                BEGIN
                    UPDATE MSTRHSLD
                       SET RSV_PT_NO     = NULL
                         , ORD_DT        = NULL
                         , SCHD_RSV_SEQ  = NULL
                         , RSV_STS_TP_CD = 'Y'
                         , TRSV_YN       = NULL
                         , RSV_MEMO_CNTE = NULL
                         , BTCH_RSV_YN = NULL
                         , LSH_DTM     = SYSDATE
                         , LSH_STF_NO  = HIS_STF_NO  
                         , LSH_PRGM_NM = HIS_PRGM_NM
                         , LSH_IP_ADDR = HIS_IP_ADDR  
                         , RHTR_ORD_ID = NULL
                    WHERE RTST_SID     = REC.RSV_THRP_SID
                      AND RSV_PT_NO    = REC.PT_NO
                      AND RSV_DTM &gt;= TRUNC(SYSDATE)
                      AND ORD_DT = REC.ORD_DT 
                      AND SCHD_RSV_SEQ = REC.SCHD_CRE_SEQ  
                      AND RHTR_ORD_ID  = REC.RHTR_ORD_ID
                      AND HSP_TP_CD    = HIS_HSP_TP_CD
                      AND TO_CHAR(RSV_DTM, 'HH24:MI') = REC.RSV_TM 
                      AND RHRM_CD = REC.RHRM_CD;
                    
                    EXCEPTION
                        WHEN OTHERS THEN
                            IO_ERRYN := 'Y';
                            IO_ERRMSG := '재활치료 처방DC로 인한 예약상태중 예약슬롯 수정 에러!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                    RETURN;    
                END ;  

            END IF;
            
            
            BEGIN                                        -- 그룹예약후 추가슬롯 예약은 살아있는 상태에서 기준 슬롯의 치료예약을 삭제할경우 기존 슬롯은 지워져야함...LCD
                
                SELECT COUNT(*)
                  INTO G_RSV_CNT
                  FROM MSTRHSLD
                 WHERE RTST_SID = REC.RSV_THRP_SID
                   AND RSV_DTM = G_RSV_DTM
                   AND HSP_TP_CD = HIS_HSP_TP_CD 
                   AND RSV_DY_SEQ = G_RSV_DY_SEQ
                   AND TO_CHAR(RSV_DTM, 'HH24:MI') = REC.RSV_TM
                   AND RHRM_CD = REC.RHRM_CD       
              GROUP BY HSP_TP_CD, RTST_SID,RSV_DTM, RSV_DY_SEQ;
            
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN
                    IO_ERRYN := 'Y';
                    IO_ERRMSG := '재활치료 정리슬롯 조회중2.오류발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
            END; 
                
            IF G_RSV_CNT &gt; 1 THEN
                
                BEGIN
                    DELETE MSTRHSLD
                     WHERE RTST_SID   = REC.RSV_THRP_SID
                       AND RSV_DTM   = G_RSV_DTM
                       AND HSP_TP_CD = HIS_HSP_TP_CD
                       AND TO_CHAR(RSV_DTM, 'HH24:MI') = REC.RSV_TM 
                       AND RSV_DY_SEQ = G_RSV_DY_SEQ
                       AND SCHD_RSV_SEQ IS NULL 
                       AND RHRM_CD     = REC.RHRM_CD;
                          
                EXCEPTION 
                    WHEN OTHERS THEN
                         IO_ERRYN  := 'Y';
                         IO_ERRMSG := '재활치료 에약 슬롯 일괄 정리중 오류 발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                         RETURN;       

                END;
            
            END IF;  
            
            ------------------------------------------------------------------------------------------------------------------- 슬롯카운터 정리.
            
                BEGIN
                     SELECT SUM(DECODE(SCHD_RSV_SEQ, NULL, 0, 1))
                       INTO S_CNT
                       FROM MSTRHSLD
                      WHERE RTST_SID     = REC.RSV_THRP_SID
                        AND RSV_DTM      = REC.TRP_RSV_DTM
                        AND HSP_TP_CD    = HIS_HSP_TP_CD
                        AND TO_CHAR(RSV_DTM,'HH24:MI')= REC.RSV_TM; 
                        --AND (RSV_DY_SEQ BETWEEN 0 AND 100 OR RSV_DY_SEQ &gt; 700);
                       
                    EXCEPTION 
                        WHEN NO_DATA_FOUND THEN
                            IO_ERRYN := 'Y';
                            IO_ERRMSG := '슬롯 카운트로 증가된 슬롯 정리중 오류. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                            RETURN;
                END;   
                 
                IF S_CNT = 0 THEN
                    
                      BEGIN
                        DELETE MSTRHSLD
                         WHERE RTST_SID     = REC.RSV_THRP_SID
                           AND RSV_DTM      = REC.TRP_RSV_DTM
                           AND HSP_TP_CD    = HIS_HSP_TP_CD
                           AND TO_CHAR(RSV_DTM,'HH24:MI') = REC.RSV_TM  
                           AND NVL(TRSV_YN, 'N') = 'N'
                           AND SCHD_RSV_SEQ IS NULL
                           AND RSV_PT_NO IS NULL  
                           AND NVL(RSVP_CD_CNT, 0) &gt; 1;   
                           
                    EXCEPTION 
                            WHEN OTHERS THEN
                                 IO_ERRYN  := 'Y';
                                 IO_ERRMSG := '슬롯 카운트로 증가된 슬롯 정리중 오류 발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                                 RETURN;       
                    
                    END ;  
                                      
                  END IF ;
            ------------------------------------------------------------------------------------------------------------------- 슬롯카운터 정리.
                
            
            
        END LOOP;   
        
        
        BEGIN                    
             UPDATE MSTRHSUD S
                SET S.ODDSC_TP_CD = DECODE (NVL(S.RPY_STS_CD, 'N'), 'Y', S.ODDSC_TP_CD, 'N')
                  , S.RFND_YN     = DECODE (NVL(S.RPY_STS_CD, 'N'), 'Y', 'Y', S.RFND_YN)  
                  , S.LSH_STF_NO  = HIS_STF_NO
                  , S.LSH_DTM     = SYSDATE
                  , S.LSH_PRGM_NM = HIS_PRGM_NM
                  , S.LSH_IP_ADDR = HIS_IP_ADDR
              WHERE S.PT_NO = IN_PT_NO
                AND S.HSP_TP_CD = HIS_HSP_TP_CD
                AND S.ORD_DT = TO_DATE(IN_ORD_DT,'YYYY-MM-DD')
                AND EXISTS  (SELECT 'X'
                               FROM MSTRHODD C
                                  , MSTRHCDC D
                              WHERE C.PT_NO = IN_PT_NO
                                AND C.RSV_DT &gt;= TRUNC(SYSDATE)
                                AND C.ODDSC_TP_CD = 'C'
                                AND NVL(C.TRP_FMT_YN, 'N') = 'N'
                                AND C.RHTR_ORD_CD = IN_RHTR_ORD_CD
                                AND C.FMT_DTM IS NULL
                                AND C.ACPT_DTM IS NULL
                                AND C.RSV_THRP_SID IS NOT NULL
                                AND C.HSP_TP_CD = HIS_HSP_TP_CD
                                AND D.RHTR_ORD_CD = C.RHTR_ORD_CD
                                AND D.HSP_TP_CD = C.HSP_TP_CD
                                AND C.ORD_DT = IN_ORD_DT
                                AND C.RHTR_ORD_SEQ = DECODE(IN_DEL_FLAG, 'ALL', IN_RHTR_ORD_SEQ, C.RHTR_ORD_SEQ) 
                                AND C.SCHD_CRE_SEQ = DECODE(IN_DEL_FLAG, 'ALL', C.SCHD_CRE_SEQ, IN_SCHD_CRE_SEQ)
                                AND C.RHTR_ORD_MTCH_SEQ IS NOT NULL
                                AND S.PT_NO   = C.PT_NO
                                AND S.ORD_DT  = C.ORD_DT
                                AND S.RSV_DT  = C.RSV_DT
                                AND S.HSP_TP_CD = C.HSP_TP_CD
                                AND S.ORD_MTCH_MIF_CD  = C.RHTR_MTCH_MIF_CD
                                AND S.RHTR_ORD_MTCH_SEQ  = C.RHTR_ORD_MTCH_SEQ);  
                                
                EXCEPTION
                    WHEN OTHERS THEN
                       IO_ERRYN := 'Y';
                       IO_ERRMSG :=  '예약상태의 재활치료 처방 예약 취소중 에러!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                       RETURN;                                                                                                 
        END ;
                          
         -----------------이력저장추가 2020-02-06--------------------------------------------------------------------------------------------------
--        BEGIN         
--             INSERT INTO MSTRHSLH ( --재활예약취소이력
--                                  HSP_TP_CD
--                                , HST_SEQ
--                                , CNCL_TP_CNTE
--                                , PT_NO
--                                , ORD_DT
--                                , RHTR_ORD_SEQ
--                                , SCHD_CRE_SEQ
--                                , RSV_DT
--                                , TRP_RSV_DTM
--                                , RSV_THRP_SID
--                                , TRP_RSV_SEQ
--                                , TRP_RSV_SLOT_SEQ
--                                , RHTR_MTCH_MIF_CD
--                                , RHTR_ORD_MTCH_SEQ
--                                , TH1_ETC_CNTE
--                                , TH2_ETC_CNTE
--                                , TH3_ETC_CNTE
--                                , TH4_ETC_CNTE
--                                , FSR_STF_NO            --최초등록직원식별ID
--                                , FSR_DTM               --최초등록일시
--                                , FSR_PRGM_NM           --최초등록프로그램명
--                                , FSR_IP_ADDR           --최초등록IP주소
--                                , LSH_STF_NO            --최종변경직원식별ID
--                                , LSH_DTM               --최종변경일시
--                                , LSH_PRGM_NM           --최종변경프로그램명
--                                , LSH_IP_ADDR           --최종변경IP주소
--                                )
--                SELECT  HSP_TP_CD
--                        , (select nvl(max(HST_SEQ)+1, 0) from MSTRHSLH where hsp_tp_cd = HIS_HSP_TP_CD)
--                          , TRIM(HSP_TP_CD) || TRIM(PT_NO) || TRIM(TO_CHAR(ORD_DT,'YYYYMMDD')) || TRIM(TO_CHAR(RHTR_ORD_SEQ)) || TRIM(TO_CHAR(SCHD_CRE_SEQ))
--                          , IN_PT_NO
--                          , IN_ORD_DT
--                          , IN_RHTR_ORD_SEQ
--                          , IN_SCHD_CRE_SEQ
--                      , RSV_DT
--                      , TRP_RSV_DTM
--                      , RSV_THRP_SID
--                      , TRP_RSV_SEQ
--                      , TRP_RSV_SLOT_SEQ
--                      , RHTR_MTCH_MIF_CD
--                      , RHTR_ORD_MTCH_SEQ 
--                        , RHTR_RSV_CNCL_TP_CD 
--                        , ''
--                        , ''
--                        , ''
--                        , HIS_STF_NO
--                        , SYSDATE
--                        , HIS_PRGM_NM
--                        , HIS_IP_ADDR
--                        , HIS_STF_NO
--                        , SYSDATE
--                        , HIS_PRGM_NM
--                        , HIS_IP_ADDR
--                   FROM MSTRHODD
--                  WHERE PT_NO = IN_PT_NO
--                    AND RSV_DT &gt;= TRUNC(SYSDATE)
--                    AND ODDSC_TP_CD = 'C'
--                    AND NVL(TRP_FMT_YN, 'N') = 'N'
--                    AND RHTR_ORD_CD = IN_RHTR_ORD_CD
--    --                AND RHTR_ORD_SEQ = IN_RHTR_ORD_SEQ
--                    AND RHTR_ORD_SEQ = DECODE(IN_DEL_FLAG,'ALL', IN_RHTR_ORD_SEQ , RHTR_ORD_SEQ) 
--                    AND SCHD_CRE_SEQ = DECODE(IN_DEL_FLAG,'ALL', SCHD_CRE_SEQ, IN_SCHD_CRE_SEQ)
--                    AND FMT_DTM IS NULL
--                    AND ACPT_DTM IS NULL
--                    AND RSV_THRP_SID IS NOT NULL
--                    AND HSP_TP_CD = HIS_HSP_TP_CD            
--                   ;  
--                             
--              EXCEPTION
--                   WHEN OTHERS THEN
--                       IO_ERRYN := 'Y';
--                       IO_ERRMSG :=  '재활취소이력저장을 위한 인서트 중 오류 발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
--                       RETURN;   
--         END ;
        ---------------------------------------------------------------------------------------------------------------------------------------
        
         BEGIN
         
             UPDATE MSTRHODD
                SET RSV_THRP_SID        = NULL
                  , TRP_RSV_DTM         = NULL
                  , TRP_RSV_SEQ         = NULL
                  , TRP_RSV_SLOT_SEQ    = NULL
                  , RHTR_RSV_CNCL_TP_CD = NULL    
                  , RSV_CNCL_DTM        = SYSDATE
                  , RHTR_MTCH_MIF_CD    = NULL    
                  , RHTR_ORD_MTCH_SEQ   = NULL                
                  , RSV_CNCL_STF_NO     = HIS_STF_NO                    
                  , LSH_STF_NO          = HIS_STF_NO
                  , LSH_DTM             = SYSDATE
                  , LSH_PRGM_NM         = HIS_PRGM_NM
                  , LSH_IP_ADDR         = HIS_IP_ADDR  
                  , RHTR_ORD_ID         = NULL
              WHERE PT_NO = IN_PT_NO
                AND RSV_DT &gt;= TRUNC(SYSDATE)
                AND ODDSC_TP_CD = 'C'  
                AND ORD_DT = IN_ORD_DT
                AND NVL(TRP_FMT_YN, 'N') = 'N'
                AND RHTR_ORD_CD = IN_RHTR_ORD_CD
                AND RHTR_ORD_SEQ = DECODE(IN_DEL_FLAG, 'ALL', IN_RHTR_ORD_SEQ , RHTR_ORD_SEQ) 
                AND SCHD_CRE_SEQ = DECODE(IN_DEL_FLAG, 'ALL', SCHD_CRE_SEQ, IN_SCHD_CRE_SEQ)
                AND FMT_DTM IS NULL
                AND ACPT_DTM IS NULL
                AND RSV_THRP_SID IS NOT NULL
                AND HSP_TP_CD = HIS_HSP_TP_CD;
              
              EXCEPTION
                   WHEN OTHERS THEN
                       IO_ERRYN := 'Y';
                       IO_ERRMSG :=  '예약상태의 재활치료 처방 예약 취소중 에러!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                       RETURN;   
         END ;  
         
         BEGIN
            UPDATE MSTRHSLD
               SET RSV_PT_NO = NULL
                 , ORD_DT          = NULL
                 , SCHD_RSV_SEQ    = NULL
                 , RSV_STS_TP_CD   = 'Y'
                 , TRSV_YN         = NULL
                 , RSV_MEMO_CNTE   = NULL
                 , BTCH_RSV_YN  = NULL
                 , LSH_DTM      = SYSDATE
                 , LSH_STF_NO   = HIS_STF_NO  
                 , LSH_PRGM_NM  = HIS_PRGM_NM
                 , LSH_IP_ADDR  = HIS_IP_ADDR
                 , RHTR_ORD_ID  = NULL
            WHERE RSV_PT_NO    = IN_PT_NO
              AND RSV_DTM &gt;= TRUNC(SYSDATE)
              AND ORD_DT = TO_DATE(IN_ORD_DT,'YYYY-MM-DD')
              AND SCHD_RSV_SEQ  IS NULL
              AND HSP_TP_CD    = HIS_HSP_TP_CD
              AND NVL(TRSV_YN, 'N') = 'Y';
            
            EXCEPTION
                WHEN OTHERS THEN
                    IO_ERRYN := 'Y';
                    IO_ERRMSG := '가예약 정리중 오류 발생!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
            RETURN;    
        END;       
  
    END;
        
END PC_MST_MSTRHODD_DC_RSV;
</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 진행중처방 상세</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.OR.SelectOrderRsvList"&gt;
&lt;!--
    Clss : text
    Desc : 특정 처방의 예약일자(시간)리스트 조회
    Author : 송창수
    Create date : 2019-06-21
    Update date : 
--&gt;

SELECT /*HIS.MS.TR.RE.OR.SelectOrderRsvList*/
       A.PT_NO                               PT_NO     
     , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')       ORD_DT
     , A.RHTR_ORD_SEQ                        RHTR_ORD_SEQ
     , A.SCHD_CRE_SEQ                        SCHD_CRE_SEQ     
     
     , A.RHTR_ORD_CD                         RHTR_ORD_CD
     , B.RHTR_ORD_NM                         RHTR_ORD_NM
     
     , TO_CHAR(A.RSV_DT, 'YYYY-MM-DD')          RSV_DT_ORD
     , SUBSTR(TO_CHAR(A.RSV_DT, 'DAY'), 1, 1)   RSV_DAY_ORD
     , TO_CHAR(C.RSV_DTM, 'YYYY-MM-DD HH24:MI') RSV_DTM
     , SUBSTR(TO_CHAR(C.RSV_DTM, 'DAY'), 1, 1)  RSV_DAY
     , A.ORD_PBL_PTM_CNTE                    ORD_PBL_PTM_CNTE
     , TO_CHAR(A.FMT_DTM, 'YYYY-MM-DD HH24:MI:SS') FMT_DTM
     , XCOM.FT_CNL_SELSTFINFO('3', C.RTST_SID, A.HSP_TP_CD, '')    STF_NM
     , A.ODDSC_TP_CD                                               ODDSC_TP_CD 
     , XCOM.FT_CCC_CODENAME(A.HSP_TP_CD, 'DR00039', A.ODDSC_TP_CD) ODDSC_TP_NM
     
     , TRIM(A.AUTO_ODDSC_RSN_CNTE)              AUTO_ODDSC_RSN_CNTE
     , TRIM(A.RHTR_ORD_CNCL_CNTE)               RHTR_ORD_CNCL_CNTE
     
     , NVL(B.APCB_TYRM_CD, B.ADS_TYRM_CD)       APCB_TYRM_CD

     , (SELECT TEL_NO
          FROM PDESDSTD -- 직원연락처정보
         WHERE STF_NO    = :HIS_STF_NO
           --AND HSP_TP_CD = :HIS_HSP_TP_CD
           AND CTAD_TP_CD = '08'
           AND TEL_NO IS NOT NULL           
           AND ROWNUM    = 1)                   SEND_TEL_NO  
     , (SELECT TEL_NO
          FROM PDESDSTD -- 직원연락처정보
         WHERE STF_NO    = XCOM.FT_CNL_SELSTFINFO('2', C.RTST_SID, C.HSP_TP_CD, '')
--           AND HSP_TP_CD = C.HSP_TP_CD
           AND CTAD_TP_CD = '08'
           AND TEL_NO IS NOT NULL           
           AND ROWNUM    = 1)                   STF_TEL_NO  
     , TO_CHAR(A.FSR_DTM, 'YYYY-MM-DD HH24:MI:SS')       ORD_DTM            
  FROM MSTRHODD A
     , MSTRHCDC B
     , MSTRHSLD C
 WHERE A.PT_NO = :PT_NO
   AND A.RHTR_ORD_SEQ = :RHTR_ORD_SEQ
   AND A.RHTR_ORD_CD = :RHTR_ORD_CD
   AND A.ORD_DT = TO_DATE(:ORD_DT, 'YYYY-MM-DD')

&lt;IsEqual Prepend="" Property="DC_YN" CompareValue="N"&gt;
   AND A.ODDSC_TP_CD = 'C'
&lt;/IsEqual&gt;

   AND A.HSP_TP_CD = :HIS_HSP_TP_CD

   AND A.RHTR_ORD_CD = B.RHTR_ORD_CD
   AND A.HSP_TP_CD = B.HSP_TP_CD

   -- 슬롯과 조인하여 예약된 날짜 가져옴.
   AND A.PT_NO = C.RSV_PT_NO(+)
   AND A.RSV_THRP_SID = C.RTST_SID(+)
   AND A.TRP_RSV_DTM = C.RSV_DTM(+)
   AND A.TRP_RSV_SEQ = C.RSV_DY_SEQ(+)
   AND A.TRP_RSV_SLOT_SEQ = C.RSV_SLOT_SEQ(+)
   AND A.HSP_TP_CD = C.HSP_TP_CD(+)
 ORDER BY A.RSV_DT   
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활메인코디</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.RS.SelectPatientOrdList"&gt;&lt;!--
    Clss :  text
    Desc : 재활메인 - 환자처방 리스트 조회
    Author : 이시온 
    Create date : 2019-06-24
    Update date : 2019-06-26 LCD 쿼리수정
       : 2020-12-30 김슬기 소요시간 추가
--&gt;

  SELECT /* HIS.MS.TR.RE.RS.SelectPatientOrdList */
         C.PT_NO
       , TO_CHAR(A.ORD_DT,'YYYY-MM-DD') ORD_DT
       , D.RHTR_ORD_CD
       , D.RHTR_ORD_NM
       , D.RHTR_MIF_CD
       , D.MIF_NM
       , MIN(TO_CHAR(A.RSV_DT,'YYYY-MM-DD')) || ' ~ ' || MAX(TO_CHAR(A.RSV_DT,'YYYY-MM-DD')) FROM_TO
  -- , LISTAGG('예약일 : ' || TO_CHAR(A.RSV_DT,'YYYY-MM-DD'),'  ' || CHR(10))  WITHIN GROUP (ORDER BY A.RSV_DT)  FROM_TO2
   , TYRM_CD
   , TYRM_NM
   , MAX(TO_CHAR(A.RSV_DT,'YYYY-MM-DD'))              MAX_ORD_DT
   --, MAX(A.ORD_PBL_PTM_CNTE)    ORD_PBL_PTM_CNTE
   , MAX((SELECT XSUP.FT_MST_MSTRHODD_MEMO(A.PT_NO, A.ORD_DT, A.RHRM_CD, A.RHTR_ORD_CD, A.HSP_TP_CD)
            FROM DUAL))                               ORD_PBL_PTM_CNTE
   , MAX((SELECT DECODE(MAX(E.ORD_PBL_PTM_CNTE), '', 'N', 'Y')
                  FROM MSTRHODD E
                 WHERE E.PT_NO = A.PT_NO
                   AND E.ORD_DT = A.ORD_DT
                   AND E.RHRM_CD = A.RHRM_CD
                   AND E.RHTR_ORD_CD = A.RHTR_ORD_CD
                   AND E.ODDSC_TP_CD = 'C'
                   AND E.HSP_TP_CD = A.HSP_TP_CD))          ORD_PBL_PTM_CNTE_YN
   , DECODE(MAX(TRP_RSV_DTM), NULL, 'N', MIN(DECODE(TRP_RSV_DTM, NULL ,'I','Y'))) RSV_FLAG
   , TO_CHAR(MAX(TRP_RSV_DTM),'YYYY-MM-DD HH24:MI') RSV_DTM
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'2','Y','N')) ORD_MON
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'3','Y','N')) ORD_TUE
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'4','Y','N')) ORD_WED
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'5','Y','N')) ORD_THU
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'6','Y','N')) ORD_FRI
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'7','Y','N')) ORD_SAT
   , A.ORD_PBR_STF_NO
   , A.RHTR_ORD_SEQ
   , NVL(F.RSV_SLOT_CNT,1) RSV_SLOT_CNT
   , NVL(F.REQR_TM,1) REQR_TM
   , ( CASE WHEN MIN(DECODE(TRP_RSV_DTM, NULL ,'I','Y')) = 'Y' THEN '예약일 : ' || TO_CHAR(MAX(TRP_RSV_DTM),'YYYY-MM-DD HH24:MI') ||'  '
            ELSE ''
       END || '진료의 : ' || A.ORD_PBR_STF_NO || '   보험 : ' || XMED.FT_MOO_GET_COMN_CD_NAME('DR00033',A.MED_MIFI_TP_CD,'Y')
     ) TOOLTIP 
   FROM MSTRHODD A
      , MSTRHSRD B
      , PCTPCPAM_DAMO C 
      , MSTRHCDC D
      , MSTRHTCD F
  WHERE A.PT_NO = C.PT_NO
    AND A.RSV_DT &gt;= TRUNC(SYSDATE)
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.RHTR_ORD_CD = D.RHTR_ORD_CD
    AND A.HSP_TP_CD = D.HSP_TP_CD
    AND A.ODDSC_TP_CD ='C'
    AND B.TYRM_CD = D.APCB_TYRM_CD
    AND C.PT_NO = :PT_NO
    --AND A.ORD_DT = TO_DATE( :ORD_DT,'YYYY-MM-DD')
    AND A.HSP_TP_CD = :HIS_HSP_TP_CD
    AND D.RHTR_LCLS_CD LIKE :RHTR_LCLS_CD || '%'
    AND A.RHTR_ORD_CD = F.RHTR_ORD_CD(+)
    AND A.RHRM_CD = F.RHRM_CD(+)
    AND A.HSP_TP_CD = F.HSP_TP_CD(+)
  GROUP BY  C.PT_NO
         , A.ORD_DT
       , D.RHTR_ORD_CD
       , D.RHTR_ORD_NM
       , D.RHTR_MIF_CD
       , D.MIF_NM
   , B.TYRM_CD
   , B.TYRM_NM
   , A.ORD_PBR_STF_NO
   , A.RHTR_ORD_SEQ
   , F.RSV_SLOT_CNT
   , F.REQR_TM   
   , A.MED_MIFI_TP_CD
  
 
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활메인(코디) 치료사별 가능예약슬롯 조회</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.RS.SearchRsvRTSTList"&gt;&lt;!--
    Clss :  Text
    Desc :  치료사별 에약 가능한 시간 조회
    Author : LCD
    Create date : 2019-07-18
    Update date : 2019-07-18

--&gt;

WITH TEMP AS (
  SELECT /*+ leading(o) use_nl(o p) index(o MSTRHODD_si09) */
         O.RHTR_ORD_CD
       , P.RHRM_CD
       , O.RHTR_ORD_SEQ
       , SUM(DECODE(TO_CHAR(O.RSV_DT,'D'),'2',1,0)) MON
       , SUM(DECODE(TO_CHAR(O.RSV_DT,'D'),'3',1,0)) TUE
       , SUM(DECODE(TO_CHAR(O.RSV_DT,'D'),'4',1,0)) WED
       , SUM(DECODE(TO_CHAR(O.RSV_DT,'D'),'5',1,0)) THU
       , SUM(DECODE(TO_CHAR(O.RSV_DT,'D'),'6',1,0)) FRI
       , SUM(DECODE(TO_CHAR(O.RSV_DT,'D'),'7',1,0)) SAT
       , listagg(DECODE(TO_CHAR(O.RSV_DT,'D'),'2',TO_CHAR(O.RSV_DT,'YYYY-MM-DD'),''),chr(13)) within group (order by RSV_DT) MON_DAYS
       , listagg(DECODE(TO_CHAR(O.RSV_DT,'D'),'3',TO_CHAR(O.RSV_DT,'YYYY-MM-DD'),''),chr(13)) within group (order by RSV_DT) TUE_DAYS
       , listagg(DECODE(TO_CHAR(O.RSV_DT,'D'),'4',TO_CHAR(O.RSV_DT,'YYYY-MM-DD'),''),chr(13)) within group (order by RSV_DT) WED_DAYS
       , listagg(DECODE(TO_CHAR(O.RSV_DT,'D'),'5',TO_CHAR(O.RSV_DT,'YYYY-MM-DD'),''),chr(13)) within group (order by RSV_DT) THU_DAYS
       , listagg(DECODE(TO_CHAR(O.RSV_DT,'D'),'6',TO_CHAR(O.RSV_DT,'YYYY-MM-DD'),''),chr(13)) within group (order by RSV_DT) FRI_DAYS
       , listagg(DECODE(TO_CHAR(O.RSV_DT,'D'),'7',TO_CHAR(O.RSV_DT,'YYYY-MM-DD'),''),chr(13)) within group (order by RSV_DT) SAT_DAYS
    FROM MSTRHODD O
       , MSTRHTCD P
   WHERE O.HSP_TP_CD = :HIS_HSP_TP_CD
     AND O.PT_NO = :PT_NO
     AND O.ORD_DT = TO_DATE(:ORD_DT,'YYYY-MM-DD')
     AND O.RSV_DT BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') 
                      AND TO_DATE(:TO_DT, 'YYYYMMDD')
     AND INSTR(:SEL_DAY , TO_CHAR(RSV_DT,'D')) &gt; 0
     AND O.RSV_DT &gt;= TRUNC(SYSDATE)
     AND O.ODDSC_TP_CD ='C'
     AND O.RSV_THRP_SID IS NULL
     AND O.TRP_RSV_DTM IS NULL
     AND O.RHTR_ORD_CD = :RHTR_ORD_CD
     AND O.RHTR_ORD_SEQ = :RHTR_ORD_SEQ
     AND P.RHTR_ORD_CD = O.RHTR_ORD_CD
     AND P.HSP_TP_CD = O.HSP_TP_CD
     AND P.RHRM_CD IN (SELECT DISTINCT RHRM_CD
                         FROM MSTRHROD 
                        WHERE RHRM_CD = P.RHRM_CD
                          AND RTST_SID = NVL(DECODE(:SID, '%', NULL, :SID), RTST_SID)
                          AND HSP_TP_CD = P.HSP_TP_CD)
   GROUP BY O.RHTR_ORD_CD
          , P.RHRM_CD
          , O.RHTR_ORD_SEQ
)
    SELECT /* HIS.MS.TR.RE.RS.SearchRsvRTSTList */
           '치료실 : ' || TYRM_NM       TYRM_NM
         , '오더코드 : ' || RHTR_ORD_CD KOR_SRNM_NM
         , '처방정보 ☞'                RSVTIME
         , TYRM_CD                     TYRM_CD
         , '' RTST_SID
         , A.MON  MON_CNT
      , A.TUE  TUE_CNT
      , A.WED  WED_CNT
      , A.THU  THU_CNT
      , A.FRI  FRI_CNT
      , A.SAT  SAT_CNT
      , A.MON_DAYS
      , A.TUE_DAYS
      , A.WED_DAYS
      , A.THU_DAYS
      , A.FRI_DAYS
      , A.SAT_DAYS
      , 1   SEQ
      , 1   MON_TRSV
      , 1   TUE_TRSV
      , 1   WED_TRSV
      , 1   THU_TRSV
      , 1   FRI_TRSV
      , 1   SAT_TRSV
      , '' MON_RHTR_TP_CD
      , '' TUE_RHTR_TP_CD
      , '' WED_RHTR_TP_CD
      , '' THU_RHTR_TP_CD
      , '' FRI_RHTR_TP_CD
      , '' SAT_RHTR_TP_CD
      FROM TEMP A
         , MSTRHSRD R
     WHERE A.RHRM_CD = R.TYRM_CD
       AND R.HSP_TP_CD = :HIS_HSP_TP_CD
          
     UNION ALL
    
 SELECT /*+ LEADING(R) USE_NL(T R U Z) */
        S.TYRM_NM      TYRM_NM
      , U.KOR_SRNM_NM  KOR_SRNM_NM
      , R.SELTIME      RSVTIME
      , S.TYRM_CD      TYRM_CD
      , R.RTST_SID
      , R.MON
      , R.TUE
      , R.WED
      , R.THU
      , R.FRI
      , R.SAT
      , R.MON_DAYS
      , R.TUE_DAYS
      , R.WED_DAYS
      , R.THU_DAYS
      , R.FRI_DAYS
      , R.SAT_DAYS
      , 2  SEQ
      , CASE WHEN R.MON_TRSV - T.MON &gt;= 0 THEN 1 ELSE 0 END  MON_TRSV
      , CASE WHEN R.TUE_TRSV - T.TUE &gt;= 0 THEN 1 ELSE 0 END  TUE_TRSV
      , CASE WHEN R.WED_TRSV - T.WED &gt;= 0 THEN 1 ELSE 0 END  WED_TRSV
      , CASE WHEN R.THU_TRSV - T.THU &gt;= 0 THEN 1 ELSE 0 END  THU_TRSV
      , CASE WHEN R.FRI_TRSV - T.FRI &gt;= 0 THEN 1 ELSE 0 END  FRI_TRSV
      , CASE WHEN R.SAT_TRSV - T.SAT &gt;= 0 THEN 1 ELSE 0 END  SAT_TRSV
      , R.MON_RHTR_TP_CD
      , R.TUE_RHTR_TP_CD
      , R.WED_RHTR_TP_CD
      , R.THU_RHTR_TP_CD
      , R.FRI_RHTR_TP_CD
      , R.SAT_RHTR_TP_CD       
   FROM (SELECT /*+ USE_HASH(A) */
                A.RTST_SID
              , A.HSP_TP_CD
        , TO_CHAR(A.RSV_DTM,'HH24:MI') SELTIME
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'2',1,0)) MON
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'3',1,0)) TUE
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'4',1,0)) WED
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'5',1,0)) THU
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'6',1,0)) FRI
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'7',1,0)) SAT
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'2', DECODE(NVL(A.TRSV_YN,'N'),'N',1,0) ,0)) MON_TRSV
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'3', DECODE(NVL(A.TRSV_YN,'N'),'N',1,0) ,0)) TUE_TRSV
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'4', DECODE(NVL(A.TRSV_YN,'N'),'N',1,0) ,0)) WED_TRSV
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'5', DECODE(NVL(A.TRSV_YN,'N'),'N',1,0) ,0)) THU_TRSV
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'6', DECODE(NVL(A.TRSV_YN,'N'),'N',1,0) ,0)) FRI_TRSV
        , SUM(DECODE(TO_CHAR(A.RSV_DTM,'D'),'7', DECODE(NVL(A.TRSV_YN,'N'),'N',1,0) ,0)) SAT_TRSV
        ,  listagg(DECODE(TO_CHAR(A.RSV_DTM,'D'),'2',TO_CHAR(A.RSV_DTM,'YYYY-MM-DD') || DECODE(NVL(A.TRSV_YN,'N'), 'Y',' 가) : ' || A.RSV_PT_NO || '/' || PT_NM,''),''),chr(13)) within group (order by A.RSV_DTM) MON_DAYS
           ,  listagg(DECODE(TO_CHAR(A.RSV_DTM,'D'),'3',TO_CHAR(A.RSV_DTM,'YYYY-MM-DD') || DECODE(NVL(A.TRSV_YN,'N'), 'Y',' 가) : ' || A.RSV_PT_NO || '/' || PT_NM,''),''),chr(13)) within group (order by A.RSV_DTM) TUE_DAYS
           ,  listagg(DECODE(TO_CHAR(A.RSV_DTM,'D'),'4',TO_CHAR(A.RSV_DTM,'YYYY-MM-DD') || DECODE(NVL(A.TRSV_YN,'N'), 'Y',' 가) : ' || A.RSV_PT_NO || '/' || PT_NM,''),''),chr(13)) within group (order by A.RSV_DTM) WED_DAYS
           ,  listagg(DECODE(TO_CHAR(A.RSV_DTM,'D'),'5',TO_CHAR(A.RSV_DTM,'YYYY-MM-DD') || DECODE(NVL(A.TRSV_YN,'N'), 'Y',' 가) : ' || A.RSV_PT_NO || '/' || PT_NM,''),''),chr(13)) within group (order by A.RSV_DTM) THU_DAYS
           ,  listagg(DECODE(TO_CHAR(A.RSV_DTM,'D'),'6',TO_CHAR(A.RSV_DTM,'YYYY-MM-DD') || DECODE(NVL(A.TRSV_YN,'N'), 'Y',' 가) : ' || A.RSV_PT_NO || '/' || PT_NM,''),''),chr(13)) within group (order by A.RSV_DTM) FRI_DAYS
           ,  listagg(DECODE(TO_CHAR(A.RSV_DTM,'D'),'7',TO_CHAR(A.RSV_DTM,'YYYY-MM-DD') || DECODE(NVL(A.TRSV_YN,'N'), 'Y',' 가) : ' || A.RSV_PT_NO || '/' || PT_NM,''),''),chr(13)) within group (order by A.RSV_DTM) SAT_DAYS
        , A.RHRM_CD
        , MAX(DECODE(TO_CHAR(A.RSV_DTM,'D'),'2', DECODE(NVL(A.RHTR_TP_CD,''),'M','M','') ,'')) MON_RHTR_TP_CD
        , MAX(DECODE(TO_CHAR(A.RSV_DTM,'D'),'3', DECODE(NVL(A.RHTR_TP_CD,''),'M','M','') ,'')) TUE_RHTR_TP_CD
        , MAX(DECODE(TO_CHAR(A.RSV_DTM,'D'),'4', DECODE(NVL(A.RHTR_TP_CD,''),'M','M','') ,'')) WED_RHTR_TP_CD
        , MAX(DECODE(TO_CHAR(A.RSV_DTM,'D'),'5', DECODE(NVL(A.RHTR_TP_CD,''),'M','M','') ,'')) THU_RHTR_TP_CD
        , MAX(DECODE(TO_CHAR(A.RSV_DTM,'D'),'6', DECODE(NVL(A.RHTR_TP_CD,''),'M','M','') ,'')) FRI_RHTR_TP_CD
        , MAX(DECODE(TO_CHAR(A.RSV_DTM,'D'),'7', DECODE(NVL(A.RHTR_TP_CD,''),'M','M','') ,'')) SAT_RHTR_TP_CD
     FROM MSTRHSLD A 
        , PCTPCPAM_DAMO P
        , (SELECT /*+ leading(o) use_nl(o p) index(o MSTRHODD_si09) */
                  O.HSP_TP_CD
                , O.RSV_DT
                , P.RHRM_CD 
             FROM MSTRHODD O
                , MSTRHTCD P
      WHERE O.HSP_TP_CD = :HIS_HSP_TP_CD
        AND O.PT_NO = :PT_NO
        AND O.ORD_DT = TO_DATE(:ORD_DT,'YYYY-MM-DD')
        AND O.RSV_DT BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') 
        AND O.RSV_DT &gt;= TRUNC(SYSDATE)
        AND O.ODDSC_TP_CD ='C'
        AND O.RSV_THRP_SID IS NULL
        AND INSTR(:SEL_DAY , TO_CHAR(RSV_DT,'D')) &gt; 0
        AND O.TRP_RSV_DTM IS NULL
        AND O.RHTR_ORD_CD = :RHTR_ORD_CD
        AND O.RHTR_ORD_SEQ = :RHTR_ORD_SEQ
        AND P.RHTR_ORD_CD = O.RHTR_ORD_CD
                       AND P.HSP_TP_CD = O.HSP_TP_CD
                       ) Z
    WHERE A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
      AND A.RSV_PT_NO = P.PT_NO(+)
      AND A.RSV_DTM &gt;= TRUNC(SYSDATE)
      AND A.HSP_TP_CD = :HIS_HSP_TP_CD
      AND INSTR(:SEL_DAY , TO_CHAR(A.RSV_DTM,'D')) &gt; 0
      AND A.SCHD_RSV_SEQ IS NULL
      AND A.HSP_TP_CD = Z.HSP_TP_CD
      --AND TO_CHAR(A.RSV_DTM,'YYYY-MM-DD') = TO_CHAR(Z.RSV_DT,'YYYY-MM-DD') 
      AND A.RSV_DTM BETWEEN Z.RSV_DT AND Z.RSV_DT+.99999
      AND A.RHRM_CD = Z.RHRM_CD
      --AND A.RSV_STS_TP_CD != 'B'
      AND A.RSV_STS_TP_CD = 'Y'
      --AND A.RSVP_CD_CNT IS NULL
    GROUP BY A.RTST_SID
           , A.HSP_TP_CD
        , TO_CHAR(A.RSV_DTM,'HH24:MI')
        , A.RHRM_CD) R
      , TEMP T
      , CNLRRUSD U
      , MSTRHSRD S
  WHERE R.HSP_TP_CD = S.HSP_TP_CD
    AND R.HSP_TP_CD = U.HSP_TP_CD
    AND R.RTST_SID = NVL(DECODE(:SID, '%', NULL, :SID), U.SID)
    AND R.RTST_SID = U.SID
    AND U.RTRM_DT IS NULL
    AND R.RHRM_CD = S.TYRM_CD
    AND S.USE_YN = 'Y'
    AND R.MON &gt;= T.MON
    AND R.TUE &gt;= T.TUE
    AND R.WED &gt;= T.WED
    AND R.THU &gt;= T.THU
    AND R.FRI &gt;= T.FRI
    AND R.SAT &gt;= T.SAT
    AND R.RHRM_CD = T.RHRM_CD
   ORDER BY TYRM_CD, SEQ, RSVTIME, KOR_SRNM_NM
   
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>콤보박스 멀티체크</QUERY_NAME>
    <QUERY_TEXT>xaml:

  &lt;HComboBox x:Name="cboModal" Margin="5,0,0,0" Width="100" ItemsSource="{Binding SELECTEXAMINATIONINCOMDECODE}" DisplayMemberPath="EXM_GRP_DTL_CD_NM" SelectedValuePath="EXM_GRP_DTL_CD" 
                                      SelectedValue="{Binding EXM_GRP_DTL_CD, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsCheckBoxVisible="True" CheckBoxPath="IsChecked" SelectedItem="{Binding SELECTEXAMINATIONINCOMDECODE_SEL, UpdateSourceTrigger=PropertyChanged}"
                                   SelectedIndex="{Binding ALL, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"&gt;
                                &lt;i:Interaction.Triggers&gt;
                                    &lt;!--&lt;i:EventTrigger EventName="DropDownClosed"&gt;
                                        &lt;i:InvokeCommandAction Command="{Binding MultiCheckCommand}" CommandParameter="Chk"/&gt;
                                    &lt;/i:EventTrigger&gt;--&gt;
                                    &lt;i:EventTrigger EventName="CheckBoxChecked"&gt;
                                        &lt;i:InvokeCommandAction Command="{Binding MultiAllCheckCommand}" CommandParameter="{Binding ElementName=cboModal}"/&gt;
                                    &lt;/i:EventTrigger&gt;
                                    &lt;i:EventTrigger EventName="CheckBoxUnChecked"&gt;
                                        &lt;i:InvokeCommandAction Command="{Binding MultiAllCheckCommand}" CommandParameter="{Binding ElementName=cboModal}"/&gt;
                                    &lt;/i:EventTrigger&gt;
                                &lt;/i:Interaction.Triggers&gt;
                            &lt;/HComboBox&gt;



ViewModel:
private ICommand multiAllCheckCommand;
        /// &lt;summary&gt;
        /// name         : 콤보박스 전체체크 및 해제
        /// desc         : 콤보박스 전체체크 및 해제
        /// author       : 오원빈
        /// create date  : 2021-10-19
        /// update date  : 2021-10-19
        /// &lt;/summary&gt;
        /// &lt;remarks&gt;&lt;/remarks&gt;
        public ICommand MultiAllCheckCommand
        {
            get
            {
                if (multiAllCheckCommand == null)
                    multiAllCheckCommand = new RelayCommand(p =&gt; this.MultiAllCheck(p));
                return multiAllCheckCommand;
            }
        }

/// &lt;summary&gt;
        /// name         : 콤보박스 멀티체크해제
        /// desc         : 콤보박스 멀티체크해제
        /// author       : 오원빈
        /// create date  : 2021-10-15
        /// update date  : 2021-10-15
        /// &lt;/summary&gt;
        /// &lt;remarks&gt;&lt;/remarks&gt;
        private void MultiAllCheck(object p)
        {

            HComboBox hComboBox = ((HComboBox)p);

            if (hComboBox.SelectedItems == null || hComboBox.SelectedItems.Count == 0)
            {
                hComboBox.SelectedItem = null;
            }
            else
            {
                int iMaxCnt = 0;
                IList list = hComboBox.SelectedItems;
                var selectedItems = new HSFDTOCollectionBaseObject&lt;SelectNonInterpretation_INOUT&gt;(list.Cast&lt;SelectNonInterpretation_INOUT&gt;());
                iMaxCnt = selectedItems.Count - 1;

                hComboBox.SelectedItem = selectedItems[iMaxCnt];

                if (SELECTEXAMINATIONINCOMDECODE_SEL.EXM_GRP_DTL_CD_NM == "전체")
                {
                    SELECTEXAMINATIONINCOMDECODE.ToList().ForEach(a =&gt; a.IsChecked = a.EXM_GRP_DTL_CD_NM == "전체" ? true : false);
                    EXM_GRP_DTL_CD = "";
                    return;
                }             
                else
                {
                    SELECTEXAMINATIONINCOMDECODE.ToList().ForEach(a =&gt;
                    {
                        if (a.EXM_GRP_DTL_CD_NM == "전체")
                        {
                            a.IsChecked = false;
                        }
                    });
                }
                EXM_GRP_DTL_CD = string.Join(",", this.SELECTEXAMINATIONINCOMDECODE.Where(d =&gt; (bool)d.IsChecked).Select(d =&gt; d.EXM_GRP_DTL_CD).ToList());
              
            }
        }


</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>컬렉션 데이터 일괄수정(foreach)</QUERY_NAME>
    <QUERY_TEXT>        /// &lt;summary&gt;
        /// name         : 일괄시행 및 취소
        /// desc         : 일괄시행 및 취소
        /// author       : 오원빈
        /// create date  : 2022-06-23
        /// update date  : 2022-06-23
        /// &lt;/summary&gt;
        /// &lt;remarks&gt;&lt;/remarks&gt;
        private void AllSaveExm(object p)
        {
            
            foreach (InsertExaminationImplementation_OUT item in SELECTEXAMINATIONEXECUTION_OUT)
            {
                item.EXM_PRGR_STS_CD1 = "Y";
                item.EXM_AFTER_STS_CD = "E";
            }
        }</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EAM 계정</QUERY_NAME>
    <QUERY_TEXT>SSSUP01   / cnuheam1!</QUERY_TEXT>
    <GROUP>EAM</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 공통코드</QUERY_NAME>
    <QUERY_TEXT>MSTROCOC</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>HIS Connect 실행 주소 </QUERY_NAME>
    <QUERY_TEXT>C:\eSMART\HIS\BESTCareConnect.Start.exe CCC0EMR 01 00444923 HIS.MC.DR.RM.RV.UI SelectIntegrationMedicalRecordAsk.xaml "의무기록뷰어"





/// &lt;summary&gt;
        /// name         : 다른병원 화면팝업
        /// desc         : 다른병원 화면팝업
        /// author       : 오원빈
        /// create date  : 2022-06-27
        /// update date  : 2022-06-27
        /// &lt;/summary&gt;
        /// &lt;remarks&gt;&lt;/remarks&gt;
        private void PopupOtherHosp(object o)
        {
            if (o == null) return;
            string path = @"C:\eSMART\HIS\BESTCareConnect.Start.exe";
            string hspNm = string.Empty;
            switch(o.ToString())
            {
                case "01" : 
                    hspNm = RMCommon.HSPTPCD01;
                    break;
                case "02":
                    hspNm = RMCommon.HSPTPCD02;
                    break;
                case "03":
                    hspNm = RMCommon.HSPTPCD03;
                    break;
                case "04":
                    hspNm = RMCommon.HSPTPCD04;
                    break;
            }

            using (Process p = new Process())
            {
                p.StartInfo.FileName = path;
                p.StartInfo.Arguments = string.Format("{0} {1} {2} {3} {4} \"{5}[{6}]\"", SessionManager.UserInfo.STF_NO, o.ToString(), "00000000", "HIS.MS.IV.RM.CO.UI", "SelectOrderPrescription.xaml", "오더조회", hspNm);
                p.Start();
            }
        }</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 신규처방</QUERY_NAME>
    <QUERY_TEXT>재활처방관리 -&gt; 신규 -&gt; 코드 생성. -&gt; 치료실관리 -&gt; 매칭 -&gt; 수가코드 사용중인 것인지 확인 -&gt; 기록지ID 받아서 MSTRHCDC 테이블의 MDFM_ID 에 데이터 넣어주기</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>특정 PACT_ID에 대한 환자만 부분 합본</QUERY_NAME>
    <QUERY_TEXT>EXEC :PACT_ID := '1002130781';
EXEC :OLD_PT_NO := '22630491';
EXEC :NEW_PT_NO := '21370148';
EXEC :HSP_TP_CD := '01';
--select *
--  from msermddd a
--판독결과
update msermddd a
set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
    and pt_no = :OLD_PT_NO
  and exists(
select 1
    from mooorexm x
        ,msermaad y
    where 1=1
      and x.pact_Id = :PACT_ID
      and x.ord_Id = y.ord_Id
      and x.hsp_TP_CD = y.hsp_TP_CD
      and y.hsp_TP_cd = a.hsp_TP_CD
      and y.iptn_no = a.iptn_no
      )
;
--혈관조영실
update msermrod
    set pt_no = :NEW_PT_NO
    where pact_Id = :PACT_ID
      and hsp_TP_CD = :HSP_TP_CD
      anD PT_NO = :OLD_PT_NO
;
--접수
update msermaad a
    set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
    and pt_no = :OLD_PT_NO
  and exists(
        select 1
            from mooorexm
            where 1=1
              and pact_Id = :PACT_ID
              and ord_Id = a.ord_Id
              and hsp_TP_CD = a.hsp_TP_CD
      )
;
--예약
update msermrrd a
    set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
    and pt_no = :OLD_PT_NO
  and exists(
select 1
    from mooorexm
    where 1=1
      and pact_Id = :PACT_ID
      and ord_Id = a.ord_Id
      and hsp_TP_CD = a.hsp_TP_CD
      )
;
--검사의뢰서
update MSERMMCD a
    set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
     and pt_no = :OLD_PT_NO
     and exists(
           select 1
             from mooorexm
            where 1=1
              and pact_Id = :PACT_ID
              AND EXM_RFFM_IPTN_NO = a.ippr_id
              and ord_Cd = a.ord_Cd
              and ord_dt = a.ord_dt
              and hsp_TP_CD = a.hsp_TP_CD
            )
;</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>컬럼 커스터마이징 저장테이블</QUERY_NAME>
    <QUERY_TEXT>select *
    from CCCCCLSD
where hsp_TP_Cd='01'
 and APY_PRGM_NM = 'HIS.MS.IV.RM.CO.UI.SelectOrderPrescription'
;
delete CCCCCLSD
where hsp_TP_Cd='01'
 and APY_PRGM_NM = 'HIS.MS.IV.RM.CO.UI.SelectOrderPrescription'</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수가담당 선생님 연락처</QUERY_NAME>
    <QUERY_TEXT>학동 : 안애현 5326
빛고을 : 오재희  
치과병원 : 장유미 </QUERY_TEXT>
    <GROUP>수가</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 예약등록</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.RS.UpdateMstrhoddRsvALL"&gt;
&lt;!--
    Clss :  text
    Desc : 재활치료처방 패턴 예약
     Author : LCD
    Create date : 2019-07-22
    Update date :  
--&gt;
PC_MST_MSTRHODD_RSV_UPDATE_All

&lt;/sql&gt;


PROCEDURE      PC_MST_MSTRHODD_RSV_UPDATE_All ( IN_PT_NO                  IN VARCHAR2   -- 환자번호  
                                              , IN_RHRM_CD                IN VARCHAR2   -- 치료실
                                              , IN_RTST_SID               IN VARCHAR2   -- 치료사직원식별id
                                              , IN_ORD_DT                 IN VARCHAR2   -- 처방 발행일
                                              , IN_RSV_TM                 IN VARCHAR2   -- 예약 시분
                                              , IN_RSV_FROM               IN VARCHAR2   -- 예약일 FROM
                                              , IN_RSV_TO                 IN VARCHAR2   -- 예약일 TO
                                              , IN_RHTR_ORD_CD            IN VARCHAR2   -- 치료코드 
                                              , IN_SEL_DAY                IN VARCHAR2   -- 선택요일
                                              , IN_ORD_PBR_STF_NO         IN VARCHAR2   -- 발행의 직원번호
                                              , IN_RHTR_ORD_SEQ           IN NUMBER     -- 재활처방SEQ 
                                              , IN_GRP_RSV_YN             IN VARCHAR2   -- 그룹예약 여부
                                              , IN_RSV_SLOT_SEQ           IN NUMBER     -- 예약슬롯순번 
                                              , IN_MAX_ORD_DT             IN VARCHAR2   -- 처방 최대일자
                                              , IN_RSV_SLOT_CNT           IN NUMBER     -- 슬롯카운터 
                                              , HIS_HSP_TP_CD             IN VARCHAR2 
                                              , HIS_STF_NO                IN VARCHAR2
                                              , HIS_PRGM_NM               IN VARCHAR2
                                              , HIS_IP_ADDR               IN VARCHAR2 
                                              , IO_ERRYN                  IN OUT VARCHAR2 -- 에러여부
                                              , IO_ERRMSG                 IN OUT VARCHAR2 )
                               
/**********************************************************************************************
 *    서비스이름   : PC_MST_MSTRHODD_RSV_UPDATE_All
 *    최초 작성일  : 2019-07-19
 *    최초 작성자  : LCD
 *    Description : 재활 처방 코디 패던 예약 
 *    AS-IS       : 
 *    Update      : 
 **********************************************************************************************/                               

IS  
    G_RHTR_ORD_MTCH_SEQ         NUMBER := NULL;     --재활치료실
    G_RSV_SLOT_SEQ              NUMBER := 0;     --재활예약슬롯SEQ
    G_RSV_SLOT_SEQ_CNT          NUMBER := 0;     --재활예약슬롯SEQ CNT 
    G_RSV_DTM_TMP               DATE      := NULL; 
    G_RSV_DTM_CNT               NUMBER := 0; 
    G_SAME_RSV_DTM_EXIST        NUMBER := 0;
    G_RSV_CHK                   NUMBER := 0; 
    G_RSVP_YN                   VARCHAR2(1) := 'N';
    G_RSVP_CD_CNT               NUMBER := 0;
    G_CNT                       NUMBER := 1;
    G_CHK_MSTRHSUD              VARCHAR2(1) := 'N'; 
    G_ORD_ID                    VARCHAR2(50) := NULL; --처방ID
    D_CNT                       NUMBER := 0; 
   
BEGIN     
    --환자의 현재상태와 처방체크    
    --예약하려고 하는 시간(시작시간)에, 다른 치료사의 예약이 이미 존재하지는 않는지 확인
    BEGIN
        SELECT /* PC_MST_MSTRHODD_RSV_UPDATE01 */
                COUNT(*)
           INTO G_SAME_RSV_DTM_EXIST
           FROM MSTRHODD
          WHERE PT_NO = IN_PT_NO
            AND RSV_DT BETWEEN TO_DATE(IN_RSV_FROM, 'YYYYMMDD') AND TO_DATE(IN_RSV_TO, 'YYYYMMDD') 
            AND ODDSC_TP_CD = 'C'
            AND RSV_THRP_SID IS NOT NULL
            AND NVL(RSV_THRP_SID, 'XX') &lt;&gt; IN_RTST_SID
            AND TO_CHAR(TRP_RSV_DTM,'HH24:MI') = IN_RSV_TM 
            AND INSTR(IN_SEL_DAY , TO_CHAR(RSV_DT,'D')) &gt; 0
            AND HSP_TP_CD = HIS_HSP_TP_CD
            ;
            
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN
                    G_SAME_RSV_DTM_EXIST := 0;
    END;  
    
    IF G_SAME_RSV_DTM_EXIST &gt; 0 THEN
        IO_ERRYN  := 'Y';
        IO_ERRMSG := '예약하려는 동일한 날짜와 시간에, 다른 치료사의 다른 치료 예약이 이미 존재합니다!';
        RETURN;
    END IF; 

    G_SAME_RSV_DTM_EXIST := 0; 
       
    BEGIN
        SELECT 
                COUNT(*)
           INTO G_SAME_RSV_DTM_EXIST
           FROM MSTRHODD A, MSTRHTCD B
          WHERE A.PT_NO = IN_PT_NO
            AND A.RSV_DT BETWEEN TO_DATE(IN_RSV_FROM, 'YYYYMMDD') AND TO_DATE(IN_RSV_TO, 'YYYYMMDD') 
            AND A.ODDSC_TP_CD = 'C'
            AND A.RSV_THRP_SID IS NOT NULL

            AND INSTR(IN_SEL_DAY , TO_CHAR(A.RSV_DT,'D')) &gt; 0
            AND A.HSP_TP_CD = HIS_HSP_TP_CD
            AND B.HSP_TP_CD = A.HSP_TP_CD
            AND B.RHRM_CD = A.RHRM_CD
            AND B.RHTR_ORD_CD =    A.RHTR_ORD_CD
--            AND IN_RSV_TM BETWEEN TO_CHAR(A.TRP_RSV_DTM ,'HH24:MI') AND  TO_CHAR(A.TRP_RSV_DTM + B.REQR_TM/(24*60),'HH24:MI')
            AND ((NVL(RSV_THRP_SID, 'XX') &lt;&gt; IN_RTST_SID AND IN_RSV_TM BETWEEN TO_CHAR(A.TRP_RSV_DTM ,'HH24:MI') AND  TO_CHAR(A.TRP_RSV_DTM + B.REQR_TM/(24*60),'HH24:MI'))
                    OR (NVL(RSV_THRP_SID, 'XX') = IN_RTST_SID AND IN_RSV_TM BETWEEN TO_CHAR(A.TRP_RSV_DTM + 1/(24*60),'HH24:MI') AND  TO_CHAR(A.TRP_RSV_DTM + B.REQR_TM/(24*60),'HH24:MI'))                    
                    )
            ;
            
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN
                    G_SAME_RSV_DTM_EXIST := 0;
    END;                          --20201229 김슬기 소요시간 계산하여 중복예약 금지
    
    IF G_SAME_RSV_DTM_EXIST &gt; 0 THEN
        IO_ERRYN  := 'Y';
        IO_ERRMSG := '예약하려는 동일한 날짜의 치료시간대에  다른 치료 예약이 이미 존재합니다!';
        RETURN;
    END IF; 
   
    BEGIN
        SELECT COUNT(*) 
          INTO G_RSV_CHK
          FROM MSTRHSLD R
             , (SELECT A.RSV_DT
                     , A.HSP_TP_CD
                     , T.RHRM_CD
                  FROM MSTRHODD A 
                     , MSTRHCDC S
                     , MSTRHTCD T
                 WHERE 1=1
                   AND A.HSP_TP_CD = HIS_HSP_TP_CD
                   AND A.PT_NO = IN_PT_NO
                   AND A.ORD_DT = TO_DATE(IN_ORD_DT,'YYYY-MM-DD')
                   AND A.ODDSC_TP_CD ='C'
                   AND A.RSV_THRP_SID IS NULL
                   AND A.TRP_RSV_DTM IS NULL
                   AND A.RSV_DT &gt;= TRUNC(SYSDATE)
                   AND A.RHTR_ORD_CD = IN_RHTR_ORD_CD
                   AND A.RHTR_ORD_SEQ = IN_RHTR_ORD_SEQ
                   AND S.RHTR_ORD_CD = A.RHTR_ORD_CD
                   AND S.HSP_TP_CD = A.HSP_TP_CD
                   AND S.USE_YN = 'Y'
                   AND T.RHRM_CD = IN_RHRM_CD
                   AND T.RHTR_ORD_CD = S.RHTR_ORD_CD
                   AND T.HSP_TP_CD = S.HSP_TP_CD) O
         WHERE R.RHRM_CD = IN_RHRM_CD
           AND R.HSP_TP_CD = HIS_HSP_TP_CD
           AND TO_CHAR(R.RSV_DTM,'HH24:MI') = IN_RSV_TM
           AND R.RTST_SID = IN_RTST_SID
           AND R.RSV_DTM BETWEEN TO_DATE(IN_RSV_FROM, 'YYYYMMDD') AND TO_DATE(IN_RSV_TO, 'YYYYMMDD') + 0.99999
           AND R.RSV_DTM &gt;= TRUNC(SYSDATE)
           AND INSTR(IN_SEL_DAY , TO_CHAR(R.RSV_DTM,'D')) &gt; 0
           AND ((IN_GRP_RSV_YN = 'N' AND R.SCHD_RSV_SEQ IS NULL)
                OR (IN_GRP_RSV_YN = 'Y' AND R.RSV_PT_NO = IN_PT_NO
                                        AND R.BTCH_RSV_YN = 'N'))
           AND O.HSP_TP_CD = R.HSP_TP_CD 
           AND NVL(R.RSVP_CD_CNT, NVL(IN_RSV_SLOT_CNT,0)) = NVL(IN_RSV_SLOT_CNT,0)                       ----------------------------------------슬롯카운터관련작업
           AND O.RHRM_CD = R.RHRM_CD
           AND NVL(R.TRSV_YN, 'N') = 'N'            --가에약 제외.
           AND O.RSV_DT = TO_CHAR(R.RSV_DTM,'YYYY-MM-DD')
           AND (R.RSV_DTM , R.RSV_DY_SEQ) IN (SELECT RSV_DTM , MIN(RSV_DY_SEQ)
                                                FROM MSTRHSLD A
                                               WHERE HSP_TP_CD = HIS_HSP_TP_CD
                                                 AND RTST_SID = IN_RTST_SID
                                                 AND RHRM_CD = IN_RHRM_CD
                                                 AND TO_CHAR(A.RSV_DTM,'HH24:MI') = IN_RSV_TM
                                                 AND RSV_DTM BETWEEN TO_DATE(IN_RSV_FROM, 'YYYYMMDD') AND TO_DATE(IN_RSV_TO, 'YYYYMMDD') + 0.99999
                                                 AND NVL(A.TRSV_YN,'N') ='N'            --가에약 제외. 
                                                 AND((IN_GRP_RSV_YN = 'N' AND A.SCHD_RSV_SEQ IS NULL)
                                                      OR(IN_GRP_RSV_YN = 'Y' AND A.RSV_PT_NO = IN_PT_NO))
                                                 AND NVL(A.RSVP_CD_CNT, NVL(IN_RSV_SLOT_CNT,0)) = NVL(IN_RSV_SLOT_CNT,0)                ----------------------------------------슬롯카운터관련작업
                                               GROUP BY RSV_DTM);
        EXCEPTION 
             WHEN NO_DATA_FOUND THEN
                 G_RSV_CHK := 0;    
    END;  
    
    IF G_RSV_CHK = 0 THEN
        IO_ERRYN  := 'Y';
        IO_ERRMSG := '예약가능한 슬롯이 없습니다. 가예약 및 슬롯카운터 정보 확인 부탁드립니다.!!';
        RETURN;
    END IF;  
    
    BEGIN
          UPDATE MSTRHSLD A
             SET RSV_PT_NO =     IN_PT_NO
                ,ORD_DT = TO_DATE(IN_ORD_DT ,'YYYY-MM-DD')
                ,RSV_STS_TP_CD = 'B'
                ,TRSV_YN = 'Y'
         WHERE HSP_TP_CD = HIS_HSP_TP_CD
            AND RTST_SID = IN_RTST_SID
            AND TO_CHAR(RSV_DTM,'HH24:MI') = IN_RSV_TM
            AND INSTR(IN_SEL_DAY, TO_CHAR(RSV_DTM,'D')) &gt; 0
            AND RSV_DTM BETWEEN TO_DATE(IN_MAX_ORD_DT, 'YYYY-MM-DD') + 1 AND TO_DATE(IN_RSV_TO, 'YYYYMMDD') + 0.99999
            AND RSV_STS_TP_CD = 'Y'
            AND (RSV_DTM , RSV_DY_SEQ) IN (SELECT RSV_DTM , MIN(RSV_DY_SEQ)
                                             FROM MSTRHSLD
                                            WHERE HSP_TP_CD = A.HSP_TP_CD
                                              AND RTST_SID = A.RTST_SID
                                              AND RSV_DTM = A.RSV_DTM
                                              AND RSV_STS_TP_CD = 'Y'
                                              AND SCHD_RSV_SEQ IS NULL
                                            GROUP BY RSV_DTM);
    
        EXCEPTION
            WHEN OTHERS THEN
                IO_ERRYN := 'Y';
                IO_ERRMSG := '재활치료 가예약 중 에러발생!(MSTRHSLD) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
        RETURN;        
    END;
        
    BEGIN    
        FOR REC IN (               
                   SELECT NVL(O.SCHD_CRE_SEQ, 0 )  SCHD_CRE_SEQ
                        , DECODE(O.PT_NO,NULL,'Y','') TRSV_YN
                        , R.RSV_DTM
                        , R.RTST_SID
                        , R.RSV_DY_SEQ
                        , R.RSV_SLOT_SEQ
                        , O.WD_DEPT_CD 
                        , O.ORD_PBR_STF_NO
                        , O.PT_HME_DEPT_CD 
                        , O.RHTR_MIF_CD
                        , TO_CHAR(O.RSV_DT,'YYYY-MM-DD') RSV_DT 
                        , O.RHRM_CD
                        , O.MED_MIFI_TP_CD
                    FROM MSTRHSLD R
                       , (SELECT A.PT_NO
                               , A.SCHD_CRE_SEQ
                               , A.RSV_DT   
                               , A.WD_DEPT_CD
                               , A.ORD_PBR_STF_NO
                               , A.PT_HME_DEPT_CD
                               , T.RHRM_CD 
                               , A.MED_MIFI_TP_CD
                               , S.RHTR_MIF_CD
                               , S.MIF_NM
                               , A.HSP_TP_CD
                            FROM MSTRHODD A 
                               , MSTRHCDC S
                               , MSTRHTCD T
                           WHERE 1=1                        
                             AND S.USE_YN = 'Y'
                             AND A.RHTR_ORD_CD = S.RHTR_ORD_CD
                             AND A.HSP_TP_CD = S.HSP_TP_CD  
                             AND A.HSP_TP_CD = HIS_HSP_TP_CD
                             AND A.PT_NO = IN_PT_NO
                             AND A.ORD_DT = TO_DATE(IN_ORD_DT,'YYYY-MM-DD')
                             AND A.ODDSC_TP_CD ='C'
                             AND A.RSV_THRP_SID IS NULL
                             AND A.TRP_RSV_DTM IS NULL
                             AND A.RSV_DT &gt;= TRUNC(SYSDATE)
                             AND A.RHTR_ORD_CD = IN_RHTR_ORD_CD
                             AND A.RHTR_ORD_SEQ = IN_RHTR_ORD_SEQ
                             AND T.RHRM_CD = IN_RHRM_CD
                             AND T.RHTR_ORD_CD = S.RHTR_ORD_CD
                             AND T.HSP_TP_CD = S.HSP_TP_CD) O
                   WHERE R.RHRM_CD = IN_RHRM_CD
                     AND R.HSP_TP_CD = HIS_HSP_TP_CD
                     AND TO_CHAR(R.RSV_DTM,'HH24:MI') = IN_RSV_TM
                     AND R.RTST_SID = IN_RTST_SID
                     AND R.RSV_DTM BETWEEN TO_DATE(IN_RSV_FROM, 'YYYYMMDD') AND TO_DATE(IN_RSV_TO, 'YYYYMMDD') + 0.99999
                     AND R.RSV_DTM &gt;= TRUNC(SYSDATE)
                     AND INSTR(IN_SEL_DAY , TO_CHAR(R.RSV_DTM,'D')) &gt; 0
                    -- AND R.SCHD_RSV_SEQ IS NULL 
                     AND ((IN_GRP_RSV_YN = 'N' AND R.SCHD_RSV_SEQ IS NULL)
                         OR (IN_GRP_RSV_YN = 'Y' AND R.RSV_PT_NO = IN_PT_NO
                                                 AND R.BTCH_RSV_YN = 'N'))
                     AND O.HSP_TP_CD(+) = R.HSP_TP_CD
                     AND O.RHRM_CD(+) = R.RHRM_CD   
                     AND NVL(R.RSVP_CD_CNT, NVL(IN_RSV_SLOT_CNT,0)) = NVL(IN_RSV_SLOT_CNT,0)                       ----------------------------------------슬롯카운터관련작업
                     AND NVL(R.TRSV_YN,'N') = 'N'            --가에약 제외. 
                    -- AND R.RSV_STS_TP_CD = 'Y'
                    -- AND NVL(R.BTCH_RSV_YN,'N') != 'A'  
                     AND O.RSV_DT(+) = TO_CHAR(R.RSV_DTM,'YYYY-MM-DD')
                     AND (R.RSV_DTM , R.RSV_DY_SEQ) IN  (SELECT RSV_DTM , MIN(RSV_DY_SEQ)
                                                           FROM MSTRHSLD A
                                                          WHERE HSP_TP_CD = HIS_HSP_TP_CD
                                                            AND RTST_SID = IN_RTST_SID
                                                            AND RHRM_CD = IN_RHRM_CD
                                                            AND TO_CHAR(A.RSV_DTM,'HH24:MI') = IN_RSV_TM
                                                            AND RSV_DTM BETWEEN TO_DATE(IN_RSV_FROM, 'YYYYMMDD') AND TO_DATE(IN_RSV_TO, 'YYYYMMDD') + 0.99999
                                                           -- AND SCHD_RSV_SEQ IS NULL  
                                                           -- AND NVL(BTCH_RSV_YN,'N') != 'A' 
                                                            AND NVL(A.TRSV_YN,'N') = 'N'            --가에약 제외. 
                                                            AND NVL(A.RSVP_CD_CNT, NVL(IN_RSV_SLOT_CNT,0)) = NVL(IN_RSV_SLOT_CNT,0)                       ----------------------------------------슬롯카운터관련작업
                                                            AND((IN_GRP_RSV_YN = 'N' AND A.SCHD_RSV_SEQ IS NULL)
                                                                OR(IN_GRP_RSV_YN = 'Y' AND A.RSV_PT_NO = IN_PT_NO))
                                                          GROUP BY RSV_DTM
                                                         )     
                    )
        LOOP
                        
            BEGIN
                G_ORD_ID := XMED.PKG_MOO_SAVEORDERS.FN_GETNEXTORDERID;
                EXCEPTION
                    WHEN OTHERS THEN  
                         IO_ERRYN  := 'Y';       
                           IO_ERRMSG := '재활 치료 처방 등록 시 처방ID 발생 에러('|| G_ORD_ID ||') '|| SQLCODE || CHR(13) || ' ' || SQLERRM;
                    RETURN;
            END;
              
            IF IN_GRP_RSV_YN = 'N' THEN 
                
                IF G_RSV_DTM_TMP = REC.RSV_DTM THEN
                   G_RSV_DTM_CNT := G_RSV_DTM_CNT + 1; 
                ELSE
                   G_RSV_DTM_CNT := 0;
                END IF;
                                
                IF G_RSV_DTM_CNT = 0 THEN            
                    BEGIN
                        UPDATE /* PC_MST_MSTRHODD_RSV_UPDATE01 */
                              MSTRHSLD 
                          SET RSV_PT_NO     = IN_PT_NO
                            , ORD_DT        = TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
                            , SCHD_RSV_SEQ  = DECODE(REC.SCHD_CRE_SEQ,0,NULL , REC.SCHD_CRE_SEQ)
                            , RSV_STS_TP_CD = 'B'
                            , LSH_STF_NO    = HIS_STF_NO
                            , LSH_DTM       = SYSDATE
                            , LSH_PRGM_NM   = HIS_PRGM_NM
                            , LSH_IP_ADDR   = HIS_IP_ADDR
                            , TRSV_YN       = REC.TRSV_YN
                            , BTCH_RSV_YN   = 'N'  
                            , RHTR_ORD_ID   = G_ORD_ID  
                       WHERE RTST_SID     = IN_RTST_SID
                         AND RSV_DTM      = REC.RSV_DTM
                         AND RSV_DY_SEQ   = REC.RSV_DY_SEQ
                         AND RSV_SLOT_SEQ = REC.RSV_SLOT_SEQ
                         AND HSP_TP_CD    = HIS_HSP_TP_CD
                         AND RHRM_CD      = REC.RHRM_CD
                         AND NVL(RSVP_CD_CNT, NVL(IN_RSV_SLOT_CNT,0)) = NVL(IN_RSV_SLOT_CNT,0)                       ----------------------------------------슬롯카운터관련작업
                         AND NVL(TRSV_YN,'N') ='N'            --가에약 제외. 
                         --AND RSV_STS_TP_CD = 'Y'
                            ;
                        
                        EXCEPTION
                            WHEN OTHERS THEN
                                IO_ERRYN := 'Y';
                                IO_ERRMSG := '재활치료예약 중 에러발생!(MSTRHSLD) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                        RETURN;                                             
                    END;
                    
                    ----------------------------------------------------------------------------------------------------------------------------------치료처방의 슬롯카운터
                    BEGIN                                
                            BEGIN
                                SELECT /* PC_MST_MSTRHODD_RSV_UPDATE01 */
                                       MAX(NVL(RSVP_CD_CNT,0))  
                                  INTO G_RSVP_CD_CNT 
                                  FROM MSTRHSLD
                                 WHERE RTST_SID     = IN_RTST_SID
                                   AND RSV_DTM      = REC.RSV_DTM
                                  -- AND RSV_DY_SEQ   = REC.RSV_DY_SEQ
                                  -- AND RSV_SLOT_SEQ = REC.RSV_SLOT_SEQ
                                   AND HSP_TP_CD    = HIS_HSP_TP_CD
                                   AND RHRM_CD      = REC.RHRM_CD
                                   AND NVL(TRSV_YN,'N') ='N'            --가에약 제외.
                                                   ;
                                    EXCEPTION 
                                        WHEN NO_DATA_FOUND THEN
                                            IO_ERRYN := 'Y';
                                            IO_ERRMSG := '재활치료예약 중 에러발생!(MSTRHSLD) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                                    RETURN;                                             
                            END; 
                            
                            IF G_RSVP_CD_CNT = 0 AND NVL(IN_RSV_SLOT_CNT,0) &gt; 1 THEN                                  
                                BEGIN
                                    WHILE G_CNT &lt; IN_RSV_SLOT_CNT LOOP
                                        G_CNT := G_CNT + 1;                 
                                        
                                       BEGIN                                       
                                               BEGIN 
                                                   SELECT COUNT(*)
                                                  INTO D_CNT
                                                  FROM MSTRHSLD
                                                 WHERE RTST_SID = IN_RTST_SID
                                                   AND RSV_DTM  = REC.RSV_DTM
                                                   AND HSP_TP_CD    = HIS_HSP_TP_CD
                                                   AND RHRM_CD      = REC.RHRM_CD 
                                                   AND RSV_DY_SEQ   = G_CNT
                                                   AND RSV_SLOT_SEQ = 1 ;  
                                                   
                                              EXCEPTION
                                                    WHEN NO_DATA_FOUND THEN
                                                        D_CNT := 0;
                                                    WHEN OTHERS THEN
                                                        IO_ERRYN := 'Y';
                                                        IO_ERRMSG := '재활치료예약 중 에러발생 슬롯카운터 증가!(조회) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                                                        RETURN;                                                     
                                               END ; 
                                                                                                                                          
                                               IF D_CNT = 0 THEN                                               
                                                   BEGIN                                                    
                                                   INSERT /* PC_MST_MSTRHODD_RSV_UPDATE01 */
                                                         INTO MSTRHSLD
                                                       (
                                                            RTST_SID
                                                          , RSV_DTM
                                                          , RSV_DY_SEQ
                                                          , RSV_SLOT_SEQ
                                                          , STTP_CD
                                                          , RSV_PT_NO
                                                          , ORD_DT
                                                          , SCHD_RSV_SEQ
                                                          , RSV_STS_TP_CD
                                                          , BTCH_RSV_YN 
                                                          , RHRM_CD                                                      --재활치료실코드
                                                          , RHTR_TEAM_TP_CD
                                                          , RHBT_SLOT_TP_CD
                                                          , HSP_TP_CD
                                                          , LSH_STF_NO               
                                                          , LSH_DTM    
                                                          , LSH_PRGM_NM
                                                          , LSH_IP_ADDR              
                                                          , FSR_STF_NO               
                                                          , FSR_DTM 
                                                          , FSR_PRGM_NM
                                                          , FSR_IP_ADDR 
                                                          , RSVP_CD_CNT                              
                                                       )
                                                       SELECT
                                                              RTST_SID
                                                            , RSV_DTM
                                                            , G_CNT   --&gt; 기존 슬롯번호가 이상하게 따진게 많아서 700번대를 슬롯카운터 생성된걸로 ...하드코딩 하는게 맞는지 궁금해서 수정함 2021-12-15
                                                            , 1
                                                            , STTP_CD
                                                            , NULL
                                                            , NULL
                                                            , NULL
                                                            , 'Y'
                                                            , 'C'                   --추가슬롯 관리 구분.
                                                            , RHRM_CD
                                                            , RHTR_TEAM_TP_CD
                                                            , RHBT_SLOT_TP_CD
                                                            , HIS_HSP_TP_CD
                                                            , HIS_STF_NO
                                                            , SYSDATE
                                                            , '슬롯카운터증가'
                                                            , HIS_IP_ADDR
                                                            , HIS_STF_NO
                                                            , SYSDATE
                                                            , '슬롯카운터증가'
                                                            , HIS_IP_ADDR 
                                                            , IN_RSV_SLOT_CNT                                                
                                                         FROM MSTRHSLD
                                                        WHERE RTST_SID     = IN_RTST_SID
                                                          AND RSV_DTM      = REC.RSV_DTM
                                                          AND RSV_DY_SEQ   = REC.RSV_DY_SEQ
                                                          AND RSV_SLOT_SEQ = REC.RSV_SLOT_SEQ
                                                          AND HSP_TP_CD    = HIS_HSP_TP_CD
                                                          AND RHRM_CD      = REC.RHRM_CD 
                                                          AND RSV_DY_SEQ &lt; 100
                                                          AND NVL(BTCH_RSV_YN,'N') != 'A' 
                                                          AND NVL(TRSV_YN,'N') ='N'            --가에약 제외.
                                                     GROUP BY RTST_SID, RSV_DTM, RSV_DY_SEQ, RHRM_CD, RHTR_TEAM_TP_CD, RHBT_SLOT_TP_CD, STTP_CD;    
                                                    
                                                    EXCEPTION
                                                        WHEN OTHERS THEN
                                                            IO_ERRYN := 'Y';
                                                            IO_ERRMSG := '재활치료예약 중 에러발생 슬롯카운터 증가!(저장) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                                                            RETURN;                                           
                                                   END;
                                               END IF;                                                       
                                        END;   
                                                
                                        EXIT WHEN G_CNT = IN_RSV_SLOT_CNT;    
                                        
                                    END LOOP;
                                END;  
                                
                                G_CNT := 1;
                                
                            END IF;                                                     
                    END;
             -----------------------------------------------------------------------------------
                      
                ELSE
                    BEGIN
                       INSERT /* PC_MST_MSTRHODD_RSV_UPDATE01 */
                             INTO MSTRHSLD
                           (
                                RTST_SID
                              , RSV_DTM
                              , RSV_DY_SEQ
                              , RSV_SLOT_SEQ
                              , STTP_CD
                              , RSV_PT_NO
                              , ORD_DT
                              , SCHD_RSV_SEQ
                              , RSV_STS_TP_CD
                              , BTCH_RSV_YN 
                              , RHRM_CD                                                      --재활치료실코드
                              , RHTR_TEAM_TP_CD
                              , RHBT_SLOT_TP_CD
                              , HSP_TP_CD
                              , LSH_STF_NO               
                              , LSH_DTM    
                              , LSH_PRGM_NM
                              , LSH_IP_ADDR              
                              , FSR_STF_NO               
                              , FSR_DTM 
                              , FSR_PRGM_NM
                              , FSR_IP_ADDR 
                              , RSVP_CD_CNT     
                              , RHTR_ORD_ID                                             
                           )
                           SELECT
                                  RTST_SID
                                , RSV_DTM
                                , RSV_DY_SEQ
                                , (REC.RSV_SLOT_SEQ + 10 + G_RSV_DTM_CNT)
                                , STTP_CD
                                , IN_PT_NO
                                , TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
                                , DECODE(REC.SCHD_CRE_SEQ,0,NULL , REC.SCHD_CRE_SEQ)
                                , 'B'
                                , 'A'                   --추가슬롯 관리 구분.
                                , RHRM_CD
                                , RHTR_TEAM_TP_CD
                                , RHBT_SLOT_TP_CD
                                , HIS_HSP_TP_CD
                                , HIS_STF_NO
                                , SYSDATE
                                , HIS_PRGM_NM
                                , HIS_IP_ADDR
                                , HIS_STF_NO
                                , SYSDATE
                                , HIS_PRGM_NM
                                , HIS_IP_ADDR 
                                , RSVP_CD_CNT  
                                , G_ORD_ID                                                
                             FROM MSTRHSLD
                            WHERE RTST_SID     = IN_RTST_SID
                              AND RSV_DTM      = REC.RSV_DTM
                              AND RSV_DY_SEQ   = REC.RSV_DY_SEQ
                              AND RSV_SLOT_SEQ = REC.RSV_SLOT_SEQ
                              AND HSP_TP_CD    = HIS_HSP_TP_CD
                              AND RHRM_CD      = REC.RHRM_CD
                              AND NVL(BTCH_RSV_YN,'N') != 'A' 
                              AND NVL(TRSV_YN,'N') ='N'            --가에약 제외.
                         GROUP BY RTST_SID, RSV_DTM, RSV_DY_SEQ, RHRM_CD, RHTR_TEAM_TP_CD, RHBT_SLOT_TP_CD, STTP_CD, RSVP_CD_CNT
                         ORDER BY RHRM_CD
                            ;    
                        
                        EXCEPTION
                            WHEN OTHERS THEN
                                IO_ERRYN := 'Y';
                                IO_ERRMSG := G_RSV_SLOT_SEQ || ' / ' || IN_RTST_SID|| ' / ' ||REC.RSV_DTM|| ' / '  || REC.RSV_DY_SEQ|| ' / ' || REC.RSV_SLOT_SEQ|| ' / '  || REC.RHRM_CD|| ' / '  || '재활치료예약 중 에러발생2!(MSTRHSLD) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                                RETURN;                     
                    END;                  
                END IF;
                
                G_RSV_DTM_TMP := REC.RSV_DTM;
                 
            ELSE    -------------------------------------------------------------------------------------------------------
                IF G_RSV_DTM_TMP = REC.RSV_DTM THEN
                   G_RSV_DTM_CNT := G_RSV_DTM_CNT + 1; 
                ELSE
                   G_RSV_DTM_CNT := 0;
                END IF;

                IF    G_RSV_DTM_CNT = 0 THEN
                    G_RSV_SLOT_SEQ := REC.RSV_SLOT_SEQ + IN_RSV_SLOT_SEQ;       
--                ELSE
--                    G_RSV_SLOT_SEQ := REC.RSV_SLOT_SEQ + IN_RSV_SLOT_SEQ + 40 ;
                END IF;    
                                 
                BEGIN
                       INSERT /* PC_MST_MSTRHODD_RSV_UPDATE01 */
                         INTO MSTRHSLD
                       (
                            RTST_SID
                          , RSV_DTM
                          , RSV_DY_SEQ
                          , RSV_SLOT_SEQ
                          , STTP_CD
                          , RSV_PT_NO
                          , ORD_DT
                          , SCHD_RSV_SEQ
                          , RSV_STS_TP_CD
                          , BTCH_RSV_YN 
                          , RHRM_CD                                                      --재활치료실코드
                          , RHTR_TEAM_TP_CD
                          , RHBT_SLOT_TP_CD
                          , HSP_TP_CD
                          , LSH_STF_NO               
                          , LSH_DTM    
                          , LSH_PRGM_NM
                          , LSH_IP_ADDR              
                          , FSR_STF_NO               
                          , FSR_DTM 
                          , FSR_PRGM_NM
                          , FSR_IP_ADDR 
                          , RSVP_CD_CNT     
                          , RHTR_ORD_ID                                             
                       )
                       SELECT
                              RTST_SID
                            , RSV_DTM
                            , RSV_DY_SEQ
                            , G_RSV_SLOT_SEQ
                            , STTP_CD
                            , IN_PT_NO
                            , TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
                            , DECODE(REC.SCHD_CRE_SEQ,0,NULL , REC.SCHD_CRE_SEQ)
                            , 'B'
                            , 'A'                   --추가슬롯 관리 구분.
                            , RHRM_CD
                            , RHTR_TEAM_TP_CD
                            , RHBT_SLOT_TP_CD
                            , HIS_HSP_TP_CD
                            , HIS_STF_NO
                            , SYSDATE
                            , HIS_PRGM_NM
                            , HIS_IP_ADDR
                            , HIS_STF_NO
                            , SYSDATE
                            , HIS_PRGM_NM
                            , HIS_IP_ADDR
                            , RSVP_CD_CNT
                            , G_ORD_ID                                                   
                         FROM MSTRHSLD
                        WHERE RTST_SID     = IN_RTST_SID
                          AND RSV_DTM      = REC.RSV_DTM
                          AND RSV_DY_SEQ   = REC.RSV_DY_SEQ
                          AND RSV_SLOT_SEQ = REC.RSV_SLOT_SEQ
                          AND HSP_TP_CD    = HIS_HSP_TP_CD
                          AND RHRM_CD      = REC.RHRM_CD
                          AND NVL(BTCH_RSV_YN,'N') != 'A' 
                          AND NVL(TRSV_YN,'N') ='N'            --가에약 제외.
                     GROUP BY RTST_SID, RSV_DTM, RSV_DY_SEQ, RHRM_CD, RHTR_TEAM_TP_CD, RHBT_SLOT_TP_CD, STTP_CD, RSVP_CD_CNT
                     ORDER BY RHRM_CD
                        ;    
                        
                        EXCEPTION
                            WHEN OTHERS THEN
                                IO_ERRYN := 'Y';
                                IO_ERRMSG := G_RSV_SLOT_SEQ || ' / ' || IN_RTST_SID|| ' / ' ||REC.RSV_DTM|| ' / '  || REC.RSV_DY_SEQ|| ' / ' || REC.RSV_SLOT_SEQ|| ' / '  || REC.RHRM_CD|| ' / '  || '재활치료예약 중 에러발생2!(MSTRHSLD) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                                RETURN;                     
                END; 
                
                G_RSV_DTM_TMP := REC.RSV_DTM;   
                
--                IO_ERRYN := 'Y';
--            IO_ERRMSG := IN_GRP_RSV_YN || ' / ' || G_RSV_SLOT_SEQ|| ' / ' ||G_RSV_DTM_CNT|| ' / '  || REC.RSV_SLOT_SEQ|| ' / ' || G_RSV_DTM_TMP|| ' / '  || REC.RSV_DTM|| ' / '  || '재활치료예약 중 에러발생2!(MSTRHSLD) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
--            RETURN; 

            END IF;
               
            -------------------------------------------------------------------------------------------------------
            
            BEGIN
                 SELECT 'Y' 
                   INTO G_CHK_MSTRHSUD       
                   FROM MSTRHODD A, MSTRHSUD B
                  WHERE A.PT_NO = B.PT_NO
                    AND A.ORD_DT = B.ORD_DT
                    AND A.RSV_DT = B.RSV_DT
                    AND A.RHTR_MTCH_MIF_CD  = B.ORD_MTCH_MIF_CD
                    AND A.RHTR_ORD_MTCH_SEQ = B.RHTR_ORD_MTCH_SEQ
                    AND A.PT_NO        = IN_PT_NO
                    AND A.ORD_DT       = TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
                    AND A.SCHD_CRE_SEQ = REC.SCHD_CRE_SEQ
                    AND A.ODDSC_TP_CD  = 'C'
                    AND A.HSP_TP_CD    = HIS_HSP_TP_CD
                    AND B.ODDSC_TP_CD ='C' ; 
                    
                EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                          G_CHK_MSTRHSUD := 'N' ;                
            END;
                    
                BEGIN
                    SELECT NVL(MAX(RHTR_ORD_MTCH_SEQ), 0) + 1   
                      INTO G_RHTR_ORD_MTCH_SEQ       
                      FROM MSTRHSUD 
                     WHERE PT_NO = IN_PT_NO
                       AND RSV_DT = TO_DATE(REC.RSV_DT,'YYYY-MM-DD')
                       AND HSP_TP_CD = HIS_HSP_TP_CD 
                       ;
                       
                     EXCEPTION
                         WHEN NO_DATA_FOUND THEN
                              G_RHTR_ORD_MTCH_SEQ := 1 ;    
                   END;
                
                BEGIN
                    UPDATE /* PC_MST_MSTRHODD_RSV_UPDATE01 */
                           MSTRHODD
                       SET RSV_THRP_SID     = IN_RTST_SID
                         , TRP_RSV_DTM      = REC.RSV_DTM
                         , TRP_RSV_SEQ      = REC.RSV_DY_SEQ
                        -- , TRP_RSV_SLOT_SEQ = REC.RSV_SLOT_SEQ
                        -- , TRP_RSV_SLOT_SEQ = DECODE(IN_GRP_RSV_YN,'Y',G_RSV_SLOT_SEQ,'N', REC.RSV_SLOT_SEQ)
                         , TRP_RSV_SLOT_SEQ = DECODE(IN_GRP_RSV_YN,'Y',G_RSV_SLOT_SEQ,'N', DECODE(G_RSV_DTM_CNT,0, REC.RSV_SLOT_SEQ , DECODE(G_RSV_DTM_TMP , REC.RSV_DTM , (REC.RSV_SLOT_SEQ + 10 + G_RSV_DTM_CNT) , REC.RSV_SLOT_SEQ)) )
                         , RHTR_MTCH_MIF_CD = NVL(RHTR_MTCH_MIF_CD ,REC.RHTR_MIF_CD  )
                         , RHTR_ORD_MTCH_SEQ = NVL(RHTR_ORD_MTCH_SEQ , G_RHTR_ORD_MTCH_SEQ)
                         , LSH_STF_NO       = HIS_STF_NO
                         , LSH_DTM          = SYSDATE
                         , LSH_PRGM_NM      = HIS_PRGM_NM
                         , LSH_IP_ADDR      = HIS_IP_ADDR
                         
                         , RSV_ADD_DTM        = SYSDATE     --(2016-10-13, 성시중 추가) 추가된 컬럼에 정보 기록, 예약 추가 시간 
                         , RSV_ADD_STF_NO     = HIS_STF_NO  --(2016-10-13, 성시중 추가) 추가된 컬럼에 정보 기록, 예약 추가 직원번호
                         , RHTR_RSV_ADD_TP_CD = 'C'         --(2016-10-13, 성시중 추가) 추가된 컬럼에 정보 기록. 'C' -&gt; 직접 예약추가
                            
                         , RHTR_RSV_CNCL_TP_CD = ''         -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RSV_CNCL_DTM =  ''                 -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RSV_CNCL_STF_NO = ''             -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RSV_CNCL_CFMT_DTM = ''           -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RSV_CNCL_CFMT_STF_NO = ''        -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RSV_CNCL_PAST_RTST_SID = ''         -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RSV_CNCL_PAST_RSV_DTM = ''         -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RSV_CNCL_PAST_RSV_DY_SEQ = ''     -- (2016-10-13, 성시중 추가) 취소관련정보가 이미 있었을 수 있으므로, 모두 초기화함
                         , RHTR_ORD_ID  = G_ORD_ID
                         , RHRM_CD = REC.RHRM_CD
                    WHERE PT_NO        = IN_PT_NO
                      AND ORD_DT       = TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
                      AND SCHD_CRE_SEQ = REC.SCHD_CRE_SEQ
                      AND ODDSC_TP_CD  = 'C'
                      AND HSP_TP_CD    = HIS_HSP_TP_CD
                        ;
                    
                    EXCEPTION
                        WHEN OTHERS THEN
                            IO_ERRYN := 'Y';
                            IO_ERRMSG := '재활치료예약 중 에러발생!(MSTRHODD1) ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                        RETURN;                                             
                END;
                
            IF G_CHK_MSTRHSUD = 'N' THEN    --수납 정보가 없을때             
                IF REC.SCHD_CRE_SEQ &gt; 0 THEN     --가에약은 제외.                
                    BEGIN
                        XSUP.PC_MST_MSTRHSUD_INSERT ( IN_PT_NO               --환자번호 
                                                    , IN_ORD_DT              --오더발행일
                                                    , REC.RSV_DT              --치료예약일자
                                                    , ''                     --예약시분'HH24MI'(현재는 사용되지 않고 있음)
                                                    , REC.ORD_PBR_STF_NO     --발행의 직원번호
                                                    , REC.WD_DEPT_CD         --병동
                                                    , REC.PT_HME_DEPT_CD     --외래는 98.5%'RH', 1.5%만 'RCCVC'임, 입원은 20%정도가 'RCCVC'임(UI에서 SessionManager.UserInfo.AADP_CD로 입력되는 정보. 2016-01-06 현재)
                                                    , REC.RHTR_MIF_CD        --저장할 수가코드
                                                    , REC.MED_MIFI_TP_CD         --진료수가보험구분코드  --충북대 추가
                                                    , G_RHTR_ORD_MTCH_SEQ    --매칭순번
                                                    , HIS_HSP_TP_CD         
                                                    , HIS_STF_NO            
                                                    , HIS_PRGM_NM           
                                                    , HIS_IP_ADDR           
                                                    , IO_ERRYN               --에러여부
                                                    , IO_ERRMSG             );                    
                        EXCEPTION
                            WHEN OTHERS THEN
                                IO_ERRYN := 'Y';
                                IO_ERRMSG := '재활치료예약 중 에러발생!(MSTRHODD2) ERRCD = ' ||REC.SCHD_CRE_SEQ  || SQLCODE || CHR(13) || ' ' || SQLERRM;
                        RETURN;  
                    END;
                END IF;            
            END IF;        
        END LOOP;            
    END;      
END PC_MST_MSTRHODD_RSV_UPDATE_All;
</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 예약등록(수진생성)</QUERY_NAME>
    <QUERY_TEXT>PROCEDURE      PC_MST_MSTRHSUD_INSERT ( IN_PT_NO             IN VARCHAR2   --환자번호 
                                      , IN_ORD_DT            IN VARCHAR2   --오더발행일
                                      , IN_RSV_DT            IN VARCHAR2   --치료예약일자
                                      , IN_RSV_DTM           IN VARCHAR2   --예약시분'HH24MI'(현재는 사용되지 않고 있음)
                                      , IN_ORD_PBR_STF_NO    IN VARCHAR2   --발행의 직원번호
                                      , IN_WD_DEPT_CD        IN VARCHAR2   --병동
                                      , IN_PT_MED_DEPT_CD    IN VARCHAR2   --외래는 98.5%'RH', 1.5%만 'RCCVC'임, 입원은 20%정도가 'RCCVC'임(UI에서 SessionManager.UserInfo.AADP_CD로 입력되는 정보. 2016-01-06 현재)
                                      , IN_RHTR_MIF_CD       IN VARCHAR2   --저장할 수가코드
                                      , IN_MED_MIFI_TP_CD    IN VARCHAR2   --진료수가보험구분코드
                                      , IN_RHTR_ORD_MTCH_SEQ IN NUMBER     --매칭순번
                                      , HIS_HSP_TP_CD        IN VARCHAR2 
                                      , HIS_STF_NO           IN VARCHAR2
                                      , HIS_PRGM_NM          IN VARCHAR2
                                      , HIS_IP_ADDR          IN VARCHAR2 
                                      , IO_ERRYN             IN OUT VARCHAR2 --에러여부
                                      , IO_ERRMSG            IN OUT VARCHAR2 )
                               
 /**********************************************************************************************
 *    서비스이름  : PC_MST_MSTRHSUD_INSERT
 *    최초 작성일 : 2012.08.24
 *    최초 작성자 : 소병하
 *    Description : 재활치료처방 수가발행
 *    AS-IS       : SP_SRRMORDT_INSERT
 *    Update      : 2016-01-14, 성시중, 재활 하위의 센터진료과 진료가 있을 경우에도 'A2500'을 발행하지 않는 것으로 보완.
 *                : 2016-01-21, 성시중, A2500 발행하지 않는 조건 추가 보완(외래접수와 동일하게 함) 및 예외처리 안되어 에러나는 부분 보완
 *                : 2016-06-30, 성시중, CTC환자 재활치료예약시, 자비연구로 급종선택됨(-&gt;의학연구소 기본으로 변경), 신청번호 201606-00477 건
 *                : 2017-01-12, 성시중, RPY_STS_CD의 NVL 보완                                     
 *                : 2017-02-28, 성시중, JRH 재활의학과 (관절센터) 부서추가
 *                : 2017-03-10, 성시중, 퇴직일자 적용 보완
 *                : 2019-07-23, LCD, 재활 코드 변경 및 수진부서 하드코딩 제거 
 **********************************************************************************************/                               
--RSV_DTIM =&gt; RSV_DT   YYYY-MM-DD
--ORD_DTE =&gt; ORD_DT    YYYY-MM-DD
--RSV_DT =&gt; TRP_RSV_DTM   YYYY-MM-DD HH24:MI:SS
IS     
     
    IO_RPY_PACT_ID   VARCHAR2(30) := NULL;   --원무접수id 리턴
    IO_RPY_CLS_SEQ NUMBER := NULL;     
    
    IO_PACT_ID       VARCHAR2(50) := NULL;   --원무접수id 리턴                 IN  OUT ACPPRODM.PACT_ID%TYPE                   --38수납원무접수ID(접수시 발생한..)..주의 : 예약취소시는 입력값으로 던저줘야한다. 
    IO_DUTY_CLS      VARCHAR2(50) := NULL;     --             IN  OUT VARCHAR2
    ---
    G_PACT_TP_CD        VARCHAR2(1)   := NULL;
    G_ADS_DT            VARCHAR2(10)  := NULL;    --입원일, 외래 진료일
    G_ACPT_SEQ          NUMBER(4)      := 0;              
    
    G_SEL_ACPT     VARCHAR2(1) := NULL;     --무료예약 존재여부 체크  
    G_PACT_ID      VARCHAR2(50) := '';      --원무접수ID
    G_RPY_CLS_SEQ  NUMBER := NULL;          --수납유형수납순번 
    G_PME_CLS_CD   VARCHAR2(2) := NULL;     --환자급종유형코드
    G_PSE_CLS_CD   VARCHAR2(3) := NULL;     --환자보조급종유형코드
    G_CLNL_RSCH_NO VARCHAR2(10) := '';      --임상연구번호     
    G_IORD_RSN_CD  VARCHAR2(2) := '';       --원래처방사유코드(INORDCD)  
    G_CORG_CD     VARCHAR2(4) := NULL;     --계약기관코드 
    
    G_CHDR_STF_NO  VARCHAR2(8) := NULL;     --지정의사번  
    G_CHDR_SID     VARCHAR2(7) := NULL;     --지정의직원식별id 
    G_CHDR_YN      VARCHAR2(1) := NULL;   
    G_RSV_SUGA_CHK VARCHAR2(1) := NULL;    --재진기본진찰료 유무 
    G_ORD_SUGA_CHK VARCHAR2(1) := NULL;    --치료 처방 코드 재진기본진찰료 유무 --2013-08-21 임재득 추가  : 치료 코드일경우만 A2500이 등록이 되어야함. (보험심사팀에 건의가 들어옴) 
    
    G_EXPS_USE_DEPT_CD VARCHAR2(5) := NULL;
    G_EXPS_USE_WKDP_CD VARCHAR2(5) := NULL;
    G_AADP_CD VARCHAR2(5) := NULL;
    G_ORD_ID  VARCHAR2(50) := NULL;  --처방ID
    G_RPY_PACT_ID  VARCHAR2(50) := NULL;    
    
    G_PT_HME_DEPT_CD VARCHAR2(5) := NULL; --2013.07.05 임재득 추가 : 임상연구로 데이터를 냈을때 원무의 RPY_PACT_ID를 못가져옴..ㅡㅡ..그래서 추가함.
    G_MED_RSV_DTM    VARCHAR2(5) := NULL;
    
    LL_RSV_EXISTS     VARCHAR2(01)   := '';    -- 추가 2013.04.01
    LL_RSV_EXISTS2    VARCHAR2(01)   := '';    -- 추가 2013.04.01
    
    --2014.01.08 임재득 추가
    G_RTM_MEDR_STF_NO VARCHAR2(8) := NULL;    --실시간 진료의
    G_RTM_MEDR_AADP_CD VARCHAR2(5) := NULL;   --실시간진료의발령부서
    G_RTM_MEDR_WKDP_CD VARCHAR2(5) := NULL;   --실시간진료의근무부서
    
    G_RSCH_PRJT_NO   MSTRHODD.RSCH_PRJT_NO%TYPE := NULL; --연구과제번호 
BEGIN    
    BEGIN
        G_CHDR_STF_NO := IN_ORD_PBR_STF_NO;
        G_CHDR_SID := XCOM.FT_CNL_SELSTFINFO('1', IN_ORD_PBR_STF_NO, HIS_HSP_TP_CD, SYSDATE);
        
        IF G_CHDR_SID = NULL THEN
            IO_ERRYN := 'Y';
            IO_ERRMSG := '재활치료 처방 발행의의 직원식별ID 등록이 &lt;br&gt; 되어있지 않습니다.';
            RETURN;              
        END IF;
    END; 
    
    --진료의 비용사용부서, 세부근무부서, 부서코드
    BEGIN
        SELECT
                EXPS_USE_DEPT_CD   
              , EXPS_USE_WKDP_CD
              , AADP_CD
              , DECODE(NVL(USE_GRP_DTL_CD, '*'), '01', 'Y', 'N')
          INTO  G_EXPS_USE_DEPT_CD
              , G_EXPS_USE_WKDP_CD
              , G_AADP_CD
              , G_CHDR_YN
          FROM CNLRRUSD
         WHERE STF_NO = IN_ORD_PBR_STF_NO
           AND HSP_TP_CD = HIS_HSP_TP_CD 
           AND NVL(RTRM_DT, TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') + 1) &gt;= TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')      -- 2016-01-14, 성시중 보완
           AND ROWNUM = 1;
           
        EXCEPTION
               WHEN NO_DATA_FOUND THEN
                   IO_ERRYN  := 'Y';
                   IO_ERRMSG := '예약일 기준으로 해당 지정의가 퇴사이거나, 등록되지 않는 사번입니다.PC_MST_MSTRHSUD_INSERT. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                   RETURN;    
    END;
   
    BEGIN
        SELECT TO_CHAR(MIN(A.TRP_RSV_DTM), 'HH24MI')    --&gt; 2019-07-23 LCD 변경처리함. 
          INTO G_MED_RSV_DTM
          FROM MSTRHODD A
         WHERE PT_NO = IN_PT_NO
           AND ORD_DT = IN_ORD_DT
           AND RSV_DT = IN_RSV_DT
           AND RHTR_ORD_MTCH_SEQ = IN_RHTR_ORD_MTCH_SEQ  
           AND ODDSC_TP_CD = 'C'
           AND TRP_RSV_DTM IS NOT NULL
           AND HSP_TP_CD = HIS_HSP_TP_CD 
           AND ROWNUM = 1;
           
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                G_PT_HME_DEPT_CD := '0000';
            WHEN OTHERS THEN 
                IO_ERRYN := 'Y';
                IO_ERRMSG := '재활치료 예약시간 조회 시 에러 ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                RETURN;    
    END; 
--    BEGIN
--        SELECT 
--               DECODE(NVL(B.USE_GRP_DTL_CD, '*'), '01', 'Y', 'N')
--          INTO G_CHDR_YN
--          FROM CNLMRUDD A 
--             , CNLRRUSD B
--         WHERE A.USE_SID = G_CHDR_SID
--           AND A.USE_SID = B.SID   
--           AND B.HSP_TP_CD = HIS_HSP_TP_CD 
--           AND A.HSP_TP_CD = HIS_HSP_TP_CD  
--           AND NVL(B.RTRM_DT, TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') + 1) &gt;= TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')      -- 2016-01-14, 성시중 보완
--           AND ROWNUM = 1; 
--           
--           EXCEPTION
--               WHEN NO_DATA_FOUND THEN
--                   IO_ERRYN  := 'Y';
--                   IO_ERRMSG := '재활치료 지정의 여부 체크 오류 발생.PC_MST_MSTRHSUD_INSERT. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
--                   RETURN;                     
--    END;
    
     -- 2013.07.05 임재득 추가 : 임상연구로 데이터를 냈을때 원무의 RPY_PACT_ID를 못가져옴..ㅡㅡ..그래서 추가함.
    BEGIN
--        SELECT DECODE(NVL(PT_HME_DEPT_CD, 'RH'), 'CTC', PT_HME_DEPT_CD, 'RH')    --&gt; CTC만 수진부서를 'CTC'로 하고, 나머지는 모두 'RH'로 변경함! 
        SELECT NVL(PT_HME_DEPT_CD, 'RM')    --&gt; 2019-07-23 LCD 변경처리함.  
             , RHTR_ORD_ID       
             , RSCH_PRJT_NO
          INTO G_PT_HME_DEPT_CD 
             , G_ORD_ID      
             , G_RSCH_PRJT_NO
          FROM MSTRHODD A
         WHERE PT_NO = IN_PT_NO
           AND ORD_DT = IN_ORD_DT
           AND RSV_DT = IN_RSV_DT
           AND RHTR_ORD_MTCH_SEQ = IN_RHTR_ORD_MTCH_SEQ
           AND HSP_TP_CD = HIS_HSP_TP_CD 
           AND ROWNUM = 1;
           
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                G_PT_HME_DEPT_CD := 'RM';
            WHEN OTHERS THEN 
                IO_ERRYN := 'Y';
                IO_ERRMSG := '재활치료 수가 저장 중 에러!. 환자 상태 조회 에러  ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                RETURN;            
    END;
        
     
    --환자의 현재상태와 처방체크
    
    BEGIN
        SELECT /*PC_MST_MSTRHSUD_INSERT */
               TO_CHAR(ADS_DT, 'YYYY-MM-DD')
             , 1
             , 'I'  
          INTO G_ADS_DT, G_ACPT_SEQ, G_PACT_TP_CD
          FROM ACPPRAAM
         WHERE PT_NO = IN_PT_NO
           AND SIHS_YN = 'Y'
           AND APCN_YN = 'N'    -- 2016-01-14, 성시중 추가 보완함
           AND HSP_TP_CD = HIS_HSP_TP_CD;
           
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                G_ADS_DT := NULL;
                G_ACPT_SEQ := 0;
                G_PACT_TP_CD := 'O';
            WHEN OTHERS THEN 
                IO_ERRYN := 'Y';
                IO_ERRMSG := '재활치료 수가 저장 중 에러!. 환자 상태 조회 에러  ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                RETURN;            
    END;
    
    IF G_ADS_DT IS NULL THEN     --외래
        BEGIN
            SELECT
                   'Y'
              INTO G_SEL_ACPT
              FROM ACPPRODM
             WHERE PT_NO = IN_PT_NO
               AND MED_DT = TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
               AND ( TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') &gt; TRUNC(SYSDATE) AND MED_RSV_DTM = TO_DATE(IN_RSV_DT || '00:00', 'YYYY-MM-DD HH24:MI')
                     OR
                     TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') = TRUNC(SYSDATE) AND MED_RSV_DTM = MED_RSV_DTM
                    )
               AND MED_DEPT_CD = G_PT_HME_DEPT_CD -- 2013-07-05 임재득 추가함.
--               AND MED_DEPT_CD = 'RH'
--               AND MEDR_STF_NO = IN_ORD_PBR_STF_NO    --처방발행자직원번호    as_is는 비교안함
               AND APCN_YN = 'N'
               AND HSP_TP_CD = HIS_HSP_TP_CD   
               AND ROWNUM =1;
               
               EXCEPTION
                   WHEN NO_DATA_FOUND THEN
                       G_SEL_ACPT := 'N';
        END;
        
        IF G_SEL_ACPT = 'Y' THEN
            BEGIN
                SELECT 
                       PACT_ID
                     , RPY_PACT_ID 
                     , RPY_CLS_SEQ  
                  INTO G_PACT_ID  
                     , G_RPY_PACT_ID
                     , G_RPY_CLS_SEQ
                  FROM ACPPRODM
                 WHERE PT_NO = IN_PT_NO
                   AND MED_DT = TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
                   AND ( TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') &gt; TRUNC(SYSDATE) AND MED_RSV_DTM = TO_DATE(IN_RSV_DT || '00:00', 'YYYY-MM-DD HH24:MI')
                         OR
                         TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') = TRUNC(SYSDATE) AND MED_RSV_DTM = MED_RSV_DTM
                        )
                   AND MED_DEPT_CD = G_PT_HME_DEPT_CD -- 2013-07-05 임재득 추가함.
--                   AND MED_DEPT_CD = 'RH'
--                   AND MEDR_STF_NO = IN_ORD_PBR_STF_NO        --as_is는 비교안함
                   AND APCN_YN = 'N'
                   AND HSP_TP_CD = HIS_HSP_TP_CD
                   AND ROWNUM =1;
                   
                 EXCEPTION 
                     WHEN NO_DATA_FOUND THEN
                         IO_ERRYN := 'Y';
                         IO_ERRMSG := '외래예약접수 조회(원무접수ID, 수납유형순번 조회) 시 에러 발생!.';
                         RETURN;                
            END;
        ELSE   --외래면서 해당일에 G_PT_HME_DEPT_CD('RH' 또는 'CTC')로 ACPPRODM에 접수건이 없을 시..
            BEGIN
--                SELECT 
--                       A.PME_CLS_CD
--                     , DECODE(A.PSE_CLS_CD, 'BB', 'Z03', A.PSE_CLS_CD)
--                     , A.CLNL_RSCH_NO
--                     , A.CORG_CD   
--                     , A.IORD_RSN_CD
--                 INTO G_PME_CLS_CD, G_PSE_CLS_CD, G_CLNL_RSCH_NO, G_CORG_CD, G_IORD_RSN_CD
--                 FROM ACPPRODM A
--                WHERE A.PT_NO = IN_PT_NO
--                  AND A.MED_DT = TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
--                  AND A.MED_DEPT_CD = 'RH'
----                  AND A.MEDR_STF_NO = (SELECT MAX(MEDR_STF_NO) FROM ACPPRODM WHERE PT_NO = IN_PT_NO AND MED_DT = A.MED_DT )  -- as_is는 비교안함
--                  AND A.APCN_YN = 'N'
--                  AND A.HSP_TP_CD = HIS_HSP_TP_CD
--                  AND ROWNUM = 1;  

                SELECT A.PME_CLS_CD
                     , A.PSE_CLS_CD
                     , A.CLNL_RSCH_NO
                     , A.CORG_CD   
                     , A.IORD_RSN_CD  
                       
                  INTO G_PME_CLS_CD, G_PSE_CLS_CD, G_CLNL_RSCH_NO, G_CORG_CD, G_IORD_RSN_CD
                  FROM ACPPRODM  A
                 WHERE PT_NO = IN_PT_NO
                   AND MED_DT = TO_DATE(IN_ORD_DT,'yyyy-mm-dd')         -- 오더발행일 : 오더발행시 진료예약의 급종을 가져온다
                   AND MED_DEPT_CD = G_PT_HME_DEPT_CD                   -- 2013-07-05 임재득 추가함.
--                and med_dept_cd ='RH'
                   AND APCN_YN ='N'
                   AND HSP_TP_CD = HIS_HSP_TP_CD
                   AND ROWNUM = 1;    
                  
                   EXCEPTION
                      WHEN NO_DATA_FOUND THEN                      
                      BEGIN
                          SELECT PME_CLS_CD
                               , DECODE(PSE_CLS_CD, 'BB', 'Z03', PSE_CLS_CD)
                               , CTRC_ORG_CD
                            INTO G_PME_CLS_CD, G_PSE_CLS_CD, G_CORG_CD
                            FROM PCTPCPAM_DAMO
                           WHERE PT_NO = IN_PT_NO
--                             AND HSP_TP_CD = HIS_HSP_TP_CD
                             ; 
                             
                            EXCEPTION 
                                WHEN NO_DATA_FOUND THEN                                 
                                    IO_ERRYN := 'Y';
                                    IO_ERRMSG := '기존 외래예약 정보가 없어 에러 발생!';
                                    RETURN;
                       END;            
            END;
            
            --재활 예약구분코드  '9'
--            RAISE_APPLICATION_ERROR(-20801, HIS_HSP_TP_CD || '/' || REPLACE(IN_RSV_DT, '-', '') ||  '/' || G_CHDR_SID || '/' || IN_RSV_DTM || '/' || G_IORD_RSN_CD|| '/' || G_PME_CLS_CD|| '/' || G_PSE_CLS_CD|| '/' || G_CORG_CD || '/' || G_CHDR_YN || '/' || G_CLNL_RSCH_NO);
--            
--            08/  HIS_HSP_TP_CD
--            20121103/    IN_RSV_DT
--            1000494/  G_CHDR_SID
--            0900/     IN_RSV_DTM
--            /         G_IORD_RSN_CD
--            BB/       G_PME_CLS_CD
--            00/        G_PSE_CLS_CD
--            MA01/      G_CORG_CD
--            Y/         G_CHDR_YN
             
            BEGIN
--              XBIL.PC_ACP_CREATE_ACPPRODM( HIS_HSP_TP_CD          --01*병원구분코드(HSPCL)
--                                           , IN_PT_NO               
--                                           , REPLACE(IN_RSV_DT, '-', '')         --진료일  
--                                           , 'RH'                   --진료일자
--                                           , G_CHDR_SID            --지정의 식별ID
--                                           , ''                    --진료예약일시(MEDTIME,'HH24MI')       IN_RSV_DTM  재활 치료처방 원무에는 0000 으로 들어가야 함     2013.04.1 수정
--                                           , '9'                   --예약구분코드(RSVTYPE)
--                                           , G_PME_CLS_CD          --환자급종유형코드(PATTYPE)
--                                           , G_PSE_CLS_CD          --환자보조급종유형코드(TYPECD)
--                                           , G_CORG_CD             --계약기관코드(CUSTCD)
--                                           , G_CHDR_YN            --선택진료여부(SPCDRYN)
--                                           , '2'                   --초진재진구분코드(MEDTYPE) 
--                                           , G_CLNL_RSCH_NO        --임상연구번호(LABNO)
--                                           , G_IORD_RSN_CD         --원내처방사유코드(INORDCD)
--                                           , NULL                  --진찰료50%구분코드 MEF_P50_TP_CD
--                                           , NULL                  --처방총액본인부담사유코드DDTYPE
--                                           , 'N'                   --타과의뢰여부(CONSLTYN)
--                                           , NULL                  --이전원무접수ID()
--                                           , '01'                  --예약접수구분코드()  '01 일반
--                                           , NULL                  --진료유형코드()
--                                           , NULL                  --건증접수구분코드(HPCTYPE)
--                                           , NULL                  --외부기관의뢰여부(OTHERREQUESTYN)
--                                           , NULL                  --진료의뢰요양기관번호(REQ_HSP_NO)
----                                           , 'N'                  --진찰료수납유형코드()
--                                            ,'1'                    --진찰료수납유형코드()
--                                           , HIS_STF_NO 
--                                           , HIS_PRGM_NM 
--                                           , HIS_IP_ADDR
--                                           , NULL                  --병원가산비율()
--                                           , NULL                  --의료급여본인부담구분코드()
--                                           , NULL                  --묶음계약기관코드()
--                                           , 'I'                   --작업구분('I':입력,'D':취소)
--                                           , NULL                  --의학연구소 구분(1 :의학연구소 부담, 2 :자비연구 부담)
--                                           , IO_RPY_PACT_ID    
--                                           , IO_RPY_CLS_SEQ
--                                           , IO_ERRYN
--                                           , IO_ERRMSG
--                                           );
                XBIL.PC_ACP_FREERSV_ACPPRODM( HIS_HSP_TP_CD          --01*병원구분코드(HSPCL)
                                            , IN_PT_NO               
                                            , REPLACE(IN_RSV_DT, '-', '') --진료일  
                                            , G_PT_HME_DEPT_CD      -- 2013-07-05 임재득 추가함.
--                                            , 'RH'                --진료일자
                                            , G_CHDR_SID            --지정의 식별ID
                                            , G_MED_RSV_DTM         --진료예약일시(MEDTIME,'HH24MI')       IN_RSV_DTM  재활 치료처방 원무에는 0000 으로 들어가야 함     2013.04.1 수정
                                            , 'D'                   --예약구분코드(RSVTYPE)
                                            , null                  --환자급종유형코드(PATTYPE)    2013.06.17 임재득 null 처리 - 원무쪽 프로세스에서 자동으로 조회하여 넣어줌
                                            , null                  --환자보조급종유형코드(TYPECD) 2013.06.17 임재득 null 처리 - 원무쪽 프로세스에서 자동으로 조회하여 넣어줌
--                                            , G_PME_CLS_CD        --환자급종유형코드(PATTYPE)
--                                            , G_PSE_CLS_CD        --환자보조급종유형코드(TYPECD)
                                            , null                  --계약기관코드(CUSTCD)
                                            , G_CHDR_YN             --선택진료여부(SPCDRYN)
                                            , '2'                   --초진재진구분코드(MEDTYPE) 
                                            , G_CLNL_RSCH_NO        --임상연구번호(LABNO)
                                            , G_IORD_RSN_CD         --원내처방사유코드(INORDCD)
                                            , NULL                  --진찰료50%구분코드 MEF_P50_TP_CD
                                            , NULL                  --처방총액본인부담사유코드DDTYPE
                                            , 'N'                   --타과의뢰여부(CONSLTYN)
                                            , NULL                  --이전원무접수ID()
                                            , '01'                  --예약접수구분코드()  '01 일반
                                            , NULL                  --진료유형코드()
                                            , NULL                  --건증접수구분코드(HPCTYPE)
                                            , NULL                  --외부기관의뢰여부(OTHERREQUESTYN)
                                            , NULL                  --진료의뢰요양기관번호(REQ_HSP_NO)
                                            , 'N'                   --진찰료수납유형코드()
--                                            ,'1'                  --진찰료수납유형코드()
                                            , HIS_STF_NO 
                                            , HIS_PRGM_NM 
                                            , HIS_IP_ADDR
                                            , NULL                  --병원가산비율()
                                            , NULL                  --의료급여본인부담구분코드()
                                            , NULL                  --묶음계약기관코드()
                                            , 'I'                   --작업구분('I':입력,'D':취소)
                       --                     , NULL                --의학연구소 구분(1 :의학연구소 부담, 2 :자비연구 부담)    -- 2016-06-30, 성시중, NULL이면 원무로직에서 항상 자비연구로 선택됨.
                                            , '1'                   --의학연구소 구분(1 :의학연구소 부담, 2 :자비연구 부담)    -- 2016-06-30, 성시중, CTC환자 재활치료예약시, 자비연구로 급종선택됨, 신청번호 201606-00477 건
                                            , IO_RPY_PACT_ID    
                                            , IO_RPY_CLS_SEQ
                                            , IO_ERRYN
                                            , IO_ERRMSG
                                            , IO_PACT_ID
                                            , G_CHDR_STF_NO         --실제의사사번 (IO_RNS_DR_STF_NO) 2013.07.04 임재득 추가
--                                           , IO_DUTY_CLS
                                            );
                                                  
                IF (IO_ERRYN = 'Y') THEN  
                    IO_ERRYN := 'Y';
                    IO_ERRMSG := IO_ERRMSG; 
                    RETURN;
                END IF;
                                                           
--                G_PACT_ID :=   IO_RPY_PACT_ID;  
                G_PACT_ID     := IO_PACT_ID;
                G_RPY_PACT_ID := IO_RPY_PACT_ID;   
                G_RPY_CLS_SEQ := IO_RPY_CLS_SEQ;                              
            END; 
            
            BEGIN
                SELECT
                       TO_CHAR(MED_DT, 'YYYY-MM-DD'), 1, 'O'
                  INTO G_ADS_DT, G_ACPT_SEQ, G_PACT_TP_CD
                  FROM ACPPRODM
                 WHERE PT_NO = IN_PT_NO
                   AND MED_DT = TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
                   AND MED_DEPT_CD = G_PT_HME_DEPT_CD -- 2013-07-05 임재득 추가함.
--                   AND MED_DEPT_CD = 'RH'
--                   AND MEDR_STF_NO = IN_ORD_PBR_STF_NO      -- as_is 비교안함
                   AND HSP_TP_CD = HIS_HSP_TP_CD
                   AND APCN_YN = 'N'            -- 추가 
                   AND ROWNUM = 1                -- 추가
                   ;
                   
                   EXCEPTION 
                       WHEN NO_DATA_FOUND THEN
                           IO_ERRYN := 'Y';
                           IO_ERRMSG := '외래예약접수 조회 시 에러 발생!';
                           RETURN;
            END; 
            
        END IF;
        
        --실시간 진료의사용부서, 세부근무부서, 부서코드 - 2014.01.08 임재득 추가
        BEGIN
            SELECT
                    EXPS_USE_DEPT_CD   
                  , EXPS_USE_WKDP_CD
                  , STF_NO
              INTO G_RTM_MEDR_AADP_CD, G_RTM_MEDR_WKDP_CD, G_RTM_MEDR_STF_NO
              FROM CNLRRUSD
             WHERE STF_NO = G_CHDR_STF_NO
               AND HSP_TP_CD = HIS_HSP_TP_CD 
            --   and rtrm_dt is null
               AND NVL(RTRM_DT, TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') + 1) &gt;= TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')      -- 2017-03-10, 성시중, 퇴직일자 적용 보완
               AND ROWNUM = 1
               ;
               
            EXCEPTION
                   WHEN NO_DATA_FOUND THEN
                       IO_ERRYN  := 'Y';
                       IO_ERRMSG := '해당 지정의가 퇴사, 퇴사예정이거나 아직 등록이 되지 않는 사번입니다.PC_MST_MSTRHSUD_INSERT_실시간 지정의. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                       RETURN;    
        END;
        
            ---------------------------------------  AS_IS 비교하여 외래 진료테이블 비교하여 A2500 발행로직 변경 20130401---------------------------------------   =&gt; 2019-07-23 LCD  무료수진 생성시 발생함. 재진료 50% 해당 로직 주석 처리함.
            
----            --A2500 생성(재진기본진찰료)             --G_RSV_SUGA_CHK      
--        BEGIN
--               
--               /* 외래예약에 재활 및 센터진료과 수진정보가 있고, A2500을 발행하지 않아도 되는 조건인지를 체크 - 외래접수 시, 체크조건(XSUP.PC_MST_RE_ACPTPRECHK)과 동일!! */
--               BEGIN
--               
--                SELECT 'Y'
--                  INTO LL_RSV_EXISTS2          --2011.05.12 추가 --2016-01-14, 센터진료과 조건 추가  --2016-01-14, 외래예약에 재활 및 센터진료과 수진정보가 있고, A2500을 발행하지 않아도 되는 조건인지를 체크한다.
--                  FROM ACPPRODM
--                 WHERE PT_NO = IN_PT_NO
--                   AND MED_DT =  TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
----                   AND (   ( G_PT_HME_DEPT_CD = 'RH' AND MED_DEPT_CD IN ('RH', 'GRH', 'SRH', 'NRH', 'CRH', 'JRH') )
----                        OR ( G_PT_HME_DEPT_CD = 'CTC' AND MED_DEPT_CD = 'CTC') )   -- 2016-01-21, 성시중, 아래 조건에서 이것으로 변경함   -&gt; 2019-07-23 LCD 주석처리함.
--                   AND MED_DEPT_CD = G_PT_HME_DEPT_CD  
--                   AND APCN_YN = 'N'     --APCN_DTM IS NULL
----                   AND MED_RSV_TP_CD &lt;&gt; '9'          --2016-01-21, 성시중, MED_RSV_TP_CD가 '9'이고 MEF_RPY_CLS_CD가 'N'인 경우도 존재하여 주석처리함(PACT_ID : 0009250128) -- 성시중 재활외래 접수조건과 동일(XSUP.PC_MST_RE_ACPTPRECHK)
--                   AND MEF_RPY_CLS_CD IN ('N', 'Y')  --2013.05.30 임재득 주석 삭제 : 진찰료수납유형코드(Y:진찰료 수납) - A2500 진료 처방 내기 전에 먼저 진찰료 수납이 있는지 확인후 생성해야함.. --2016.01.21, 성시중 재활외래 접수조건과 동일(XSUP.PC_MST_RE_ACPTPRECHK)
--                   AND ROWNUM = 1;  
--                  
--                EXCEPTION
--                   WHEN NO_DATA_FOUND THEN
--                       LL_RSV_EXISTS2:= 'N';
--            
--            END;
--            
--            -- 1
--            IF NVL(LL_RSV_EXISTS2, 'N') = 'N' THEN    -- 외래예약에 재활 및 센터진료과 수진정보가 있고, A2500을 발행하지 않아도 되는 조건이 아닌 경우이므로, A2500 추가하는 로직 진행함..
--                
--                BEGIN    
--                    
--                    SELECT 'Y'                               /* RH, CTC로 외래예약 수진정보가 있는지 확인.*/
--                      INTO LL_RSV_EXISTS
--                      FROM ACPPRODM
--                     WHERE PT_NO  =  IN_PT_NO
--                       AND MED_DT =  TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
--                       AND MED_DEPT_CD = G_PT_HME_DEPT_CD -- 2013-07-05 임재득 추가함.
--                --     AND MED_DEPT_CD  =  'RH'
--                       AND APCN_YN = 'N'               --APCN_DTM IS NULL
--                --     AND MEF_RPY_CLS_CD  = '1'     --2016-01-21, 성시중, 이 조건 주석 처리함..
--                       AND ROWNUM = 1;   
--                      
--                    EXCEPTION
--                        WHEN NO_DATA_FOUND THEN
--                             IO_ERRYN  := 'Y';
--                            IO_ERRMSG := '재활외래 수진정보가 존재하지 않아서 에러가 발생하였습니다! 예약 취소 후, 다시 예약이 필요합니다!.';
--                            RETURN; 
--                END;
--                    
--                -- 2  
--                IF NVL(LL_RSV_EXISTS, 'N') = 'Y' THEN     /*RH, 무료수가로 외래예약이 있으면 ...*/     
--                  
--                     BEGIN --2013-08-21 임재득 추가  : 치료 코드일경우만 A2500이 등록이 되어야함. (보험심사팀에 건의가 들어옴)  
--                        SELECT 'Y'
--                          INTO G_ORD_SUGA_CHK
--                          FROM MSTRHSDC
--                         WHERE RHTR_MIF_CD = IN_RHTR_MIF_CD
--                           AND ORD_GRP_CD = '06'  --그룹 코드 : 06(치료처방코드), 03(검사처방코드) 
--                           AND HSP_TP_CD = HIS_HSP_TP_CD
--                           ;
--                           
--                         EXCEPTION
--                             WHEN NO_DATA_FOUND THEN
--                                 G_ORD_SUGA_CHK := 'N';
--                     END;
--                      
--                     BEGIN  -- A2500이 이미 발행되었는지 확인
--                         SELECT
--                                'Y'
--                           INTO G_RSV_SUGA_CHK
--                           FROM MSTRHSUD
--                          WHERE PT_NO = IN_PT_NO
--                            AND RSV_DT = TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
--                            AND RHORD_MIF_CD = 'AA222'
--                            AND ODDSC_TP_CD = 'C'
--                            AND NVL(RFND_YN, 'N') &lt;&gt; 'Y'
--                               AND NVL(RPY_STS_CD, 'N') &lt;&gt; 'R'    -- 2017-01-12, 성시중, NVL 보완
--                      --      AND ORD_NOTM = '1'
--                            AND HSP_TP_CD = HIS_HSP_TP_CD
--                            AND ROWNUM = 1
--                            ;
--                         EXCEPTION
--                             WHEN NO_DATA_FOUND THEN
--                                 G_RSV_SUGA_CHK := 'N';
--                      
--                       END;
--                       
--                       -- 3
--                       IF G_RSV_SUGA_CHK &lt;&gt; 'Y' AND G_ORD_SUGA_CHK = 'Y' THEN    --(G_ORD_SUGA_CHK 추가함) 2013-08-21 임재득 추가  : 치료 코드일경우만 A2500이 등록이 되어야함. (보험심사팀에 건의가 들어옴)
--                      --처방 id 생성
--                          BEGIN
--                              G_ORD_ID := XMED.PKG_MOO_SAVEORDERS.FN_GETNEXTORDERID;
--                              EXCEPTION
--                                  WHEN OTHERS THEN  
--                                      IO_ERRYN  := 'Y';       
--                                      IO_ERRMSG := '재활치료 재진 기본 진찰료 등록 시 처방ID 발생 에러.'|| SQLCODE || CHR(13) || ' ' || SQLERRM;
--                                      RETURN;                 
--                          END;                                
--                          
----                               raise_application_error(-20500, IN_PT_NO || '/' || IN_RSV_DT || '/'||  G_PACT_TP_CD || '/' || IN_PT_MED_DEPT_CD);   
--                          BEGIN
--                              INSERT INTO MSTRHSUD
--                                  ( 
--                                    RHTR_ORD_ID,              
--                                    PT_NO,                   
--                                    RSV_DT,                   
--                                    MIF_PBL_SEQ,               
--                                    HSP_TP_CD,   
--                                                  
--                                    PACT_TP_CD,                
--                                    ORD_MRK_CTG_CD,     --MEDTYPE
--                                    ADD_ORD_YN,         --ORDTYPE
--                                    ODAPL_POP_CD,       --JOBTYPE
--                                    ODDSC_TP_CD,               
--                                    
--                                    MED_MIFI_TP_CD,  
--                                    RHORD_MIF_CD,
--                                    ORD_CTG_CD,
--                                    ORD_DT,
--                                    RPY_STS_CD,      
--                                    
--                                    RPY_PTCL_SEQ,     
--                                    FMT_DTM,
--                                    FMT_STF_NO,
--                                    FMT_SID,
--                                    PT_HME_DEPT_CD,   
--                                    
--                                    WD_DEPT_CD,      
--                                    ORD_NOTM,
--                                    LSH_STF_NO,
--                                    LSH_DTM,
--                                    ORD_MTCH_MIF_CD, 
--                                    
--                                    PT_MED_DEPT_CD,
--                                    RHTR_MIF_CD,        --sugacode
--                                    RTM_MEDR_STF_NO,          
--                                    RTM_MEDR_AADP_CD,        
--                                    RTM_MED_DT,    
--                                        
--                                    RTM_MEDR_WKDP_CD,    
--                                    RTM_PBL_STF_NO,          
--                                    RTM_PBR_AADP_CD,        
--                                    RTM_PBL_DTM,        
--                                    RTM_PBR_WKDP_CD,     
--                                    
--                                    RTM_FMT_STF_NO,        
--                                    RTM_FMPS_COAP_DEPT_CD,        
--                                    RTM_FMT_DTM,        
--                                    RTM_USE_EQUP_CD,       
--                                    RTM_PDAU_YN,           
--                                    
--                                    RTM_FMCN_STF_NO,      
--                                    RTM_FMCN_DTM,    
--                                    RTM_FMPS_WKDP_CD,    
--                                    RTM_CLSN_STF_NO,         
--                                    RTM_CLSN_DT,          
--                                    
--                                    RTM_CLSN_FMT_YN,         
--                                    RFND_YN,
--                                    RHTR_ORD_MTCH_SEQ,   --MATCH_SEQ
--                                    
--                                    PACT_ID,
--                                    RPY_PACT_ID,           --수납원무접수ID
--                                    FST_ORD_PACT_ID,       --최초처방원무접수ID  
--                                    RPY_PACT_TP_CD,        --수납원무접수구분코드
--                                    RPY_CLS_SEQ,           --수납유형순번   
--                                                            
--                                    FSR_PRGM_NM,                             
--                                    FSR_STF_NO,                              
--                                    FSR_DTM,                                 
--                                    FSR_IP_ADDR,                             
--                                    LSH_PRGM_NM,                             
--                                    LSH_IP_ADDR, 
--                                    
--                                    RNS_DR_STF_NO                                                --실명제의사직원번호  2013.06.20 임재득 추가                                      
--                                  )
--                                  SELECT
--                                         G_ORD_ID
--                                       , IN_PT_NO
--                                       , TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
--                                       , NVL(MAX(MIF_PBL_SEQ), 0) + 1
--                                       , HIS_HSP_TP_CD
--                                       
--                                       , G_PACT_TP_CD     
--                                       , 'A'
--                                       , 'N'     
--                                       , '1'
--                                       , 'C'              
--                                       
--                                       , '' 
--                                       , 'AA222'
--                                       , 'RH'
--                                       , TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
--                                       , 'N'
--                                       
--                                       , ''
--                                       , ''
--                                       , ''
--                                       , ''
--                                       , 'RH'  
--                                       
--                                       , IN_WD_DEPT_CD    
--                                       , 1
--                                       , HIS_STF_NO
--                                       , SYSDATE
--                                       , '0'      
--                                       
--                                       , IN_PT_MED_DEPT_CD  -- 2016.01.14, 성시중, 외래에서 간혹 RCCVC가 입력되는 경우, 연결된 외래예약정보의 부서정보는 RH임.
--                                       , 'AA222'
--                                       , IN_ORD_PBR_STF_NO   --진료의
--                                       , G_RTM_MEDR_AADP_CD  --2014.01.08 임재득 수정
--                                       , TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') 
--                                       
--                                       , G_RTM_MEDR_WKDP_CD   --실시간진료의근무부서코드    
--                                       , IN_ORD_PBR_STF_NO    --실시간발행직원
--                                       , G_EXPS_USE_DEPT_CD   --실시간발행근무부서
--                                       , SYSDATE
--                                       , G_EXPS_USE_WKDP_CD
--                                       
--                                       , ''
--                                       , ''
--                                       , ''
--                                       , 'N'
--                                       , ''          
--                                       
--                                       , ''          
--                                       , ''           
--                                       , ''         
--                                       , ''         
--                                       , ''       
--                                       
--                                       , ''           
--                                       , 'N'          
--                                       , ''           
--                                       
--                                       , G_PACT_ID
--                                       , G_RPY_PACT_ID
--                                       , G_PACT_ID
--                                       , G_PACT_TP_CD
--                                       , G_RPY_CLS_SEQ
--                                       
--                                       , HIS_PRGM_NM
--                                       , HIS_STF_NO
--                                       , SYSDATE
--                                       , HIS_IP_ADDR
--                                       , HIS_PRGM_NM
--                                       , HIS_IP_ADDR
--                                       
--                                       , IN_ORD_PBR_STF_NO  --2013.06.20 임재득 발행의
--                                  FROM MSTRHSUD 
--                                 WHERE PT_NO = IN_PT_NO
--                                   AND RSV_DT = TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
--                                   AND HSP_TP_CD = HIS_HSP_TP_CD
--                                   ;
--                                        
--                                 EXCEPTION
--                                     WHEN NO_DATA_FOUND THEN
--                                         IO_ERRYN := 'Y';
--                                         IO_ERRMSG := '재활 치료 재진기본진찰료 발행 시 에러 발생!';
--                                         RETURN;
--                                     WHEN OTHERS THEN
--                                         IO_ERRYN := 'Y';
--                                         IO_ERRMSG := '재활치료 재진기본진찰료 저장 중 에러!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
--                                         RETURN;                                           
--                          END;  
--                          
--                          G_ORD_ID := NULL;
--                          
--                     END IF;  -- 3번 IF 종료
--                  
--                END IF;  -- 2번 IF 종료
--                           
--            END IF;  -- 1번 IF 종료
--
--        END;
       
    ELSE  -- 입원

        BEGIN
            SELECT 
                   PACT_ID, PACT_ID, RPY_CLS_SEQ, NVL(CHDR_STF_NO, NCDR_STF_NO)
              INTO G_PACT_ID, G_RPY_PACT_ID, G_RPY_CLS_SEQ, G_RTM_MEDR_STF_NO
              FROM ACPPRAAM
             WHERE PT_NO = IN_PT_NO
               AND SIHS_YN = 'Y'
               AND APCN_YN = 'N'    -- 2016-01-14, 성시중 추가 보완함
               AND HSP_TP_CD = HIS_HSP_TP_CD
               ;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN
                    IO_ERRYN := 'Y';
                    IO_ERRMSG := '입원예약접수 조회 시 에러 발생!.';
                    RETURN;                
        END;     
        
        --실시간 진료의사용부서, 세부근무부서, 부서코드 - 2014.01.08 임재득 추가
        BEGIN
            SELECT  EXPS_USE_DEPT_CD   
                  , EXPS_USE_WKDP_CD
              INTO G_RTM_MEDR_AADP_CD, G_RTM_MEDR_WKDP_CD
              FROM CNLRRUSD
             WHERE STF_NO = G_RTM_MEDR_STF_NO
               AND HSP_TP_CD = HIS_HSP_TP_CD 
            --   and rtrm_dt is null
               AND NVL(RTRM_DT, TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') + 1) &gt;= TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')      -- 2017-03-10, 성시중, 퇴직일자 적용 보완
               AND ROWNUM = 1
               ;
               
            --일단 RETURN은 뺌 --   G_RTM_MEDR_STF_NO 이게 없을수 있을려나?
            EXCEPTION
                   WHEN NO_DATA_FOUND THEN
                       IO_ERRYN  := '';
                       IO_ERRMSG := '';
        END;
        
    END IF;
      
    
    --G_PACT_TP_CD , G_RPY_CLS_SEQ
    
    --처방 id 생성
--    BEGIN
--        G_ORD_ID := XMED.PKG_MOO_SAVEORDERS.FN_GETNEXTORDERID;
--        EXCEPTION
--            WHEN OTHERS THEN  
--                IO_ERRYN  := 'Y';       
--                IO_ERRMSG := '재활 치료 처방 등록 시 처방ID 발생 에러('|| XMED.PKG_MOO_SAVEORDERS.FN_GETNEXTORDERID ||') '|| SQLCODE || CHR(13) || ' ' || SQLERRM;
--                RETURN;                 
--       
--    END;
    
    
    BEGIN

        INSERT INTO MSTRHSUD
                  ( 
                    RHTR_ORD_ID,
                    PT_NO,
                    RSV_DT,
                    MIF_PBL_SEQ,
                    HSP_TP_CD,
                    
                    PACT_TP_CD,                   
                    ORD_MRK_CTG_CD,     --MEDTYPE
                    ADD_ORD_YN,         --ORDTYPE
                    ODAPL_POP_CD,       --JOBTYPE
                    ODDSC_TP_CD,  
                    
                    MED_MIFI_TP_CD,                
                    RHORD_MIF_CD,
                    ORD_CTG_CD,
                    ORD_DT,
                    RPY_STS_CD, 
                    
                    RPY_PTCL_SEQ,                    
                    FMT_DTM,
                    FMT_STF_NO,
                    FMT_SID,
                    PT_HME_DEPT_CD,   
                    
                    WD_DEPT_CD,                
                    ORD_NOTM,
                    LSH_STF_NO,
                    LSH_DTM,
                    ORD_MTCH_MIF_CD,    
                    
                    PT_MED_DEPT_CD,            
                    RHTR_MIF_CD,        --sugacode
                    RTM_MEDR_STF_NO,          
                    RTM_MEDR_AADP_CD,        
                    RTM_MED_DT, 
                           
                    RTM_MEDR_WKDP_CD,                     
                    RTM_PBL_STF_NO,          
                    RTM_PBR_AADP_CD,        
                    RTM_PBL_DTM,        
                    RTM_PBR_WKDP_CD,  
                      
                    RTM_FMT_STF_NO,
                    RTM_FMPS_COAP_DEPT_CD,
                    RTM_FMT_DTM,
                    RTM_USE_EQUP_CD,
                    RTM_PDAU_YN,
                    
                    RTM_FMCN_STF_NO, 
                    RTM_FMCN_DTM,    
                    RTM_FMPS_WKDP_CD,    
                    RTM_CLSN_STF_NO,         
                    RTM_CLSN_DT, 

                    RTM_CLSN_FMT_YN,         
                    RFND_YN,
                    RHTR_ORD_MTCH_SEQ,   --MATCH_SEQ  
                    
                    PACT_ID,
                    RPY_PACT_ID,           --수납원무접수ID
                    FST_ORD_PACT_ID,       --최초처방원무접수ID  
                    RPY_PACT_TP_CD,        --수납원무접수구분코드
                    RPY_CLS_SEQ,           --수납유형순번   
                                                            
                    FSR_PRGM_NM,                             
                    FSR_STF_NO,                              
                    FSR_DTM,                                 
                    FSR_IP_ADDR,                             
                    LSH_PRGM_NM,                             
                    LSH_IP_ADDR, 
                                        
                    RNS_DR_STF_NO,                                                --실명제의사직원번호  2013.06.20 임재득 추가  
                    
                    RSCH_PRJT_NO   --연구과제번호 추가 2022-05-26
                                                 
                  )
             SELECT
                    G_ORD_ID
                  , IN_PT_NO
                  , TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
                  , NVL(MAX(MIF_PBL_SEQ), 0) + 1
                  , HIS_HSP_TP_CD  
                  
                  , G_PACT_TP_CD     
                  , 'A'
                  , 'N'     
                  , '1'
                  , 'C' 
                  
                  , NVL(IN_MED_MIFI_TP_CD,'')   --충북대 추가
                  , IN_RHTR_MIF_CD
                  , 'RH'
                  , TO_DATE(IN_ORD_DT, 'YYYY-MM-DD')
                  , 'N'
                  
                  , ''
                  , ''
                  , ''
                  , ''
                  , G_PT_HME_DEPT_CD --'RH' 2019-07-23 LCD RH하드코딩 제거. 
                  
                  , IN_WD_DEPT_CD    
                  , 1
                  , HIS_STF_NO
                  , SYSDATE
                  , IN_RHTR_MIF_CD
                  
                  , IN_PT_MED_DEPT_CD  -- 2016.01.14, 성시중, RCCVC 또는 RH (외래는 1.5% 정도. 입원은 20% 정도가 RCCVC)  
                  , IN_RHTR_MIF_CD
                  , G_RTM_MEDR_STF_NO   --진료의
                  , G_RTM_MEDR_AADP_CD
                  , TO_DATE(IN_RSV_DT, 'YYYY-MM-DD') 
                  
                  , G_RTM_MEDR_WKDP_CD      
                  , IN_ORD_PBR_STF_NO
                  , G_EXPS_USE_DEPT_CD
                  , SYSDATE
                  , G_EXPS_USE_WKDP_CD
                  
                  , ''
                  , ''
                  , ''
                  , 'N'
                  , ''
                  
                  , ''
                  , ''
                  , ''
                  , ''
                  , '' 
                  
                  , ''
                  , 'N'
                  , IN_RHTR_ORD_MTCH_SEQ        --RHTR_ORD_MTCH_SEQ    
                  
                  , G_PACT_ID
                  , G_RPY_PACT_ID
                  , G_PACT_ID
                  , G_PACT_TP_CD
                  , G_RPY_CLS_SEQ
                                                             
                  , HIS_PRGM_NM
                  , HIS_STF_NO
                  , SYSDATE
                  , HIS_IP_ADDR
                  , HIS_PRGM_NM
                  , HIS_IP_ADDR
                  
                  , IN_ORD_PBR_STF_NO  --2013.06.20 임재득 발행의 
                  , G_RSCH_PRJT_NO --연구과제번호 추가 2022-05-26                            
               FROM MSTRHSUD 
              WHERE PT_NO = IN_PT_NO
                AND RSV_DT = TO_DATE(IN_RSV_DT, 'YYYY-MM-DD')
                AND HSP_TP_CD = HIS_HSP_TP_CD
                  ;
                   
             EXCEPTION
                 WHEN NO_DATA_FOUND THEN
                     IO_ERRYN := 'Y';
                     IO_ERRMSG := '재활 치료 처방(수가)  발행 시 에러 발생!';
                     RETURN;
                 WHEN OTHERS THEN
                     IO_ERRYN := 'Y';
                     IO_ERRMSG := '재활치료 처방(수가) 저장 중 에러!. ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                     RETURN;                                      
  
    END;
    
END PC_MST_MSTRHSUD_INSERT;
</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>C# 매개변수 Default(기본세팅)</QUERY_NAME>
    <QUERY_TEXT>///&lt;summary&gt; 
        ///name               : 예약정보 출력(영상의학과)
        ///logic              : 예약정보 출력(영상의학과)
        ///desc               : 공통코드리스트를 조회함
        ///author             : 오원빈
        ///create date        : 2021.11.23
        ///update date        : 최종 수정일자, 수정자, 수정개요   
        ///                     2020.01.16 bShowDialog 추가 (미리보기 여부)
        ///&lt;/summary&gt;
        ///&lt;param name="inobj"&gt;공통코드&lt;/param&gt;
        ///&lt;returns&gt;공통코드리스트&lt;/returns&gt;
        public static void SelectExamRsvInfo_BR1(string sOrd_Id_List, string shsp_tp_cd, int? iPrintCnt, string sPrintName, bool bShowDialog = true)  //프린터 N
        {
            HSFDTOCollectionBaseObject&lt;PrintExamRsvInfo_INOUT&gt; _sPrintdata = new HSFDTOCollectionBaseObject&lt;PrintExamRsvInfo_INOUT&gt;();
            PrintExamRsvInfo_INOUT inobj = new PrintExamRsvInfo_INOUT() { IN_ORD_ID = sOrd_Id_List, HIS_HSP_TP_CD = shsp_tp_cd };

            _sPrintdata = (HSFDTOCollectionBaseObject&lt;PrintExamRsvInfo_INOUT&gt;)UIMiddlewareAgent.InvokeBizService("HIS.MS.IV.SE.CO.BIZ.CommonInfoBL", "SelectExamRsvInfo", inobj);

            if (_sPrintdata.Count &gt; 0)
            {
                PrintExamRsvInfoReport_BR1(_sPrintdata, sPrintName, iPrintCnt,bShowDialog);
            }
        }</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>미시행검사 강제시행</QUERY_NAME>
    <QUERY_TEXT>DECLARE

    V_EXEC_DTM DATE;
    G_COST_DEPT VARCHAR2(20);
    G_WORK_DEPT VARCHAR2(20);

    IO_ERRYN    VARCHAR2(100);
    IO_ERRMSG   VARCHAR2(1000);

    OLD_PRINT_YN      ACPPRAAM.PRNT_TP_YN%TYPE := '';
    OLD_BSCR_TP_CD    ACPPRAAM.BSCR_TP_CD%TYPE := '';

    ACPPRAAM_PACT_ID    ACPPRAAM.PACT_ID%TYPE := '';

    V_FMT_EXRM_NO    MSERMAAD.EXRM_TP_CD%TYPE :='RDC04';
    IN_ORD_ID      MOOOREXM.ORD_ID%TYPE :='177726838';

    V_LSH_PRGM_NM VARCHAR2(4000) := 'GOLDEN-OWB미시행검사 업데이트';
    V_FMT_STF_NO VARCHAR2(4000)  := 'MT00765'; --접수,시행 사번
    V_LSH_IP_ADDR VARCHAR2(4000) := '10.91.103.77';


--    IN_FR_DT    VARCHAR2(12) := '2022-01-01';
--    IN_TO_DT    VARCHAR2(12) := '2022-01-09';
BEGIN


    FOR DR IN
    (
        SELECT *
          FROM MOOOREXM
         WHERE HSP_TP_CD = '01'
           AND ODDSC_TP_CD = 'C'
           AND ORD_ID = IN_ORD_ID
--           AND ORD_ID IN
--                (
--
--   SELECT ORD_ID
--          FROM MOOOREXM_NOFMT_0114_1 O
----    WHERE O.ORD_ID = '150242151'
--
-----------------------------
--
--                )

    ) LOOP

        DBMS_OUTPUT.PUT_LINE('');


        V_EXEC_DTM := DR.FSR_DTM +0.028;

        BEGIN
            SELECT /*+ XSUP.PC_MSE_MOOOREXM_UPDATE */
                   C.EXPS_USE_DEPT_CD
                 , C.EXPS_USE_WKDP_CD
              INTO G_COST_DEPT
                 , G_WORK_DEPT
              FROM CNLRRUSD C
             WHERE C.STF_NO = DR.FSR_STF_NO
               AND NVL(C.RTRM_DT, TRUNC(SYSDATE) + 1)  &gt; TRUNC(SYSDATE)
               AND C.HSP_TP_CD  = DR.HSP_TP_CD;

--            EXCEPTION
--                WHEN NO_DATA_FOUND THEN
--                    IO_ERRYN  := 'Y';
--                    IO_ERRMSG := '시행자의 비용사용부서/세부진료과 내역이 없습니다.(2) ERRCODE = ' || TO_CHAR(SQLCODE);
--
--                    GOTO QUIT;
--                WHEN OTHERS THEN
--                    IO_ERRYN  := 'Y';
--                    IO_ERRMSG := '시행자의 비용사용부서/세부진료과 조회 중 오류발생(3) ERRCODE = ' || TO_CHAR(SQLCODE);
--                    GOTO QUIT;
        END;

            IO_ERRYN := '';
            IO_ERRMSG := '';

            DBMS_OUTPUT.PUT_LINE('');

        IF V_FMT_EXRM_NO IS NOT NULL OR V_FMT_EXRM_NO &lt;&gt; '' THEN
            UPDATE MOOOREXM
               SET HOPE_EXRM_NO =  V_FMT_EXRM_NO
             WHERE HSP_TP_CD = '01'
               AND ODDSC_TP_CD = 'C'
               AND ORD_ID = IN_ORD_ID
               ;
        END IF;

        BEGIN
            SELECT PRNT_TP_YN
                 , BSCR_TP_CD
                 , PACT_ID
              INTO OLD_PRINT_YN
                 , OLD_BSCR_TP_CD
                 , ACPPRAAM_PACT_ID
              FROM ACPPRAAM
             WHERE HSP_TP_CD = DR.HSP_TP_CD
               AND PT_NO = DR.PT_NO
               AND PACT_ID = DR.RPY_PACT_ID;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                NULL;
        END;
        IF ACPPRAAM_PACT_ID IS NOT NULL THEN
            BEGIN
                UPDATE ACPPRAAM
                   SET PRNT_TP_YN = 'N'
                     , BSCR_TP_CD = 'N'
                 WHERE HSP_TP_CD = DR.HSP_TP_CD
                   AND PT_NO = DR.PT_NO
                   AND PACT_ID = DR.PACT_ID;
            END;
        END IF;
            PC_MSE_MSERMAAD_WARD_INSERT
            (
                  DR.ORD_ID
                , 'I'
                , DR.FSR_STF_NO
                , G_COST_DEPT
                , ''
                , ''
                , G_WORK_DEPT
                , DR.FSR_STF_NO
                , 'Y'
                , DR.HSP_TP_CD
                , DR.FSR_STF_NO
                , V_LSH_PRGM_NM
                , V_LSH_IP_ADDR
                , IO_ERRYN
                , IO_ERRMSG

            );
        BEGIN
            UPDATE ACPPRAAM
               SET PRNT_TP_YN = OLD_PRINT_YN
                 , BSCR_TP_CD = OLD_BSCR_TP_CD
             WHERE HSP_TP_CD = DR.HSP_TP_CD
               AND PT_NO = DR.PT_NO
               AND PACT_ID = DR.PACT_ID;
        END;

          UPDATE /*+ XSUP.PC_MSE_MOOOREXM_UPDATE */
                 MOOOREXM A
             SET A.ACPT_DTM               = V_EXEC_DTM
               , A.FMT_EXRM_NO            = A.HOPE_EXRM_NO
               , A.EXRM_HH_DTM            = V_EXEC_DTM
               , A.RTM_FMT_DTM            = V_EXEC_DTM
               , A.RTM_FMT_STF_NO         = V_FMT_STF_NO
               , A.RTM_CLSN_DT            = SYSDATE --작업일자.
               , A.RTM_CLSN_STF_NO        = V_FMT_STF_NO
               , A.LSH_STF_NO             = DR.FSR_STF_NO
               , A.LSH_DTM                = SYSDATE
               , A.LSH_PRGM_NM            = V_LSH_PRGM_NM
               , A.LSH_IP_ADDR            = V_LSH_IP_ADDR
    --           , A.RSV_DTM                = DECODE(A.PACT_TP_CD, 'O', NVL(A.RSV_DTM, DECODE( IN_EXM_PRGR_STS_CD, 'E', DECODE(G_RSEX_YN, 'Y', G_SHOT_DTETM, A.RSV_DTM),A.RSV_DTM)),  A.RSV_DTM)--2017-10-24 임재득 추가 - 예약검사 여부 확인 : 예약 검사인데, 선검사일경우 수납없이 접수가 가능함. BUT 수납에서 예약검사인데 예약없이 실행까지 한경우 수납을 할수가 없음. 그래서 예약 검사인데, 선검사인경우 RSV_DTM 정보를 넣어줌.
           WHERE A.ORD_ID   = DR.ORD_ID
             AND A.HSP_TP_CD  = DR.HSP_TP_CD
          ;
        UPDATE MSERMAAD A
           SET A.ACPT_DTM               = V_EXEC_DTM
             , A.PHTG_DTM               = V_EXEC_DTM
             , A.LSH_STF_NO             = V_FMT_STF_NO
             , A.LSH_DTM                = SYSDATE
             , A.LSH_PRGM_NM            = V_LSH_PRGM_NM
             , A.LSH_IP_ADDR            = V_LSH_IP_ADDR
             , ACPT_STF_NO              = V_FMT_STF_NO
             , IMPL_STF_NO              = V_FMT_STF_NO
         WHERE A.ORD_ID     = DR.ORD_ID
           AND A.HSP_TP_CD  = DR.HSP_TP_CD
         ;

        DBMS_OUTPUT.PUT_LINE('DR.ORD_ID :: ' || DR.ORD_ID);
        DBMS_OUTPUT.PUT_LINE('IO_ERRYN :: ' || IO_ERRYN);
        DBMS_OUTPUT.PUT_LINE('IO_ERRMSG :: ' || IO_ERRMSG);
    END LOOP;

--&lt;&lt;QUIT&gt;&gt;

        DBMS_OUTPUT.PUT_LINE('Q IO_ERRYN :: ' || IO_ERRYN);
        DBMS_OUTPUT.PUT_LINE('Q IO_ERRMSG :: ' || IO_ERRMSG);
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진단검사 양성환자리스트</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '03';
EXEC :IN_SPCM_NO := '';
EXEC :IN_PT_NO := '';
EXEC :PT_HME_DEPT_CD := '';
EXEC :WD_DEPT_CD := '';
EXEC :MVM_CD := '';
EXEC :IN_SCLS_COMN_CD := '';
EXEC :IN_FROM_DT := '2022-08-01';
EXEC :IN_TO_DT := '2022-08-09';
EXEC :ADS_GUBN := '0';

SELECT A.PT_NO
  , E.PT_NM
  , E.SEX_TP_CD
  , XBIL.FT_PCT_AGE('AGE',SYSDATE,E.PT_BRDY_DT)  AGE
  , TO_CHAR(E.PT_BRDY_DT,'YYYY-MM-DD') PT_BRDY_DT
  , A.PACT_TP_CD
  , A.PT_HME_DEPT_CD
  , A.WD_DEPT_CD
  , A.PRM_NO
  , A.PBSO_DEPT_CD
     , B.SPCM_NO
     , A.ANDR_STF_NO
     , TO_CHAR(D.BLCL_DTM,'YYYY-MM-DD HH24:MI:SS')   BLCL_DTM --채혈일
     , TO_CHAR(B.ACPT_DT,'YYYY-MM-DD') ACPT_DT
     , B.ATBA_SSBT_RSLT_CNTE -- 판정
     , B.ATBA_DMTR_CNTE      -- 항생제결과(검사결과 아님)
     , B.ATBA_CD             -- 항생제
     , (SELECT ATBA_NM FROM MSELMMAC WHERE HSP_TP_CD = A.HSP_TP_CD AND ATBA_CD = B.ATBA_CD) ATBA_NM
     , C.MVM_CD
     , C.EXM_CD
     , A.PACT_ID
     , D.TH1_SPCM_CD
     , (SELECT X.SPCM_NM FROM MSELMCCC X WHERE X.HSP_TP_CD = :HIS_HSP_TP_CD AND X.SPCM_CD = D.TH1_SPCM_CD )  SPCM_NM
     , (SELECT MVRT_CNTE FROM MSELMSYC WHERE HSP_TP_CD = A.HSP_TP_CD AND MVM_CD = C.MVM_CD)       MVRT_CNTE
 FROM MOOOREXM A
  ,MSELMMRD B
  ,MSELMCRD C
  ,MSELMCED D
  ,PCTPCPAM_DAMO E
 WHERE 1=1
 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
 AND A.SPCM_PTHL_NO like :IN_SPCM_NO || '%'
 AND A.HSP_TP_CD = B.HSP_TP_CD
 AND A.HSP_TP_CD = C.HSP_TP_CD
 AND A.HSP_TP_CD = D.HSP_TP_CD
 AND A.PT_NO = E.PT_NO
 AND A.PT_NO LIKE :IN_PT_NO || '%'
 AND A.SPCM_PTHL_NO = B.SPCM_NO
 AND A.SPCM_PTHL_NO = C.SPCM_NO
 AND A.SPCM_PTHL_NO = D.SPCM_NO
 AND A.PT_HME_DEPT_CD LIKE :PT_HME_DEPT_CD || '%' --진료과
 AND A.WD_DEPT_CD LIKE :WD_DEPT_CD || '%' --병동
 AND C.MVM_CD LIKE :MVM_CD || '%' --균코드
 AND B.ATBA_SSBT_RSLT_CNTE IN (SELECT SCLS_COMN_CD
         FROM MSELMSID
           WHERE HSP_TP_CD = A.HSP_TP_CD
             AND LCLS_COMN_CD = 'CULTURE_ATBASSBTJGMT'
             AND USE_YN = 'Y'
             AND SCLS_COMN_CD LIKE :IN_SCLS_COMN_CD || '%')
 AND B.ACPT_DT BETWEEN :IN_FROM_DT AND :IN_TO_DT
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처방세트 오더발행</QUERY_NAME>
    <QUERY_TEXT>select hope_exrm_no,c.exrm_tp_cd,b.pt_Nm,a.*
 from mooorexm a,pctpcpam_damo b,msermmmc c
 where 1=1
 and a.pt_no in('05438204','07319267','60707858')
 and a.hsp_tp_cd = '04'
 and a.pt_no = b.pt_no
 and a.ord_cd = c.exm_cd
 and a.hsp_tp_cd = c.hsp_tp_cd
 and ord_dt = trunc(sysdate)

; 
--세트명으로 세트 확인
SELECT
       (
        SELECT LISTAGG(M.SORD_NM, ' &gt;&gt; ') WITHIN GROUP (ORDER BY LEVEL DESC)
          FROM MOOORSAM M
         START WITH (M.SORD_REG_ID) = (A.SORD_REG_ID) AND M.HSP_TP_CD = A.HSP_TP_CD
        CONNECT BY PRIOR M.UPR_SORD_REG_ID = (M.SORD_REG_ID) AND M.HSP_TP_CD = A.HSP_TP_CD
       ) "세트정보",LVL_SEQ,
       SORD_NM, A.*
 FROM  MOOORSAM  A
 WHERE A.HSP_TP_CD = '01'
   AND A.USE_YN = 'Y'
--세트명 입력
   AND SORD_NM LIKE '%'||'영상교'||'%'
;

-- xMED 스테이징 계정으로 할 것~~~~!!!

EXEC :IN_PBSO_DEPT_CD         :='OMR';                                       --소아처방가능여부
EXEC :IN_SORD_REG_ID          :='102296066';                                  --병동간호1 스테이징 세트
EXEC :IN_HSP_TP_CD         :='04';                                         --선택진료비발생여부
EXEC :IN_SGNT_STF_NO          :='CCC0EMR';                                    --최초등록직원번호
EXEC :IN_HIS_PRGM_NM          :='AUTOSETORDER';                               --최초등록프로그램명
EXEC :IN_HIS_IP_ADDR          :='127.0.0.1';                                  --최초등록IP주소
EXEC :IN_END_DATE             :='20210831';                                   --최초등록IP주소

--EXEC :V_ERROR_YN  :='';
--EXEC :V_RESULT    :='';
--06255413
--08637727
BEGIN
    FOR REC IN
    (
    SELECT A.PT_NO           PT_NO
        , A.PACT_ID         PACT_ID
        , TRUNC(SYSDATE)    ORD_DT
   --     , A.WD_DEPT_CD      PBSO_DEPT_CD
     FROM ACPPRODM A
        , PCTPCPAM_DAMO P
    WHERE A.HSP_TP_CD = '04'
      AND A.PT_NO = P.PT_NO
      AND A.PT_NO IN('05438204','07319267','60707858')
      AND A.APCN_YN = 'N'
      AND MED_DT &gt; SYSDATE-1

--      AND P.PT_NO = '04401122'
      --and a.sihs_yn = 'Y'

    )
    LOOP
   BEGIN
           XMED.PC_MOO_SAVE_ORDER_SETORDER( REC.PT_NO
                                          , REC.PACT_ID
                                          , REC.ORD_DT
                                          , 'N'
                                          , NULL            -- 2016-06-05 Jeong.W.J : Pre-adm. Set 에 등록되어 있는 처방적용목적코드 데이터로 오더 저장되도록 null 처리
                                          , :IN_PBSO_DEPT_CD
                                          , :IN_SGNT_STF_NO
                                          , :IN_SORD_REG_ID
                                          , :IN_HSP_TP_CD
                                          , :IN_SGNT_STF_NO
                                          , :IN_HIS_PRGM_NM
                                          , :IN_HIS_IP_ADDR
                                          );
      END;
    END LOOP;
--
--    COMMIT;
END;

</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상과내 공통코드추가 (전병원)</QUERY_NAME>
    <QUERY_TEXT>SELECT *
         FROM MSERMCCC
         WHERE 1=1
--          and HSP_TP_CD = :HIS_HSP_TP_CD
           AND EXM_GRP_CD = :TITLE
;
exec :TITLE := 'RFED_MNG';
exec :TITLE_NAME := '처치관리 재료정보';
exec :CD :='WC0406';
exec :CD_NM := 'DR Copy Film (1매당)';
exec :ORD_CTG_CD := 'BR1';
exec :TITLE_ADD_YN := 'Y'; --타이틀 추가여부
exec :HIS_HSP_TP_CD := '02';
BEGIN
    FOR REC IN (SELECT COMN_CD    HSP_TP_CD
                  FROM CCCCCSTE
                 WHERE COMN_GRP_CD = '101')
    LOOP
         IF :TITLE_ADD_YN = 'Y' THEN
          BEGIN
           INSERT INTO MSERMCCC
           SELECT REC.HSP_TP_CD HSP_TP_CD
             ,:ORD_CTG_CD
             ,'0'
             ,:TITLE
             ,:TITLE_NAME
             ,1
             ,''
             ,''
             ,''
             ,''
             ,''
             ,''
             ,'Y'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,''
             FROM DUAL;
          EXCEPTION
              WHEN OTHERS THEN
                  NULL;
          END;
         END IF;
         BEGIN
          INSERT INTO MSERMCCC
          (HSP_TP_CD,ORD_CTG_CD,EXM_GRP_CD,EXM_GRP_DTL_CD,EXM_GRP_DTL_CD_NM,SCRN_MRK_SEQ,USE_YN,FSR_DTM,FSR_STF_NO,FSR_PRGM_NM,FSR_IP_ADDR,LSH_DTM,LSH_STF_NO,LSH_PRGM_NM,LSH_IP_ADDR)
          VALUES
          ( REC.HSP_TP_CD
             ,:ORD_CTG_CD
             ,:TITLE
             ,:CD
             ,:CD_NM
             ,1
             ,'Y'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0'
             ,SYSDATE
             ,'SSSUP11'
             ,'GOLDEN'
             ,'0.0.0.0');
          EXCEPTION
              WHEN OTHERS THEN
                  NULL;
         END;
      END LOOP;
END;

</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>스테이징과 운영기가 다른 쿼리(EQS비교)</QUERY_NAME>
    <QUERY_TEXT>--xsup.스테이징에서 실행
EXEC :OS_USER := 'ohwonbin';
exec PC_MSE_BATCH_COMPAREEQS;
COMMIT;
SELECT WKDTM,Y.QUERYID,Y.DML_TYPE,OS_USER,RMK
  FROM
     (
     SELECT /*+ USE_NL(A B)*/
           '운영기와 스테이징이 다름' RMK,A.*
       FROM fxquerystore A
          , fxquerystore_ohwb B
      WHERE 1=1
        AND A.QUERYID = B.QUERYID
        AND 0 &lt;&gt; DBMS_LOB.COMPARE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(A.QUERYTEXT,'&amp;'||'amp;','&amp;'),'&amp;'||'lt;','&lt;'),'&amp;'||'gt;','&gt;'),'&amp;'||'apos;','`'),'&amp;'||'amp;','&amp;'),REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(B.QUERYTEXT,'&amp;'||'amp;','&amp;'),'&amp;'||'lt;','&lt;'),'&amp;'||'gt;','&gt;'),'&amp;'||'apos;','`'),'&amp;'||'amp;','&amp;'))
      )X
,
(
select Z.*
  FROM(
  select ROW_NUMBER() OVER(PARTITION BY A.QUERYID ORDER BY WKDTM DESC) SEQ,A.*
        from fxquerystore_log a
    where 1=1
    AND A.QUERYID LIKE 'HIS.%'
    and not exists(
                SELECT *
                   FROM (
                  select ROW_NUMBER() OVER(PARTITION BY QUERYID ORDER BY WKDTM DESC) SEQ,QUERYID,DML_TYPE
                    from fxquerystore_log@DL_STG2DEV
                   )
                   WHERE QUERYID = A.QUERYID
                     AND SEQ = 1
                     AND UPPER(DML_TYPE) = 'DELETE')
)Z
where SEQ =1
)Y
WHERE X.QUERYID = Y.QUERYID
AND UPPER(OS_USER) = UPPER(:OS_USER)
UNION ALL
SELECT WKDTM,Y.QUERYID,Y.DML_TYPE,OS_USER,RMK
  FROM
     (
     SELECT
           '스테이징에만존재' RMK,A.*
       FROM fxquerystore A
      WHERE 1=1
        AND NOT EXISTS(SELECT 1
                         FROM fxquerystore_ohwb
                        WHERE QUERYID = A.QUERYID)
      )X
,
(
select Z.*
  FROM(
  select ROW_NUMBER() OVER(PARTITION BY A.QUERYID ORDER BY WKDTM DESC) SEQ,A.*
        from fxquerystore_log a
    where 1=1
    AND A.QUERYID LIKE 'HIS.%'
    and not exists(
                SELECT *
                   FROM (
                  select ROW_NUMBER() OVER(PARTITION BY QUERYID ORDER BY WKDTM DESC) SEQ,QUERYID,DML_TYPE
                    from fxquerystore_log@DL_STG2DEV
                   )
                   WHERE QUERYID = A.QUERYID
                     AND SEQ = 1
                     AND UPPER(DML_TYPE) = 'DELETE')
)Z
where SEQ =1
)Y
WHERE X.QUERYID = Y.QUERYID
AND UPPER(OS_USER) = UPPER(:OS_USER)
ORDER BY WKDTM DESC
;



--PROCEDURE      PC_MSE_BATCH_COMPAREEQS
--/*
--JOB 내용
--CREATOR : 오원빈 2022-06-10
--내용: 스테이징과 운영기 EQS 비교
--*/
--IS
--BEGIN
--    BEGIN
--        /* */
--        /**************************************************************************************/
--        /*  스테이징과 운영기 EQS 비교  FXQUERYSTORE_OHWB =&gt; FXQUERYSTORE테이블의 백업 테이블.   */
--        /**************************************************************************************/
--
--        -- 초기화
--        DELETE FROM FXQUERYSTORE_OHWB;
--
--        -- MS 입력
--        INSERT INTO FXQUERYSTORE_OHWB
--        SELECT *
--          FROM FXQUERYSTORE@DL_STG2PROD
--         WHERE 1=1
--           AND QUERYID LIKE 'HIS.MS%';
--        -- 감염관리 MC 입력
--        INSERT INTO FXQUERYSTORE_OHWB
--        SELECT *
--          FROM FXQUERYSTORE@DL_STG2PROD
--         WHERE 1=1
--           AND QUERYID LIKE 'HIS.MC%';
--    END;
--
--END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>DB OBJECT비교(내가 마지막 컴파일)</QUERY_NAME>
    <QUERY_TEXT>
exec :USER_NAME :='ohwonbin';
--migtest 운영기로 접속해서 실행 해야함 .
select distinct
       name
,TYPE,OWNER,B.EVENT_DATE,OS_USERNAME
,(
SELECT EVENT_DATE
FROM(select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where 1=1
  and  ORA_DICT_OBJ_NAME = A.NAME
    and ORA_DICT_OBJ_TYPE = A.TYPE
    and ORA_SYSEVENT = 'CREATE'
    )
    WHERE SEQ = 1
     AND EVENT_DATE &gt; B.EVENT_DATE
) "최종 스테이징 컴파일시간"
,(
SELECT OS_USERNAME
FROM(select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where 1=1
  and  ORA_DICT_OBJ_NAME = A.NAME
    and ORA_DICT_OBJ_TYPE = A.TYPE
    and ORA_SYSEVENT = 'CREATE'
    )
    WHERE SEQ = 1
     AND EVENT_DATE &gt; B.EVENT_DATE
) "최종 스테이징 컴파일 USER",'운영기와 스테이징이 다름' RMK from
(
SELECT OWNER,TYPE,NAME,LINE,REPLACE(REPLACE(TEXT,CHR(13),''),CHR(10),'') FROM ALL_SOURCE X WHERE OWNER IN ('XSUP','XMED','HSUP','HMED') AND TYPE IN ('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY','TRIGGER') AND EXISTS(SELECT 1 FROM ALL_SOURCE@DL_PROD2STG WHERE NAME = X.NAME)
MINUS
SELECT OWNER,TYPE,NAME,LINE,REPLACE(REPLACE(TEXT,CHR(13),''),CHR(10),'') FROM ALL_SOURCE@DL_PROD2STG WHERE OWNER IN ('XSUP','XMED','HSUP','HMED') AND TYPE IN ('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY','TRIGGER')
 ) A,
(select ORA_DICT_OBJ_NAME,SEQ,EVENT_DATE,OS_USERNAME
from(
select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where UPPER(OS_USERNAME) = UPPER(:USER_NAME)
      and ORA_SYSEVENT = 'CREATE'
)
)B
where B.seq = 1
and B.ORA_DICT_OBJ_NAME = A.NAME
union
select distinct name,TYPE,OWNER,B.EVENT_DATE,OS_USERNAME,
(
SELECT EVENT_DATE
FROM(select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where 1=1
  and  ORA_DICT_OBJ_NAME = A.NAME
    and ORA_DICT_OBJ_TYPE = A.TYPE
    and ORA_SYSEVENT = 'CREATE'
    )
    WHERE SEQ = 1
     AND EVENT_DATE &gt; B.EVENT_DATE
) "최종 스테이징 컴파일시간"
,(
SELECT OS_USERNAME
FROM(select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where 1=1
  and  ORA_DICT_OBJ_NAME = A.NAME
    and ORA_DICT_OBJ_TYPE = A.TYPE
    and ORA_SYSEVENT = 'CREATE'
    )
    WHERE SEQ = 1
     AND EVENT_DATE &gt; B.EVENT_DATE
) "최종 스테이징 컴파일 USER",'스테이징만존재' RMK from
(
SELECT OWNER,TYPE,NAME FROM ALL_SOURCE@DL_PROD2STG X WHERE OWNER IN ('XSUP','XMED','HSUP','HMED') AND TYPE IN ('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY','TRIGGER') AND NOT EXISTS(SELECT 1 FROM ALL_SOURCE WHERE NAME = X.NAME)
 ) A,
(select ORA_DICT_OBJ_NAME,SEQ,EVENT_DATE,OS_USERNAME
from(
select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where UPPER(OS_USERNAME) = UPPER(:USER_NAME)
      and ORA_SYSEVENT = 'CREATE'
)
)B
where B.seq = 1
and B.ORA_DICT_OBJ_NAME = A.NAME
union
select distinct name,TYPE,OWNER,B.EVENT_DATE,OS_USERNAME,
(
SELECT EVENT_DATE
FROM(select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where 1=1
  and  ORA_DICT_OBJ_NAME = A.NAME
    and ORA_DICT_OBJ_TYPE = A.TYPE
    and ORA_SYSEVENT = 'CREATE'
    )
    WHERE SEQ = 1
     AND EVENT_DATE &gt; B.EVENT_DATE
) "최종 스테이징 컴파일시간"
,(
SELECT OS_USERNAME
FROM(select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where 1=1
  and  ORA_DICT_OBJ_NAME = A.NAME
    and ORA_DICT_OBJ_TYPE = A.TYPE
    and ORA_SYSEVENT = 'CREATE'
    )
    WHERE SEQ = 1
     AND EVENT_DATE &gt; B.EVENT_DATE
) "최종 스테이징 컴파일 USER",'운영기만 존재' RMK from
(
SELECT OWNER,TYPE,NAME,LINE,REPLACE(REPLACE(TEXT,CHR(13),''),CHR(10),'') FROM ALL_SOURCE X WHERE OWNER IN ('XSUP','XMED','HSUP','HMED') AND TYPE IN ('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY','TRIGGER')AND NOT EXISTS(SELECT 1 FROM ALL_SOURCE@DL_PROD2STG WHERE NAME = X.NAME)
 ) A,
(select ORA_DICT_OBJ_NAME,SEQ,EVENT_DATE,OS_USERNAME
from(
select ROW_NUMBER() OVER(PARTITION BY ORA_DICT_OBJ_NAME ORDER BY EVENT_DATE DESC) seq,a.*
    from udba.db_ddl_log@DL_PROD2STG a
    where UPPER(OS_USERNAME) = UPPER(:USER_NAME)
      and ORA_SYSEVENT = 'CREATE'
)
)B
where B.seq = 1
and B.ORA_DICT_OBJ_NAME = A.NAME
ORDER BY EVENT_DATE DESC
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EAM 롤 권한 복사</QUERY_NAME>
    <QUERY_TEXT>INSERT INTO EMUSRBUT
SELECT '04' HSP_TP_CD,WK_ID,BUSINESS_TYP,ROLE_CD,START_DT,END_DT,EDIT_ID,EDIT_DT,ROLE_AUTH_DOC_NM,ROLE_AUTH_RSN_CNTE
  FROM EMUSRBUT A -- [EAM] 부서별 업무권한 정의
 WHERE 1=1
AND WK_ID = 'SSSUP11'
AND HSP_TP_CD='01'</QUERY_TEXT>
    <GROUP>EAM</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>주민번호 복호화</QUERY_NAME>
    <QUERY_TEXT>SELECT SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', A.SEC_RRN), 1, 6) || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', A.SEC_RRN), 7, 7)
 FROM PCTPCPAM_DAMO A
WHERE PT_NO = :PT_NO</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>희망의사 등록</QUERY_NAME>
    <QUERY_TEXT>EXEC :IMPL_STF_NO := 'YY99999'; --판독의 사번
EXEC :HIS_HSP_TP_CD := '03';
EXEC :HIS_STF_NO := 'SSSUP11';
EXEC :HIS_PRGM_NM := 'GOLDEN';
EXEC :HIS_IP_ADDR := 'GOLDEN';
EXEC :IN_FEE_GRP := 'BR1';
EXEC :IN_LCLS_EXRM_TP_CD := 'BR1';
--&lt;sql id="HIS.MS.IV.SD.MS.InsertInterpretationDoctorAuthority"&gt;
--&lt;!--
--    Clss : Text
--    Desc : 판독의 권한 입력
--    Author : 이지케어텍 정병철
--    Create date : 2012-11-07
--    Update date : 2012-11-07
----&gt;

 INSERT /* HIS.MS.IV.SD.MS.InsertInterpretationDoctorAuthority */
   INTO MSERMDCD( DR_STF_NO
                , SORT_SEQ
                , TH1_MEMO
                , TH2_MEMO
                , TH3_MEMO
                , HSP_TP_CD
                , FSR_DTM
                , FSR_STF_NO
                , FSR_PRGM_NM
                , FSR_IP_ADDR
                , LSH_DTM
                , LSH_STF_NO
                , LSH_PRGM_NM
                , LSH_IP_ADDR
                , ORD_CTG_CD
                , LCLS_EXRM_TP_CD
                )
VALUES( :IMPL_STF_NO
      , '0'
      , ''
      , ''
      , ''
      , :HIS_HSP_TP_CD
      , SYSDATE
      , :HIS_STF_NO
      , :HIS_PRGM_NM
      , :HIS_IP_ADDR
      , TRUNC(SYSDATE)
      , :HIS_STF_NO
      , :HIS_PRGM_NM
      , :HIS_IP_ADDR
      , :IN_FEE_GRP
      , :IN_LCLS_EXRM_TP_CD   --2017.06.14 LIM ADD
      )

-- &lt;/sql&gt;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 치료시행</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.RS.InsertRsvExeActOrCancel2"&gt;
&lt;!--
    Clss :  [package] (쿼리유형)
    Desc : 치료예약화면에서 외래,입원 바로 치료시행취소작업
    Author : 전영준 
    Create date : 2013-03-21
    Update date : 2013-03-21 
--&gt;

  /*HIS.MS.TR.RE.RS.InsertRsvExeActOrCancel2*/
     PKG_MST_RH_PTRSV.PC_MST_RH_ACT_INS02
 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>현재시간 밀리세컨드 조회(SYSTIMESTAMP)</QUERY_NAME>
    <QUERY_TEXT>SELECT TO_CHAR(SYSTIMESTAMP,'YYYY-MM-DD HH24:MI:SS.FF6'),TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISSFF6')
FROM DUAL
--초 밑의 자리수는 FF뒤의 숫자에 따라 정해짐.</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재료 마감</QUERY_NAME>
    <QUERY_TEXT>
-- RTM_FMT_DTM RTM_FMT_STF_NO 시행일 .
-- RTM_CLSN_STF_NO RTM_CLSN_DT RTM_CLSN_FMT_YN 수익 잡힌 날. 

--시행을 안했는데 수익을 잡았다는건 논리상 맞지 않음. 
-- 프로그램에서 시행을 했을 경우에는 보통 CLSN이 들어가며 다음날에 취소했을 경우에는 건들지 않음.</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ALL_SOURCE(DB조회 , 재료프로시저)</QUERY_NAME>
    <QUERY_TEXT>EXEC :SEARCHTEXT := 'MSERMAMD';
SELECT NAME,TYPE,QT
FROM
    (
    SELECT NAME,TYPE,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TXT,'&amp;'||'amp;','&amp;'),'&amp;'||'lt;','&lt;'),'&amp;'||'gt;','&gt;'),'&amp;'||'apos;',''''),'&amp;'||'amp;','&amp;') AS QT
    FROM(
        SELECT NAME,TYPE,xmlagg(xmlelement(text,'' || text) order by line).extract('//text()').getClobVal()  TXT
            FROM ALL_SOURCE A
           WHERE EXISTS(
                    SELECT NAME,QTXT
                      FROM(
                           SELECT OWNER,TYPE,NAME,LINE,REPLACE(REPLACE(TEXT,CHR(13),''),CHR(10),'') QTXT FROM ALL_SOURCE X WHERE OWNER IN ('XSUP','XMED') AND TYPE IN ('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY','TRIGGER')
                           )
                     WHERE 1=1
--                        AND QTXT LIKE '%' || :SEARCHTEXT || '%'
                       AND NAME = A.NAME
                       )
        GROUP BY NAME,TYPE
        ) X
    )
WHERE     1=1
AND NAME ='PC_MSE_MSERMAMD_INSERT'
</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CLOB으로 문자열 연결</QUERY_NAME>
    <QUERY_TEXT> SELECT NAME,TYPE,xmlagg(xmlelement(text,'' || text) order by line).extract('//text()').getClobVal()  TXT
            FROM ALL_SOURCE A
           WHERE EXISTS(
                    SELECT NAME,QTXT
                      FROM(
                           SELECT OWNER,TYPE,NAME,LINE,REPLACE(REPLACE(TEXT,CHR(13),''),CHR(10),'') QTXT FROM ALL_SOURCE X WHERE OWNER IN ('XSUP','XMED') AND TYPE IN ('FUNCTION','PROCEDURE','PACKAGE','PACKAGE BODY','TRIGGER')
                           )
                     WHERE QTXT LIKE '%' || :SEARCHTEXT || '%'
                       AND NAME = A.NAME
                       )
        GROUP BY NAME,TYPE</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EAM 롤 부여</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_ROLE_CD := 'R0037';


INSERT INTO HEAM.EMUSRBUT
 SELECT '04' HSP_TP_CD
      , STF_NO WK_ID
      , (SELECT BUSINESS_TYP
           FROM EMBUROLT
           WHERE ROLE_CD = :IN_ROLE_CD
             AND HSP_TP_CD = '04'
        ) BUSINESS_TYP
      , :IN_ROLE_CD
      , '' START_DT
      , '' END_DT
      , '' EDIT_ID
      , ''EDIT_DT
      ,'' ROLE_AUTH_DOC_NM                                   /*Role permission document name*/
      ,'' ROLE_AUTH_RSN_CNTE                                 /*Role permission reason content*/
  FROM CNLRRUSD B
 WHERE RTRM_DT IS NULL -- 재직자 중
   AND HSP_TP_CD = '04'
 and ((aadp_cd = 'OMR') OR (AOA_WKDP_CD = 'OMR'))
--   AND USE_GRP_CD = 'DO' -- 의사가 아닌
   and not exists(select 1 from heam.emusrbut where wk_id = b.stf_no and role_Cd = :IN_ROLE_CD and hsp_TP_Cd = b.hsp_TP_Cd)
--   and stf_no in( 'PH00349', 'PH00235','PH00343')
-- and ((aadp_cd = 'DR') OR (AOA_WKDP_CD = 'DR'))
-- and stf_no &lt;&gt; 'ND00505'
;
select *
 FROM CNLRRUSD B
 WHERE RTRM_DT IS NULL -- 재직자 중
   AND HSP_TP_CD = '04'
 and ((aadp_cd = 'OMR') OR (AOA_WKDP_CD = 'OMR'))
;
SELECT A.*
  FROM EMUSRBUT A -- [EAM] 부서별 업무권한 정의
 WHERE 1=1
and hsp_TP_CD ='04'
and role_Cd = :IN_ROLE_CD
and wk_Id = 'DN00082'
;</QUERY_TEXT>
    <GROUP>EAM</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>시퀀스</QUERY_NAME>
    <QUERY_TEXT>시퀀스를 사용하려면 우선 시퀀스를 생성해야한다.

CREATE SEQUENCE  [시퀀스 이름]

시퀀스 수정:
ALTER SEQUENCE [시퀀스 이름] [INCREMENT BY 증가단위] [MAXVALUE 최대값] [MINVALUE 최소값] [CYCLE | NOCYCLE] [CACHE | NOCACHE]


시퀀스 검색:
SELECT * FROM USER_SEQUENCES;


시퀀스 삭제:
DROP SEQUENCE [ 시퀀스 이름];


사용법:
SELECT [시퀀스 이름].NEXTVAL FROM DUAL;

SELECT [시퀀스 이름].CURRVAL FROM DUAL;

시퀀스 초기화방법
SELECT [시퀀스 이름].CURRVAL FROM DUAL 로 현재 값을 확인 후 ALTER SEQUENCE [시퀀스 이름] INCREMENT BY  -  (현재값-1) 해준 후 NEXTVAL 처리하면 초기화 됨.</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오라클 예외처리</QUERY_NAME>
    <QUERY_TEXT>  NO_DATA_FOUND : SELECT문이 아무런 데이터 행을 반환하지 못할 때
  DUP_VAL_ON_INDEX : UNIQUE 제약을 갖는 컬럼에 중복되는 데이터가 INSERT 될 때
  ZERO_DIVIDE : 0으로 나눌 때
  INVALID_CURSOR : 잘못된 커서 연산</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>치식관련정보</QUERY_NAME>
    <QUERY_TEXT>1. 오더발행 상세정보 
   - 치식정보등록 활성화 
     처방코드(CCOOCBAC) 치과처방여부 = 'Y' 일 경우 활성화
     영상의학과 검사코드에서 검사코드별 치과처방가능여부 기능 필요
 
   - 처방횟수 수정 활성화 조건 변경(진료에서 수정함.)
     기존 : 처방코드가 RA~~~~, RH~~~, ORD_SLIP_CTG_NM = 'OTHERS' 일 경우에만 활성환
     변경 : ORD_CTRL_CD is null 일 경우에 활성화
   
2. 치과 예약,접수,시행 화면 수정 필요
   - 필요 화면 확인 후 기능 추가
   - 오더발행시 등록한 횟수 및 치식정보 항목 추가
     치식정보는 툴팁까지 표시


SELECT A.DNTS_ORD_YN -- 치과처방여부
     , A.ORD_CTG_CD
     , A.ORD_CTRL_CD
     , A.ORD_SLIP_CTG_CD
     , A.*
  FROM CCOOCBAC A -- 처방코드
 WHERE 1=1
   AND A.HSP_TP_CD  = '04'
   AND A.ORD_GRP_CD = '03'
   AND A.ORD_CTG_CD = 'BR1'
--   AND (CHOP_PSB_YN = 'Y' OR ADOP_PSB_YN = 'Y')
--   AND NVL(DNTS_ORD_YN,'N') = 'Y'
 ORDER BY A.ORD_CD
 ;

SELECT A.ROWID
     , A.EXM_NOTM -- 검사횟수
     , A.DNFR_ID  -- 치식ID
     , A.TOTH_CD_CNTE --치식정보 상세
     , A.*
  FROM MOOOREXM A -- 환자검사처방기본
     , MOOORDFD B -- 치식정보
 WHERE 1=1
   AND A.HSP_TP_CD = '04'
--   AND A.PT_NO     = ''
   AND A.ORD_DT    = '2022-08-12'
   AND A.DNFR_ID IS NOT NULL
   AND A.HSP_TP_CD = B.HSP_TP_CD
   AND A.DNFR_ID   = B.DNFR_ID
   AND B.DNFR_INF_ODDSC_TP_CD = 'C'
 ORDER BY A.ORD_SEQ
 ;

SELECT A.*
  FROM MOOORDFE A -- 치식정보
 WHERE 1=1
   AND DNFR_ID IN ( '5903', '5904') -- 치식ID
 ORDER BY A.DNFR_ID, A.TOTH_CD
 ;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>낙상 추가 스크립트</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_PT_NO := '10440928';
EXEC :IN_PT_CLS_CTG_GRP_CD := 'HR'; --낙상위험도  HR = 고위험, LR = 중위험, NR = 저위험
EXEC :IN_PT_CLS_CTG_SCR := '3000'; --낙상점수
EXEC :IN_USE_YN := 'Y';
EXEC :IN_LST_YN := 'Y';
EXEC :HIS_PRGM_NM := 'GOLDEN';
EXEC :HIS_IP_ADDR := 'GOLDEN';
EXEC :HIS_STF_NO := 'SSSUP11';
EXEC :HSP_TP_CD := '01';
DECLARE
    V_REC_ID    NUMBER := 0;
    V_HST_SEQ   NUMBER := 0;
    V_WRT_SEQ   NUMBER := 0;
    V_PT_CLS_REC_ID NUMBER := 0;
BEGIN
    BEGIN
        SELECT NVL(MAX(PT_CLS_REC_ID),0) + 1
          INTO V_REC_ID
          FROM MOPPCCRD
         WHERE HSP_TP_CD = :HSP_TP_CD
         ;
    END;
    BEGIN
        SELECT NVL(MAX(HST_SEQ),0)
             , NVL(MAX(WRT_SEQ),0)
             , NVL(MAX(PT_CLS_REC_ID),0)
          INTO V_HST_SEQ
             , V_WRT_SEQ
             , V_PT_CLS_REC_ID
          FROM MOPPCCRD
         WHERE HSP_TP_CD = :HSP_TP_CD
           AND PT_NO = :IN_PT_NO
         ;
    END;

    FOR REC IN
    (   SELECT PACT_ID
             , AGE
             , WD_DEPT_CD
             , CASE WHEN AGE &lt; 15   THEN '3' --소아
                    WHEN AGE &gt;= 15 THEN '2'  --성인
                END  PT_CLS_TL_ID
             , CLCTN_WD_DEPT_CD
             , MED_DEPT_CD
          FROM (
                SELECT TO_NUMBER(XBIL.FT_PCT_AGE('AGE',SYSDATE,B.PT_BRDY_DT)) AGE
                     , A.*
                  FROM ACPPRAAM A
                     , PCTPCPAM_DAMO B
                 WHERE A.HSP_TP_CD = :HSP_TP_CD
                   AND A.PT_NO = :IN_PT_NO
                   AND A.PT_NO = B.PT_NO
                   AND A.TDS_DTM IS NULL
                   AND A.SIHS_YN = 'Y'
                   AND A.APCN_YN = 'N'
               )
    )
    LOOP
        BEGIN
            MERGE /* HIS.EQSID */
             INTO MOPPCCRD
            USING DUAL
            ON (
                   HSP_TP_CD                      = :HSP_TP_CD
               AND PT_NO                          = :IN_PT_NO
               AND PT_CLS_REC_ID                  = V_PT_CLS_REC_ID
               AND HST_SEQ                        = V_HST_SEQ
               AND WRT_SEQ                        = V_WRT_SEQ
               )
            WHEN MATCHED THEN
            UPDATE
               SET INPT_DTM                                           = SYSDATE                                            /*입력일시*/
                 , PT_CLS_TL_ID                                       = REC.PT_CLS_TL_ID /*환자유형도구ID 3:소아 , 2:성인 */
                 , PACT_ID                                            = REC.PACT_ID                                        /*원무접수ID*/
                 , PACT_TP_CD                                         = 'I'                                     /*원무접수구분코드*/
                 , WD_DEPT_CD                                         = REC.WD_DEPT_CD                                     /*병동부서코드*/
                 , PT_CLS_CTG_GRP_CD                                  = :IN_PT_CLS_CTG_GRP_CD                              /*환자유형분류그룹코드*/
                 , PT_CLS_CTG_SCR                                     = :IN_PT_CLS_CTG_SCR                                 /*환자유형분류점수*/
                 , USE_YN                                             = :IN_USE_YN                                         /*사용여부*/
                 , LST_YN                                             = :IN_LST_YN                                         /*최종여부*/
                 , FSR_DTM                                            = SYSDATE                                            /*최초등록일시*/
                 , FSR_STF_NO                                         = :HIS_STF_NO                                        /*최초등록직원번호*/
                 , FSR_PRGM_NM                                        = :HIS_PRGM_NM                                      /*최초등록프로그램명*/
                 , FSR_IP_ADDR                                        = :HIS_IP_ADDR                                      /*최초등록IP주소*/
                 , LSH_DTM                                            = SYSDATE                                            /*최종변경일시*/
                 , LSH_STF_NO                                         = :HIS_STF_NO                                        /*최종변경직원번호*/
                 , LSH_PRGM_NM                                        = :HIS_PRGM_NM                                      /*최종변경프로그램명*/
                 , LSH_IP_ADDR                                        = :HIS_IP_ADDR                                      /*최종변경IP주소*/
            WHEN NOT MATCHED THEN
            INSERT
                 (
                   INPT_DTM                                           /*입력일시*/
                 , HSP_TP_CD                                          /*병원구분코드*/
                 , PT_CLS_REC_ID                                      /*환자유형기록ID*/
                 , HST_SEQ                                            /*이력순번*/
                 , WRT_SEQ                                            /*작성순번*/
                 , PT_NO                                              /*환자번호*/
                 , PT_CLS_TL_ID                                       /*환자유형도구ID*/
                 , PACT_ID                                            /*원무접수ID*/
                 , PACT_TP_CD                                         /*원무접수구분코드*/
                 , WD_DEPT_CD                                         /*병동부서코드*/
                 , PT_CLS_CTG_GRP_CD                                  /*환자유형분류그룹코드*/
                 , PT_CLS_CTG_SCR                                     /*환자유형분류점수*/
                 , USE_YN                                             /*사용여부*/
                 , LST_YN                                             /*최종여부*/
                 , SGKY_NO                                            /*서명키번호*/
                 , BOBD_PT_NO                                         /*합본이전환자번호*/
                 , BIND_DTM                                           /*합본일시*/
                 , BIND_STF_NO                                        /*합본직원번호*/
                 , PT_CLCTN_DEPT_CD                                   /*환자현위치부서코드*/
                 , PT_MTD_DEPT_CD                                     /*환자진료과부서코드*/
                 , WRTR_PLWK_DEPT_CD                                  /*작성자근무지부서코드*/
                 , FSR_DTM                                            /*최초등록일시*/
                 , FSR_STF_NO                                         /*최초등록직원번호*/
                 , FSR_PRGM_NM                                        /*최초등록프로그램명*/
                 , FSR_IP_ADDR                                        /*최초등록IP주소*/
                 , LSH_DTM                                            /*최종변경일시*/
                 , LSH_STF_NO                                         /*최종변경직원번호*/
                 , LSH_PRGM_NM                                        /*최종변경프로그램명*/
                 , LSH_IP_ADDR                                        /*최종변경IP주소*/
                 )
            VALUES
                 (
                   SYSDATE
                 , :HSP_TP_CD
                 , V_REC_ID
                 , V_HST_SEQ + 1
                 , V_WRT_SEQ + 1
                 , :IN_PT_NO
                 , REC.PT_CLS_TL_ID
                 , REC.PACT_ID
                 , 'I'
                 , REC.WD_DEPT_CD
                 , :IN_PT_CLS_CTG_GRP_CD
                 , :IN_PT_CLS_CTG_SCR
                 , :IN_USE_YN
                 , :IN_LST_YN
                 , ''
                 , ''
                 , ''
                 , :HIS_STF_NO
                 , REC.CLCTN_WD_DEPT_CD
                 , REC.MED_DEPT_CD
                 , '' --작성자 근무부서코드
                 , SYSDATE
                 , :HIS_STF_NO
                 , :HIS_PRGM_NM
                 , :HIS_IP_ADDR
                 , SYSDATE
                 , :HIS_STF_NO
                 , :HIS_PRGM_NM
                 , :HIS_IP_ADDR
                 );
        EXCEPTION
            WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20001, sqlerrm);
        END;
    END LOOP;
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>SQL%ROWCOUNT</QUERY_NAME>
    <QUERY_TEXT>SQL%ROWCOUNT : 가장 최근에 수행된 SQL문에 의해 영향을 받은 행의 갯수(정수)
SQL%FOUND : 가장 최근에 수행된 SQL 문에 의해 영향받은 행의 갯수가 한개 이상이면 TRUE가 되는 Boolean
SQL%NOTFOUND : 가장 최근에 수행된 SQL문에 의해 영향 받은 행이 없으면 TRUE가 되는 Boolean
SQL$ISOPEN : PL/SQL은 실행 후 바로 Implicit cursor를 닫기 때문에 항상 FALSE</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Excel 메서드</QUERY_NAME>
    <QUERY_TEXT>        /// &lt;summary&gt;
        /// name         : Excel 출력 
        /// desc         : Excel 출력 
        /// author       : 오원빈
        /// create date  : 2022-02-18
        /// update date  : 2022-02-18
        /// &lt;/summary&gt;
        public static void ExportExcel(HDataGridEx hdataGridEx, string sheetName = null,int startRowIndex = 1, int startColIndex = 1, string Alignment = null)
        {
            DataTable dt = GetDataGridViewAsDataTable(hdataGridEx);

            int str_range_row = startRowIndex;
            int str_range_col = startColIndex;
            int end_range_row = dt.Rows.Count + 1 + (startRowIndex - 1);
            int end_range_col = dt.Columns.Count  + (startColIndex - 1);

            excelApp = new Excel.Application();
            workBook = excelApp.Workbooks.Add();
            workSheet = workBook.Worksheets.get_Item(1) as Excel.Worksheet;
            Excel.Range range = workSheet.get_Range(workSheet.Cells[str_range_row, str_range_col] as object, workSheet.Cells[end_range_row, end_range_col] as object);
            range.NumberFormat = "@";

            var data = new object[dt.Rows.Count + 1, dt.Columns.Count];

            for (int i = 0; i &lt; dt.Columns.Count; i++)
            {
                //workSheet.Cells[1 + (startColIndex - 1), i + 1 + (startColIndex - 1)] = dt.Columns[i].ColumnName;                
                data[0 , i ] = dt.Columns[i].ColumnName;
            }

            for (int i = 0; i &lt; dt.Rows.Count; i++)
            {
                for (int j = 0; j &lt; dt.Columns.Count; j++)
                {
                    //workSheet.Cells[i + 2 + (startRowIndex - 1), j + 1 + (startColIndex - 1)] = dt.Rows[i][j];                                        
                    data[i + 1, j ] = dt.Rows[i][j];
                }
            }
            //데이터가 있는 범위에 데이터를 한번에 밀어넣음.
            var writeRange = range;
            writeRange.Value2 = data;
            
            workSheet.Columns.AutoFit();
            //Sheet이름을 파라미터로 받을경우 Sheet명을 지정.
            if(!string.IsNullOrEmpty(sheetName))
                workSheet.Name = sheetName;
            
            //정렬 파라미터가 있을경우 왼쪽,오른쪽,가운데정렬을 해줌.
            if(!string.IsNullOrEmpty(Alignment))
            {
                if(Alignment.ToUpper().Equals("LEFT"))
                {
                    range.HorizontalAlignment = Excel.XlHAlign.xlHAlignLeft;
                }
                else if (Alignment.ToUpper().Equals("RIGHT"))
                {
                    range.HorizontalAlignment = Excel.XlHAlign.xlHAlignRight;
                }
                else if (Alignment.ToUpper().Equals("CENTER"))
                {
                    range.HorizontalAlignment = Excel.XlHAlign.xlHAlignCenter;
                }
            }

            excelApp.Visible = true;
        }
        /// &lt;summary&gt;
        /// name         : DTO의 프로퍼티 값 리턴
        /// desc         : DTO의 프로퍼티 값 리턴
        /// author       : ezCaretech 송창수
        /// create date  : 2021-08-25
        /// update date  : 2021-08-25
        /// &lt;/summary&gt;
        private static string GetPropertyValue(object dto, string propertyName)
        {
            string value = "";
            if (dto.GetType().GetProperty(propertyName) != null)
            {
                if (dto.GetType().GetProperty(propertyName).GetValue(dto) == null)
                    value = "";
                else
                    value = dto.GetType().GetProperty(propertyName).GetValue(dto).ToString();
            }
            return value;
        }
        public static DataTable GetDataGridViewAsDataTable(HDataGridEx _DataGridView)
        {
            try
            {
                if (_DataGridView.Columns.Count == 0)
                    return null;
                DataTable dtSource = new DataTable();
                //////create columns
                foreach (DataGridColumn col in _DataGridView.Columns.Where(d =&gt; d.Visibility == Visibility.Visible))
                {
                    if (col.Header != null)
                        dtSource.Columns.Add(col.Header.ToString(), typeof(string));
                    
                    dtSource.Columns[col.Header.ToString()].Caption = col.SortMemberPath;
                }

                IList list = _DataGridView.ItemsSource as IList;
                for (int i = 0; i &lt; list.Count; i++)
                {
                    DataRow dtRow = dtSource.NewRow();
                    foreach (DataColumn col in dtSource.Columns)
                    {
                        dtRow[col.ColumnName] = GetPropertyValue(list[i], col.Caption);
                    }
                    dtSource.Rows.Add(dtRow);
                }
                return dtSource;
            }
            catch (Exception e)
            {
                MsgBox.Display(e.ToString(), MessageType.MSG_TYPE_ERROR);
                return null;
            }
        }</QUERY_TEXT>
    <GROUP>Excel</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>원외판독 판독으로 업데이트</QUERY_NAME>
    <QUERY_TEXT>SELECT B.IPTN_RM_NM,B.MDAL_KND_CD,A.*
    FROM MOOOREXM A
       , MSERMMMC B
       , MSERMAAD C
    WHERE A.HSP_TP_CD = '01'
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND A.ORD_ID = C.ORD_ID
    AND B.ORD_CTG_CD = 'BR1'
    AND B.ORD_SLIP_CTG_CD &lt;&gt;'MIG'
    AND B.IPTN_RM_NM = 'MS'
    AND B.MDAL_KND_CD IN ('CT','MR')
    AND A.ORD_CD = B.EXM_CD
    AND A.EXRM_HH_DTM BETWEEN TO_DATE('2022-07-26','YYYY-MM-DD') AND TO_DATE('2022-09-16','YYYY-MM-DD') + .99999
    AND C.IPDR_STF_NO IN ('RO00001','RO00002','RO00003','RO00004','RO00005','RO00006','RO00007','RO00008','RO00009','RO00010','RO00033','RO00034','RO00035','RO00036','RO00037','RO00038')
    AND A.EXM_PRGR_STS_CD = 'D'
UNION ALL
SELECT B.IPTN_RM_NM,B.MDAL_KND_CD,A.*
    FROM MOOOREXM A
       , MSERMMMC B
       , MSERMAAD C
    WHERE A.HSP_TP_CD = '01'
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND A.ORD_ID = C.ORD_ID
    AND B.ORD_CTG_CD = 'BR1'
    AND B.ORD_SLIP_CTG_CD &lt;&gt;'MIG'
    AND B.MDAL_KND_CD = 'MG'
    AND A.ORD_CD = B.EXM_CD
    AND A.EXRM_HH_DTM BETWEEN TO_DATE('2022-07-11','YYYY-MM-DD') AND TO_DATE('2022-09-20','YYYY-MM-DD') + .99999
    AND C.IPDR_STF_NO IN ('RO00002','RO00038','RO00008')
    AND A.EXM_PRGR_STS_CD = 'D'
;
MERGE INTO MSERMAAD A
USING
(
SELECT B.IPTN_RM_NM,B.MDAL_KND_CD,A.*
    FROM MOOOREXM A
       , MSERMMMC B
       , MSERMAAD C
    WHERE A.HSP_TP_CD = '01'
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND A.ORD_ID = C.ORD_ID
    AND B.ORD_CTG_CD = 'BR1'
    AND B.ORD_SLIP_CTG_CD &lt;&gt;'MIG'
    AND B.IPTN_RM_NM = 'MS'
    AND B.MDAL_KND_CD IN ('CT','MR')
    AND A.ORD_CD = B.EXM_CD
    AND A.EXRM_HH_DTM BETWEEN TO_DATE('2022-07-26','YYYY-MM-DD') AND TO_DATE('2022-09-16','YYYY-MM-DD') + .99999
    AND C.IPDR_STF_NO IN ('RO00001','RO00002','RO00003','RO00004','RO00005','RO00006','RO00007','RO00008','RO00009','RO00010','RO00033','RO00034','RO00035','RO00036','RO00037','RO00038')
    AND A.EXM_PRGR_STS_CD = 'D'
UNION ALL
SELECT B.IPTN_RM_NM,B.MDAL_KND_CD,A.*
    FROM MOOOREXM A
       , MSERMMMC B
       , MSERMAAD C
    WHERE A.HSP_TP_CD = '01'
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND A.ORD_ID = C.ORD_ID
    AND B.ORD_CTG_CD = 'BR1'
    AND B.ORD_SLIP_CTG_CD &lt;&gt;'MIG'
    AND B.MDAL_KND_CD = 'MG'
    AND A.ORD_CD = B.EXM_CD
    AND A.EXRM_HH_DTM BETWEEN TO_DATE('2022-07-11','YYYY-MM-DD') AND TO_DATE('2022-09-20','YYYY-MM-DD') + .99999
    AND C.IPDR_STF_NO IN ('RO00002','RO00038','RO00008')
    AND A.EXM_PRGR_STS_CD = 'D'
)X
ON (X.HSP_TP_CD = A.HSP_TP_CD
AND X.ORD_ID = A.ORD_ID)
WHEN MATCHED THEN
UPDATE SET A.EXM_PRGR_STS_CD = 'N'
          ,A.LSH_DTM = SYSDATE
          ,A.LSH_PRGM_NM = '원외판독 강제 판독상태 업데이트'
;
MERGE INTO MOOOREXM A
USING
(
SELECT B.IPTN_RM_NM,B.MDAL_KND_CD,A.*
    FROM MOOOREXM A
       , MSERMMMC B
       , MSERMAAD C
    WHERE A.HSP_TP_CD = '01'
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND A.ORD_ID = C.ORD_ID
    AND B.ORD_CTG_CD = 'BR1'
    AND B.ORD_SLIP_CTG_CD &lt;&gt;'MIG'
    AND B.IPTN_RM_NM = 'MS'
    AND B.MDAL_KND_CD IN ('CT','MR')
    AND A.ORD_CD = B.EXM_CD
    AND A.EXRM_HH_DTM BETWEEN TO_DATE('2022-07-26','YYYY-MM-DD') AND TO_DATE('2022-09-16','YYYY-MM-DD') + .99999
    AND C.IPDR_STF_NO IN ('RO00001','RO00002','RO00003','RO00004','RO00005','RO00006','RO00007','RO00008','RO00009','RO00010','RO00033','RO00034','RO00035','RO00036','RO00037','RO00038')
    AND A.EXM_PRGR_STS_CD = 'D'
UNION ALL
SELECT B.IPTN_RM_NM,B.MDAL_KND_CD,A.*
    FROM MOOOREXM A
       , MSERMMMC B
       , MSERMAAD C
    WHERE A.HSP_TP_CD = '01'
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND A.ORD_ID = C.ORD_ID
    AND B.ORD_CTG_CD = 'BR1'
    AND B.ORD_SLIP_CTG_CD &lt;&gt;'MIG'
    AND B.MDAL_KND_CD = 'MG'
    AND A.ORD_CD = B.EXM_CD
    AND A.EXRM_HH_DTM BETWEEN TO_DATE('2022-07-11','YYYY-MM-DD') AND TO_DATE('2022-09-20','YYYY-MM-DD') + .99999
    AND C.IPDR_STF_NO IN ('RO00002','RO00038','RO00008')
    AND A.EXM_PRGR_STS_CD = 'D'
)X
ON (X.HSP_TP_CD = A.HSP_TP_CD
AND X.ORD_ID = A.ORD_ID)
WHEN MATCHED THEN
UPDATE SET A.EXM_PRGR_STS_CD = 'N'
          ,A.LSH_DTM = SYSDATE
          ,A.LSH_PRGM_NM = '원외판독 강제 판독상태 업데이트'
;

</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검 판넬코드 조회</QUERY_NAME>
    <QUERY_TEXT>SELECT *
    FROM MSELMCIR
    WHERE HSP_TP_CD='01'
    AND PNL_EXM_CD = 'LSMX05'</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>반납 되어야하는데 검사 종료된 재료</QUERY_NAME>
    <QUERY_TEXT>SELECT *
FROM
(
/*2022-08-23 재료 반납 후 DC처리되면 반납재료 집계 안되는 문제 때문에 추가. 해당 재료에 대해서 이미 집계된 내용이 있으면서 접수이후상태의 검사가 없는 경우 조회되도록 추가 (수납사용량)*/
    SELECT C.ORD_ID                        AS ORD_ID                        -- 처방ID
       , C.PT_NO                         AS PT_NO                         -- 환자번호
      , TRUNC(A.MTRL_PBL_DT)            AS ORD_DT                        --오더발행일
      , C.ORD_SEQ                       AS ORD_SEQ                       -- 오더순번
      , C.HSP_TP_CD                     AS HSP_TP_CD                     -- 병원구분코드
      , (
      SELECT USE_DEPT_CD
        FROM RCADOOLD
       WHERE HSP_TP_CD = A.HSP_TP_CD
         AND ORD_ID = A.ORD_ID
         AND ARCL_NO = A.ARCL_NO
         AND PT_NO = C.PT_NO
         AND ORD_SEQ = C.ORD_SEQ
         AND ROWNUM = 1
      )                              AS DEPT_CD                        --물류집계부서
      , B.ARCL_NO                       AS ARCL_NO                        -- 물품코드
      , NVL(A.RPY_USE_QTY, 0)           AS USE_QTY                        -- 사용량
      , B.STK_MGMT_PSTN_CD              AS STK_MGMT_PSTN_CD               -- 재고관리위치(1물류팀,2사용부서)
      , B.ARCL_BUY_CLS_CD               AS ARCL_BUY_CLS_CD                -- 구입유형(1직불,2위탁재고,3선납)
      , B.ORD_SRNM_TP_CD                AS ORD_SRNM_TP_CD                 -- 공급유형(1처방성,2비처방성)
      , B.BZAQ_CD                       AS BZAQ_CD                        -- 거래처코드
      , A.PREQ_YN                       AS LGST_SND_YN                    -- 물류발췌여부
      , A.RTM_FMT_STF_NO                AS EDIT_STF_NO                    -- 입력자
      , B.ARCL_NO_KOR_NM                AS ARCL_NO_KOR_NM                 -- 물품명
      , B.ARCL_ACCT_CD                  AS ARCL_ACCT_CD                   -- 물품계정코드
      , (
       SELECT USE_DEPT_CD
         FROM RCADOOLD
        WHERE HSP_TP_CD = A.HSP_TP_CD
       AND ORD_ID = A.ORD_ID
       AND ARCL_NO = A.ARCL_NO
       AND PT_NO = C.PT_NO
       AND ORD_SEQ = C.ORD_SEQ
          AND ROWNUM = 1
      )                             AS TRT_DEPT_CD
      , 'S'                            AS GUBUN
      , ''                             AS GRP_MIF_CD
      , A.PACT_TP_CD                   AS PACT_TP_CD
     FROM MSERMAMD A
     , RCAIPCDM B
     , MOOOREXM C
    WHERE 1=1
      AND A.HSP_TP_CD = B.HSP_TP_CD
      AND A.HSP_TP_CD = C.HSP_TP_CD
      AND A.ORD_ID = C.ORD_ID
      AND C.ORD_DT &lt;= TRUNC(SYSDATE)
      AND A.RPY_USE_QTY &lt; 0
      AND A.ARCL_NO = B.ARCL_NO
      AND B.ASET_TP_CD = '1'
      AND NVL(A.PREQ_YN, 'N') = 'N'
      AND NOT EXISTS (
         SELECT 1
         FROM MSERMAAD Z
        WHERE HSP_TP_CD = C.HSP_TP_CD
       AND ORD_ID = C.ORD_ID
     )
      AND EXISTS (
       SELECT 1
         FROM MSERMAMD X
         , RCADOOLD Y
        WHERE X.HSP_TP_CD = A.HSP_TP_CD
       AND X.HSP_TP_CD = Y.HSP_TP_CD
       AND X.HSP_TP_CD = X.HSP_TP_CD
       AND X.ORD_ID = Y.ORD_ID
       AND X.ORD_ID = A.ORD_ID
       AND X.ARCL_NO = Y.ARCL_NO
       AND X.ARCL_NO = A.ARCL_NO
       AND X.MIFI_TP_CD = A.MIFI_TP_CD
       AND NVL(X.PREQ_YN, 'N') = 'Y'
       AND X.RPY_USE_QTY &gt; 0
     )
    UNION ALL
    /*2022-08-23 재료 반납 후 DC처리되면 반납재료 집계 안되는 문제 때문에 추가. 해당 재료에 대해서 이미 집계된 내용이 있으면서 접수이후상태의 검사가 없는 경우 조회되도록 추가 (무수가)*/
    SELECT C.ORD_ID                        AS ORD_ID                        -- 처방ID
       , C.PT_NO                         AS PT_NO                         -- 환자번호
      , TRUNC(A.MTRL_PBL_DT)            AS ORD_DT                        --오더발행일
      , C.ORD_SEQ                       AS ORD_SEQ                       -- 오더순번
      , C.HSP_TP_CD                     AS HSP_TP_CD                     -- 병원구분코드
      , (
      SELECT USE_DEPT_CD
      FROM RCADOOLD
      WHERE HSP_TP_CD = A.HSP_TP_CD
       AND ORD_ID = A.ORD_ID
       AND ARCL_NO = A.ARCL_NO
       AND PT_NO = C.PT_NO
       AND ORD_SEQ = C.ORD_SEQ
          AND ROWNUM = 1
      )                              AS DEPT_CD                       --물류집계부서
      , B.ARCL_NO                       AS ARCL_NO                       -- 물품코드
      , NVL(A.USE_QTY, 0)               AS USE_QTY                       -- 사용량
      , B.STK_MGMT_PSTN_CD              AS STK_MGMT_PSTN_CD              -- 재고관리위치(1물류팀,2사용부서)
      , B.ARCL_BUY_CLS_CD               AS ARCL_BUY_CLS_CD               -- 구입유형(1직불,2위탁재고,3선납)
      , B.ORD_SRNM_TP_CD                AS ORD_SRNM_TP_CD                -- 공급유형(1처방성,2비처방성)
      , B.BZAQ_CD                       AS BZAQ_CD                       -- 거래처코드
      , A.PREQ_YN                       AS LGST_SND_YN                   -- 물류발췌여부
      , A.RTM_FMT_STF_NO                AS EDIT_STF_NO                   -- 입력자
      , B.ARCL_NO_KOR_NM                AS ARCL_NO_KOR_NM                -- 물품명
      , B.ARCL_ACCT_CD                  AS ARCL_ACCT_CD                  -- 물품계정코드
      , (
      SELECT USE_DEPT_CD
      FROM RCADOOLD
      WHERE HSP_TP_CD = A.HSP_TP_CD
       AND ORD_ID = A.ORD_ID
       AND ARCL_NO = A.ARCL_NO
       AND PT_NO = C.PT_NO
       AND ORD_SEQ = C.ORD_SEQ
           AND ROWNUM = 1
      )                             AS TRT_DEPT_CD
      , 'S'                            AS GUBUN
      , ''                             AS GRP_MIF_CD
      , A.PACT_TP_CD                   AS PACT_TP_CD
     FROM MSERMAMD A
     , RCAIPCDM B
     , MOOOREXM C
    WHERE 1=1
      AND A.HSP_TP_CD = B.HSP_TP_CD
      AND A.HSP_TP_CD = C.HSP_TP_CD
      AND A.ORD_ID = C.ORD_ID
      AND C.ORD_DT &lt;= TRUNC(SYSDATE)
      AND A.USE_QTY &lt; 0
      AND A.ARCL_NO = B.ARCL_NO
      AND B.ASET_TP_CD = '1'
      AND NVL(A.PREQ_YN, 'N') = 'N'
      AND NOT EXISTS (
         SELECT 1
         FROM MSERMAAD Z
        WHERE HSP_TP_CD = C.HSP_TP_CD
       AND ORD_ID = C.ORD_ID
     )
      AND EXISTS (
       SELECT 1
         FROM MSERMAMD X
         , RCADOOLD Y
        WHERE X.HSP_TP_CD = A.HSP_TP_CD
       AND X.HSP_TP_CD = Y.HSP_TP_CD
       AND X.HSP_TP_CD = X.HSP_TP_CD
       AND X.ORD_ID = Y.ORD_ID
       AND X.ORD_ID = A.ORD_ID
       AND X.ARCL_NO = Y.ARCL_NO
       AND X.ARCL_NO = A.ARCL_NO
       AND X.MIFI_TP_CD = A.MIFI_TP_CD
       AND NVL(X.PREQ_YN, 'N') = 'Y'
       AND X.USE_QTY &gt; 0
     )
)
WHERE ORD_DT &gt; '2022-08-01'
</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>초기간호정보</QUERY_NAME>
    <QUERY_TEXT>  SELECT B.NR_ITEM_NM --IN_NR_ITEM_INTF_NM
       , A.*
    FROM MRNNRIID A
       , MRNNRIAM B
   WHERE A.HSP_TP_CD = '01'
     AND A.NREC_CLS_CD = '01'
     AND A.NR_ITEM_ID = B.NR_ITEM_ID
     AND A.HSP_TP_CD = B.HSP_TP_CD
     AND B.AVL_END_DTM = '9999-12-31'
     AND B.NR_ITEM_NM LIKE '병력%'

;
FUNCTION XMED.FT_MRN_INITNRINFLSTITEMVAL ( IN_PT_NO           IN MRNNRFAD.PT_NO%TYPE            /*환자번호*/
                                          , IN_NR_ITEM_INTF_NM IN MRNNRIID.NR_ITEM_INTF_NM%TYPE  /*간호항목인터페이스명*/
                                          , IN_PACT_ID         IN MRNNRFAD.PACT_ID%TYPE          /*원무접수ID*/
                                          , IN_HSP_TP_CD       IN MRNNRFAD.HSP_TP_CD%TYPE        /*병원구분코드*/ 
                                          )              
    RETURN VARCHAR2  
    IS
    V_RTN_VALUE                MRNNRFAE.REC_CNTE%TYPE    := NULL; 
   
    /*---------------------------------------------------------------------------------------------------------------     
    -- 작성일 : 2012.09.05
    -- 작성자 : 최승용
    -- NOTE   : 초기간호정보기록의 특정 값의 최종 작성일자와 작성값을 반환 (진료지원에서 함수 요청함)
    -- 반환값 : 최종 작성일 + 최종 작성값           
    -- 2018.12.13 영양검색관련수정
    ---------------------------------------------------------------------------------------------------------------*/ 
    /*◐◐◐◐◐ *** 병원구분 : 유승원 *** ◑◑◑◑◑*/
    
BEGIN
    BEGIN
        
        --IN_NR_ITEM_INTF_NM := 10002480;  --'BODYWEIGHT'

        SELECT /*+ XMED.FT_MRN_INITNRINFLSTITEMVAL */
                D.REC_CNTE
           INTO V_RTN_VALUE
          FROM MRNNRCAC A
              , MRNNRCBC B
              , MRNNRFAD C
              , MRNNRFAE D
         WHERE A.NREC_CLS_CD  = B.NREC_CLS_CD
           AND A.HSP_TP_CD    = B.HSP_TP_CD
           AND B.NREC_FORM_CD = C.NREC_FORM_CD
           AND B.HSP_TP_CD    = C.HSP_TP_CD
           AND C.NREC_ID      = D.NREC_ID
           AND C.HSP_TP_CD    = D.HSP_TP_CD
           AND A.NREC_CLS_CD  = '01' /*초기간호정보*/
           AND A.LST_YN       = 'Y'
           AND A.HSP_TP_CD    = IN_HSP_TP_CD
           AND B.LST_YN       = 'Y'
           AND C.PT_NO        = IN_PT_NO
           AND C.PACT_ID      = IN_PACT_ID
           AND C.USE_YN       = 'Y'
           AND C.LST_YN       = 'Y' 
           AND NVL(C.TMPR_SV_YN,'N') = 'N'   --2020-04-08 임시저장 컬럼 추가
           AND D.NR_ITEM_ID IN (SELECT NR_ITEM_ID
                                   FROM MRNNRIID
                                  WHERE NREC_CLS_CD     = '01'
                                    AND NR_ITEM_INTF_NM = IN_NR_ITEM_INTF_NM
                                    AND HSP_TP_CD       = IN_HSP_TP_CD
                                    AND USE_YN          = 'Y'
                                    AND LST_YN          = 'Y'
                                )
           AND D.LST_YN       = 'Y'
           AND ( 
                 IN_NR_ITEM_INTF_NM = 'DIGESTIONDISABILITYSTATUS' AND D.REC_CNTE = '연하곤란' --연하곤란관련 키값이 없어서 하드코딩 ㅠ
                 OR IN_NR_ITEM_INTF_NM != 'DIGESTIONDISABILITYSTATUS' AND 1=1  
               )             --2018.12.13 영양검색관련수정
           AND D.LSH_DTM = (SELECT MAX(DD.LSH_DTM)
                              FROM MRNNRCAC AA
                                 , MRNNRCBC BB
                                 , MRNNRFAD CC
                                 , MRNNRFAE DD
                             WHERE AA.NREC_CLS_CD  = BB.NREC_CLS_CD
                               AND AA.HSP_TP_CD    = BB.HSP_TP_CD
                               AND BB.NREC_FORM_CD = CC.NREC_FORM_CD
                               AND BB.HSP_TP_CD    = CC.HSP_TP_CD
                               AND CC.NREC_ID      = DD.NREC_ID
                               AND C.HSP_TP_CD    = DD.HSP_TP_CD
                               AND AA.NREC_CLS_CD  = '01'/*초기간호정보*/
                               AND AA.LST_YN       = 'Y'
                               AND AA.HSP_TP_CD    = IN_HSP_TP_CD
                               AND BB.LST_YN       = 'Y'
                               AND CC.PT_NO        = IN_PT_NO
                               AND CC.PACT_ID      = IN_PACT_ID
                               AND CC.USE_YN       = 'Y'
                               AND CC.LST_YN       = 'Y'
                               AND NVL(CC.TMPR_SV_YN,'N') = 'N'   --2020-04-08 임시저장 컬럼 추가
                               AND DD.NR_ITEM_ID IN (SELECT NR_ITEM_ID
                                                       FROM MRNNRIID
                                                      WHERE NREC_CLS_CD     = '01'
                                                        AND NR_ITEM_INTF_NM = IN_NR_ITEM_INTF_NM
                                                        AND HSP_TP_CD       = IN_HSP_TP_CD
                                                        AND USE_YN          = 'Y'
                                                        AND LST_YN          = 'Y'
                                                    )
                               AND D.LST_YN = 'Y'
                           )
          /*20130607 최승용*/
          AND EXISTS (SELECT 'Y'
                          FROM ACPPRETM  --응급접수기본
                         WHERE PACT_ID   = C.PACT_ID
                           AND HSP_TP_CD = C.HSP_TP_CD
                           AND APCN_YN   = 'N'  
                         UNION ALL
                        SELECT 'Y'
                          FROM ACPPRAAM  --입원접수기본
                         WHERE PACT_ID   = C.PACT_ID
                           AND HSP_TP_CD = C.HSP_TP_CD
                           AND APCN_YN   = 'N'
                         UNION ALL
                        SELECT 'Y'
                          FROM ACPPRODM   --외래예약접수기본
                         WHERE PACT_ID   = C.PACT_ID
                           AND HSP_TP_CD = C.HSP_TP_CD
                           AND MEDR_SID IN ('9000500', '9003015','9000359')
                           AND APCN_YN   = 'N'
                         UNION ALL 
                        SELECT 'Y'
                          FROM DUAL
                         WHERE A.NREC_CLS_CD = '04'
                        )                           
          AND ROWNUM = 1;
         EXCEPTION
         WHEN NO_DATA_FOUND THEN      
             V_RTN_VALUE := NULL;
    
    END;
                                                                                               
    RETURN(V_RTN_VALUE);   
        
END FT_MRN_INITNRINFLSTITEMVAL;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>해당 월에 요일 갯수 구하기 </QUERY_NAME>
    <QUERY_TEXT>EXEC :YYYY := '2022';
EXEC :MM := '08';
EXEC :WEEK :='목요일';
SELECT COUNT(*)
FROM(
select :YYYY || :MM || LPAD(LEVEL,2,'0') DT
   , TO_CHAR(TO_DATE((:YYYY || :MM || LPAD(LEVEL,2,'0')),'YYYY-MM-DD'),'DD') DAYS
   , TO_CHAR(TO_DATE((:YYYY || :MM || LPAD(LEVEL,2,'0')),'YYYY-MM-DD'),'D') DY
 from dual
CONNECT BY LEVEL &lt;= TO_CHAR(LAST_DAY(TO_DATE(:YYYY||:MM,'yyyy-mm')),'DD')
)
WHERE DY = (SELECT COMN_CD
                FROM CCCCCSTE
                WHERE COMN_GRP_CD = 'SDY'
                  AND COMN_CD_NM = SUBSTR(:WEEK,1,1))
            ;


--날짜가 포함되어있는 달의 요일갯수,
EXEC :YYYY := '2022-09-23';
EXEC :WEEK :='목요일';
SELECT COUNT(*)
FROM(
SELECT
    TO_CHAR(TO_DATE(:YYYY,'YYYY-MM-DD'),'YYYYMM') || LPAD(LEVEL,2,'0') DT,
    TO_CHAR(TO_DATE((TO_CHAR(TO_DATE(:YYYY,'YYYY-MM-DD'),'YYYY-MM') || LPAD(LEVEL,2,'0')),'YYYY-MM-DD'),'D') DY
 FROM DUAL
CONNECT BY LEVEL &lt;= TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(TO_DATE(:YYYY,'yyyy-mm-dd'),'yyyy-MM'),'yyyy-mm')),'DD')
)
WHERE DY = (SELECT COMN_CD
                FROM CCCCCSTE
                WHERE COMN_GRP_CD = 'SDY'
                  AND COMN_CD_NM = SUBSTR(:WEEK,1,1))
            ;

--해당 날짜가 포함되어 있는 달의 특정 요일의 날짜들 조회
EXEC :YYYY := '2022-09-23';
EXEC :WEEK :='목요일';
SELECT TO_CHAR(TO_DATE(DT,'YYYY-MM-DD'),'YYYY-MM-DD') DT
FROM(
SELECT
    TO_CHAR(TO_DATE(:YYYY,'YYYY-MM-DD'),'YYYYMM') || LPAD(LEVEL,2,'0') DT,
    TO_CHAR(TO_DATE((TO_CHAR(TO_DATE(:YYYY,'YYYY-MM-DD'),'YYYY-MM') || LPAD(LEVEL,2,'0')),'YYYY-MM-DD'),'D') DY
 FROM DUAL
CONNECT BY LEVEL &lt;= TO_CHAR(LAST_DAY(TO_DATE(TO_CHAR(TO_DATE(:YYYY,'yyyy-mm-dd'),'yyyy-MM'),'yyyy-mm')),'DD')
)
WHERE DY = (SELECT COMN_CD
                FROM CCCCCSTE
                WHERE COMN_GRP_CD = 'SDY'
                  AND COMN_CD_NM = SUBSTR(:WEEK,1,1))
            ;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ALERT 연동시 가장최근에 삭제했을경우 RETURN</QUERY_NAME>
    <QUERY_TEXT>/*해당 ORD_ID의 가장 최근 작성 데이터가 삭제 여부 Y일 경우 배치돌면서 다시 INSERT안되도록 함. */
BEGIN
    SELECT 'Y'
      INTO DEL_YN
      FROM(
       SELECT ROW_NUMBER() OVER(PARTITION BY RLV_ORD_ID ORDER BY PT_INFC_REG_SEQ DESC)     SEQ
             ,RLV_ORD_ID
             ,NVL(DEL_YN,'N') DEL_YN
         FROM MOOPTIPD A
        WHERE HSP_TP_CD  = :HIS_HSP_TP_CD
          AND RLV_ORD_ID = :RLV_ORD_ID
    )
    WHERE SEQ = 1
      AND DEL_YN ='Y'
      ;
EXCEPTION       
    WHEN NO_DATA_FOUND THEN
        RETURN;
    WHEN OTHERS THEN
        NULL;
END; </QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>정규식 모음</QUERY_NAME>
    <QUERY_TEXT>--한글 데이터 조회 정규식
SELECT * FROM MSERMMMC
WHERE 1=1
AND HSP_TP_CD = '02'
AND ORD_CTG_CD = 'BR1'
--AND MIF_CD IN ( '수가코드 없음', '수가없음')
AND REGEXP_LIKE (MIF_CD, '^[가-힝]')

;
--숫자 ,문자체크 정규식
WHERE REGEXP_LIKE(컬럼,'[0-9]') --데이터에 숫자가 하나라도 있으면 조회
WHERE REGEXP_LIKE(컬럼,'[^0-9]') -- 데이터에 숫자가 아닌게 하나라도 있으면 조회

WHERE NOT REGEXP_LIKE(컬럼,'[0-9]') --데이터에 숫자가 하나라도 있으면 제외
WHERE NOT REGEXP_LIKE(컬럼,'[^0-9]') -- 데이터에 숫자가 아닌게 하나라도 있으면 제외

SELECT REGEXP_REPLACE(컬럼,'[0-9]') --문자만 추출
SELECT REGEXP_REPLACE(컬럼,'[^0-9]') --숫자만 추출

;
-- 구분자로 잘라서 IN 조건
EXEC :V_STS := 'X,A,C';
SELECT *
  FROM MOOOREXM
WHERE HSP_TP_CD = '01'
AND EXM_PRGR_STS_CD IN
(
SELECT TRIM(REGEXP_SUBSTR(:V_STS,'[^'||','||']+',1,LEVEL)) AS TXT
  FROM DUAL
CONNECT BY INSTR(:V_STS,',',1,LEVEL-1)&gt;0
)
;</QUERY_TEXT>
    <GROUP>정규식</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>치과병원 치과처방여부 강제업데이트</QUERY_NAME>
    <QUERY_TEXT>SELECT A.ROWID,A.DNTS_ORD_YN,B.DNTS_ORD_YN,A.*
    FROM CCOOCBAC A
       , MSERMMMC B
    WHERE A.HSP_TP_CD='04'
    AND A.HSP_TP_CD =B.HSP_TP_CD
    AND A.ORD_CD = B.EXM_CD
    AND A.DNTS_ORD_YN &lt;&gt; B.DNTS_ORD_YN</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>IBatis (아이바티스)</QUERY_NAME>
    <QUERY_TEXT>--CompareValue와 같을경우
   &lt;IsEqual Property="VRE_YN" CompareValue="Y"&gt;
       AND REPLACE(UPPER(A.SMP_EXRS_CNTE),' ','') LIKE 'VREISOLATED' || '%'
   &lt;/IsEqual&gt;

--CompareValue와 다를경우
   &lt;IsNotEqual Property="VRE_YN" CompareValue="Y"&gt;
       AND REPLACE(UPPER(A.SMP_EXRS_CNTE),' ','') LIKE 'VREISOLATED' || '%'
   &lt;/IsNotEqual&gt;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Excel Log (StackTrace)</QUERY_NAME>
    <QUERY_TEXT>///StackTrace를 통해 메뉴의 Xaml을 가져옴
        public static void GetStackTrace(int tempStack)
        {
            if (!string.IsNullOrEmpty(LastCallStack))
                return;
            LastCallStack = GetMenuID(new StackTrace(), tempStack);
        }
///StackTrace를 통해 메뉴의 Data부분을 가져옴
        public static string GetMenuID(StackTrace stackTrace, int tempStack)
        {
            int num = 0;
            string menuId = string.Empty;
            foreach (StackFrame frame in stackTrace.GetFrames())
            {
                if (num++ &gt; tempStack)
                {
                    Type declaringType = frame.GetMethod().DeclaringType;
                    if (declaringType.FullName.EndsWith("Data"))
                    {
                        menuId = declaringType.FullName;
                        break;
                    }
                }
            }
            return menuId;
        }
//LogInsert
 /// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="sheetName"&gt;&lt;/param&gt;
        /// &lt;param name="isOpenPopup"&gt;&lt;/param&gt;
        /// &lt;param name="MenuCd"&gt;&lt;/param&gt;
        /// &lt;param name="dataCount"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public static bool LogInsert(string sheetName, bool isOpenPopup, string MenuCd, int dataCount)
        {
            CommonHelper.IsOpenPopup = isOpenPopup;
            string str1 = string.Empty;
            if (CommonHelper.IsOpenPopup)
            {
                if (CommonHelper.CheckMultiJob)
                {
                    str1 = "multi sheets";
                }
                else
                {
                    str1 = CallResonPopup();
                    if (string.IsNullOrEmpty(str1))
                    {
                        int num = (int)MsgBox.Display("출력물 확인시 사유를 반드시 입력해야합니다.", MessageType.MSG_TYPE_EXCLAMATION);
                        return false;
                    }
                }
                CommonHelper.CheckMultiJob = false;
                CommonHelper.IsOpenPopup = false;
            }
            string str2 = string.Empty;
            string str3 = string.Empty;
            if (SessionManager.PatientInfo != null)
            {
                str2 = SessionManager.PatientInfo.PT_NO;
                str3 = SessionManager.PatientInfo.PT_NM;
            }
            DownloadPrint_IN p = new DownloadPrint_IN();
            p.EmployeeID = SessionManager.UserInfo.STF_NO;
            p.ClientIP = SessionManager.SystemInfo.User_IP_Address;
            p.MenuID = MenuCd;
            p.PrintTime = CommonServiceAgent.SelectSysDateTime();
            p.PatientID = str2;
            p.PatientName = str3;
            p.PDType = "DWONLOAD";
            p.DataCount = dataCount;
            p.Contents = string.Format("{0}({1})", (object)sheetName, (object)str1);
            CommonHelper.LastCallStack = string.Empty;
            LoggingServiceAgent.DownloadPrint(p);
            return true;
        }
        private static string CallResonPopup()
        {
            bool flag = true;
            if (((IEnumerable&lt;string&gt;)ConfigurationManager.AppSettings.AllKeys).Contains&lt;string&gt;("REASON_POPUP"))
                flag = Convert.ToBoolean(ConfigurationManager.AppSettings.Get("REASON_POPUP"));
            if (!flag)
                return "사유입력 팝업 미사용";
            ReasonPopup reasonPopup = new ReasonPopup();
            ReasonPopupViewModel reasonPopupViewModel = new ReasonPopupViewModel();
            reasonPopup.DataContext = (object)reasonPopupViewModel;
            reasonPopup.ShowDialog();
            return reasonPopupViewModel.Reason;
        }</QUERY_TEXT>
    <GROUP>Excel</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Excel</QUERY_NAME>
    <QUERY_TEXT>/// &lt;summary&gt;
        /// 
        /// &lt;/summary&gt;
        /// &lt;param name="DataTable"&gt; 엑셀 출력하고자 하는 DataTable &lt;/param&gt;
        /// &lt;param name="sheetName"&gt;&lt;/param&gt;
        /// &lt;param name="rowHeight"&gt; 행 높이 강제설정 기본은 자동 너비 &lt;/param&gt;
        /// &lt;param name="fontSize"&gt; 데이터 FontSize 기본은 9 Size &lt;/param&gt;
        /// &lt;param name="fstRowFreezeYn"&gt; 첫행 고정 여부 , 기본값은 첫행 고정 및 Bold처리 , false로 넘기면 고정하지 않음. &lt;/param&gt;
        /// &lt;param name="red"&gt; 첫행 배경 rgb &lt;/param&gt;
        /// &lt;param name="green"&gt;첫행 배경 rgb &lt;/param&gt;
        /// &lt;param name="blue"&gt;첫행 배경 rgb &lt;/param&gt;
        /// &lt;param name="startRowIndex"&gt; 엑셀 출력 시작 Row Index 1부터 시작 &lt;/param&gt;
        /// &lt;param name="startColIndex"&gt;엑셀 출력 시작 Column Index 1부터 시작 &lt;/param&gt;
        /// &lt;param name="Alignment"&gt;모든 데이터의 정렬 여부 LEFT , RIGHT , CENTER 입력시 모든 데이터를 각각 왼쪽,오른쪽,가운데 정렬 함.&lt;/param&gt;
        /// &lt;param name="logInsertYn"&gt;기본값: true, false일 경우에 로그 insert하지 않음.&lt;/param&gt;
        public static void ExportExcel(DataTable dt, string sheetName = null, int rowHeight = -1, int fontSize = 9, bool fstRowFreezeYn = true,
                                       int red = 255, int green = 255, int blue = 255, int startRowIndex = 1, int startColIndex = 1, string Alignment = null
                                     , bool logInsertYn = true)
        {
            if (dt == null) return;

            //Excel LogInsert
            if (logInsertYn)
            {
                if (string.IsNullOrEmpty(CommonHelper.LastCallStack))
                    CommonHelper.GetStackTrace(0);
                var menu_cd = CommonHelper.LastCallStack;
                if (!CommonHelper.LogInsert(sheetName, true, menu_cd, dt.Rows.Count)) return;
            }

            int str_range_row = startRowIndex;
            int str_range_col = startColIndex;
            int end_range_row = dt.Rows.Count + 1 + (startRowIndex - 1);
            int end_range_col = dt.Columns.Count + (startColIndex - 1);
            int dateCnt = 1;
            excelApp = new Excel.Application();
            workBook = excelApp.Workbooks.Add();
            workSheet = workBook.Worksheets.get_Item(1) as Excel.Worksheet;
            Excel.Range range = workSheet.get_Range(workSheet.Cells[str_range_row, str_range_col] as object, workSheet.Cells[end_range_row, end_range_col] as object);
            range.NumberFormat = "@";
            //DateTime의 컬럼은 날짜로 포맷.
            foreach (DataColumn col in dt.Columns)
            {

                if (col.DataType.Name == "DateTime")
                {
                    Excel.Range dateRange = workSheet.get_Range(workSheet.Cells[str_range_row + 1, dateCnt] as object, workSheet.Cells[end_range_row, dateCnt] as object);
                    dateRange.NumberFormat = "yyyy-mm-dd h:mm";
                }
                dateCnt++;
            }
            //해당범위 텍스트 포맷
            //RowHeight 강제설정
            if (rowHeight != -1)
                range.RowHeight = rowHeight;
            //fontSize
            range.Font.Size = fontSize;
            //첫행고정
            if (fstRowFreezeYn)
            {
                workSheet.Application.ActiveWindow.SplitRow = 1;
                workSheet.Application.ActiveWindow.FreezePanes = true;
                workSheet.Range["A1", "A1"].EntireRow.Font.Bold = true;
            }
            //데이터가 있는 범위에 데이터를 한번에 밀어넣음.
            var writeRange = range;

            writeRange.Value2 = SetData(dt);

            workSheet.Columns.AutoFit();
            //Sheet이름을 파라미터로 받을경우 Sheet명을 지정.
            if (!string.IsNullOrEmpty(sheetName))
                workSheet.Name = sheetName;
            range.HorizontalAlignment = Excel.XlHAlign.xlHAlignLeft;

            excelApp.Visible = true;
        }
        /// &lt;summary&gt;
        /// name         : DTO의 프로퍼티 값 리턴
        /// desc         : DTO의 프로퍼티 값 리턴
        /// author       : ezCaretech 송창수
        /// create date  : 2021-08-25
        /// update date  : 2021-08-25
        /// &lt;/summary&gt;
        private static string GetPropertyValue(object dto, string propertyName)
        {
            string value = "";
            if (dto.GetType().GetProperty(propertyName) != null)
            {
                if (dto.GetType().GetProperty(propertyName).GetValue(dto) == null)
                    value = "";
                else
                    value = dto.GetType().GetProperty(propertyName).GetValue(dto).ToString();
            }
            return value;
        }
        public static DataTable GetDataGridViewAsDataTable(HDataGridEx _DataGridView)
        {           
            try
            {
                if (_DataGridView.Columns.Count == 0)
                    return null;
                DataTable dtSource = new DataTable();
                //////create columns
                int cnt = 1;
                foreach (DataGridColumn col in _DataGridView.Columns.Where(d =&gt; d.Visibility == Visibility.Visible))
                {
                    if (col.Header != null)
                    {
                        //DataTable은 같은 이름의 ColumnName을 가질 수 없기때문에 동일한  ColumnName  있을경우 SortMemberPath가 저장된 Caption을 컬럼명으로 저장 후 해당 Caption의 ColumnName을 가져오도록 함.
                        if (dtSource.Columns.Cast&lt;DataColumn&gt;().Any(d=&gt;d.ColumnName == col.Header.ToString()))
                        {
                            dtSource.Columns.Add(dtSource.Columns.Cast&lt;DataColumn&gt;().Where(d=&gt;d.ColumnName == col.Header.ToString()).Select(d=&gt;d.Caption).FirstOrDefault() + "@" + cnt.ToString(), typeof(string));
                            dtSource.Columns[dtSource.Columns.Cast&lt;DataColumn&gt;().Where(d =&gt; d.ColumnName == col.Header.ToString()).Select(d =&gt; d.Caption).FirstOrDefault() + "@" + cnt.ToString()].Caption = col.SortMemberPath;
                            cnt++;
                        }
                        else
                        {
                            dtSource.Columns.Add(col.Header.ToString(), typeof(string));
                            dtSource.Columns[col.Header.ToString()].Caption = col.SortMemberPath;
                        }
                    }                                        
                }

                IList list = _DataGridView.ItemsSource as IList;
                for (int i = 0; i &lt; list.Count; i++)
                {
                    DataRow dtRow = dtSource.NewRow();
                    foreach (DataColumn col in dtSource.Columns)
                    {
                        dtRow[col.ColumnName] = GetPropertyValue(list[i], col.Caption);
                    }
                    dtSource.Rows.Add(dtRow);
                }
                return dtSource;
            }
            catch (Exception e)
            {
                MsgBox.Display(e.ToString(), MessageType.MSG_TYPE_ERROR);
                return null;
            }
        }
        public static object SetData(DataTable dt)
        {
            var data = new object[dt.Rows.Count + 1, dt.Columns.Count];

            for (int i = 0; i &lt; dt.Columns.Count; i++)
            {
                //ColumnName이 Caption에 있을 경우 동일한 ColumnName이라는 의미이기 때문에 해당 Caption의 컬럼명을 가져옴.
                if (dt.Columns.Cast&lt;DataColumn&gt;().Any(d =&gt; d.Caption == dt.Columns[i].ColumnName.Split('@')[0]))
                    data[0, i] = dt.Columns.Cast&lt;DataColumn&gt;().Where(d =&gt; d.Caption == dt.Columns[i].ColumnName).Select(d =&gt; d.ColumnName).FirstOrDefault();                
                else
                    data[0, i] = dt.Columns[i].ColumnName;
            }

            for (int i = 0; i &lt; dt.Rows.Count; i++)
            {
                for (int j = 0; j &lt; dt.Columns.Count; j++)
                {
                    //workSheet.Cells[i + 2 + (startRowIndex - 1), j + 1 + (startColIndex - 1)] = dt.Rows[i][j];                                        
                    data[i + 1, j] = dt.Rows[i][j];
                }
            }
            return data;
        }
        public static object SetDataMerge(HDataGridEx hdataGridEx, DataTable dt)
        {
            var data = new object[dt.Rows.Count + 2, dt.Columns.Count];
            int colIdx = 0;
            foreach (DataGridColumn col in hdataGridEx.Columns.Where(d =&gt; d.Visibility == Visibility.Visible))
            {
                if (col.Header != null)
                {
                    var mergeHeader = HDataGridColumnHeaderManager.GetMergeHeader(col) ?? "";
                    data[0, colIdx] = mergeHeader.ToString();
                    colIdx++;
                }
            }
            for (int i = 0; i &lt; dt.Columns.Count; i++)
            {
                //ColumnName이 Caption에 있을 경우 동일한 ColumnName이라는 의미이기 때문에 해당 Caption의 컬럼명을 가져옴.
                if (dt.Columns.Cast&lt;DataColumn&gt;().Any(d =&gt; d.Caption == dt.Columns[i].ColumnName.Split('@')[0]))
                    data[1, i] = dt.Columns.Cast&lt;DataColumn&gt;().Where(d =&gt; d.Caption == dt.Columns[i].ColumnName.Split('@')[0]).Select(d =&gt; d.ColumnName).FirstOrDefault();
                else
                    data[1, i] = dt.Columns[i].ColumnName;
            }

            for (int i = 0; i &lt; dt.Rows.Count; i++)
            {
                for (int j = 0; j &lt; dt.Columns.Count; j++)
                {
                    //workSheet.Cells[i + 2 + (startRowIndex - 1), j + 1 + (startColIndex - 1)] = dt.Rows[i][j];                                        
                    data[i + 2, j] = dt.Rows[i][j];
                }
            }
            return data;
        }
        public static string GetMergeHeaderYn(HDataGridEx _DataGridView)
        {
            string mergeYn = "N";
            try
            {
                if (_DataGridView.Columns.Count == 0)
                    return mergeYn;
                foreach (DataGridColumn col in _DataGridView.Columns.Where(d =&gt; d.Visibility == Visibility.Visible))
                {
                    var mergeHeader = HDataGridColumnHeaderManager.GetMergeHeader(col);
                    if (mergeHeader != null)
                    {
                        mergeYn = "Y";
                        break;
                    }                   
                }                
            }
            catch (Exception e)
            {
                MsgBox.Display(e.ToString(), MessageType.MSG_TYPE_ERROR);
                return null;
            }
            return mergeYn;
        }</QUERY_TEXT>
    <GROUP>Excel</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>직종구분코드 (OCTY_TP_CD)</QUERY_NAME>
    <QUERY_TEXT>SELECT * FROM CNLRCSTE
WHERE 1=1
AND HSP_TP_CD = '01'
AND COMN_GRP_CD = '005'
AND COMN_CD = '1065'
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>프로시저 컨트롤</QUERY_NAME>
    <QUERY_TEXT>      -- NAME         : 영상의학과 비예약검사 외부판독 여부 확인 
      -- DESC         : 영상의학과 비예약 검사 접수시 외부판독검사면 희망의사에 외부판독의사로 업데이트함.
      -- AUTHOR       : 오원빈
      -- CREATE DATE  : 2022-07-26
      -- UPDATE DATE  : 최종 수정일자 , 수정자, 수정개요 
      BEGIN
          IF HIS_HSP_TP_CD = '03' AND FT_MSE_USECNTR(HIS_HSP_TP_CD,'USECNTR','ACCEPT_01','PC_MSE_ACCEPT_PROC') = 'Y' THEN
              BEGIN                                                                                                      
                  UPDATE MOOOREXM A
                     SET EXM_CHDR_STF_NO = V_HOPE_STF_NO
                   WHERE A.HSP_TP_CD = HIS_HSP_TP_CD
                     AND A.ORD_ID = IN_ORD_ID
                     AND EXISTS(SELECT 1
                                  FROM MSERMCCC
                                 WHERE HSP_TP_CD = A.HSP_TP_CD
                                   AND EXM_GRP_CD = 'HEXM'
                                   AND EXM_GRP_DTL_CD = A.ORD_CD
                                   AND USE_YN = 'Y'); 
              EXCEPTION
                  WHEN OTHERS THEN
                      BEGIN   
                          PC_MSE_USECNTR('USECNTR','ACCEPT_01','PC_MSE_ACCEPT_PROC','N',HIS_HSP_TP_CD,HIS_STF_NO,HIS_PRGM_NM,HIS_IP_ADDR);
                      END;                  
              END;
          END IF;
      END; </QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>가판독 취소 스크립트</QUERY_NAME>
    <QUERY_TEXT>DECLARE
 G_OLD_ORD_CTG_CD            MSERMAAD.ORD_CTG_CD%TYPE       :=NULL;
 G_OLD_EXRM_TP_CD            MSERMAAD.EXRM_TP_CD%TYPE       :=NULL;
 G_OLD_ORD_CD                MSERMAAD.ORD_CD%TYPE           :=NULL;
 G_OLD_EXM_PRGR_STS_CD       MSERMAAD.EXM_PRGR_STS_CD%TYPE  :=NULL;
 IN_IPTN_NO                  MSERMDDD.IPTN_NO%TYPE :=NULL;
 IN_ACCS_ID                  MSERMAAD.ACCS_ID%TYPE :=NULL;

 IN_EXM_PRGR_STS_CD          MOOOREXM.EXM_PRGR_STS_CD%TYPE :='E';

 IN_ORD_ID    MOOOREXM.ORD_ID%TYPE :='176322788';

 HIS_HSP_TP_CD MOOOREXM.HSP_TP_CD%TYPE :='01';

    V_LSH_PRGM_NM VARCHAR2(4000) := 'GOLDEN-OWB 가판독취소';
    V_FMT_STF_NO VARCHAR2(4000)  := 'MT00765'; --접수,시행 사번
    V_LSH_IP_ADDR VARCHAR2(4000) := '10.91.103.77';

    IO_ERRYN VARCHAR2(4000) :=NULL;
        IO_ERRMSG VARCHAR2(4000) :=NULL;
BEGIN
BEGIN
    SELECT IPTN_NO
          ,ACCS_ID
      INTO IN_IPTN_NO
          ,IN_ACCS_ID
      FROM MSERMAAD
     WHERE HSP_TP_CD = HIS_HSP_TP_CD
       AND ORD_ID = IN_ORD_ID
        ;
END;
--가판독 취소 2018.08.21
BEGIN
    DELETE MSERMDDD
      WHERE IPTN_NO   = IN_IPTN_NO
       AND HSP_TP_CD = HIS_HSP_TP_CD;
END;
    BEGIN
        UPDATE /*+ XSUP.PC_MSE_INTERPRETATION_PROC */
              MOOOREXM
          SET EXM_PRGR_STS_CD = IN_EXM_PRGR_STS_CD
            , BRFG_DTM = DECODE(IN_EXM_PRGR_STS_CD, 'N', SYSDATE, 'E', NULL, BRFG_DTM)
            , BRFG_STF_NO   = DECODE(IN_EXM_PRGR_STS_CD, 'N', '', BRFG_STF_NO)
            , SPCM_PTHL_NO   = ''
            , TH2_IPDR_STF_NO   = ''
            , TH3_IPDR_STF_NO   = ''
            , TH4_IPDR_STF_NO   = ''
            , TH5_IPDR_STF_NO   = ''
            , TH6_IPDR_STF_NO   = ''
            , LSH_STF_NO  = V_FMT_STF_NO
            , LSH_DTM  = SYSDATE
            , LSH_PRGM_NM = V_LSH_PRGM_NM
            , LSH_IP_ADDR = V_LSH_IP_ADDR
        WHERE ORD_ID = IN_ORD_ID
          AND HSP_TP_CD = HIS_HSP_TP_CD ;
    END;
    BEGIN
        SELECT /*+ XSUP.PC_MSE_INTERPRETATION_PROC */
               A.ORD_CTG_CD
             , A.EXRM_TP_CD
             , A.ORD_CD
             , A.EXM_PRGR_STS_CD
          INTO  G_OLD_ORD_CTG_CD
             , G_OLD_EXRM_TP_CD
             , G_OLD_ORD_CD
             , G_OLD_EXM_PRGR_STS_CD
         FROM MSERMAAD A
            , MSERMMMC B
        WHERE A.ORD_ID     = IN_ORD_ID
          AND A.HSP_TP_CD  = HIS_HSP_TP_CD
          AND A.ORD_CD     = B.EXM_CD
          AND A.HSP_TP_CD  = B.HSP_TP_CD;
       EXCEPTION
             WHEN  OTHERS  THEN
             G_OLD_ORD_CTG_CD               :='';
             G_OLD_EXRM_TP_CD                  :='';
             G_OLD_ORD_CD                      :='';
             G_OLD_EXM_PRGR_STS_CD            :='';
    END;

    BEGIN
        UPDATE /*+ XSUP.PC_MSE_INTERPRETATION_PROC */
               MSERMAAD
           SET EXM_PRGR_STS_CD = IN_EXM_PRGR_STS_CD
             , IPTN_NO  = ''
             , IMG_NO = IN_ACCS_ID
             , FST_IPTN_STF_NO   = NVL(FST_IPTN_STF_NO, V_FMT_STF_NO)            /*2008/10/28 항목 추가 김성회  최초판독자*/
             , FST_IPTN_DT  = NVL(FST_IPTN_DT, SYSDATE)              /*2008/10/28 항목 추가 김성회 최초판독일자*/
             , FST_IPTN_DTM = NVL(FST_IPTN_DTM, SYSDATE)             /*2008/10/28 항목 추가 김성회 최초판독일시*/
             , LST_IPTN_DTM = SYSDATE
             , SHR_YN      = DECODE(IN_EXM_PRGR_STS_CD, 'N', 'Y', DECODE(NVL(SHR_YN,'N'), 'N', NVL('N','N'), SHR_YN))
             , LSH_STF_NO  = V_FMT_STF_NO
             , LSH_DTM  = SYSDATE
             , LSH_PRGM_NM = V_LSH_PRGM_NM
             , LSH_IP_ADDR = V_LSH_IP_ADDR
        WHERE ORD_ID = IN_ORD_ID
        AND HSP_TP_CD  = HIS_HSP_TP_CD;

    END;

    /* MSERMAAD TRIGGER 김세용 2012.04.17 */
    BEGIN
        PC_MSE_MSERMAAD_UPDATE_TRG (  IN_ORD_ID
                                    , G_OLD_ORD_CTG_CD
                                    , G_OLD_EXRM_TP_CD
                                    , G_OLD_ORD_CD
                                    , G_OLD_EXM_PRGR_STS_CD
                                    , ''
                                    , HIS_HSP_TP_CD
                                    , V_FMT_STF_NO
                                    , V_LSH_PRGM_NM
                                    , V_LSH_IP_ADDR
                                    , IO_ERRYN
                                    , IO_ERRMSG ) ;       -- ERROR MESSAGE
    END;
END;
</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>C# Merge</QUERY_NAME>
    <QUERY_TEXT>SelectCommonCode_IN param = new SelectCommonCode_IN();

            // 공통 코멘트
            param = new SelectCommonCode_IN();
            param.IN_LCLS_COMN_CD = "CULTURE_CLMDANTNCNTE";
            param.TH2_RMK_CNTE = "공통";
            param.USE_YN = "Y";
            var list1 = (HSFDTOCollectionBaseObject&lt;SelectCommonCode_OUT&gt;)
                                            UIMiddlewareAgent.InvokeBizService(this, "HIS.MS.IT.LM.CO.BIZ.SelectCommonCodeBL", "SelectCommonCode", param);

            // 검사슬립 코멘트
            param = new SelectCommonCode_IN();
            param.IN_LCLS_COMN_CD = "CULTURE_CLMDANTNCNTE";
            param.TH2_RMK_CNTE = this.EXAMRESULT_SEL.WK_UNIT_CD;
            param.TH3_RMK_CNTE = "";
            param.USE_YN = "Y";
            var list2 = (HSFDTOCollectionBaseObject&lt;SelectCommonCode_OUT&gt;)
                                            UIMiddlewareAgent.InvokeBizService(this, "HIS.MS.IT.LM.CO.BIZ.SelectCommonCodeBL", "SelectCommonCode", param);

            // Merge
            this.CLMDANTNCNTE_LIST.Merge(list1);
            this.CLMDANTNCNTE_LIST.Merge(list2);</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>의무기록뷰어(영상검사) 템플릿</QUERY_NAME>
    <QUERY_TEXT>IPTN_NO  , 병원구분 , IPTN_NO
(영상의학과는 EXAM_KEY가 IPTN_NO )

HIS.MC.DR.RM.RV.SelectRecordListByCondition (조건별 상세조회) -- 기록유형 (검사 : EX, 영상검사 : EX_PICTURE)





 pictureExam_dto.IPTN_NO = pictureExam_dto.IPTN_NO + "," + item.HSP_TP_CD + "^" + item.EXAM_KEY;


TEMPLATE : PictureExamTemplate


SelectIntegrationMedicalRecordAsk.Data
// 검사별 DTO 조회
            if (pictureExam_dto.IPTN_NO != null)
            {
                pictureExamResultList = (HSFDTOCollectionBaseObject&lt;PictureExamTemplate_OUT&gt;)UIMiddlewareAgent.InvokeBizService(this, BIZ_CLASS, "SelectPictureExaminationResult", pictureExam_dto);
            }
            if (specimenExam_dto.WRITING_DATE != null)
            {
                specimenExamResultList = (HSFDTOCollectionBaseObject&lt;SpecimenExamTemplate_OUT&gt;)UIMiddlewareAgent.InvokeBizService(this, "HIS.MS.EC.CS.CO.BIZ.SelectMRViewerExamBL", "SelecSpecimenExamView", specimenExam_dto);
            }
            if (pathologyExam_dto.SPCM_PTHL_KEY != null)
            {
                pathologyExamResultList = (HSFDTOCollectionBaseObject&lt;PathologyExamTemplate_OUT&gt;)UIMiddlewareAgent.InvokeBizService(this, "HIS.MS.EC.CS.CO.BIZ.SelectMRViewerExamBL", "SelectPathologyExamView", pathologyExam_dto);
            }







</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EAM 메뉴별 ROLE 조회</QUERY_NAME>
    <QUERY_TEXT>--특정 메뉴의 ROLE 정보를 가져옴 .
EXEC :HSP_TP_CD := '01';
EXEC :MENU_NM := '외래진료비수납';
SELECT A.HSP_TP_CD,C.ROLE_CD,C.ROLE_NM,D.BUSINESS_TYP,D.BUSINESS_TYP_NM,B.ASSEMBLY_NM,B.APP_URL,B.MENU_NM,B.MENU_CD
  FROM EMBUPERT A -- [EAM] 업무별 롤별 메뉴및 권한설정
      ,EMBUMENT B --[EAM] 메인별메뉴정보
      ,EMBUROLT C --[EAM] 롤 정의
      ,EMBUSNST D --[EAM] 업무정의
 WHERE 1=1
   AND A.HSP_TP_CD = :HSP_TP_CD
   AND A.HSP_TP_CD = C.HSP_TP_CD
   AND A.BUSINESS_TYP = D.BUSINESS_TYP
   AND A.ROLE_CD = C.ROLE_CD
   AND A.MENU_CD = B.MENU_CD
   AND REPLACE(UPPER(B.MENU_NM),' ' ,'') LIKE '%'|| REPLACE(UPPER(:MENU_NM),' ','') ||'%'
   AND B.DISP_YN = 'Y'
   AND NVL(B.FOLDER_YN,'N') = 'N'
;
</QUERY_TEXT>
    <GROUP>EAM</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>치과병원 미시행검사 향후방문일</QUERY_NAME>
    <QUERY_TEXT>select b.pt_no 환자번호,ord_dt 처방일,cd_nm 처방명
, PT_HME_DEPT_CD 처방부서
,(select dept_nm from HCOM.PDEDBMSM where dept_Cd=b.PT_HME_DEPT_CD and hsp_Tp_Cd='04') 처방부서명
,med_dt 향후최근방문일
,a.med_dept_cd 수진부서
,(select dept_nm from HCOM.PDEDBMSM where dept_Cd=a.med_dept_cd and hsp_Tp_Cd='04') 수진부서명
from
    (select PT_NO,med_dept_cd,MIN(MED_dT) med_dt from hbil.acpprodm where hsp_Tp_cd='04' AND MED_DT &gt;=TRUNC(SYSDATe) and pt_no in (
SELECT O.PT_NO
FROM MOOOREXM O
   ,MSERMMMC C
   , ACPPRODM A
WHERE O.HSP_TP_CD = '04'
AND O.HSP_TP_CD = C.HSP_TP_CD
AND O.HSP_TP_CD = A.HSP_TP_CD
AND O.PACT_ID = A.PACT_ID
AND O.ORD_CD = C.EXM_CD
  AND ODDSC_TP_CD = 'C'
  AND O.ORD_CTG_CD = 'BR1'
  AND MTM_IMPL_PSB_YN = 'Y'
--  AND ORD_CD = 'LTS001'
--  AND O.ORD_ID LIKE 'MIG%'
--  AND EXM_PRGR_STS_CD
--  AND TH1_SPCM_CD IS   NULL
--AND PT_NO ='60241135'
)
GROUP BY PT_NO,med_dept_cd
) A,
(SELECT CD_NM, o.*
FROM MOOOREXM O
   ,MSERMMMC C
   , ACPPRODM A
WHERE O.HSP_TP_CD = '04'
AND O.HSP_TP_CD = C.HSP_TP_CD
AND O.HSP_TP_CD = A.HSP_TP_CD
AND O.PACT_ID = A.PACT_ID
AND O.ORD_CD = C.EXM_CD
  AND ODDSC_TP_CD = 'C'
  AND O.ORD_CTG_CD = 'BR1'
  AND MTM_IMPL_PSB_YN = 'Y'
) b
where a.pT_no(+)=b.pt_no
--order by a.pt_no,med_dt
order by 4,6 nulls last
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>수가</QUERY_NAME>
    <QUERY_TEXT>SELECT C.EXM_CD "검사코드",C.NEXTG_FMR_EXM_CD "빛고을기존사용코드",C.CD_NM "빛고을검사명",'' "자주사용여부",C.MIF_CD "빛고을매핑수가",A.CD_NM "학동검사명",A.MIF_CD "학동매핑수가",A.INS_EDI_CD "학동EDI",A.MIF_NM "학동수가명",B.CD_NM "화순검사명",B.MIF_CD "화순매핑수가",B.INS_EDI_CD "화순EDI",B.MIF_NM "화순 수가명"
    FROM
(SELECT A.*
     , B.INS_EDI_CD       INS_EDI_CD
     , B.KOR_MIF_NM       MIF_NM
     , B.INS_UNPR         INS_UNPR
     , B.GNR_UNPR         GNR_UNPR
     , B.INTL_UNPR        INTL_UNPR
     , B.MTRL_MDCN_MIF_CD MTRL_MDCN_MIF_CD
    FROM MSERMMMC A
       , AIMIRPMC B
WHERE A.HSP_TP_CD= '01'
AND A.HSP_TP_CD = B.HSP_TP_CD
AND A.ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
AND A.ORD_CTG_CD = 'BR1'
AND A.MIF_CD = B.MIF_CD
AND TRUNC(SYSDATE) BETWEEN B.APY_STR_DT
                          AND NVL(B.APY_END_DT, TRUNC(SYSDATE))
) A,
(SELECT A.*
     , B.INS_EDI_CD       INS_EDI_CD
     , B.KOR_MIF_NM       MIF_NM
     , B.INS_UNPR         INS_UNPR
     , B.GNR_UNPR         GNR_UNPR
     , B.INTL_UNPR        INTL_UNPR
     , B.MTRL_MDCN_MIF_CD MTRL_MDCN_MIF_CD
    FROM MSERMMMC A
    , AIMIRPMC B
WHERE A.HSP_TP_CD= '02'
AND A.HSP_TP_CD = B.HSP_TP_CD
AND A.ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
AND A.ORD_CTG_CD = 'BR1'
AND A.MIF_CD = B.MIF_CD
AND TRUNC(SYSDATE) BETWEEN B.APY_STR_DT
                          AND NVL(B.APY_END_DT, TRUNC(SYSDATE))
) B,
(SELECT A.*
    FROM MSERMMMC A
WHERE A.HSP_TP_CD= '03'
AND A.ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
AND A.ORD_CTG_CD = 'BR1'
) C
WHERE A.EXM_CD(+) = C.EXM_CD
 AND B.EXM_CD(+) = C.EXM_CD
 AND C.END_DT IS NULL
 AND C.ORD_CTG_CD = 'BR1'
 AND C.MIF_CD IS NULL
ORDER BY C.EXM_CD
</QUERY_TEXT>
    <GROUP>수가</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상검사 시행 EQS</QUERY_NAME>
    <QUERY_TEXT>--시행 환자 데이터그리드
&lt;sql id="HIS.MS.IV.RM.EX.SelectGnrDgnsExmImpl"&gt;&lt;!--
    Clss : [text]
    Desc : 일반진단 실시를 위한 환자정보를 조회합니다.(PKG_SUP_SR_D_21.pc_sr_sel_srexamdt_1)
    Author : 유영하 
    Create date : 2012-07-02
    Update date : 2012-07-02 
    조영제 변경환자 식별 : 2016-05-12 김세용  XMED.FT_MOO_INFECT_CLS  1 -&gt; 9 
                        2017-01-02  김세용  통합 IV 대상 여부 추가 
                  2017-04-05 윤정식 수정 : 이대 병원 구분작업
                  2021-12-16 오원빈 수정 : 검사실 코드 그대로 분류가 달라질 경우 조회되지 않아서 해당 분류의 검사실코드로 접수된 리스트 전부 조회되도록 수정
--&gt;

SELECT /* HIS.MS.IV.RM.EX.SelectGnrDgnsExmImpl */
       A.EXRM_TP_CD     
     , A.PT_NO                                                                    PT_NO
     , XSUP.FT_MSE_ACP_NOINFOYN(:HIS_HSP_TP_CD, A.PT_NO,NULL ) || B.PT_NM || XSUP.FT_MSE_GET_TADS_YN(:HIS_HSP_TP_CD, A.PT_NO) PT_NM
     , MAX(DECODE(A.PACT_TP_CD, 'O', A.MED_DEPT_CD, 'I', A.WD_DEPT_CD, 'E', A.MED_DEPT_CD))  MED_DEPT_CD
     , MAX(FT_MSD_DEPT(M.HSP_TP_CD, M.PT_HME_DEPT_CD)) MED_DEPT_NM
     , TO_CHAR(B.PT_BRDY_DT, 'YYYY-MM-DD')                                        PT_BRDY_DT
     , B.SEX_TP_CD                                                               SEX_TP_CD
     , XBIL.FT_PCT_AGE('F_AGE', SYSDATE, B.PT_BRDY_DT)                           PT_BRDY_DT
     , XMED.FT_MOO_INFECT_CLS(A.PT_NO, TO_CHAR(SYSDATE, 'YYYYMMDD'), :HIS_HSP_TP_CD, '9')  INFECT_CLS
     , DECODE(MIN(NVL(TO_CHAR(M.RSV_DTM,'YYYY-MM-DD HH24:MI'),'2999-12-31 23:59')), '2999-12-31 23:59', ''
            , MIN(NVL(TO_CHAR(M.RSV_DTM,'YYYY-MM-DD HH24:MI'),'2999-12-31 23:59')))       RSV_DTM
     , TO_CHAR(MIN(A.INIT_ACPT_DTM), 'HH24:MI')                                    INIT_ACPT_DTM
     --, TO_CHAR(MAX(A.ACPT_DTM), 'HH24:MI')                                         ACPTDT2
     , TO_CHAR(MIN(A.ARVL_DTM), 'HH24:MI')                                         ACPTDT2
     , TO_CHAR(A.ACPT_DTM, 'YYYY-MM-DD')                                           ACPT_DTM
     , LISTAGG(A.ORD_ID,',') WITHIN GROUP(ORDER BY A.HSP_TP_CD, A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_ID_LIST
--     , A.PT_NO || ' ' || TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI') || ' ' || TO_CHAR(MIN(M.RSV_DTM), 'YYYY-MM-DD HH24:MI:SS') || chr(13) ||
--       MAX(DECODE(A.PACT_TP_CD, 'O', A.MED_DEPT_CD, 'I', A.WD_DEPT_CD, 'E', A.MED_DEPT_CD))|| ' ' ||LISTAGG(M.ORD_NM,', ') WITHIN GROUP(ORDER BY A.HSP_TP_CD, A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_NM_LIST

     , '환자번호 : ' || A.PT_NO || chr(13) || 
       '접수시간 : ' || TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI') || chr(13) ||
       '오더명 : ' || LISTAGG(M.ORD_NM,', ') WITHIN GROUP(ORDER BY A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_NM_LIST



     , A.PT_NO || ' ' || TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI') || ' ' || TO_CHAR(MIN(M.RSV_DTM), 'YYYY-MM-DD HH24:MI:SS') || chr(13) ||
       LISTAGG(M.ORD_NM,', ') WITHIN GROUP(ORDER BY A.HSP_TP_CD, A.EXRM_TP_CD, A.PT_NO, B.PT_NM, A.ACPT_DTM) ORD_NM_LIST
     , FT_MSE_CLDG_NM(A.PT_NO, :HIS_HSP_TP_CD)                                    CLDG_NM_LIST
     --, MAX(XMED.FT_MRN_BODYMSMTINF('BODYWEIGHT','PT_L','Y',A.PT_NO,A.HSP_TP_CD,M.PACT_ID, M.PACT_TP_CD,NULL,NULL)) PT_WEIGHT
     ,(SELECT TO_CHAR(Q.BDWT)||' ('|| TO_CHAR(Q.LSH_DTM, 'YYYY-MM-DD') || ')' FROM MOOPTHWD Q WHERE Q.PT_NO=A.PT_NO AND Q.HSP_TP_CD=A.HSP_TP_CD)   PT_WEIGHT
     --, MAX(XMED.FT_MRN_BODYMSMTINF('BODYHEIGHT','PT_L','Y',A.PT_NO,A.HSP_TP_CD,M.PACT_ID, M.PACT_TP_CD,NULL,NULL)) PT_HEIGHT
     ,(SELECT TO_CHAR(Q.BDHT)||' ('|| TO_CHAR(Q.LSH_DTM, 'YYYY-MM-DD') || ')' FROM MOOPTHWD Q WHERE Q.PT_NO=A.PT_NO AND Q.HSP_TP_CD=A.HSP_TP_CD)   PT_HEIGHT
     , MIN(CASE WHEN A.EXM_PRGR_STS_CD = 'C' THEN 'Y' ELSE 'N' END)               EXM_PRGR_STS_YN
     , (SELECT CASE WHEN MAX(R.FTIL_CMSY_KND_CD) IS NOT NULL THEN '3'
                    WHEN MAX(R.SRIL_CMSY_KND_CD) IS NOT NULL THEN '2'
                    WHEN MAX(R.SILL_CMSY_KND_CD) IS NOT NULL THEN '1'
                    WHEN MAX(R.PT_NO)            IS NOT NULL THEN '0'
                    ELSE 'N' END SIDE_YN
          FROM MSERMMSD R
         WHERE R.PT_NO           = A.PT_NO
           AND R.CNMD_SDEF_TP_CD = 'S'
           ) SIDE_YN
     , (SELECT NVL2(MAX(R.PT_NO), 'Y', 'N')
          FROM MSERMMSD R
         WHERE R.PT_NO           = A.PT_NO
           AND R.CNMD_SDEF_TP_CD = 'D'
           ) SED_YN
     , DECODE(FT_MSE_DR_NOTE_YN(A.PT_NO, '00'), 'Y', '★', '')        DR_NOTE_YN
     , DECODE(A.EXRM_TP_CD, :EXRM_CD, DECODE(MAX(A.INJC_YN), 'Y', '★', ''),'') INJC_YN
     , MAX(XSUP.FT_MSE_GET_IVYN(A.PT_NO, :ACPT_DTM, A.HSP_TP_CD))               IV_YN  --2017-01-02  김세용  통합 IV 대상 여부 추가
     , NVL2(XBIL.FT_ACP_ACPPRGCD_D_DAY_COMMON(:HIS_HSP_TP_CD, A.PT_NO, SYSDATE , 'EMR'),'중증','') SRIL_YN
     , XBIL.FT_ACP_ACPPRGCD_D_DAY_COMMON(:HIS_HSP_TP_CD, A.PT_NO, SYSDATE , 'EMR')                SRIL_CNTE
  FROM MSERMAAD A
     , MOOOREXM M
     , PCTPCPAM_DAMO B
     --, MSERMMRD C
     , MSERMMMC D
 WHERE A.ACPT_DTM  BETWEEN TO_DATE(:ACPT_DTM, 'YYYY-MM-DD')
                         AND TO_DATE(:ACPT_DTM, 'YYYY-MM-DD') + 0.99999
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
   --AND A.EXRM_TP_CD LIKE :EXRM_CD || '%'
   AND A.EXRM_TP_CD IN (SELECT EXRM_TP_CD 
           FROM MSERMMRD
          WHERE HSP_TP_CD = A.HSP_TP_CD
            AND ORD_CTG_CD = A.ORD_CTG_CD
            AND USE_YN = 'Y'
            AND CASE WHEN (SELECT 'Y'
           FROM MSERMCCC
             WHERE HSP_TP_CD ='01'
            AND ORD_CTG_CD = 'BR1'
            AND EXM_GRP_CD = 'ROOM'
            AND USE_YN = 'Y'
            AND SCRN_MRK_SEQ &lt;&gt; 1
            AND EXM_GRP_DTL_CD = :EXRM_CD) = 'Y' THEN IEXM_KND_CD --검사실 분류로 파라미터가 넘어왔을 경우 검사실분류 공통코드와 비교
                              ELSE EXRM_TP_CD --검사실 코드로 넘어왔을 경우에는 해당 검사실로 조회 
                END
               = :EXRM_CD)   --검사실 코드 그대로 분류가 달라질 경우 조회되지 않아서 해당 분류의 검사실코드로 접수된 리스트 전부 조회되도록 수정       
   AND (A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD1 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD2 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD3 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD4 OR A.EXM_PRGR_STS_CD = :EXM_PRGR_STS_CD5)
   AND A.PACT_TP_CD   LIKE :PACT_TP_CD  || '%'
   --AND A.EXRM_TP_CD  = C.EXRM_TP_CD
   --AND A.HSP_TP_CD   = C.HSP_TP_CD
   AND A.PT_NO     = B.PT_NO
   AND M.ORD_ID    = A.ORD_ID
   AND M.HSP_TP_CD = A.HSP_TP_CD
   AND M.ODDSC_TP_CD = 'C' 
   --AND (A.EXRM_TP_CD = 'RDG00' AND (M.ORD_SLIP_CTG_CD NOT IN ('RDG4','RG4') AND M.ORD_SLIP_CTG_CD NOT LIKE 'RZ%' AND M.ORD_CD != 'RG00') OR A.EXRM_TP_CD = A.EXRM_TP_CD )
   --AND M.ORD_SLIP_CTG_CD NOT LIKE 'RZ%'
   AND A.ORD_CD      = D.EXM_CD
   AND A.HSP_TP_CD   = D.HSP_TP_CD
--   AND D.ORD_SLIP_CTG_CD NOT LIKE 'RZ%'

GROUP BY A.EXRM_TP_CD, A.PT_NO
        , B.PT_NM
        , TO_CHAR(B.PT_BRDY_DT, 'YYYY-MM-DD')
        , B.SEX_TP_CD
        , TO_CHAR(A.ACPT_DTM,'MM-DD HH24:MI')
        --, TO_CHAR(A.INIT_ACPT_DTM,'MM-DD HH24:MI')
        , XBIL.FT_PCT_AGE('F_AGE', SYSDATE, B.PT_BRDY_DT)
        , TO_CHAR(A.ACPT_DTM, 'YYYY-MM-DD')
        , A.HSP_TP_CD
        --, A.ORD_ID
 ORDER BY A.EXRM_TP_CD, DECODE(:ORDER_GB, '1', TO_CHAR(MAX(A.ACPT_DTM), 'HH24:MI:SS')) DESC


&lt;/sql&gt;

-- 시행 처방 리스트 부분
&lt;sql id="HIS.MS.IV.RM.EX.SelectGnrDgnsExmImplExm"&gt;&lt;!--
    Clss : [text]
    Desc : 일반진단 실시를 위한 처방정보를 조회합니다.(PKG_SUP_SR_D_21.pc_sr_sel_src010s1_1)
    Author : 유영하 
    Create date : 2012-07-03
    Update date : 2012-07-03 
                  2017-04-05 윤정식 수정 : 이대 병원 구분작업
                  2021-11-01 오원빈, 검사의뢰서 ID, 의뢰서 번호 추가
                  2021-11-23 오원빈, 시행자 이름 추가
--&gt;

SELECT /* HIS.MS.IV.RM.EX.SelectGnrDgnsExmImplExm */
       TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')                                            ORD_DT
     , A.ORD_SEQ                                                                  ORD_SEQ
     , C.COMN_CD_NM                                                               PCL
     , A.ORD_CD                                                                   TST_CD         
     , CASE WHEN B.RPY_STS_CD = 'Y' AND B.DC_INPT_DTM IS NOT NULL AND B.RSCH_PRJT_NO IS NULL THEN '[환불요청]'
       WHEN B.RPY_STS_CD = 'Y' AND B.DC_INPT_DTM IS NOT NULL AND B.RSCH_PRJT_NO IS NOT NULL THEN '[환불요청][연구]'
       WHEN B.RSCH_PRJT_NO IS NOT NULL THEN '[연구]'
       ELSE ''
      END || D.CD_NM                                                                    TST_NM
     , DECODE(NVL(B.MSP_CR_EXM_YN, B.CR_EXM_YN) , 'Y', 'C',
       DECODE(NVL(B.MSP_DGT_YN, B.DGT_YN), 'Y', 'D', ''))                         DISITAL_YN
     , A.DISK_NO                                                                  DISK_NO
     , A.DISK_NO                                                                  DISK_NO2
--     , DECODE(A.EXM_PRGR_STS_CD, 'C', DECODE(SUBSTR(A.EXRM_TP_CD,1,3), 'RDM', H.SERIAL_NO
--                                                                   , A.EXRM_SRES_NO)
--                        , 'F', DECODE(SUBSTR(A.EXRM_TP_CD,1,3), 'RDM', H.SERIAL_NO
--                                                                   , A.EXRM_SRES_NO)
--                             , A.EXRM_SRES_NO)                                    SERIAL_NO
     , A.EQUP_MGMT_NO                                                             EQUP_MGMT_NO
     , TO_CHAR(B.RSV_DTM, 'YYYY-MM-DD HH24:MI')                                   RSV_DTM
     , A.EXM_PRGR_STS_CD                                                          EXM_PRGR_STS_CD
     , A.EXM_PRGR_STS_CD                                                          EXM_PRGR_STS_CD2
     , CASE WHEN A.EXM_PRGR_STS_CD IN ('E','D','N') THEN 'Y' ELSE 'N' END         EXECUTE_YN
     , CASE WHEN A.EXM_PRGR_STS_CD = 'F' THEN 'Y' ELSE 'N' END                    CANCEL_YN
     , B.LSH_STF_NO                                                               LSH_STF_NO
     , E.KOR_SRNM_NM ||'(' ||(SELECT J.WKPL_TEL_NO FROM XGAB.PDESMSAV J WHERE J.STF_NO = B.FSR_STF_NO AND HSP_TP_CD = :HIS_HSP_TP_CD)  || ')'   ORD_DR_NM
     , F.KOR_SRNM_NM                                                              JUC_DR_NM
     , B.COPN_CNTE || '/' || B.ORD_RMK_CNTE || '/' || B.RMK_CNTE                  RMK_CNTE
--     , FT_MSE_CLDG_NM(A.PT_NO)                                                    DISS
     , DECODE(A.EXRM_TP_CD, :EXRM_TP_CD, '1', '2')                                EXRM_TP_SEQ
     , A.EXRM_TP_CD                                                               EXRM_TP_CD
     , DECODE(A.MOV_ACPT_STS_CD, 'Y', '0', '1')                                   MOV_ACPT_STS_CD
--     , G.RPEAT_RSNCD                                                              RSNCD
     , B.EHSP_FLIT_YN                                                             EHSP_FLIT_YN
     , A.TRTM_RMK                                                                 TRTM_RMK
     , A.TRTM_RMK                                                                 TRTM_RMK2
     , A.ACCS_ID                                                                  ACCS_ID
     --, A.IMPL_STF_NO                                                              IMPL_STF_NO
     , A.PHTG_TCHN_STF_NO                                                         IMPL_STF_NO
     , XCOM.FT_CNL_SELSTFINFO('4', A.PHTG_TCHN_STF_NO, A.HSP_TP_CD, NULL)         IMPL_STF_NM 
     , (SELECT LISTAGG(Z.USE_GRP_CD||XCOM.FT_CNL_SELSTFINFO('4', Z.IMPL_STF_NO, Z.HSP_TP_CD, NULL), ',') WITHIN GROUP (ORDER BY Z.USE_GRP_CD, XCOM.FT_CNL_SELSTFINFO('4', Z.IMPL_STF_NO, Z.HSP_TP_CD, NULL))
      FROM MSERMAXD Z
     WHERE Z.ORD_ID = A.ORD_ID
       AND Z.USE_YN = 'Y')                                                 EXECUTER_NM
     , TO_CHAR(B.FSR_DTM, 'YYYY-MM-DD HH24:MI:SS')                                   FSR_DTM
     , B.MED_MIFI_TP_CD                                                           MED_MIFI_TP_CD
     , NVL(A.INJC_YN, 'N')                                                                  INJC_YN
     , DECODE(FT_MSE_AGETYPE('', SYSDATE, A.PT_NO, 'G'),'2','Y','5','Y','6','Y','N')   MEDIA_MED_YN
--     , P.NUM_IMAGES                                                               NUM_IMAGES
    -- , P.INSTANCE_COUNT                                                           INSTANCE_COUNT
     , D.EXM_ABBR_NM                                                              EXM_ABBR_NM
     , A.ORD_ID
     , A.PT_NO
     , (SELECT J.WKPL_TEL_NO FROM XGAB.PDESMSAV J WHERE J.STF_NO = B.FSR_STF_NO AND J.HSP_TP_CD = :HIS_HSP_TP_CD)  WKPL_TEL_NO
     , (SELECT J.MTEL_NO     FROM XGAB.PDESMSAV J WHERE J.STF_NO = B.FSR_STF_NO AND J.HSP_TP_CD = :HIS_HSP_TP_CD)  MTEL_NO
     , A.ORD_CTG_CD
     , B.PACT_ID
     , B.PACT_TP_CD
     , TO_CHAR(B.EXRM_HH_DTM, 'YYYY-MM-DD HH24:MI:SS') EXRM_HH_DTM
     , 'Y' ISROWVALID
     , TO_CHAR(A.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS') ACPT_DTM
     , TO_CHAR(B.EXM_HOPE_DT, 'YYYY-MM-DD HH24:MI:SS') EXM_HOPE_DT
     , J.RMK                                                                              NOTED_ITEMS
     , B.FSR_STF_NO ORD_DR_STF_NO
     , B.PT_HME_DEPT_CD        PT_HME_DEPT_CD
     , A.UDRS_YN    UDRS_YN
     , A.TRNF_CLS_CD  TRNF_CLS_CD
     --, B.RPY_STS_CD     RPY_STS_CD
     --, DECODE(B.PACT_TP_CD, 'O'
     --                     ,DECODE(XMED.FT_MOO_DAY_WARD_YN(B.PT_NO,B.PACT_ID,B.HSP_TP_CD),'Y','Y'
     --                              ,B.RPY_STS_CD)
     --       , DECODE(XBIL.FT_ACP_STAYYN(B.HSP_TP_CD, B.PACT_ID, B.PACT_TP_CD, 'Y'), 'Y', 'Y', B.RPY_STS_CD))   RPY_STS_CD
  , CASE WHEN B.RPY_STS_CD = 'R' THEN B.RPY_STS_CD
    WHEN B.PACT_TP_CD = 'O' AND (XMED.FT_MOO_DAY_WARD_YN(B.PT_NO,B.PACT_ID,B.HSP_TP_CD) = 'Y') THEN 'Y'  
      WHEN B.PACT_TP_CD = 'O' AND ((SELECT 'Y' 
            FROM ACPPRAAM 
                               WHERE HSP_TP_CD = B.HSP_TP_CD 
                                 AND APCN_YN = 'N'
                                 AND TDS_DTM IS NULL
                                 AND SIHS_YN = 'Y'
                                 AND PT_NO = B.PT_NO) = 'Y') THEN 'Y'
      WHEN B.PACT_TP_CD &lt;&gt; 'O' AND (XBIL.FT_ACP_STAYYN(B.HSP_TP_CD, B.PACT_ID, B.PACT_TP_CD, 'Y') = 'Y') THEN 'Y'
         ELSE B.RPY_STS_CD
  END        RPY_STS_CD               
     , XCOM.FT_CNL_SELSTFINFO('4',A.IMPL_DR_STF_NO , A.HSP_TP_CD, NULL) IMPL_DR_STF_NO
     , TO_CHAR(B.RSV_DTM, 'YYYY-MM-DD HH24:MI') ||' ('|| (SELECT DECODE(R.RSVP_ACPT_TP_CD, 'A', '전체'
                                                                                          , 'I', '병동'
                                                                                          , 'O', '외래'
                                                                                          , 'S', '신환'
                                                                                          , 'F', '초진'
                                                                                          , 'C', '신/초진'
                                                                                          , 'T', '통합'
                                                                                          , '')
                                                             FROM MSERMRRD R
                                                            WHERE B.ORD_Id = R.ORD_ID AND ROWNUM = 1) ||')'  RSV_DTM_TP_NM
     , DECODE(TRIM(B.COPN_CNTE) || '/' || TRIM(B.ORD_RMK_CNTE) || '/' || TRIM(B.RMK_CNTE), '//', '', '●')                  RMK_YN
     , B.EMRG_YN
     , TO_CHAR(A.EQUP_IMPL_DTM, 'YYYY-MM-DD HH24:MI')       PHTG_DTM --PACS촬영일시.
     , DECODE(A.TRTM_RMK, NULL, '', '●')                  TRTM_RMK_YN
     , 'N' EXECUTE_STF_YN
     , (SELECT EMRM_NO_CTG_CD FROM MOMNMWPD X WHERE PACT_ID=B.PACT_ID AND USE_YN='Y' AND LST_YN='Y') EM_LOC
     , XBIL.FT_HIPASS_YN(B.PT_NO, B.HSP_TP_CD, SYSDATE, B.PACT_ID)                 HIPASS_YN         
     ,(SELECT '[수가정보] ' || BMIF_CD || CHR(13) || CHR(10) || LISTAGG(BMIF_CD || ' : ' || KOR_MIF_NM, CHR(13) || CHR(10)) WITHIN GROUP (ORDER BY BMIF_CD) 
         FROM  (
      SELECT  B.MIF_CD BMIF_CD ,MIF_CD , KOR_MIF_NM 
                  FROM AIMIRPMC
                 WHERE 1=1
                   AND HSP_TP_CD = B.HSP_TP_CD
                   AND B.ORD_DT BETWEEN APY_STR_DT AND APY_END_DT
                   AND MIF_CD = B.MIF_CD 
                 UNION    
       SELECT  B.MIF_CD BMIF_CD,MIF_CD , KOR_MIF_NM 
                  FROM AIMIRPMC AA, AIMIRGPR BB
             WHERE 1 = 1
                   AND AA.HSP_TP_CD = BB.HSP_TP_CD
                   AND B.ORD_DT BETWEEN AA.APY_STR_DT AND AA.APY_END_DT
                   AND B.ORD_DT BETWEEN BB.APY_STR_DT AND BB.APY_END_DT
                   AND BB.GRP_MIF_CD = B.MIF_CD
                   AND BB.HSP_TP_CD = B.HSP_TP_CD
                   AND  AA.MIF_CD=BB.SGL_MIF_CD                        
                )
       GROUP BY BMIF_CD)  AS MIF_INFO        
     , XSUP.FT_MSE_RU_PART_INFO('YN', B.ORD_ID, B.HSP_TP_CD) AS RU_PART_YN --초음파 부위 여부
     , XSUP.FT_MSE_RU_PART_INFO('INFO', B.ORD_ID, B.HSP_TP_CD) AS RU_PART_INFO --초음파 부위 정보
     , FT_MSE_ADDMTRL_YN(A.ORD_ID, A.HSP_TP_CD) AS MATERIAL_YN
     , XCOM.FT_CNL_SELSTFINFO('4',B.EXM_CHDR_STF_NO, B.HSP_TP_CD, NULL)    EXM_CHDR_STF_NM
     , (SELECT TO_CHAR(MDFM_ID)
        FROM CCOOCBAC
       WHERE HSP_TP_CD = B.HSP_TP_CD
         AND ORD_CD    = B.ORD_CD)   MDFM_ID --검사의뢰서
     , B.EXM_RFFM_IPTN_NO         IPPR_ID --처방시 작성한 검사의뢰서 판독번호
     , D.BF_EXM_YN        BF_EXM_YN --선검사여부
  , FT_MSE_GET_AUTOSIDE_INFO(A.HSP_TP_CD,A.ORD_ID,'11') SIDE_NM --자동발행된 조영제 혹은 추가처방낸 조영제 
  , FT_MSE_GET_AUTOSIDE_INFO(A.HSP_TP_CD,A.ORD_ID,'10') SIDE_CD    
  , TO_CHAR(B.EXM_NOTM)     EXM_NOTM 
     , B.TOTH_CD_CNTE            
  FROM MSERMAAD A
     , MOOOREXM B
     , CCCCCSTE C
     , MSERMMMC D
     , CNLRRUSD E
     , CNLRRUSD F
--     , MSERMARD G
     --, STUDY_VIEW@DL_PACS P
--     , (SELECT TO_CHAR(NVL(MAX(TO_NUMBER(S.EXRM_SRES_NO)), 0) + 1)  SERIAL_NO
--         FROM MSERMAAD S
--        WHERE S.PHTG_DTM &gt; TO_DATE(TO_CHAR(SYSDATE,'YYYYMM')||'01','YYYYMMDD')
--          AND S.EXRM_TP_CD = :EXRM_TP_CD
--          AND S.HSP_TP_CD  = :HIS_HSP_TP_CD
--       )H
     , CNLRRUSD  I
     , MSERMAED J
--     , XGAB.PDESMSAV J
 WHERE A.PT_NO             = :PT_NO
   AND A.ACPT_DTM  BETWEEN TO_DATE(:ACPT_DTM, 'YYYY-MM-DD')
                       AND TO_DATE(:ACPT_DTM, 'YYYY-MM-DD') + 0.99999
   AND A.ORD_CTG_CD        = 'BR1'
   AND A.HSP_TP_CD         = :HIS_HSP_TP_CD
   AND B.PT_NO             = A.PT_NO
--   AND B.ORD_DT            = A.ORD_DT
--   AND B.ORD_SEQ           = A.ORD_SEQ
   AND B.ORD_ID            = A.ORD_ID
   AND B.HSP_TP_CD         = A.HSP_TP_CD
   AND B.ODDSC_TP_CD       = 'C' 
   
   AND C.COMN_GRP_CD(+)    = '404'
   AND C.COMN_CD(+)        = B.MED_MIFI_TP_CD
   AND D.EXM_CD            = A.ORD_CD
   AND D.HSP_TP_CD         = A.HSP_TP_CD
   AND E.STF_NO(+)         = B.FSR_STF_NO
   AND E.HSP_TP_CD(+)      = B.HSP_TP_CD
   AND F.STF_NO(+)         = B.EXM_CHDR_STF_NO
   AND F.HSP_TP_CD(+)      = B.HSP_TP_CD
   --AND I.STF_NO(+)         = A.IMPL_STF_NO
   AND I.STF_NO(+)         = A.PHTG_TCHN_STF_NO
   AND I.HSP_TP_CD(+)      = A.HSP_TP_CD
--   AND G.ORD_ID(+)         = A.ORD_ID
--   AND TRUNC(G.RPT_DTM(+)) = TRUNC(A.PHTG_DTM)
--   AND A.PT_NO             = P.PATIENT_ID(+)
--   AND A.ACCS_ID           = P.ACCESS_NO(+)
--   AND A.HSP_TP_CD         = P.HSP_TP_CD(+)

--   AND J.STF_NO(+)         = B.FSR_STF_NO
   AND J.PT_NO(+)          = A.PT_NO
   AND J.ORD_DT(+)         = A.ORD_DT
   AND J.ORD_SEQ(+)        = A.ORD_SEQ
   AND J.HSP_TP_CD(+)      = A.HSP_TP_CD
   AND J.ERAD_TP_CD(+)     = DECODE(SUBSTR(A.EXRM_TP_CD,3,1),'C','C',J.ERAD_TP_CD(+))
 ORDER BY EXRM_TP_SEQ
        , MOV_ACPT_STS_CD
        , A.ACCS_ID

 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CDSS 감염관리 페이지 권한 조회</QUERY_NAME>
    <QUERY_TEXT>--감염관리 페이지 권한
exec :HIS_HSP_TP_CD := '01';
exec :V_GRP_CD := 'M42';
exec :V_CD := '';
SELECT /* HIS.EQSID */
       A.HSP_TP_CD                                       HSP_TP_CD                      /*병원구분코드*/
     , A.CDSS_COMN_GRP_CD                                CDSS_COMN_GRP_CD               /*CDSS공통그룹코드*/
     , '사용자직번'                                                STF_NO
     , '사용자성명'                                                KOR_SRNM_NM
     , '사용자근무부서'                                                DEPT_NM
     , A.DTRL1_CNTE                                      DTRL1_CNTE                     /*1번째업무규칙내용*/
     , A.DTRL2_CNTE                                      DTRL2_CNTE                     /*2번째업무규칙내용*/
     , A.DTRL3_CNTE                                      DTRL3_CNTE                     /*3번째업무규칙내용*/
     , A.DTRL4_CNTE                                      DTRL4_CNTE                     /*4번째업무규칙내용*/
     , A.DTRL5_CNTE                                      DTRL5_CNTE                     /*5번째업무규칙내용*/
     , A.DTRL6_CNTE                                      DTRL6_CNTE                     /*6번째업무규칙내용*/
  FROM BCCCSCAC A
 WHERE A.HSP_TP_CD                      = :HIS_HSP_TP_CD
   AND A.CDSS_COMN_GRP_CD               = :V_GRP_CD
UNION ALL
SELECT /* HIS.EQSID */
       A.HSP_TP_CD                                       HSP_TP_CD                      /*병원구분코드*/
     , A.CDSS_COMN_GRP_CD                                CDSS_COMN_GRP_CD               /*CDSS공통그룹코드*/
     , A.CDSS_COMN_CD                                    CDSS_COMN_CD                   /*CDSS공통코드*/
     , A.CDSS_COMN_CD_NM                                 CDSS_COMN_CD_NM                /*CDSS공통코드명*/
     , A.CDSS_COMN_CD_CNTE                               CDSS_COMN_CD_CNTE              /*CDSS공통코드내용*/
     , A.DTRL1_NM                                        DTRL1_NM                       /*1번째업무규칙명*/
     , A.DTRL2_NM                                        DTRL2_NM                       /*2번째업무규칙명*/
     , A.DTRL3_NM                                        DTRL3_NM                       /*3번째업무규칙명*/
     , A.DTRL4_NM                                        DTRL4_NM                       /*4번째업무규칙명*/
     , A.DTRL5_NM                                        DTRL5_NM                       /*5번째업무규칙명*/
     , A.DTRL6_NM                                        DTRL6_NM                       /*6번째업무규칙명*/
  FROM BCCCSCBE A
 WHERE A.HSP_TP_CD                      = :HIS_HSP_TP_CD
   AND A.CDSS_COMN_GRP_CD               = :V_GRP_CD
   AND A.CDSS_COMN_CD                   = NVL(:V_CD,CDSS_COMN_CD)
   AND USE_YN = 'Y'</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>CDSS 감염관리 페이지 권한 부여</QUERY_NAME>
    <QUERY_TEXT>--감염관리 페이지 권한
DECLARE
HIS_HSP_TP_CD VARCHAR2(2) :='01';
V_GRP_CD VARCHAR2(10) :='M42';
V_STF_NO VARCHAR2(7) :='ND01432';
V_TEL_NO VARCHAR2(100) :='';
V_KOR_SRNM_NM VARCHAR2(100) :='';
V_DEPT_NM VARCHAR2(100) :='';
BEGIN
--감염관리 직원인지 체크
    BEGIN
        SELECT A.KOR_SRNM_NM
              ,C.TEL_NO
              ,B.DEPT_NM
          INTO V_KOR_SRNM_NM
              ,V_TEL_NO
              ,V_DEPT_NM
          FROM CNLRRUSD A
             , PDEDBMSM B
             , PDESDSTD C
         WHERE 1=1
           AND A.HSP_TP_CD = HIS_HSP_TP_CD
           AND B.HSP_TP_CD = A.HSP_TP_CD
           AND (A.AOA_WKDP_CD = B.DEPT_CD OR A.AADP_CD = B.DEPT_CD)
           AND B.DEPT_NM LIKE '%감염관리%'
           AND A.STF_NO = V_STF_NO
           AND A.RTRM_DT IS NULL
           AND B.USE_STOP_DT IS NULL
           AND A.STF_NO = C.STF_NO
           AND C.CTAD_TP_CD = '08'
           AND SYSDATE BETWEEN C.AVL_STR_DTM AND C.AVL_END_DTM + .99999
           AND ROWNUM = 1 ;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN;
    END;
    BEGIN
        MERGE /* HIS.EQSID */
         INTO BCCCSCBE
        USING DUAL
        ON (
               HSP_TP_CD                      = HIS_HSP_TP_CD
           AND CDSS_COMN_GRP_CD               = V_GRP_CD
           AND CDSS_COMN_CD                   = V_STF_NO
           )
        WHEN NOT MATCHED THEN
        INSERT
             (
               HSP_TP_CD                                          /*병원구분코드*/
             , CDSS_COMN_GRP_CD                                   /*CDSS공통그룹코드*/
             , CDSS_COMN_CD                                       /*CDSS공통코드*/
             , CDSS_COMN_CD_NM                                    /*CDSS공통코드명*/
             , CDSS_COMN_CD_CNTE                                  /*CDSS공통코드내용*/
             , SCRN_MRK_SEQ                                       /*화면표시순번*/
             , USE_YN                                             /*사용여부*/
             , DTRL1_NM                                           /*1번째업무규칙명*/
             , DTRL2_NM                                           /*2번째업무규칙명*/
             , DTRL3_NM                                           /*3번째업무규칙명*/
             , DTRL4_NM                                           /*4번째업무규칙명*/
             , DTRL5_NM                                           /*5번째업무규칙명*/
             , DTRL6_NM                                           /*6번째업무규칙명*/
             , FSR_DTM                                            /*최초등록일시*/
             , FSR_STF_NO                                         /*최초등록직원번호*/
             , FSR_PRGM_NM                                        /*최초등록프로그램명*/
             , FSR_IP_ADDR                                        /*최초등록IP주소*/
             , LSH_DTM                                            /*최종변경일시*/
             , LSH_STF_NO                                         /*최종변경직원번호*/
             , LSH_PRGM_NM                                        /*최종변경프로그램명*/
             , LSH_IP_ADDR                                        /*최종변경IP주소*/
             )
        VALUES
             (
               HIS_HSP_TP_CD
             , V_GRP_CD
             , V_STF_NO
             , V_KOR_SRNM_NM
             , V_DEPT_NM
             , :IN_SCRN_MRK_SEQ
             , 'Y'
             , 'Y'
             , :IN_DTRL2_NM
             , V_TEL_NO
             , 'N'
             , :IN_DTRL5_NM
             , :IN_DTRL6_NM
             , SYSDATE
             , 'SSSUP11'
             , 'GOLDEN'
             , 'GOLDEN'
             , SYSDATE
             , 'SSSUP11'
             , 'GOLDEN'
             , 'GOLDEN'
             )
             ;
    END;
END;
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>코로나 ALERT연동</QUERY_NAME>
    <QUERY_TEXT>TRIGGER HMED.HMED.TR_BSIIFSDH             --다제내성균대상자등록정보
AFTER INSERT OR 
      UPDATE ON HMED.BSIIFSDH  FOR EACH ROW  


DECLARE 
    V_END_DT_TXT VARCHAR2(20) := ''; 
    V_END_DT     DATE;        
BEGIN                                           

         
    IF INSERTING OR UPDATING THEN
    
        IF INSTR(REPLACE(:NEW.SDEF_CNTE, ' ', ''), '코로나19확진자') &gt; 0 THEN
            

            BEGIN
                SELECT SUBSTR(XMED.FN_SPLIT(REPLACE(TRIM(:NEW.INSP_RSLT_CNTE), ' ', ''), 2, '종료일:'), 1, 8)
                  INTO V_END_DT_TXT
                FROM DUAL;
                
                V_END_DT := TO_DATE(V_END_DT_TXT, 'YYYYMMDD');
                
                -- 추출한 문자열이 날짜 타입이 아니면 리턴함
                IF V_END_DT IS NULL THEN
                    RETURN;
                END IF;
                
                -- 종료일이 오늘 이전이면 리턴함
                IF V_END_DT &lt; TRUNC(SYSDATE) THEN
                    RETURN;
                END IF; 
                
                EXCEPTION
                    WHEN OTHERS THEN
                        RETURN;
            END;            
            
            BEGIN
                XMED.PKG_MOO_ALERT.PC_MOO_SAVE_INFECTIONITEM 
                ( :NEW.PT_NO              -- 01. 환자번호
                , NULL                    -- 02. 환자감염임신수유등록순번
                , :NEW.HSP_TP_CD          -- 03. 병원구분코드
                , 'A0061'                 -- 04. 감염임신수유코드
                , NULL                    -- 05. 삭제사유내용
                , :NEW.SDEF_CNTE          -- 06. 비고내용
                , 'I'                     -- 07. alert작업구분코드
                , 'AUTO'                  -- 08. 작업자직원번호
                , 'TR_BSIIFSDH'           -- 09. 작업프로그램내용
                , '0.0.0.0'               -- 10. 작업PC_IP
                , NULL                    -- 11. 관련처방ID
                , 'R001'                  -- 12. 자동등록구분코드
                , SYSDATE                 -- 13. 자동등록일자( = 양성검체접수일 )
                ) ;
                EXCEPTION  
                    WHEN OTHERS THEN
                        NULL;                
            END;
            
            
            BEGIN
                --종료일자 업데이트
                UPDATE MOOPTIPD
                   SET AVL_END_DT       = V_END_DT
                 WHERE HSP_TP_CD        = :NEW.HSP_TP_CD
                   AND PT_NO            = :NEW.PT_NO
                   AND AVL_STR_DT       = TRUNC(SYSDATE)
                   AND FSR_STF_NO       = 'AUTO'
                   AND FSR_PRGM_NM      = 'TR_BSIIFSDH'
                ;
                
                EXCEPTION
                    WHEN OTHERS THEN
                        NULL;
            END;            
        END IF;           
    END IF;                               

END;
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 담당 선생님 연락처</QUERY_NAME>
    <QUERY_TEXT>학동 전산담당은 물리치료실 박영주에서 작업치료실 김세현 선생님(T. 5195)으로 변경되었구요, 화순은 정우식 선생님, 빛고을은 신관호 팀장님이십니다. 
화순 정우식 선생님 전화번호는 (T. 8290), 빛고을 신관호 팀장님 전화번호는 (T. 062-670-9791)입니다. 


학동 : 김세현 선생님 (5195)
화순 : 정우식 선생님 (8290)
빛고을 : 신관호 선생님 </QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재컴파일</QUERY_NAME>
    <QUERY_TEXT>ALTER PACKAGE  XMED.PKG_MOO_SAVEORDERS COMPILE BODY;

ALTER PACKAGE  XMED.PKG_MOO_SAVEORDERS COMPILE;



호출 중인 프로그램 단위 관련 메세지가 뜰경우 migtest로 스테이징 로그인해서 실행해야함.</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ToolTip 시간 무제한</QUERY_NAME>
    <QUERY_TEXT>xmlns:sys="clr-namespace:System;assembly=mscorlib" --최상단에 추가


                &lt;DataGridTextColumn Header="QUERY_NAME" Binding="{Binding Path=QUERY_NAME}"&gt;
                    &lt;DataGridTextColumn.CellStyle&gt;
                        &lt;Style TargetType="DataGridCell"&gt;
                            &lt;Setter Property="ToolTip" Value="{Binding Path=QUERY_NAME}"/&gt;
                            &lt;Setter Property="ToolTipService.ShowDuration" Value="{x:Static Member=sys:Int32.MaxValue}"/&gt;
                        &lt;/Style&gt;
                    &lt;/DataGridTextColumn.CellStyle&gt;
                &lt;/DataGridTextColumn&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>DataWare 용어조회 (Meta,메타샵)</QUERY_NAME>
    <QUERY_TEXT>EXEC :TEXT :='PT';
SELECT C.CD_NM GBN
      ,B.CD_NM GBN_DTL
      ,DIC_LOG_NM
      ,DIC_PHY_NM
      ,A.DIC_PHY_FLL_NM
      ,DIC_DESC
      ,A.DATA_TYPE
      ,A.STANDARD_YN
      ,(SELECT B.CD_NM GBN_DTL
          FROM STD_DOM X
              ,DA_CODE B
              ,MS_CODE C
         WHERE 1=1
           AND X.DOM_ID = A.DOM_ID
           AND X.DOM_TYPE_CD = B.CD_ID
           AND B.UP_CD_ID = C.CD_ID
           AND C.UP_CD_ID = 'ROOT'
           AND B.UP_CD_ID = '6022'
           AND SYSDATE BETWEEN TO_DATE(AVAL_ST_DT, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(AVAL_END_DT,'YYYY-MM-DD HH24:MI:SS')) DOM_GRP_NM
    FROM STD_DIC A
        ,DA_CODE B
        ,MS_CODE C
WHERE 1=1
AND DIC_PHY_NM = :TEXT
AND A.DIC_GBN_CD = B.CD_ID
AND B.UP_CD_ID = C.CD_ID
AND C.UP_CD_ID = 'ROOT'
AND B.UP_CD_ID = '6019'
AND SYSDATE BETWEEN TO_DATE(AVAL_ST_DT, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(AVAL_END_DT,'YYYY-MM-DD HH24:MI:SS')
UNION ALL
SELECT C.CD_NM GBN
      ,B.CD_NM GBN_DTL
      ,DIC_LOG_NM
      ,DIC_PHY_NM
      ,A.DIC_PHY_FLL_NM
      ,DIC_DESC
      ,A.DATA_TYPE
      ,A.STANDARD_YN
      ,(SELECT B.CD_NM GBN_DTL
          FROM STD_DOM X
              ,DA_CODE B
              ,MS_CODE C
         WHERE 1=1
           AND X.DOM_ID = A.DOM_ID
           AND X.DOM_TYPE_CD = B.CD_ID
           AND B.UP_CD_ID = C.CD_ID
           AND C.UP_CD_ID = 'ROOT'
           AND B.UP_CD_ID = '6022'
           AND SYSDATE BETWEEN TO_DATE(AVAL_ST_DT, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(AVAL_END_DT,'YYYY-MM-DD HH24:MI:SS')) DOM_GRP_NM
    FROM STD_DIC A
        ,DA_CODE B
        ,MS_CODE C
WHERE 1=1
AND DIC_LOG_NM = :TEXT
AND A.DIC_GBN_CD = B.CD_ID
AND B.UP_CD_ID = C.CD_ID
AND C.UP_CD_ID = 'ROOT'
AND B.UP_CD_ID = '6019'
AND SYSDATE BETWEEN TO_DATE(AVAL_ST_DT, 'YYYY-MM-DD HH24:MI:SS') AND TO_DATE(AVAL_END_DT,'YYYY-MM-DD HH24:MI:SS')
;</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>자동완성 콤보박스</QUERY_NAME>
    <QUERY_TEXT>                                &lt;HAutoCompleteBox x:Name="cbxSPCM_CD" IsAutoFilter="True" VerticalAlignment="Center" HorizontalContentAlignment="Center" Background="Transparent" BorderBrush="Transparent" DropDownWidth="120"
                                           ItemsSource="{Binding MedDeptList, Mode=TwoWay}"                                           
                                           DisplayMemberPath="CODE_NM" 
                                           SelectedValuePath="CODE_CD" 
                                           SelectedValue="{Binding MED_DEPT_CD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"&gt;
                                    &lt;i:Interaction.Triggers&gt;
                                        &lt;i:EventTrigger EventName="GotFocus"&gt;
                                            &lt;i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type HDataGridEx}, Mode=FindAncestor},Path= DataContext.MedDeptCdEnterCommand}"
                                                                   CommandParameter="{Binding ElementName=cbxSPCM_CD}"/&gt;
                                        &lt;/i:EventTrigger&gt;
                                    &lt;/i:Interaction.Triggers&gt;
                                &lt;/HAutoCompleteBox&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>배치프로시저 목록(스케줄 조회)</QUERY_NAME>
    <QUERY_TEXT>--migtest로 로그인해야 함.
SELECT * FROM MIGTEST.DAILY_BATCH_CHECK;
</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>데이터그리드 텍스트컬럼 확대</QUERY_NAME>
    <QUERY_TEXT>--IsEditingToZoom="True" 이면 데이터그리드에서 더블클릭시 해당 부분이 확대됨.
&lt;HDataGridTextColumn Header="환자번호" Width="80" Binding="{Binding PT_NO, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" IsEditingToZoom="True"/&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Border</QUERY_NAME>
    <QUERY_TEXT>            &lt;Border BorderThickness="0,0,1,1" Height="40" BorderBrush="{StaticResource SearchAreaDarkBorderBrush}" Background="{StaticResource SearchAreaBackground}" Margin="0,0,0,5"&gt;
                &lt;Border BorderBrush="{StaticResource SearchAreaLightBorderBrush}" BorderThickness="1,1,0,0"&gt;
                   &lt;내용물&gt;
                &lt;/Border&gt;
            &lt;/Border&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Filter(필터)</QUERY_NAME>
    <QUERY_TEXT>//1.ICollectionView를 선언하고 필터링할 데이터를 CollectionViewSource.GetDefaultView(데이터); 를 이용해서 CollectionView에 넣어준다.
//2.CollectionView.Filter에 bool을 리턴하는 메서드를 만들어서 넣어준다.
//3.메서드 리턴값이 true이면 조회되며 false일 경우 filter 처리되서 조회되지않는다.
//4.데이터부분이 갱신되면 다시 ColletionView에 담아줘야 필터가 작동한다.
//5.데이터가 Collection 형식이어도 CustiomFilter메서드에서 item을 형변환 할때는 Collection에 담긴 DTO(Class)형식으로 형변환 해줘야한다.
//6.Filter 체크할 경우 Collection의 모든 데이터가 Foreach처럼 반복하며 Filter 체크하게 된다.
//7.Filter되어야 하는 조건을 CustomFilter에 넣고 object item(데이터)를 필터조건에 비교하여 false(조회안됨),true(조회됨)으로 리턴한다.
       ICollectionView view;

        private void SelectExamCodeInfo()
        {
            //데이터 조회부분
            SaveExamCodeManagement_INOUT inData = new SaveExamCodeManagement_INOUT();            
            this.SELECTEXAMCODEINFO_INOUT = (HSFDTOCollectionBaseObject&lt;SaveExamCodeManagement_INOUT&gt;)
                UIMiddlewareAgent.InvokeBizService(this, BIZ_CLASS, "SelectExamCodeInfo", inData);
            
            //데이터 필터부분.
            view = CollectionViewSource.GetDefaultView(SELECTEXAMCODEINFO_INOUT);
            view.Filter = CustomerFilter;
        }

        /// &lt;summary&gt;
        /// 검색
        /// &lt;/summary&gt;
        /// &lt;param name="item"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        private bool CustomerFilter(object item)
        {
            bool filter = true;
            if (RHTR_LCLS_SEL is null) return filter;            
            
            SaveExamCodeManagement_INOUT code_list = item as SaveExamCodeManagement_INOUT;
            
            if (!code_list.RHTR_LCLS_CD.Equals(RHTR_LCLS_SEL.RHTR_LCLS_CD) &amp;&amp; !RHTR_LCLS_SEL.RHTR_LCLS_CD.Equals("ALL"))
                filter = false;        

            if (!code_list.RHTR_MCLS_CD.Equals(RHTR_MCLS_SEL.RHTR_MCLS_CD) &amp;&amp; !RHTR_MCLS_SEL.RHTR_MCLS_CD.Equals("ALL"))
                filter = false;

            if (!code_list.RHTR_SCLS_CD.Equals(RHTR_SCLS_SEL.RHTR_SCLS_CD) &amp;&amp; !RHTR_SCLS_SEL.RHTR_SCLS_CD.Equals("ALL"))
                filter = false;

            if (!code_list.APCB_TYRM_CD.Equals(APCB_TYRM_SEL.APCB_TYRM_CD) &amp;&amp; !APCB_TYRM_SEL.APCB_TYRM_CD.Equals("ALL"))
                filter = false;

            if (!code_list.ORDCD_USE_YN.Equals(ORDCD_USE_SEL.ORDCD_USE_YN) &amp;&amp; !ORDCD_USE_SEL.ORDCD_USE_YN.Equals("ALL"))
                filter = false;

            if (!code_list.SUGACD_USE_YN.Equals(SUGACD_USE_SEL.SUGACD_USE_YN) &amp;&amp; !SUGACD_USE_SEL.SUGACD_USE_YN.Equals("ALL"))
                filter = false;    

            if (!string.IsNullOrEmpty(SEARCH_TEXT) &amp;&amp; !code_list.RHTR_ORD_CD.ToUpper().Contains(SEARCH_TEXT.ToUpper()) &amp;&amp; !code_list.RHTR_ORD_NM.ToUpper().Contains(SEARCH_TEXT.ToUpper()) &amp;&amp; !code_list.RHTR_MIF_CD.ToUpper().Contains(SEARCH_TEXT.ToUpper()))
                filter = false;
            return filter;

        }   </QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>테이블 인덱스조회</QUERY_NAME>
    <QUERY_TEXT>select index_name,a.*
 from ALL_IND_COLUMNS a
 where table_name = :TABLE_NAME
 order by 1


;
EXEC :TABLE_NAME := 'MOOOREXM';
SELECT *
FROM(
select ROW_NUMBER() OVER(PARTITION BY INDEX_NAME ORDER BY INDEX_NAME DESC)     SEQ,A.*
 from ALL_IND_COLUMNS a
 where table_name = :TABLE_NAME
 order by 1
)
WHERE SEQ = 1
ORDER BY INDEX_NAME
</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>처방성물류집계(일반관리, 재료집계)</QUERY_NAME>
    <QUERY_TEXT>            INSERT INTO /*+ PKG_RCA_OM.PC_RCA_OM_RCADOOLD_RADIATION */
                        RCADOOLD( ORD_ID            /* 오더ID */
                                , PT_NO            /* 환자번호 */
                                , ORD_DT         /* 오더일자 */
                                , ORD_SEQ          /* 오더순번 */
                                , USE_DEPT_CD          /* 사용부서코드 */
                                , ASET_TP_CD        /* 자산구분 */
                                , ARCL_NO           /* 물품코드 */
                                , STD_QTY         /* 표준수량(타) */
                                , USE_QTY          /* 사용량 */
                                , USE_NOTM         /* 사용횟수 */
                                , OWH_MGMT_NO          /* 불출번호 */
                                , RTN_NOTM         /* 반납횟수 */
                                , RTN_QTY         /* 반납수량 */
                                , OCS_WK_GRP_CD         /* 작업그룹 */
                                , STK_MGMT_PSTN_CD          /* 재고관리위치(1:물류팀,2:사용부서) */
                                , ARCL_BUY_CLS_CD          /* 구입유형(1:직불,2:위탁재고,3:선납) */
                                , SPLY_CLS_CD        /* 공급유형(1:처방성,2:비처방성) */
                                , BZAQ_CD        /* 거래처코드 */
                                , CSCR_TP_CD        /* CASECART 청구 */
                                , WK_END_EN         /* 처리구분 */
                                , HSP_TP_CD
                                , FSR_STF_NO
                                , FSR_DTM
                                , FSR_PRGM_NM
                                , FSR_IP_ADDR
                                , LSH_STF_NO
                                , LSH_DTM
                                , LSH_PRGM_NM
                                , LSH_IP_ADDR )
                           SELECT MAX(ORD_ID)
                                , PT_NO
                                , ORD_DT
                                , ORD_SEQ
                                , DEPT_CD
                                , '1'
                                , ARCL_NO
                                , 0
                                , SUM(USE_QTY)
                                , 1
                                , NULL
                                , 0
                                , 0
                                , '2'
                                , STK_MGMT_PSTN_CD
                                , ARCL_BUY_CLS_CD
                                , ORD_SRNM_TP_CD
                                , BZAQ_CD
                                , 'N'
                                , 'N'
                                , IN_HSP_TP_CD
                                , IN_LSH_STF_NO
                                , SYSDATE
                                , IN_LSH_PRGM_NM
                                , IN_LSH_IP_ADDR
                                , IN_LSH_STF_NO
                                , SYSDATE
                                , IN_LSH_PRGM_NM
                                , IN_LSH_IP_ADDR
                             FROM XSUP.MSERUSEV
                            WHERE ORD_DT BETWEEN TO_DATE(SUBSTR(IN_ORDDTE,1,7),'YYYY-MM')
                                             AND LAST_DAY(TO_DATE(IN_ORDDTE,'YYYY-MM-DD')) + 0.99999      
                              --AND ORD_DT &lt; TRUNC(SYSDATE)
                              AND ORD_DT &lt;= TO_DATE((IN_ORDDTE), 'YYYY-MM-DD') + 0.99999
                              AND HSP_TP_CD = IN_HSP_TP_CD 
                              AND NVL(LGST_SND_YN, 'N') = 'N'
                            GROUP BY PT_NO
                                   , ORD_DT
                                   , ORD_SEQ
                                   , DEPT_CD
                                   , ARCL_NO
                                   , STK_MGMT_PSTN_CD
                                   , ARCL_BUY_CLS_CD
                                   , ORD_SRNM_TP_CD
                                   , BZAQ_CD ;
            EXCEPTION
                WHEN OTHERS THEN
                    IO_ERRYN  := 'Y';
                    IO_ERRMSG := '방사선 재료 사용량 및 그룹수가를 싱글수가로 변환 발췌 처리시 에러' || CHR(13) ||
                                 'PACKAGE : PKG_RCA_OM' || CHR(13) ||
                                 'PROCEDURE : PC_RCA_OM_RCADOOLD_RADIATION(0)' || CHR(13) ||
                                 'ACTION : RCADOOLD INSERT' || CHR(13) ||
                                 'SQLERRORMSG : ' || SQLERRM ;
                    RETURN ;
        END ;
 


--업데이트
-- IN_ORDDTE -&gt; SYSDATE 이고 해당 월 1일부터 월말까지 재료의 RTM_FMT_DTM이 오늘 이전인 경우에만 집계함. 
BEGIN
            UPDATE /*+ PKG_RCA_OM.PC_RCA_OM_RCADOOLD_RADIATION */
                   HSUP.MSERMAMD
               SET PREQ_YN  = 'Y' 
--                 , LSH_DTM      = SYSDATE         --최종변경일시           DH.KIM2 추가 2019.03.22  -- 03.26 다시 없애달라고 해서 변경함.
--                 , LSH_STF_NO   = IN_LSH_STF_NO   --최종변경직원번호
--                 , LSH_PRGM_NM  = IN_LSH_PRGM_NM  --최종변경프로그램명
--                 , LSH_IP_ADDR  = IN_LSH_IP_ADDR  --최종변경IP주소
             WHERE ( ORD_ID, HSP_TP_CD, ARCL_NO, OAN_TP_CD ) IN (SELECT A.ORD_ID 
                                                                         , A.HSP_TP_CD
                                                                         , A.ARCL_NO              
                                                                         , 'N'                                                      
                                                                      FROM XSUP.MSERUSEV A
                                                                     WHERE A.ORD_DT BETWEEN TO_DATE(SUBSTR(IN_ORDDTE,1,7),'YYYY-MM')
                                                                                        AND LAST_DAY(TO_DATE(IN_ORDDTE,'YYYY-MM-DD')) + 0.99999
                                           AND ORD_DT &lt;= TO_DATE((IN_ORDDTE), 'YYYY-MM-DD') + 0.99999
                                                                       AND A.HSP_TP_CD = IN_HSP_TP_CD
                                                                       AND NVL(LGST_SND_YN, 'N') = 'N'
                                                                       AND A.GRP_MIF_CD IS NULL  )
              AND HSP_TP_CD = IN_HSP_TP_CD;  --2017.04.11 이대병원 개발 병원구분 추가 양찬우

              --2015.10.16 그룹수가관련 집계추가 290, 590 계정만 GRP_MIF_CD값이 포함되어 있음.

            EXCEPTION
                WHEN OTHERS THEN
                    IO_ERRYN  := 'Y';
                    IO_ERRMSG := '진료재료소모정보에 발췌 처리 FLAG 수정시 에러' || CHR(13) ||
                                 'PACKAGE : PKG_RCA_OM' || CHR(13) ||
                                 'PROCEDURE : PC_RCA_OM_RCADOOLD_RADIATION(1)' || CHR(13) ||
                                 'ACTION : MSERMAMD UPDATE' || CHR(13) ||
                                 'SQLERRORMSG : ' || SQLERRM ;
                    RETURN ;
        END ;</QUERY_TEXT>
    <GROUP>재료</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활메인코디</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.RS.SelectPatientOrdList"&gt;&lt;!--
    Clss :  text
    Desc : 재활메인 - 환자처방 리스트 조회
    Author : 이시온 
    Create date : 2019-06-24
    Update date : 2019-06-26 LCD 쿼리수정
       : 2020-12-30 김슬기 소요시간 추가
--&gt;
EXEC :PT_NO := '00000000';
EXEC :HIS_HSP_TP_CD := '01';
EXEC :RHTR_LCLS_CD := '';

  SELECT /* HIS.MS.TR.RE.RS.SelectPatientOrdList */
         C.PT_NO
       , TO_CHAR(A.ORD_DT,'YYYY-MM-DD') ORD_DT
       , D.RHTR_ORD_CD
       , D.RHTR_ORD_NM
       , D.RHTR_MIF_CD
       , D.MIF_NM
       , MIN(TO_CHAR(A.RSV_DT,'YYYY-MM-DD')) || ' ~ ' || MAX(TO_CHAR(A.RSV_DT,'YYYY-MM-DD')) FROM_TO
  -- , LISTAGG('예약일 : ' || TO_CHAR(A.RSV_DT,'YYYY-MM-DD'),'  ' || CHR(10))  WITHIN GROUP (ORDER BY A.RSV_DT)  FROM_TO2
   , TYRM_CD
   , TYRM_NM
   , MAX(TO_CHAR(A.RSV_DT,'YYYY-MM-DD'))              MAX_ORD_DT
   --, MAX(A.ORD_PBL_PTM_CNTE)    ORD_PBL_PTM_CNTE
   , MAX((SELECT XSUP.FT_MST_MSTRHODD_MEMO(A.PT_NO, A.ORD_DT, A.RHRM_CD, A.RHTR_ORD_CD, A.HSP_TP_CD)
            FROM DUAL))                               ORD_PBL_PTM_CNTE
   , MAX((SELECT DECODE(MAX(E.ORD_PBL_PTM_CNTE), '', 'N', 'Y')
                  FROM MSTRHODD E
                 WHERE E.PT_NO = A.PT_NO
                   AND E.ORD_DT = A.ORD_DT
                   AND E.RHRM_CD = A.RHRM_CD
                   AND E.RHTR_ORD_CD = A.RHTR_ORD_CD
                   AND E.ODDSC_TP_CD = 'C'
                   AND E.HSP_TP_CD = A.HSP_TP_CD))          ORD_PBL_PTM_CNTE_YN
   , DECODE(MAX(TRP_RSV_DTM), NULL, 'N', MIN(DECODE(TRP_RSV_DTM, NULL ,'I','Y'))) RSV_FLAG
   , TO_CHAR(MAX(TRP_RSV_DTM),'YYYY-MM-DD HH24:MI') RSV_DTM
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'2','Y','N')) ORD_MON
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'3','Y','N')) ORD_TUE
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'4','Y','N')) ORD_WED
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'5','Y','N')) ORD_THU
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'6','Y','N')) ORD_FRI
   , MAX(DECODE(to_char(a.rsv_dt,'d'),'7','Y','N')) ORD_SAT
   , A.ORD_PBR_STF_NO
   , A.RHTR_ORD_SEQ
   , NVL(F.RSV_SLOT_CNT,1) RSV_SLOT_CNT
   , NVL(F.REQR_TM,1) REQR_TM
   , ( CASE WHEN MIN(DECODE(TRP_RSV_DTM, NULL ,'I','Y')) = 'Y' THEN '예약일 : ' || TO_CHAR(MAX(TRP_RSV_DTM),'YYYY-MM-DD HH24:MI') ||'  '
            ELSE ''
       END || '진료의 : ' || A.ORD_PBR_STF_NO || '   보험 : ' || XMED.FT_MOO_GET_COMN_CD_NAME('DR00033',A.MED_MIFI_TP_CD,'Y')
     ) TOOLTIP 
   FROM MSTRHODD A
      , MSTRHSRD B
      , PCTPCPAM_DAMO C 
      , MSTRHCDC D
      , MSTRHTCD F
  WHERE A.PT_NO = C.PT_NO
    AND A.RSV_DT &gt;= TRUNC(SYSDATE)
    AND A.HSP_TP_CD = B.HSP_TP_CD
    AND A.RHTR_ORD_CD = D.RHTR_ORD_CD
    AND A.HSP_TP_CD = D.HSP_TP_CD
    AND A.ODDSC_TP_CD ='C'
    AND B.TYRM_CD = D.APCB_TYRM_CD
    AND C.PT_NO = :PT_NO
    --AND A.ORD_DT = TO_DATE( :ORD_DT,'YYYY-MM-DD')
    AND A.HSP_TP_CD = :HIS_HSP_TP_CD
    AND D.RHTR_LCLS_CD LIKE :RHTR_LCLS_CD || '%'
    AND A.RHTR_ORD_CD = F.RHTR_ORD_CD(+)
    AND A.RHRM_CD = F.RHRM_CD(+)
    AND A.HSP_TP_CD = F.HSP_TP_CD(+)
  GROUP BY  C.PT_NO
         , A.ORD_DT
       , D.RHTR_ORD_CD
       , D.RHTR_ORD_NM
       , D.RHTR_MIF_CD
       , D.MIF_NM
   , B.TYRM_CD
   , B.TYRM_NM
   , A.ORD_PBR_STF_NO
   , A.RHTR_ORD_SEQ
   , F.RSV_SLOT_CNT
   , F.REQR_TM   
   , A.MED_MIFI_TP_CD
  
 
&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>특정 PACT_ID에 대한 환자만 부분 합본</QUERY_NAME>
    <QUERY_TEXT>EXEC :PACT_ID := '1002130781';
EXEC :OLD_PT_NO := '22630491';
EXEC :NEW_PT_NO := '21370148';
EXEC :HSP_TP_CD := '01';
--select *
--  from msermddd a
--판독결과
update msermddd a
set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
    and pt_no = :OLD_PT_NO
  and exists(
select 1
    from mooorexm x
        ,msermaad y
    where 1=1
      and x.fst_pact_Id = :PACT_ID
      and x.ord_Id = y.ord_Id
      and x.hsp_TP_CD = y.hsp_TP_CD
      and y.hsp_TP_cd = a.hsp_TP_CD
      and y.iptn_no = a.iptn_no
      )
;
--혈관조영실
update msermrod
    set pt_no = :NEW_PT_NO
    where pact_Id = :PACT_ID
      and hsp_TP_CD = :HSP_TP_CD
      anD PT_NO = :OLD_PT_NO
;
--접수
update msermaad a
    set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
    and pt_no = :OLD_PT_NO
  and exists(
        select 1
            from mooorexm
            where 1=1
              and fst_pact_Id = :PACT_ID
              and ord_Id = a.ord_Id
              and hsp_TP_CD = a.hsp_TP_CD
      )
;
--예약
update msermrrd a
    set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
    and pt_no = :OLD_PT_NO
  and exists(
select 1
    from mooorexm
    where 1=1
      and fst_pact_Id = :PACT_ID
      and ord_Id = a.ord_Id
      and hsp_TP_CD = a.hsp_TP_CD
      )
;
--검사의뢰서
update MSERMMCD a
    set pt_no = :NEW_PT_NO
    where hsp_TP_cd = :HSP_TP_CD
     and pt_no = :OLD_PT_NO
     and exists(
           select 1
             from mooorexm
            where 1=1
              and fst_pact_Id = :PACT_ID
              AND EXM_RFFM_IPTN_NO = a.ippr_id
              and ord_Cd = a.ord_Cd
              and ord_dt = a.ord_dt
              and hsp_TP_CD = a.hsp_TP_CD
            )
;</QUERY_TEXT>
    <GROUP>Script</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>병원구분 뻥튀기</QUERY_NAME>
    <QUERY_TEXT>  SELECT LPAD(B.LV,'2','0'),A.TH1_CTG_CD, A.TH2_CTG_CD
       , A.*
    FROM MSELMSCC A -- 진단검사공통코드
       , (SELECT LEVEL+1 LV FROM DUAL CONNECT BY LEVEL&lt;3) B
   WHERE 1=1
--     AND A.HSP_TP_CD = '01'
     and th1_ctg_Cd ='CP'
     and th2_ctg_cd ='I01'
--     AND A.LCLS_COMN_CD IN ('INFECT_BACTERIAL', 'INFECT_VIRUS', 'INFECT_SYMPTOM')
   ORDER BY A.HSP_TP_CD, A.TH2_CTG_CD, A.TH1_CTG_CD, A.LCLS_COMN_CD, A.LCLS_COMN_CD
   ;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>4급 법정감염병 조회</QUERY_NAME>
    <QUERY_TEXT>
EXEC :HIS_HSP_TP_CD := '01';
EXEC :LCLS_COMN_CD := 'LCDS_MCLS_01';
EXEC :IN_PT_NO := '';
EXEC :IN_FROM_DT := '2022-06-01';
EXEC :IN_TO_DT := '2022-06-30';
SELECT /*HIS.MC.IF.IF.CM.SelectLegalDiseaseList*/
       A.PT_NO             PT_NO
  , E.PT_NM                PT_NM
  , E.SEX_TP_CD                  SEX_TP_CD
  , XBIL.FT_PCT_AGE('AGE',SYSDATE,E.PT_BRDY_DT)   AGE
  , TO_CHAR(E.PT_BRDY_DT,'YYYY-MM-DD')    PT_BRDY_DT
  , A.PACT_TP_CD
  , A.PT_HME_DEPT_CD
  , A.WD_DEPT_CD
  , A.PRM_NO
  , A.PBSO_DEPT_CD
  , A.TH1_SPCM_CD
     , C.SPCM_NO
     , TO_CHAR(A.ACPT_DTM,'YYYY-MM-DD')   ACPT_DT
     , C.MVM_CD            EXM_CD
     , (SELECT MVRT_CNTE FROM MSELMSYC WHERE HSP_TP_CD = A.HSP_TP_CD AND MVM_CD = C.MVM_CD)  RSLT_CNTE
     , F.SCLS_COMN_CD_NM
     , F.SCLS_COMN_CD
     , F.MCLS_COMN_CD
     , F.LCLS_COMN_CD
 FROM MOOOREXM A
  ,MSELMCRD C
  ,MSELMCED D
  ,PCTPCPAM_DAMO E
  ,(SELECT Y.SCLS_COMN_CD    AS MVM_CD
          ,Y.TH2_RMK_CNTE    AS SCLS_COMN_CD_NM
                ,X.SCLS_COMN_CD    AS SCLS_COMN_CD
                ,X.TH1_RMK_CNTE    AS MCLS_COMN_CD
                ,X.TH3_RMK_CNTE    AS LCLS_COMN_CD
   FROM MSELMSID X --소분류
      , MSELMSID Y --소분류 상세
     WHERE X.HSP_TP_CD = '01'
       AND X.HSP_TP_CD = Y.HSP_TP_CD
       AND X.LCLS_COMN_CD = 'LCDS_SCLS'
       AND Y.LCLS_COMN_CD = 'LCDS_SCLS_DTL'
    AND X.USE_YN = 'Y'
    AND X.SCLS_COMN_CD = :LCLS_COMN_CD --소분류
    AND X.SCLS_COMN_CD = Y.TH1_RMK_CNTE
    AND Y.CRE_SEQ  &lt;&gt; 0
    AND Y.SCLS_COMN_CD_NM = 'M'
            UNION ALL
            SELECT Y.SCLS_COMN_CD  AS MVM_CD
                  ,Y.TH2_RMK_CNTE    AS SCLS_COMN_CD_NM
                  ,X.SCLS_COMN_CD    AS SCLS_COMN_CD
                  ,X.TH1_RMK_CNTE    AS MCLS_COMN_CD
                  ,X.TH3_RMK_CNTE    AS LCLS_COMN_CD
   FROM MSELMSID X --소분류
      , MSELMSID Y --소분류 상세
     WHERE X.HSP_TP_CD = '01'
       AND X.HSP_TP_CD = Y.HSP_TP_CD
       AND X.LCLS_COMN_CD = 'LCDS_SCLS'
       AND Y.LCLS_COMN_CD = 'LCDS_SCLS_DTL'
    AND X.USE_YN = 'Y'
    AND X.TH1_RMK_CNTE = :LCLS_COMN_CD --중분류 전체
    AND X.SCLS_COMN_CD = Y.TH1_RMK_CNTE
    AND Y.CRE_SEQ  &lt;&gt; 0
    AND Y.SCLS_COMN_CD_NM = 'M'
  ) F
 WHERE 1=1
   AND A.HSP_TP_CD = :HIS_HSP_TP_CD
   AND A.HSP_TP_CD = C.HSP_TP_CD
   AND A.HSP_TP_CD = D.HSP_TP_CD
   AND A.PT_NO = E.PT_NO
   AND A.PT_NO LIKE :IN_PT_NO || '%'
   AND A.ORD_CD = C.EXM_CD
   AND A.SPCM_PTHL_NO = C.SPCM_NO
   AND A.SPCM_PTHL_NO = D.SPCM_NO
   AND C.MVM_CD = F.MVM_CD
   AND A.ACPT_DTM BETWEEN TO_DATE(:IN_FROM_DT,'YYYY-MM-DD') AND TO_DATE(:IN_TO_DT,'YYYY-MM-DD') + 0.99999
UNION ALL
SELECT /*+ leading(d f a) */
    A.PT_NO
  , E.PT_NM
  , E.SEX_TP_CD
  , XBIL.FT_PCT_AGE('AGE',SYSDATE,E.PT_BRDY_DT)   AGE
  , TO_CHAR(E.PT_BRDY_DT,'YYYY-MM-DD')  PT_BRDY_DT
  , A.PACT_TP_CD
  , A.PT_HME_DEPT_CD
  , A.WD_DEPT_CD
  , A.PRM_NO
  , A.PBSO_DEPT_CD
  , A.TH1_SPCM_CD
     , F.SPCM_NO
     , TO_CHAR(A.ACPT_DTM,'YYYY-MM-DD')    ACPT_DT
     , F.EXM_CD       EXM_CD
     , DECODE(UPPER(SUBSTR(F.SMP_EXRS_CNTE,1,8)),'POSITIVE',F.SMP_EXRS_CNTE)   RSLT_CNTE
     , D.SCLS_COMN_CD_NM
     , D.SCLS_COMN_CD
     , D.MCLS_COMN_CD
     , D.LCLS_COMN_CD
  FROM MOOOREXM A
   ,PCTPCPAM_DAMO E
    ,MSELMAID F
   ,(  SELECT Y.SCLS_COMN_CD    AS ORD_CD
          ,Y.TH2_RMK_CNTE    AS SCLS_COMN_CD_NM
                ,X.SCLS_COMN_CD    AS SCLS_COMN_CD
                ,X.TH1_RMK_CNTE    AS MCLS_COMN_CD
                ,X.TH3_RMK_CNTE    AS LCLS_COMN_CD
   FROM MSELMSID X --소분류
      , MSELMSID Y --소분류 상세
     WHERE X.HSP_TP_CD = '01'
       AND X.HSP_TP_CD = Y.HSP_TP_CD
       AND X.LCLS_COMN_CD = 'LCDS_SCLS'
       AND Y.LCLS_COMN_CD = 'LCDS_SCLS_DTL'
    AND X.USE_YN = 'Y'
    AND X.SCLS_COMN_CD = :LCLS_COMN_CD --소분류
    AND X.SCLS_COMN_CD = Y.TH1_RMK_CNTE
    AND Y.CRE_SEQ  &lt;&gt; 0
    AND Y.SCLS_COMN_CD_NM = 'E'
         UNION ALL
          SELECT Y.SCLS_COMN_CD    AS ORD_CD
          ,Y.TH2_RMK_CNTE    AS SCLS_COMN_CD_NM
                ,X.SCLS_COMN_CD    AS SCLS_COMN_CD
                ,X.TH1_RMK_CNTE    AS MCLS_COMN_CD
                ,X.TH3_RMK_CNTE    AS LCLS_COMN_CD
   FROM MSELMSID X --소분류
      , MSELMSID Y --소분류 상세
     WHERE X.HSP_TP_CD = '01'
       AND X.HSP_TP_CD = Y.HSP_TP_CD
       AND X.LCLS_COMN_CD = 'LCDS_SCLS'
       AND Y.LCLS_COMN_CD = 'LCDS_SCLS_DTL'
    AND X.USE_YN = 'Y'
    AND X.TH1_RMK_CNTE = :LCLS_COMN_CD --중분류 전체
    AND X.SCLS_COMN_CD = Y.TH1_RMK_CNTE
    AND Y.CRE_SEQ  &lt;&gt; 0
    AND Y.SCLS_COMN_CD_NM = 'E'
    ) D
  WHERE 1=1
 AND A.HSP_TP_CD = :HIS_HSP_TP_CD
 AND A.HSP_TP_CD = F.HSP_TP_CD
 AND F.EXRS_VRFC_STS_CD IN('M','C')
 AND A.PT_NO = E.PT_NO
 AND A.PT_NO = F.PT_NO
 AND A.PT_NO LIKE :IN_PT_NO || '%'
 AND A.SPCM_PTHL_NO = F.SPCM_NO
 AND A.ORD_ID = F.ORD_ID
 AND F.EXM_CD = D.ORD_CD
 AND UPPER(SUBSTR(F.SMP_EXRS_CNTE,1,8)) = 'POSITIVE'
 AND F.ACPT_DTM BETWEEN TO_DATE(:IN_FROM_DT,'YYYY-MM-DD') AND TO_DATE(:IN_TO_DT,'YYYY-MM-DD') + 0.99999
 ORDER BY ACPT_DT
    ,PT_NO
;


</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EAM 권한부여</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_ROLE_CD := 'R0035';

select *
from HEAM.EMUSRBUT
where rownum =1
;
INSERT INTO HEAM.EMUSRBUT
 SELECT '03' HSP_TP_CD
      , STF_NO WK_ID
      , (SELECT BUSINESS_TYP
           FROM EMBUROLT
           WHERE ROLE_CD = :IN_ROLE_CD
             AND HSP_TP_CD = '03'
        ) BUSINESS_TYP
      , :IN_ROLE_CD
      , '' START_DT
      , '' END_DT
      , '' EDIT_ID
      , '' EDIT_DT
      , '' ROLE_AUTH_DOC_NM
      , '' ROLE_AUTH_RSN_CNTE
  FROM CNLRRUSD B
 WHERE RTRM_DT IS NULL -- 재직자 중
   AND HSP_TP_CD = '03'
 and ((aadp_cd = 'RH') OR (AOA_WKDP_CD = 'RH'))
--   AND USE_GRP_CD = 'DO' -- 의사가 아닌
   and not exists(select 1 from heam.emusrbut where wk_id = b.stf_no and role_Cd = :IN_ROLE_CD)
--   and stf_no in( 'PH00349', 'PH00235','PH00343')
-- and ((aadp_cd = 'DR') OR (AOA_WKDP_CD = 'DR'))
-- and stf_no &lt;&gt; 'ND00505'
;
select *
  FROM CNLRRUSD B
 WHERE RTRM_DT IS NULL -- 재직자 중
   AND HSP_TP_CD = '03'
--   AND AADP_CD = 'IME' -- 내분비 전체직원 권한부여
--   AND USE_GRP_CD = 'PH' -- 의사가 아닌
--   and stf_no in( 'PH00349', 'PH00235','PH00343')
-- and ((aadp_cd = 'DR') OR (AOA_WKDP_CD = 'DR'))
and stf_no = 'MT00591'
 ;
select *
 from CNLRRUSD
 where hsp_tp_Cd ='01'
 and rtrm_dt is null
 and aadp_cd = 'DR'
;
select *
 from pdedbmsm
 where hsp_tp_cd = '03'
 and dept_nm like '재활%'
;
select *
 from HEAM.EMUSRBUT
 where hsp_tp_cd ='01'
 and wk_id in (select stf_no from cnlrrusd where hsp_tp_cd = '01' and aadp_cd ='ICS' and rtrm_dt is null)
  and role_cd = 'R0005'
;
SELECT '01' HSP_TP_CD
      , STF_NO WK_ID
      , (SELECT BUSINESS_TYP
           FROM EMBUROLT
           WHERE ROLE_CD = :IN_ROLE_CD
             AND HSP_TP_CD = '01'
        ) BUSINESS_TYP
      , :IN_ROLE_CD
      , '' START_DT
      , '' END_DT
      , '' EDIT_ID
      , ''EDIT_DT
      ,KOR_SRNM_NM
  FROM CNLRRUSD B
 WHERE RTRM_DT IS NULL -- 재직자 중
   AND HSP_TP_CD = '01'
   AND AADP_CD = 'DR' -- 내분비 전체직원 권한부여
   AND USE_GRP_CD = 'DO' -- 의사가 아닌
--   and not exists(select 1 from heam.emusrbut where wk_id = b.stf_no and role_Cd = :IN_ROLE_CD)
;
SELECT '02' HSP_TP_CD
      , STF_NO WK_ID
      , (SELECT BUSINESS_TYP
           FROM EMBUROLT
           WHERE ROLE_CD = :IN_ROLE_CD
             AND HSP_TP_CD = '02'
        ) BUSINESS_TYP
      , :IN_ROLE_CD
      , '' START_DT
      , '' END_DT
      , '' EDIT_ID
      , ''EDIT_DT

  FROM CNLRRUSD B
 WHERE RTRM_DT IS NULL -- 재직자 중
   AND HSP_TP_CD = '02'
 and ((aadp_cd = 'NM') OR (AOA_WKDP_CD = 'NM'))
--   AND USE_GRP_CD = 'DO' -- 의사가 아닌
   and not exists(select 1 from heam.emusrbut where wk_id = b.stf_no and role_Cd = :IN_ROLE_CD)
;
;
select *
 from cnlrrusd
 where hsp_tp_cd='02'
 and stf_no ='MT00544'
;
INSERT INTO HEAM.EMUSRBUT
 SELECT HSP_TP_CD
      , STF_NO WK_ID
      , 'RE' BUSINESS_TYP
      , 'R0035'
      , '' START_DT
      , '' END_DT
      , '' EDIT_ID
      , ''EDIT_DT
      , ''
      , ''

FROM HCOM.CNLRRUSD
WHERE 1 =1
AND (AADP_CD IN ( 'RH', 'RHT') OR AOA_WKDP_CD IN ( 'RH', 'RHT'))
AND NVL(RTRM_DT, SYSDATE+1) &gt;= SYSDATE
AND NVL(RTRM_DT, SYSDATE+1) &gt;= SYSDATE
AND HSP_TP_CD = '03'
</QUERY_TEXT>
    <GROUP>EAM</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>SPLIT</QUERY_NAME>
    <QUERY_TEXT>-- ','로 구분되어 있는 문자열 하나를 ','구분자로 잘라서 Row로 변환 (중복제거)

with EXMV as(
select 'NBVF12F, NBVF12F, NBVF12F, NBVF13F, NBVF08F, NBVF08F, NBVF08F, NBVF09F, NBVF09F, NBVF09F, NBVF10F, NBVF10F, NBVF10F, NBVF11F, NBVF11F, NBVF11F, NBVF07F, NBVF07F, NBVF07F, NBVF06F, NBVF06F, NBVF06F, NBVF05F, NBVF05F, NBVF05F, NBVF14F, NBVF15F, NBVF15F, NBVF15F, NBVF16F, NBVF16F, NBVF17F, NBVF18F, NBVF18F, NBVF19F, NBVF19F, NBVF20F, NBVF20F, NBVF04F, NBVF04F, NBVF04F, NBVF02F, NBVF02F, NBVF03F, NBVF03F, NBVF03F, NBVF31F' as txt
from dual
)
select distinct trim(regexp_substr(a.txt,'[^,]+',1,LEVEL)) exm
 from EXMV a
 CONNECT BY INSTR(a.txt,',',1,LEVEL-1)&gt;0
;


형광펜으로 표시한 부분에 문자열 데이터 하나 넣으면 됨.</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EAM 관련 쿼리</QUERY_NAME>
    <QUERY_TEXT>/*
EMADUSRT TABLE [EAM] ADMIN 사용자 등록

EMBUSNST TABLE [EAM] 업무정의 -&gt; 최상단 메뉴 등록으로 예상
EMUSRBUT TABLE [EAM] 부서별 업무권한 정의   -&gt; 로그인시 화면 최상단 메뉴권한 등록( 사용자별 )
EMBUROLT TABLE [EAM] 롤 정의  -&gt; 업무별 롤 권한등록(상위)
EMBUPERT TABLE [EAM] 업무별 롤별 메뉴및 권한설정   -&gt; 업무별 롤 권한등록(세부적으로 메뉴 등록)

EMBUMENT TABLE [EAM] 메인별메뉴정보   -&gt; 팝업창도 여기에 등록
*/
/*
예시 데이터
wk_id in ( 'SSSUP01' )
business_typ in ( 'CU')
role_cd in ( 'R3001')
*/
--R3001
--CU_GHC_RSVMNG_ReadPtBigo
--300001
select *
 from EMBUPERT
 where 1=1
 and role_cd = 'R0003'
-- and menu_cd like upper('%NR_PPUP%')
 ;
select *
 from EMBUROLT
 where 1=1
 and role_cd = 'R0003'
 ;

select *
  from EMBUMENT
 where 1=1
--   and wk_id in ( 'SSSUP01' )
  and business_typ in ( 'NR')
 and menu_cd like upper('%PPUP%')
--   and role_cd in ( 'R3001')
 order by 1,2,3,4

;
</QUERY_TEXT>
    <GROUP>EAM</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>예방적항생제SC</QUERY_NAME>
    <QUERY_TEXT>--PK변경

ALTER TABLE XSUP.BSIFFPAD DROP PRIMARY KEY;
DROP INDEX XSUP.BSIFFPAD_PK;
ALTER TABLE XSUP.BSIFFPAD ADD CONSTRAINT BSIFFPAD_PK PRIMARY KEY(HSP_TP_CD, ORD_OP_EXPT_REG_ID,WRT_SEQ,LST_YN);
drop table BSIFFPAD;
--테이블 생성
create table BSIFFPAD
(
HSP_TP_CD  VARCHAR2(2) --병원구분코드
,ORD_OP_EXPT_REG_ID VARCHAR2(50)
,ORD_OP_TP_CD VARCHAR2(50) --0 : ORD ,1 : 수술
,ORD_DT DATE
,PT_NO  VARCHAR2(20)
,PT_NM  VARCHAR2(20)
,AGE  VARCHAR2(20)
,SEX_TP_CD  VARCHAR2(20)
,PT_HME_DEPT_CD VARCHAR2(1)
,OP_KND_CD VARCHAR2(100) --저장테이블명
,PFDR_STF_NO  VARCHAR2(1)
,OP_DT  DATE --중복발행여부
,ADS_DT DATE
,DS_DT DATE
,AOM_DTM DATE
,OP_STR_DTM DATE
,OP_END_DTM DATE
,SUTR_END_DTM DATE
,TH1_WHL_AREA_EXCN_YN VARCHAR2(4000)
,TH2_WHL_AREA_EXCN_YN VARCHAR2(4000)
,TH3_WHL_AREA_EXCN_YN VARCHAR2(4000)
,TH4_WHL_AREA_EXCN_YN VARCHAR2(4000)
,TH4_WHL_AREA_EXCN_CD VARCHAR2(4000)
,TH5_WHL_AREA_EXCN_YN VARCHAR2(4000)
,TH6_WHL_AREA_EXCN_YN VARCHAR2(4000)
,TH7_WHL_AREA_EXCN_YN VARCHAR2(4000)
,TH8_WHL_AREA_EXCN_YN VARCHAR2(4000)
,ATBA_ALRG_YN VARCHAR2(4000)
,TH1_AMD_PRD_EXCN_YN VARCHAR2(4000)
,TH2_AMD_PRD_EXCN_YN VARCHAR2(4000)
,TH3_AMD_PRD_EXCN_YN VARCHAR2(4000)
,TH3_AMD_PRD_EXCN_CD VARCHAR2(4000)
,TH4_AMD_PRD_EXCN_YN VARCHAR2(4000)
,TH5_AMD_PRD_EXCN_YN VARCHAR2(4000)
,TH6_AMD_PRD_EXCN_YN VARCHAR2(4000)
,ATBA_USE_YN VARCHAR2(4000)
,SGST_ATBA_USE_YN VARCHAR2(4000)
,HR24_WTHN_USE_END_YN VARCHAR2(4000)
,TOT_AMD_PRD VARCHAR2(4000)
,LST_YN VARCHAR2(4000)
,USE_YN VARCHAR2(4000)
,WRT_SEQ NUMBER
,FSR_DTM  DATE
,FSR_STF_NO  VARCHAR2(7)
,FSR_PRGM_NM  VARCHAR2(500)
,FSR_IP_ADDR  VARCHAR2(50)
,LSH_DTM  DATE --최종변경일시
,LSH_STF_NO  VARCHAR2(7) --최종변경직원번호
,LSH_PRGM_NM  VARCHAR2(500) --최종변경프로그램명
,LSH_IP_ADDR  VARCHAR2(50) --최종변경IP주소

);;
select end_dt,a.*
    from msermmmc a
    where hsp_TP_CD='03'
    and exm_Cd ='RB00014'
;
--테이블 커멘트
COMMENT ON TABLE XSUP.BSIFFPAD.ORD_OP_TP_CD IS '0: 처방 , 1: 수술';
--테이블 컬럼 커멘트
COMMENT ON COLUMN XSUP.BSIFFPAD.ORD_OP_TP_CD IS '0: 처방 , 1: 수술';
COMMENT ON COLUMN MSERMPLD.PBSO_DEPT_CD IS '발행부서';
COMMENT ON COLUMN MSERMPLD.PACT_TP_CD IS 'I:입원,O:외래,E:응급';

EXEC :IN_HSP_TP_CD := '01';
EXEC :IN_FR_DT := '2022-06-01';
EXEC :IN_ED_DT := '2022-06-30';

-- 작성자 - 홍승표
-- 작성일 - 2022-01-28
-- 설  명 - 수술의 예방적 항생제(SC포함)
--            SC로 시작하는 시술코드를 작성한 시술기록지의 환자 조회
SELECT
        A.HSP_TP_CD
      , A.PT_NO
      , A.AGE
      , A.PT_NM
      , ''
      , ''
      , A.ORD_DT
      , ''
      , ''
      , A.ORD_OP_EXPT_REG_ID
   ,''
   ,   ''
   FROM BSIFFPAD A
UNION ALL
SELECT
      A.HSP_TP_CD
      , A.PT_NO
      , XBIL.FT_PCT_AGE('AGEMONTH',SYSDATE,B.PT_BRDY_DT) AGE
      , B.PT_NM
      , A.ORD_CD
      , A.ORD_NM
      , A.ORD_DT
      , A.ODDSC_TP_CD
      , TO_CHAR(A.EXM_RTN_REQ_DTM,'yyyy-mm-dd')
      , A.ORD_ID
,(SELECT XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1335')
    FROM MRDDRECM AA
   WHERE 1=1
     AND A.HSP_TP_CD = AA.HSP_TP_CD
     AND A.PT_NO     = AA.PT_NO
     AND A.ORD_DT    = XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1335')
     AND AA.MDFM_ID  IN ('2005391', '2005391')  -- 서식ID : 2005390(Cath LAB Nurse Record) / 2005391(Cath LAB Nurse Record(2)) -- Cath LAB Nurse Record(2)만 사용하기로 함.
     AND AA.LST_YN    = 'Y'        -- 최종여부
        ) 시술일자
,     (SELECT XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1336')
    FROM MRDDRECM AA
   WHERE 1=1
     AND A.HSP_TP_CD = AA.HSP_TP_CD
     AND A.PT_NO     = AA.PT_NO
     AND A.ORD_DT    = XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1335')
     AND AA.MDFM_ID  IN ('2005391', '2005391')  -- 서식ID : 2005390(Cath LAB Nurse Record) / 2005391(Cath LAB Nurse Record(2)) -- Cath LAB Nurse Record(2)만 사용하기로 함.
     AND AA.LST_YN    = 'Y'        -- 최종여부
        ) 절개시간
   FROM MOOOREXM A
      , PCTPCPAM_DAMO B
      , MSELMSID C
  WHERE 1=1
    AND A.HSP_TP_CD          = :IN_HSP_TP_CD
    AND A.ORD_DT BETWEEN TRUNC(TO_DATE(:IN_FR_DT, 'YYYY-MM-DD'))
                     AND TRUNC(TO_DATE(:IN_ED_DT, 'YYYY-MM-DD')) + 0.99999
    AND C.LCLS_COMN_CD = 'OP_PVTN_ATBA_SC_CD'
    AND C.USE_YN       = 'Y'
    AND C.SCLS_COMN_CD = A.ORD_CD
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND A.PT_NO = B.PT_NO
    AND NOT EXISTS( SELECT 1
                     FROM BSIFFPAD
                    WHERE HSP_TP_CD  = A.HSP_TP_CD
                      AND ORD_OP_EXPT_REG_ID = A.ORD_ID
                      AND LST_YN = 'Y'
                      AND USE_YN = 'Y'
                      )
;

SELECT *
                          FROM MSELMSID
                         WHERE HSP_TP_CD    = '01'
                           AND LCLS_COMN_CD = 'OP_PVTN_ATBA_SC_CD'
                           AND USE_YN       = 'Y'
;
WITH DATALIST AS
(
    SELECT /*+ USE_NL(A B)*/
      A.HSP_TP_CD
      , A.PT_NO
      , B.PT_NM
      , A.ORD_CD
      , A.ORD_NM
      , A.ORD_DT
      , A.ODDSC_TP_CD
      , A.EXM_RTN_REQ_DTM
      , A.ORD_ID
   FROM MOOOREXM A
         , PCTPCPAM_DAMO B
  WHERE 1=1
    AND A.HSP_TP_CD          = :IN_HSP_TP_CD
       AND A.ORD_DT BETWEEN TRUNC(TO_DATE(:IN_FR_DT, 'YYYY-MM-DD'))
                        AND TRUNC(TO_DATE(:IN_ED_DT, 'YYYY-MM-DD')) + 0.99999
    AND EXISTS (SELECT 1
                          FROM MSELMSID
                         WHERE HSP_TP_CD    = A.HSP_TP_CD
                           AND LCLS_COMN_CD = 'OP_PVTN_ATBA_SC_CD'
                           AND USE_YN       = 'Y'
                           AND SCLS_COMN_CD = A.ORD_CD)

    AND A.PT_NO = B.PT_NO
)
SELECT
       A.HSP_TP_CD        병원구분
     , A.ORD_DT           처방일자
     , A.PT_NO            환자번호
     , A.PT_NM            환자이름
     , A.ORD_CD           처방코드
     , A.ORD_NM           처방명
  , A.ODDSC_TP_CD      처방상태
     , A.EXM_RTN_REQ_DTM  반납여부
     , A.ORD_ID
--     , (SELECT XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1335')
--    FROM MRDDRECM AA
--   WHERE 1=1
--     AND A.HSP_TP_CD = AA.HSP_TP_CD
--     AND A.PT_NO     = AA.PT_NO
--     AND A.ORD_DT    = XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1335')
--     AND AA.MDFM_ID  IN ('2005391', '2005391')  -- 서식ID : 2005390(Cath LAB Nurse Record) / 2005391(Cath LAB Nurse Record(2)) -- Cath LAB Nurse Record(2)만 사용하기로 함.
--     AND AA.LST_YN    = 'Y'        -- 최종여부
--        ) 시술일자
--     ,
--     (SELECT XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1336')
--    FROM MRDDRECM AA
--   WHERE 1=1
--     AND A.HSP_TP_CD = AA.HSP_TP_CD
--     AND A.PT_NO     = AA.PT_NO
--     AND A.ORD_DT    = XMED.FT_MRD_GET_ELMT_INFO('MDFM_ELMT_ID', AA.HSP_TP_CD, AA.MDRC_ID, '1335')
--     AND AA.MDFM_ID  IN ('2005391', '2005391')  -- 서식ID : 2005390(Cath LAB Nurse Record) / 2005391(Cath LAB Nurse Record(2)) -- Cath LAB Nurse Record(2)만 사용하기로 함.
--     AND AA.LST_YN    = 'Y'        -- 최종여부
--        ) 절개시간

  FROM DATALIST A
 WHERE 1=1
 ORDER BY A.ORD_DT, A.PT_NO
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>조영제마스터</QUERY_NAME>
    <QUERY_TEXT>select * from msermsmd
where hsp_TP_CD='03'
and exm_Cd like 'RM%'
;
insert into msermsmd
SELECT hsp_tp_cd
   ,EXM_CD
   ,SIDE
   ,CASE WHEN ROWNUM &gt;7 AND MOD(ROWNUM,7) &lt;&gt; 0 THEN MOD(ROWNUM,7)
      WHEN ROWNUM &gt;7 AND MOD(ROWNUM,7) = 0 THEN MOD(ROWNUM,7)+7
      ELSE ROWNUM
   END CNMD_TP_CD
   ,'SSSUP11'
   ,SYSDATE
   ,'Golden'
   ,'10.91.103.77'
   ,'SSSUP11'
   ,SYSDATE
   ,'Golden'
   ,'10.91.103.77'
FROM (
SELECT distinct '03' hsp_tp_cd,A.EXM_CD,NVL(B.CD_NM,'X') CD_NM,NVL(B.KOR_EXM_NM,'X') KOR_EXM_NM,NVL(B.MIF_CD,'X') MIF_CD,NVL(B.TEMP_1,'X') TEMP_1,NVL(B.TEMP_3,'X') TEMP_3,NVL(B.TEMP_4,'X') TEMP_4,NVL(B.TEMP_5,'X') TEMP_5
 FROM (SELECT *
        FROM
        (
        SELECT REGEXP_SUBSTR(NEXTG_FMR_EXM_CD,'[^,]+',1,1) NEXTG_FMR_EXM_CD,EXM_CD,CD_NM,HSP_TP_CD,ORD_CTG_CD
            FROM MSERMMMC  A
            WHERE HSP_TP_CD='03'
           AND ORD_CTG_CD = 'BR1'
           AND ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
           AND NVL(NEXTG_FMR_EXM_CD,'.') &lt;&gt; '.'
        UNION ALL
        SELECT REGEXP_SUBSTR(NEXTG_FMR_EXM_CD,'[^,]+',1,2) NEXTG_FMR_EXM_CD,EXM_CD,CD_NM,HSP_TP_CD,ORD_CTG_CD
            FROM MSERMMMC  A
            WHERE HSP_TP_CD='03'
           AND ORD_CTG_CD = 'BR1'
           AND ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
           AND NVL(NEXTG_FMR_EXM_CD,'.') &lt;&gt; '.'
        UNION ALL
        SELECT REGEXP_SUBSTR(NEXTG_FMR_EXM_CD,'[^,]+',1,3) NEXTG_FMR_EXM_CD,EXM_CD,CD_NM,HSP_TP_CD,ORD_CTG_CD
            FROM MSERMMMC  A
            WHERE HSP_TP_CD='03'
           AND ORD_CTG_CD = 'BR1'
           AND ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
           AND NVL(NEXTG_FMR_EXM_CD,'.') &lt;&gt; '.'
        )WHERE NEXTG_FMR_EXM_CD IS NOT NULL
        )A
   , TEMP_EXM_TABLE3 B
 WHERE A.HSP_Tp_CD= '03'
 AND A.NEXTG_FMR_EXM_CD = B.EXM_CD
 AND B.TEMP_6 IN ('빛고을조영제2')
 AND A.ORD_CTG_cD ='BR1'
 ORDER BY A.EXM_cD
)A
UNPIVOT(SIDE FOR EXM IN (CD_NM AS 'SIDE',KOR_EXM_NM AS 'SIDE', MIF_CD AS 'SIDE',TEMP_1 AS 'SIDE',TEMP_3 AS 'SIDE',TEMP_4 AS 'SIDE',TEMP_5 AS 'SIDE'))
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>문자열 마지막, 첫번째 콤마(구분자) 지우는 방법</QUERY_NAME>
    <QUERY_TEXT>--문자열의 오른쪽 , 를 지움.
SELECT RTRIM( STR , ',' ) STR  
  FROM DUAL
;

--문자열의 첫번째 , 를 지움.
SELECT LTRIM( STR , ',' ) STR  
  FROM DUAL
;</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 예약환자 조회(재활메인치료)</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.RS.SelectTherapistRsvPatientList"&gt;&lt;!--
    Clss :  text
    Desc : 예약환자검색(치료사별 예약환자를 검색함)
    Author : 이시온
    Create date : 2019-06-14R
    Update date : 2019-06-26 LCD 쿼리수정.
                  2019-06-26 LCD 센터/검사실 조회조건 추가.
                  2019-11-22 SEOHO PARK, 수납 구분에 하이패스 여부 추가 수정(RPY_STS_CD)
--&gt;
  SELECT /* HIS.MS.TR.RE.RS.SELECTTHERAPISTRSVPATIENTLIST */
         C.PT_NO
       , DECODE(D.RPY_PACT_TP_CD, 'O', '외래',  'I', '입원', 'E', '응급')           PACT_TP_NM
       , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD') ORD_DT
   , MAX((SELECT XMED.FT_MOO_INFECT_CLS( A.PT_NO
                                  , TO_CHAR( SYSDATE, 'YYYYMMDD' )
                                  , :HIS_HSP_TP_CD
                                  , '1' )
       FROM   DUAL ))                                                 INFECT
       , C.PT_NM
       , DECODE(D.RFND_YN, 'Y', 'F', DECODE(XBIL.FT_HIPASS_YN(D.PT_NO, D.HSP_TP_CD, SYSDATE, D.PACT_ID),'Y', 'Y', D.RPY_STS_CD)) RPY_STS_CD
       , D.RPY_PACT_TP_CD  PACT_TP_CD
       --, A.WD_DEPT_CD    WARD_NO
       , NVL2(A.WD_DEPT_CD, A.WD_DEPT_CD || '/' || A.PRM_NO, NULL)        WD_DEPT_CD
       , A.PT_HME_DEPT_CD                    PBSO_DEPT_CD
       , F.KOR_SRNM_NM                       ORD_PBR_STF_NO
       , XSUP.FT_MST_PACTID(A.PT_NO, A.ORD_DT, A.RSV_DT, A.RHTR_ORD_MTCH_SEQ, :HIS_HSP_TP_CD) PACT_ID
      , LISTAGG('예약일 : '||TO_CHAR(B.RSV_DTM,'YYYY-MM-DD HH24:MI') || ' / 처방 : ' || A.RHTR_MTCH_MIF_CD || '(' || DECODE(D.RPY_STS_CD,'Y','수납','N','미수납','R','환불') ||')' ,' , ' || CHR(10)) WITHIN GROUP (ORDER BY B.RSV_DTM) ORDINFO
      , DECODE(D.RPY_PACT_TP_CD, 'I', (SELECT 'Y'
                                             FROM ACPPRAAM
                                            WHERE PT_NO = C.PT_NO 
                                              AND SIHS_YN = 'Y'
                                              AND DS_EXPT_DT = :RSV_DT
                                              AND HSP_TP_CD = :HIS_HSP_TP_CD
                                              AND PACT_ID = D.PACT_ID), '') DS_EXPT_DT
      , 1  LIST_SEQ
   FROM MSTRHODD A
      , MSTRHSLD B 
      , PCTPCPAM_DAMO C
      , MSTRHSUD D
      , MSTRHCDC E
      , CNLRRUSD F
  WHERE A.PT_NO = B.RSV_PT_NO
    AND A.PT_NO = C.PT_NO
    AND A.TRP_RSV_SLOT_SEQ = B.RSV_SLOT_SEQ  --예약슬롯순번    MSTRHODD.TRP_RSV_SLOT_SEQ 조인조건으로 사용됨.   한개의 슬롯에 여러개 처방을 넣을때 강제로 슬롯을 강제로 증가하여 순번이 발생한다.
    AND A.SCHD_CRE_SEQ = B.SCHD_RSV_SEQ      --일정예약순번   MSTRHODD.SCHD_CRE_SEQ   조인조건으로 사용됨. 처방발행시 순번 정도의 의미
    AND A.ORD_DT = B.ORD_DT                  --처방일자           MSTRHODD.ORD_DT
    AND A.ODDSC_TP_CD ='C'
    AND (C.PT_NO LIKE :PT_NO || '%' OR C.PT_NM  LIKE :PT_NO || '%' )
    AND A.RSV_DT = TO_DATE( :RSV_DT,'YYYY-MM-DD')
    AND A.HSP_TP_CD = :HIS_HSP_TP_CD
    AND A.HSP_TP_CD = D.HSP_TP_CD
    AND A.ODDSC_TP_CD = D.ODDSC_TP_CD
    AND A.PT_NO = D.PT_NO
    AND A.ORD_DT = D.ORD_DT
    AND A.RSV_DT = D.RSV_DT
    AND A.RHTR_MTCH_MIF_CD = D.RHTR_MIF_CD
    AND A.RHTR_ORD_MTCH_SEQ = D.RHTR_ORD_MTCH_SEQ
    AND A.RHTR_ORD_CD = E.RHTR_ORD_CD
    AND A.HSP_TP_CD = E.HSP_TP_CD
    AND A.RHRM_CD = DECODE(:RHRM_CD,'ALL',A.RHRM_CD,:RHRM_CD)
    AND E.RHTR_CTR_TP_CD = DECODE(:RHTR_CTR_TP_CD,'ALL',E.RHTR_CTR_TP_CD,:RHTR_CTR_TP_CD)
    AND D.PT_HME_DEPT_CD IN ( 'RM', 'RTRM', 'SHRM', 'CCRM' )
    AND (:MED_REC_YN = 'Y' AND NOT EXISTS (SELECT 'Y'
                                             FROM MRDDRECM X
                                               WHERE X.PT_NO = D.PT_NO
                                                AND X.MED_DT = D.RTM_MED_DT
                                                AND X.HSP_TP_CD = D.HSP_TP_CD
                                                 AND X.PACT_ID = D.PACT_ID
                                                 AND X.LST_YN = 'Y'
                                                 AND X.MDFM_ID = E.MDFM_ID)
            OR :MED_REC_YN = 'N' AND 1=1)
       AND F.STF_NO = A.ORD_PBR_STF_NO
       AND F.HSP_TP_CD = A.HSP_TP_CD
  GROUP BY C.PT_NO
       , C.PT_NM
       , D.RPY_PACT_TP_CD
       , A.WD_DEPT_CD
       , A.PRM_NO
       , A.PT_HME_DEPT_CD
       , F.KOR_SRNM_NM
       , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')
       , XSUP.FT_MST_PACTID(A.PT_NO, A.ORD_DT, A.RSV_DT, A.RHTR_ORD_MTCH_SEQ, :HIS_HSP_TP_CD)
       , DECODE(D.RFND_YN, 'Y', 'F', DECODE(XBIL.FT_HIPASS_YN(D.PT_NO, D.HSP_TP_CD, SYSDATE, D.PACT_ID),'Y', 'Y', D.RPY_STS_CD)) --D.RPY_STS_CD--XBIL.FT_ACP_HIPASS_YN(D.HSP_TP_CD, D.PT_NO, TO_CHAR(D.RSV_DT,'YYYY-MM-DD'))
       , D.PACT_ID

UNION ALL

SELECT /* HIS.MS.TR.RE.RS.SELECTTHERAPISTRSVPATIENTLIST */
         C.PT_NO
       , DECODE(D.RPY_PACT_TP_CD, 'O', '외래',  'I', '입원', 'E', '응급')           PACT_TP_NM
       , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD') ORD_DT
   , MAX((SELECT XMED.FT_MOO_INFECT_CLS( A.PT_NO
                                  , TO_CHAR( SYSDATE, 'YYYYMMDD' )
                                  , :HIS_HSP_TP_CD
                                  , '1' )
       FROM   DUAL ))                                                 INFECT
       , C.PT_NM
       , DECODE(D.RFND_YN, 'Y', 'F', DECODE(XBIL.FT_HIPASS_YN(D.PT_NO, D.HSP_TP_CD, SYSDATE, D.PACT_ID),'Y', 'Y', D.RPY_STS_CD)) RPY_STS_CD
       , D.RPY_PACT_TP_CD  PACT_TP_CD
       --, A.WD_DEPT_CD    WARD_NO
       , NVL2(A.WD_DEPT_CD, A.WD_DEPT_CD || '/' || A.PRM_NO, NULL)        WD_DEPT_CD
       , A.PT_HME_DEPT_CD                  PBSO_DEPT_CD
       , F.KOR_SRNM_NM                     ORD_PBR_STF_NO
       , XSUP.FT_MST_PACTID(A.PT_NO, A.ORD_DT, A.RSV_DT, A.RHTR_ORD_MTCH_SEQ, :HIS_HSP_TP_CD) PACT_ID
      , LISTAGG('예약일 : '||TO_CHAR(B.RSV_DTM,'YYYY-MM-DD HH24:MI') || ' / 처방 : ' || A.RHTR_MTCH_MIF_CD || '(' || DECODE(D.RPY_STS_CD,'Y','수납','N','미수납','R','환불') ||')' ,' , ' || CHR(10)) WITHIN GROUP (ORDER BY B.RSV_DTM) ORDINFO
      , DECODE(D.RPY_PACT_TP_CD, 'I', (SELECT 'Y'
                                             FROM ACPPRAAM
                                            WHERE PT_NO = C.PT_NO
                                              AND SIHS_YN = 'Y'
                                              AND DS_EXPT_DT = :RSV_DT
                                              AND HSP_TP_CD = :HIS_HSP_TP_CD
                                              AND PACT_ID = D.PACT_ID), '') DS_EXPT_DT
      , 2  LIST_SEQ
   FROM MSTRHODD A
      , MSTRHSLD B 
      , PCTPCPAM_DAMO C
      , MSTRHSUD D
      , MSTRHCDC E
      , CNLRRUSD F
  WHERE A.PT_NO = B.RSV_PT_NO
    AND A.PT_NO = C.PT_NO
    AND A.TRP_RSV_SLOT_SEQ = B.RSV_SLOT_SEQ  --예약슬롯순번    MSTRHODD.TRP_RSV_SLOT_SEQ 조인조건으로 사용됨.   한개의 슬롯에 여러개 처방을 넣을때 강제로 슬롯을 강제로 증가하여 순번이 발생한다.
    AND A.SCHD_CRE_SEQ = B.SCHD_RSV_SEQ      --일정예약순번   MSTRHODD.SCHD_CRE_SEQ   조인조건으로 사용됨. 처방발행시 순번 정도의 의미
    AND A.ORD_DT = B.ORD_DT                  --처방일자           MSTRHODD.ORD_DT
    AND A.ODDSC_TP_CD ='C'
    AND (C.PT_NO LIKE :PT_NO || '%' OR C.PT_NM  LIKE :PT_NO || '%' )
    AND A.RSV_DT = TO_DATE( :RSV_DT,'YYYY-MM-DD')
    AND A.HSP_TP_CD = :HIS_HSP_TP_CD
    AND A.HSP_TP_CD = D.HSP_TP_CD
    AND A.ODDSC_TP_CD = D.ODDSC_TP_CD
    AND A.PT_NO = D.PT_NO
    AND A.ORD_DT = D.ORD_DT
    AND A.RSV_DT = D.RSV_DT
    AND A.RHTR_MTCH_MIF_CD = D.RHTR_MIF_CD
    AND A.RHTR_ORD_MTCH_SEQ = D.RHTR_ORD_MTCH_SEQ
    AND A.RHTR_ORD_CD = E.RHTR_ORD_CD
    AND A.HSP_TP_CD = E.HSP_TP_CD
    AND A.RHRM_CD = DECODE(:RHRM_CD,'ALL',A.RHRM_CD,:RHRM_CD)
    AND E.RHTR_CTR_TP_CD = DECODE(:RHTR_CTR_TP_CD,'ALL',E.RHTR_CTR_TP_CD,:RHTR_CTR_TP_CD)
    AND D.PT_HME_DEPT_CD not in ( 'RM', 'RTRM', 'SHRM', 'CCRM' )
    AND (:MED_REC_YN = 'Y' AND NOT EXISTS (SELECT 'Y'
                                             FROM MRDDRECM X
                                               WHERE X.PT_NO = D.PT_NO
                                                AND X.MED_DT = D.RTM_MED_DT
                                                AND X.HSP_TP_CD = D.HSP_TP_CD
                                                 AND X.PACT_ID = D.PACT_ID
                                                 AND X.LST_YN = 'Y'
                                                 AND X.MDFM_ID = E.MDFM_ID)
            OR :MED_REC_YN = 'N' AND 1=1)
       AND F.STF_NO = A.ORD_PBR_STF_NO
       AND F.HSP_TP_CD = A.HSP_TP_CD
  GROUP BY C.PT_NO
       , C.PT_NM
       , D.RPY_PACT_TP_CD
       , A.WD_DEPT_CD
       , A.PRM_NO
       , A.PT_HME_DEPT_CD
       , F.KOR_SRNM_NM
       , TO_CHAR(A.ORD_DT, 'YYYY-MM-DD')
       , XSUP.FT_MST_PACTID(A.PT_NO, A.ORD_DT, A.RSV_DT, A.RHTR_ORD_MTCH_SEQ, :HIS_HSP_TP_CD)
       , DECODE(D.RFND_YN, 'Y', 'F', DECODE(XBIL.FT_HIPASS_YN(D.PT_NO, D.HSP_TP_CD, SYSDATE, D.PACT_ID),'Y', 'Y', D.RPY_STS_CD)) --D.RPY_STS_CD-- XBIL.FT_ACP_HIPASS_YN(D.HSP_TP_CD, D.PT_NO, TO_CHAR(D.RSV_DT,'YYYY-MM-DD'))
       , D.PACT_ID
  ORDER BY LIST_SEQ, 5 DESC, 3

&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>오라클 FOR문 EXIT (루프탈출)</QUERY_NAME>
    <QUERY_TEXT>    BEGIN
        FOR REC IN
            (SELECT PT_NO
                   ,ACPT_DTM
              FROM MSERMAAD X
              WHERE X.HSP_TP_CD = HIS_HSP_TP_CD
                AND X.PT_NO = IN_PT_NO         
                AND X.EXM_PRGR_STS_CD = 'C'
                AND X.ACPT_DTM BETWEEN TRUNC(SYSDATE) AND SYSDATE
                AND X.EXRM_TP_CD IN (SELECT EXRM_TP_CD
                                    FROM MSERMMRD
                                    WHERE HSP_TP_CD = HIS_HSP_TP_CD
                                     AND IEXM_KND_CD = IN_IEXM_KND_CD
                                     ) 
             )
        LOOP
            V_ROWNUM := V_ROWNUM + 1;
            EXIT WHEN V_ROWNUM &gt; 1;            
        END LOOP;
    END;    </QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활치료실 슬롯생성</QUERY_NAME>
    <QUERY_TEXT>PROCEDURE      PC_MST_MSTRHSLD_INSERT ( IN_RTST_SID   IN VARCHAR2           --재활치료사직원식별ID
                                                   , IN_RHRM_CD          IN VARCHAR2                 --재활치료실코드 2019-04-02 이시온 추가
                                                   , IN_SDATE            IN VARCHAR2                 --시작일자
                                                   , IN_EDATE            IN VARCHAR2                 --종료일자 
                                                   , HIS_HSP_TP_CD   IN VARCHAR2           --병원구분코드                  
                                                   , HIS_IP_ADDR   IN VARCHAR2           --최종변경IP주소
                                                   , HIS_PRGM_NM   IN VARCHAR2           --최종변경프로그램명
                                                   , HIS_STF_NO    IN VARCHAR2           --최종변경직원번호
                     , IO_ERRYN            IN OUT VARCHAR2             -- ERROR여부                                                   
                                                   , IO_ERRMSG           IN OUT VARCHAR2 )           -- ERROR MESSAGE
/*재활치료 치료사 예약슬롯 저장  PROCEDURE*/
/*2012-06-01 소병하*/
/*재활 치료사의 지정된 예약 슬롯 타입에 따라 시작일 부터 종료일까지 월단위로 예약 슬롯을 생성한다 */
/*As-is : PK_RH_PTRSV.pc_rh_srrhpsdt_insert*/

IS

    G_ILOOPCNT   NUMBER  := 1;
    G_IMAX_SEQ   NUMBER  := 0;
    G_ISLOT_YN   VARCHAR(1)  := '';
    G_ITIME_YN   VARCHAR(1)  := '';


BEGIN

 BEGIN
     DELETE
    FROM MSTRHSLD
   WHERE RTST_SID = IN_RTST_SID
     AND HSP_TP_CD = HIS_HSP_TP_CD
     AND NVL(RSV_STS_TP_CD,'N') ='Y'
     AND RSV_DTM BETWEEN TO_DATE(IN_SDATE, 'YYYY-MM-DD') AND TO_DATE(IN_EDATE, 'YYYY-MM-DD') + 0.99999
     AND RSVP_CD_CNT IS NULL  --2019-12-13 : SLOT_CNT 로 인해 생성된 슬롯은 삭제 안되도록 수정
     ;

         EXCEPTION
             WHEN OTHERS THEN 
                 IO_ERRYN := 'Y';
                 IO_ERRMSG := '치료사 슬롯생정중 오류(기존슬롯정리)  ERRCD = ' || SQLCODE || CHR(13) || ' ' || SQLERRM;
                 RETURN; 
 END;


    DECLARE 
        CURSOR REC_CUR IS

            SELECT /*+ XSUP.PC_MST_MSTRHSLD_INSERT */
                   IN_RTST_SID            RTST_SID
                 , TO_DATE(TO_CHAR(B.WK_DT, 'YYYYMMDD') || ' ' || A.TRP_HMI, 'YYYYMMDD HH24MI') RSV_DTM
                 , A.SLOT_PER_PNO        SLOT_PER_PNO                                    
                 , A.SLOT_PER_CD_CNT      SLOT_PER_CD_CNT                              --슬롯별코드수 2019-04-02 이시온 추가
                 , A.STTP_CD              STTP_CD
                 , A.RSV_STS_TP_CD        RSV_STS_TP_CD
                 , A.RSV_MEMO_CNTE        RSV_MEMO_CNTE
                 , SYSDATE                EDIT_DTE
                 , HIS_STF_NO             EDIT_STF_NO
                 , RHRM_CD                RHRM_CD                                      --재활치료실코드  2013.06.24 임재득 추가       
                 , RHTR_TP_CD     RHTR_TP_CD         -- 재활치료구분 추가 2020.12.15 김슬기
             FROM MSTRHTYD A
                , ACPPRWDD B
            WHERE A.RTST_SID = IN_RTST_SID  
              --AND A.RHRM_CD  = IN_RHRM_CD                                              --재활치료실코드 2019-04-02 이시온 추가
              AND TO_CHAR(B.WK_DT, 'D') = A.RSDY_KND_CD
              AND B.WK_DT BETWEEN TO_DATE(IN_SDATE, 'YYYY-MM-DD') AND TO_DATE(IN_EDATE, 'YYYY-MM-DD') + 0.99999 --휴일 제외 주석
              AND XSUP.FT_MST_GET_HOLDY_YN(TRUNC(B.WK_DT), B.HSP_TP_CD) &lt;&gt; 'Y'
              AND A.HSP_TP_CD = HIS_HSP_TP_CD  
              AND B.HSP_TP_CD = HIS_HSP_TP_CD  --병원구분
             ORDER BY RSV_DTM;
             
             REC_RECORD REC_CUR%ROWTYPE;
             
             BEGIN
                 OPEN REC_CUR;
                 
                 LOOP
                     FETCH REC_CUR INTO REC_RECORD;
                         EXIT WHEN REC_CUR%NOTFOUND;
                         
                         G_ILOOPCNT := 1;
                         
                         BEGIN
                             SELECT /*+ XSUP.PC_MST_MSTRHSLD_INSERT */                       --1.생성할려는 기준에 해당 하는 예약슬롯이 기존에 생성되어 있는지 체크
                                    'Y'
                               INTO G_ITIME_YN
                               FROM MSTRHSLD
                              WHERE RTST_SID = REC_RECORD.RTST_SID
                                AND RHRM_CD  = REC_RECORD.RHRM_CD                      --재활치료실코드 2019-04-02 이시온 추가
                                AND RSV_DTM = REC_RECORD.RSV_DTM 
                                AND HSP_TP_CD = HIS_HSP_TP_CD
                                AND ROWNUM = 1;
                             EXCEPTION
                                 WHEN NO_DATA_FOUND THEN
                                     G_ITIME_YN := 'N';
                         END;
                         
                         LOOP
                             IF G_ILOOPCNT &gt; REC_RECORD.SLOT_PER_PNO THEN
                                 EXIT;
                             END IF;
                             
                             G_ISLOT_YN := '';
                             
                             IF G_ITIME_YN = 'N' THEN                                         --생성이 안되어 있으면
                                 BEGIN  
                                     SELECT /*+ XSUP.PC_MST_MSTRHSLD_INSERT */
                                            NVL(MAX(RSV_DY_SEQ) + 1, 1)
                                       INTO G_IMAX_SEQ
                                       FROM MSTRHSLD
                                      WHERE RTST_SID = REC_RECORD.RTST_SID      
                                        AND RHRM_CD  = REC_RECORD.RHRM_CD                      --재활치료실코드 2019-04-02 이시온 추가
                                        AND RSV_DTM = REC_RECORD.RSV_DTM
                                        AND HSP_TP_CD = HIS_HSP_TP_CD;
                                      EXCEPTION
                                          WHEN NO_DATA_FOUND THEN
                                              G_IMAX_SEQ := 1;
                                 END;
                                 
                                 G_ISLOT_YN := 'N';
                             ELSE                                                              --생성이 되어있으면면
                                 BEGIN
                                     SELECT /*+ XSUP.PC_MST_MSTRHSLD_INSERT */
                                            'Y'
                                       INTO G_ISLOT_YN
                                       FROM MSTRHSLD
                                      WHERE RTST_SID = REC_RECORD.RTST_SID
                                        AND RHRM_CD  = REC_RECORD.RHRM_CD                      --재활치료실코드 2019-04-02 이시온 추가
                                        AND RSV_DTM = REC_RECORD.RSV_DTM
                                        AND RSV_DY_SEQ = G_ILOOPCNT
                                        AND HSP_TP_CD = HIS_HSP_TP_CD
                                        AND ROWNUM = 1;  
                                      EXCEPTION
                                          WHEN NO_DATA_FOUND THEN
                                              G_ISLOT_YN := 'N';
                                              G_IMAX_SEQ := G_ILOOPCNT;                                                                       
                                 END;
                             END IF;
                             
                             IF G_ISLOT_YN = 'N' THEN
                                 BEGIN
                                     INSERT INTO /*+ XSUP.PC_MST_MSTRHSLD_INSERT */
                                         MSTRHSLD (
                                                    RTST_SID
                                                  , RSV_DTM
                                                  , RSV_DY_SEQ
                                                  , RSV_SLOT_SEQ
                                                  --, RSVP_CD_CNT                   --예약가능코드수 2019-04-02 이시온 추가
                                                  , STTP_CD
                                                  , RSV_STS_TP_CD
                                                  , RSV_MEMO_CNTE
                                                  , RHRM_CD
                                                  , HSP_TP_CD
                                                  , FSR_STF_NO
                                                  , FSR_DTM
                                                  , FSR_PRGM_NM
                                                  , FSR_IP_ADDR
                                                  , LSH_PRGM_NM
                                                  , LSH_IP_ADDR
                                                  , LSH_STF_NO
                                                  , LSH_DTM          
                                                  , RHTR_TP_CD
                                                 )
                                          VALUES (
                                                    REC_RECORD.RTST_SID
                                                  , REC_RECORD.RSV_DTM
                                                  , G_IMAX_SEQ
                                                  , 1
                                                  --, REC_RECORD.SLOT_PER_CD_CNT,1)   --슬롯당코드수 2019-04-02 이시온 추가
                                                  , REC_RECORD.STTP_CD
                                                  , REC_RECORD.RSV_STS_TP_CD
                                                  , REC_RECORD.RSV_MEMO_CNTE
                                                  , REC_RECORD.RHRM_CD
                                                  , HIS_HSP_TP_CD
                                                  , HIS_STF_NO
                                                  , SYSDATE
                                                  , HIS_PRGM_NM
                                                  , HIS_IP_ADDR
                                                  , HIS_PRGM_NM
                                                  , HIS_IP_ADDR
                                                  , HIS_STF_NO
                                                  , SYSDATE       
                                                  , REC_RECORD.RHTR_TP_CD
                                                 );
                                         EXCEPTION
                                             WHEN OTHERS THEN  
                                                 IO_ERRYN  := 'Y'; 
                                                 IO_ERRMSG := '슬롯 생성 INSERT 중 에러 발생. 의료정보팀에 연락 주십시오.!';
                                                 RETURN;                                       
                                 END;
                             ELSE    --임재득 추가함 : 2013-07-18 (기존 슬롯 존재시 슬롯 상태값만 바꿔준다. 단, 예약이 없는것만)
                                 BEGIN
                                  UPDATE
                                         MSTRHSLD
                                     SET STTP_CD = REC_RECORD.STTP_CD
                                       , LSH_DTM       = SYSDATE
                                          , LSH_IP_ADDR   = HIS_IP_ADDR
                                          , LSH_PRGM_NM   = HIS_PRGM_NM
                                          , LSH_STF_NO    = HIS_STF_NO   
                                          , RHTR_TP_CD    = REC_RECORD.RHTR_TP_CD
                                   WHERE RTST_SID = REC_RECORD.RTST_SID
                                     AND RHRM_CD = REC_RECORD.RHRM_CD
                                     AND RSV_DTM = REC_RECORD.RSV_DTM
                                     AND RSV_PT_NO IS NULL
                                     AND HSP_TP_CD = HIS_HSP_TP_CD
                                     AND RSV_DY_SEQ = G_ILOOPCNT
                                   ;
                                      EXCEPTION
                                           WHEN OTHERS THEN  
                                                IO_ERRYN  := 'Y'; 
                                                IO_ERRMSG := '슬롯 생성 UPDATE 중 에러 발생. 의료정보팀에 연락 주십시오.!';
                                           RETURN;                                       
                                 END;
                             END IF;
                             
                             G_ILOOPCNT := G_ILOOPCNT + 1;
                         END LOOP;    
                 END LOOP;
                 
                 CLOSE REC_CUR;        
             END;
                                                             
END PC_MST_MSTRHSLD_INSERT;
</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>테이블 INSERT 만들기</QUERY_NAME>
    <QUERY_TEXT>EXEC :TABLE_NAME := 'BSIFFPAD';
SELECT LISTAGG(A.COLUMN_NAME,CHR(13)||',:') WITHIN GROUP (ORDER BY A.COLUMN_ID) --VALUES
FROM   ALL_TAB_COLUMNS A
     , ALL_COL_COMMENTS B
     , ALL_IND_COLUMNS C
     , ALL_TAB_COMMENTS D
WHERE/*  A.OWNER = 'KVSUP'
AND  */  C.TABLE_OWNER(+) &lt;&gt; 'KVDBA'
AND    A.OWNER = B.OWNER
AND    A.OWNER = D.OWNER
AND    A.TABLE_NAME = D.TABLE_NAME
AND    A.TABLE_NAME = B.TABLE_NAME
AND    A.COLUMN_NAME = B.COLUMN_NAME
AND    A.TABLE_NAME = C.TABLE_NAME(+)
AND    A.COLUMN_NAME = C.COLUMN_NAME(+)
AND    C.INDEX_NAME(+) LIKE '%PK'
AND    A.TABLE_NAME like UPPER(''|| :TABLE_NAME || '')
;
SELECT LISTAGG(A.COLUMN_NAME,CHR(13)||',') WITHIN GROUP (ORDER BY A.COLUMN_ID) --INSERT
FROM   ALL_TAB_COLUMNS A
     , ALL_COL_COMMENTS B
     , ALL_IND_COLUMNS C
     , ALL_TAB_COMMENTS D
WHERE/*  A.OWNER = 'KVSUP'
AND  */  C.TABLE_OWNER(+) &lt;&gt; 'KVDBA'
AND    A.OWNER = B.OWNER
AND    A.OWNER = D.OWNER
AND    A.TABLE_NAME = D.TABLE_NAME
AND    A.TABLE_NAME = B.TABLE_NAME
AND    A.COLUMN_NAME = B.COLUMN_NAME
AND    A.TABLE_NAME = C.TABLE_NAME(+)
AND    A.COLUMN_NAME = C.COLUMN_NAME(+)
AND    C.INDEX_NAME(+) LIKE '%PK'
AND    A.TABLE_NAME like UPPER(''|| :TABLE_NAME || '')
</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 오더 리스트</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.OR.SelectOrderListWithPtNo"&gt;&lt;!--
    Clss :  [text] (쿼리유형)
    Desc : 재활오더 리스트(특정환자 구오더 있으면 추가).
    Author : 성시중 
    Create date : 2015-04-06
    Update date : 2015-04-06
                  2019-06-19 충남대 분류에 맞게 쿼리 수정 
--&gt;
--EXEC :PT_NO := '24132871';
--EXEC :HIS_HSP_TP_CD := '08';

SELECT /*HIS.MS.TR.RE.OR.SelectOrderListWithPtNo*/
       A.RHTR_CTR_TP_CD                                                   RHTR_CTR_TP_CD
     , XCOM.FT_CCC_CODENAME(A.HSP_TP_CD, 'MSRH0002', RHTR_CTR_TP_CD)      RHTR_CTR_TP_NM
  --   , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='MSRH0002' AND HSP_TP_CD = A.HSP_TP_CD AND COMN_CD = A.RHTR_CTR_TP_CD )  RHTR_CTR_TP_NM

     , A.RHTR_LCLS_CD                                                     RHTR_LCLS_CD
     , XCOM.FT_CCC_CODENAME(A.HSP_TP_CD, 'RHB', RHTR_LCLS_CD)             RHTR_LCLS_NM
  --   , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHB' AND HSP_TP_CD = A.HSP_TP_CD AND COMN_CD = A.RHTR_LCLS_CD )  RHTR_LCLS_NM

     , A.RHTR_MCLS_CD                                                     RHTR_MCLS_CD
     , XCOM.FT_CCC_CODENAME(A.HSP_TP_CD, 'RHG', RHTR_MCLS_CD)             RHTR_MCLS_NM
  --   , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHG' AND HSP_TP_CD = A.HSP_TP_CD AND COMN_CD = A.RHTR_MCLS_CD )  RHTR_MCLS_NM

     , A.RHTR_SCLS_CD                                                     RHTR_SCLS_CD
     , XCOM.FT_CCC_CODENAME(A.HSP_TP_CD, 'RHN', RHTR_SCLS_CD)             RHTR_SCLS_NM
  --   , (SELECT COMN_CD_NM FROM CCCMCSTE WHERE COMN_GRP_CD ='RHN' AND HSP_TP_CD = A.HSP_TP_CD AND COMN_CD = A.RHTR_SCLS_CD )  RHTR_SCLS_NM

     , A.RHTR_ORD_CD                                                      RHTR_ORD_CD
     , A.RHTR_ORD_NM                                                      RHTR_ORD_NM
     , A.RHTR_MIF_CD                                                      RHTR_MIF_CD
     , A.MIF_NM                                                           MIF_NM
     , A.ORD_RMK_CNTE                                                     ORD_RMK_CNTE
     , A.ANW_YN                                                           ANW_YN
     , DECODE(NVL(A.BDY_MAX_ORD_NOTM_USE_YN, 'N'), 'Y', TO_NUMBER(A.BDY_MAX_ORD_NOTM), 99)    BDY_MAX_ORD_NOTM
     , A.BDY_MAX_ORD_NOTM_USE_YN                                          BDY_MAX_ORD_NOTM_USE_YN
     
     , A.APCB_TYRM_CD                                                     APCB_TYRM_CD 
     , A.ADS_TYRM_CD                                                      ADS_TYRM_CD
     --, XSUP.FT_MST_ROOMNAME(A.HSP_TP_CD, 'R', DECODE(:PACT_TP_CD, 'I', A.ADS_TYRM_CD, A.APCB_TYRM_CD)) TYRM_NM
     , XSUP.FT_MST_ROOMNAME(A.HSP_TP_CD, 'R', A.APCB_TYRM_CD)             TYRM_NM
   --  , XBIL.FT_AIM_ORD_SELT_CHK(NVL(A.RHTR_MIF_CD, A.RHTR_ORD_CD), SYSDATE, A.HSP_TP_CD) MED_MIFI_TP_CD --원무에서 사용하라는 것 넣어둠.
     , nvl((SELECT 'Y' FROM AIMIRPMC WHERE MIF_CD = A.RHTR_MIF_CD AND HSP_TP_CD = A.HSP_TP_CD and sysdate BETWEEN APY_STR_DT and APY_END_DT), 'N') MIF_YN
     ,(SELECT MED_MIFI_TP_CD
          FROM CCOOCBAC
         WHERE HSP_TP_CD = :HIS_HSP_TP_CD
           AND ORD_CD = A.RHTR_ORD_CD)                                    MED_MIFI_TP_CD --원무쪽에서 주는 펑션? 넣어주면 될것같은데...
  FROM MSTRHCDC A

 WHERE NVL(A.USE_YN, 'Y') = 'Y'
   AND (     A.ANW_YN = 'Y'
         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       )
       OR
       (     A.ANW_YN = 'N'
         AND A.RHTR_ORD_CD IN ( SELECT DISTINCT C.RHTR_ORD_CD
                            FROM MSTRHODD C
                               , MSTRHCDC D
                            WHERE C.PT_NO = :PT_NO
                             AND C.RSV_DT &gt;= TRUNC(SYSDATE)
                             AND C.ODDSC_TP_CD = 'C'
                             AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                             AND D.RHTR_ORD_CD = C.RHTR_ORD_CD
                             AND D.ANW_YN = 'N'   -- 해당환자의 전체 오더가 아니라, 구오더가 있을 경우만 찾으면 됨
                             AND D.HSP_TP_CD = C.HSP_TP_CD
                              )
          AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       )
 ORDER BY A.RHTR_LCLS_CD
        , A.RHTR_MCLS_CD
        , A.SORT_SEQ
 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검 공통결과폼(FORM)</QUERY_NAME>
    <QUERY_TEXT>-- 진단검사공통정보 - 코드분류 - 대분류
  SELECT /* HIS.MS.IT.LM.CO.SELECTCOMMONCODE */
         A.TH2_RMK_CNTE
       , A.SCLS_COMN_CD
       , A.SCLS_COMN_CD_NM
       , A.*
    FROM MSELMSID A -- 진단검사공통정보
   WHERE 1=1
     AND A.LCLS_COMN_CD = '000'
     AND USE_YN = 'Y'
   ORDER BY A.HSP_TP_CD, A.LCLS_COMN_CD, A.TH2_RMK_CNTE, A.SCLS_COMN_CD, A.SORT_SEQ
;
--대분류
select *
    from mselmscc
    where hsp_TP_CD='02'
    and lcls_Comn_Cd = 'EXM_RESULT_FORM'
;
--결과입력 폼 정보 TH2_RMK_CNTE : xaml명 , TH3_RMK_CNTE : IN_EXM_GRP_CD
SELECT *
          FROM MSELMSID
         WHERE HSP_TP_CD    = '02'
           AND LCLS_COMN_CD = 'EXM_RESULT_FORM'
           AND USE_YN = 'Y'
;

--Custom Form Master 관련테이블
MSELMRMM --Custom Form의 file_name (xaml) 정보
MSELMRSM --Custom Form의 item 정보 (콤보박스, 텍스트 등 기본 값 세팅 가능)

--Custom Form 데이터 관련 테이블
MSELMRMD --Custom Form을 임시저장, 검증 시 저장되는 데이터 (EXM_GRP_CD, 검체번호가 저장됨)
MSELMRID --Custom Form의 Item 데이터 저장 정보 (해당 폼의 Control들에 입력했던 데이터가 저장됨)



--Custom Form의 Control에 항목 매핑
MSELMRSM 테이블의 LCLS_COMN_CD 와 MSELMSID의 LCLS_COMN_CD를 매핑하여 콤보박스에 항목을 넣어서 매핑함.


--
1. MSELMSID.LCLS_COMN_CD = '000'의 SCLS_COMN_CD = L30 -&gt; 결과 -&gt; 결과폼 관련 정보 존재.
2. MSELMSCC.TH2_CTG_CD = 'L30' 보면 EXM_RESULT_FORM이 있는데 해당 코드가 결과폼 관련 정보.
3. MSELMSID.LCLS_COMN_CD  = 'EXM_RESULT_FORM' 조회 하면 SCLS_COMN_CD(검사코드), TH2_RMK_CNTE(XAML), TH3_RMK_CNTE(커스텀그룹코드(ex :BM_PBS)) 세팅
4. MSELMSID.LCLS_COMN_CD = '000'의 L30결과로부터 파생하여 결과-BM 같은 L32처럼 분류를 추가 후 BM_PBS의 컨트롤 정보를 추가해준다. 
5. MSELMRMM -&gt; EXM_GRP_CD 를 넣어서 폼을 등록 (어떤xaml을 호출할지등록)
6. MSELMRSM -&gt; 해당 폼에 사용되는 컨트롤들의 세부설정
7. MSELMRSM테이블의 LCLS_COMN_CD를 MSELMSID의 LCLS_COMN_CD와 연결하여 해당 컨트롤의 항목을 데이터로 관리함.</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>빛고을 수가코드 정리쿼리</QUERY_NAME>
    <QUERY_TEXT>SELECT C.EXM_CD "검사코드",C.NEXTG_FMR_EXM_CD "빛고을기존사용코드",C.CD_NM "빛고을검사명",'' "자주사용여부",C.MIF_CD "빛고을매핑수가",A.CD_NM "학동검사명",A.MIF_CD "학동매핑수가",A.INS_EDI_CD "학동EDI",A.MIF_NM "학동수가명",B.CD_NM "화순검사명",B.MIF_CD "화순매핑수가",B.INS_EDI_CD "화순EDI",B.MIF_NM "화순 수가명"
    FROM
(SELECT A.*
     , B.INS_EDI_CD       INS_EDI_CD
     , B.KOR_MIF_NM       MIF_NM
     , B.INS_UNPR         INS_UNPR
     , B.GNR_UNPR         GNR_UNPR
     , B.INTL_UNPR        INTL_UNPR
     , B.MTRL_MDCN_MIF_CD MTRL_MDCN_MIF_CD
    FROM MSERMMMC A
       , AIMIRPMC B
WHERE A.HSP_TP_CD= '01'
AND A.HSP_TP_CD = B.HSP_TP_CD
AND A.ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
AND A.ORD_CTG_CD = 'BR1'
AND A.MIF_CD = B.MIF_CD
AND TRUNC(SYSDATE) BETWEEN B.APY_STR_DT
                          AND NVL(B.APY_END_DT, TRUNC(SYSDATE))
) A,
(SELECT A.*
     , B.INS_EDI_CD       INS_EDI_CD
     , B.KOR_MIF_NM       MIF_NM
     , B.INS_UNPR         INS_UNPR
     , B.GNR_UNPR         GNR_UNPR
     , B.INTL_UNPR        INTL_UNPR
     , B.MTRL_MDCN_MIF_CD MTRL_MDCN_MIF_CD
    FROM MSERMMMC A
    , AIMIRPMC B
WHERE A.HSP_TP_CD= '02'
AND A.HSP_TP_CD = B.HSP_TP_CD
AND A.ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
AND A.ORD_CTG_CD = 'BR1'
AND A.MIF_CD = B.MIF_CD
AND TRUNC(SYSDATE) BETWEEN B.APY_STR_DT
                          AND NVL(B.APY_END_DT, TRUNC(SYSDATE))
) B,
(SELECT A.*
    FROM MSERMMMC A
WHERE A.HSP_TP_CD= '03'
AND A.ORD_SLIP_CTG_CD &lt;&gt; 'MIG'
AND A.ORD_CTG_CD = 'BR1'
) C
WHERE A.EXM_CD(+) = C.EXM_CD
 AND B.EXM_CD(+) = C.EXM_CD
 AND C.END_DT IS NULL
 AND C.ORD_CTG_CD = 'BR1'
 AND C.MIF_CD IS NULL
ORDER BY C.EXM_CD
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>시퀀스</QUERY_NAME>
    <QUERY_TEXT>시퀀스를 사용하려면 우선 시퀀스를 생성해야한다.

CREATE SEQUENCE  [시퀀스 이름]

시퀀스 수정:
ALTER SEQUENCE [시퀀스 이름] [INCREMENT BY 증가단위] [MAXVALUE 최대값] [MINVALUE 최소값] [CYCLE | NOCYCLE] [CACHE | NOCACHE]


시퀀스 검색:
SELECT * FROM USER_SEQUENCES;


시퀀스 삭제:
DROP SEQUENCE [ 시퀀스 이름];


사용법:
SELECT [시퀀스 이름].NEXTVAL FROM DUAL;

SELECT [시퀀스 이름].CURRVAL FROM DUAL;

시퀀스 초기화방법
SELECT [시퀀스 이름].CURRVAL FROM DUAL 로 현재 값을 확인 후 ALTER SEQUENCE [시퀀스 이름] INCREMENT BY  -  (현재값-1) 해준 후 NEXTVAL 처리하면 초기화 됨.
</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>정규식</QUERY_NAME>
    <QUERY_TEXT>EXEC :V_STS := 'E,X';

SELECT EXM_PRGR_STS_CD,A.* FROM MOOOREXM A
WHERE 1=1
AND HSP_TP_CD = '01'
AND EXM_PRGR_STS_CD IN (SELECT TRIM(REGEXP_SUBSTR(:V_STS,'[^'||','||']+',1,LEVEL)) AS TXT
             FROM DUAL
             CONNECT BY INSTR(:V_STS,',',1,LEVEL-1)&gt;0
)
;

(SELECT TRIM(REGEXP_SUBSTR(:V_STS,'[^'||','||']+',1,LEVEL)) AS TXT
             FROM DUAL
             CONNECT BY INSTR(:V_STS,',',1,LEVEL-1)&gt;0)</QUERY_TEXT>
    <GROUP>정규식</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>멀티콤보박스 매뉴얼</QUERY_NAME>
    <QUERY_TEXT>--xaml부분 사용법
--1. SelectedValue부분은 반드시 Mode=TwoWay를 작성하여준다.
--2. Return데이터는 , 구분자가 붙는식으로 리턴된다.
--3. CheckBoxPath 속성이 반드시 있어야 한다.
--4. AllAddYn = 'Y' 면 자동으로 [전체]를 만들어주며 , [전체]를 선택시 콤보박스 아이템을 전부 ,로 이어붙여서 리턴한다. 
--5. AllAddyn을 작성하지 않으면 [전체]가 생겨나지 않는다.
&lt;local:MultiComboBox VerticalAlignment="Center" SelectedIndex="0" HorizontalAlignment="Left" Width="150" Margin="5,0,0,0"
                                        ItemsSource="{Binding SELECTWARDNO_OUT}" SelectedValuePath="OWN_IFY_NO" DisplayMemberPath="OWN_IFY_NO_NM" SelectedValue="{Binding WARD_VALUE, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Visibility="{Binding IsWardComboVis, UpdateSourceTrigger=PropertyChanged}"
                                                 CheckBoxPath="ISCHECKED" AllAddYn="Y"
                                                 &gt;
                            &lt;/local:MultiComboBox&gt;



--UserControl (MultiComboBox)
using HIS.Core.Common;
using HSF.Controls.WPF;
using HSF.TechSvc2010.Common;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;

namespace HIS.MS.IV.RM.CO.UI
{
    public class MultiComboBox : HComboBox
    {
        const string ALL_DISPLAY = "[전체]";
        public MultiComboBox()
        {
            //this.SelectionChanged += MyRadiobuttonList_SelectionChanged;
            this.CheckBoxChecked += MultiCheckBoxChecked;
            this.CheckBoxUnChecked += MultiCheckBoxChecked;
            this.SelectionChanged += MakeALLSelected;
            this.IsCheckBoxVisible = true;
        }
        #region[PROPERTY]
        private string all_selectedvaluepath = "";
        /// &lt;summary&gt;
        /// name : 전체_SELECTEDVALUEPATH
        /// &lt;/summary&gt;        
        public string ALL_SELECTEDVALUEPATH
        {
            get { return this.all_selectedvaluepath; }
            set { if (this.all_selectedvaluepath != value) { this.all_selectedvaluepath = value; } }
        }


        #endregion
        /// &lt;summary&gt;
        /// name         : DTO의 프로퍼티 값 리턴
        /// desc         : DTO의 프로퍼티 값 리턴
        /// author       : ezCaretech 송창수
        /// create date  : 2021-08-25
        /// update date  : 2021-08-25
        /// &lt;/summary&gt;
        private string GetPropertyValue(object dto, string propertyName)
        {
            string value = "";
            if (dto.GetType().GetProperty(propertyName) != null)
            {
                if (dto.GetType().GetProperty(propertyName).GetValue(dto) == null)
                    value = "";
                else
                    value = dto.GetType().GetProperty(propertyName).GetValue(dto).ToString();
            }
            return value;
        }


        /// &lt;summary&gt;
  /// name         : 체크 시 
  /// desc         : 체크 시 
  /// author       : HANSH
  /// create date  : 2022-07-20
  /// update date  : 2022-07-20
  /// &lt;/summary&gt; 
        private void MultiCheckBoxChecked(object sender, RoutedEventArgs e)
        {            
            if (this.SelectedItems == null) return;

            ObservableCollection&lt;object&gt; p = (ObservableCollection&lt;object&gt;)this.SelectedItems;

            var selected_list = (ObservableCollection&lt;object&gt;)this.SelectedItems;
            if (selected_list == null) return;

            string prop_nm = this.SelectedValuePath;
            string code_list = "";
            foreach (var item in selected_list)
            {
                code_list += "," + this.GetPropertyValue(item, prop_nm);
            }

            if (!string.IsNullOrEmpty(code_list))
            {               
               SelectedValue = code_list.Substring(1);
            }


            SetValue(SelectedValue_Property, SelectedValue);

        }
        /// &lt;summary&gt;
  /// name         : 전체 체크 추가
  /// desc         : 전체 체크 추가
  /// author       : OWB
  /// create date  : 2022-07-20
  /// update date  : 2022-07-20
  /// &lt;/summary&gt; 
        private void MakeALLSelected(object sender, RoutedEventArgs e)
        {
            if (this.ItemsSource == null) return;
            if (this.AllAddYn == "Y")
            {
                IList list = this.ItemsSource as IList;                
                object instance = Activator.CreateInstance(list[0].GetType());
                var data = this.GetPropertyValue(list[0], this.DisplayMemberPath);
                if (data != ALL_DISPLAY)
                {
                    //string code_list = "";
                    foreach (var item in list)
                    {
                        ALL_SELECTEDVALUEPATH += "," + this.GetPropertyValue(item, this.SelectedValuePath);
                    }
                    if (!string.IsNullOrEmpty(ALL_SELECTEDVALUEPATH))
                    {
                        ALL_SELECTEDVALUEPATH = ALL_SELECTEDVALUEPATH.Substring(1);
                    }
                    instance.GetType().GetProperty(this.DisplayMemberPath).SetValue(instance, (object)ALL_DISPLAY);                    
                    instance.GetType().GetProperty(this.SelectedValuePath).SetValue(instance, (object)ALL_SELECTEDVALUEPATH);
                    list.Insert(0, instance);
                }
            }
        }
        public object GetPropValue(object src, string propName)
        {
            return src.GetType().GetProperty(propName).GetValue(src, null);
        }



        public static readonly DependencyProperty SelectedValue_Property = DependencyProperty.Register("SelectedValue",
                                                   typeof(string), typeof(MultiComboBox), new FrameworkPropertyMetadata(null, new PropertyChangedCallback(MultiComboBox.OnSelectedValueChanged)));

        public static readonly DependencyProperty AllAddYn_Property = DependencyProperty.Register("AllAddYn",
                                                   typeof(string), typeof(MultiComboBox), new FrameworkPropertyMetadata(null, new PropertyChangedCallback(MultiComboBox.OnAllAddYn_PropertyChanged)));


        [Bindable(true)]
        public new string SelectedValue
        {
            get
            {
                return (string)GetValue(SelectedValue_Property);
            }
            set
            {
                SetValue(SelectedValue_Property, value);
            }
        }
        [Bindable(BindableSupport.Yes, BindingDirection.TwoWay), ReadOnly(false),DefaultValue("N")]
        public string AllAddYn
        {
            get
            {
                return (string)GetValue(AllAddYn_Property);
            }
            set
            {
                SetValue(AllAddYn_Property, value);
            }
        }
        private static void OnSelectedValueChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
        {
            var me = ((MultiComboBox)d);            
            if (me.SelectedItems == null) return;
            
            var selected_list = (ObservableCollection&lt;object&gt;)me.SelectedItems;
            if (selected_list == null) return;

            string prop_nm = me.DisplayMemberPath;
            string code_list = "";
            foreach (var item in selected_list)
            {
                code_list += "," + me.GetPropertyValue(item, prop_nm);
            }
            if (!string.IsNullOrEmpty(code_list))
            {
                code_list = code_list.Substring(1);
            }
            //전체 이외 체크
            if (code_list.Contains(ALL_DISPLAY) &amp;&amp; !string.IsNullOrEmpty(me.ALL_SELECTEDVALUEPATH) &amp;&amp; e.OldValue.ToString().Equals(me.ALL_SELECTEDVALUEPATH))
            {
                foreach (var item in me.ItemsSource)
                {
                    var selectedvalue = me.GetPropertyValue(item, me.DisplayMemberPath);
                    if (selectedvalue == ALL_DISPLAY &amp;&amp; me.CheckBoxPath != null)
                        item.GetType().GetProperty(me.CheckBoxPath).SetValue(item, false);
                }
            }
            //전체체크
            else if (code_list.Contains(ALL_DISPLAY))
            {
                foreach (var item in me.ItemsSource)
                {
                    var selectedvalue = me.GetPropertyValue(item, me.DisplayMemberPath);
                    if (selectedvalue != ALL_DISPLAY &amp;&amp; me.CheckBoxPath != null)
                        item.GetType().GetProperty(me.CheckBoxPath).SetValue(item, false);
                }
            }           
        }

        private static void OnAllAddYn_PropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)
        {
           
        }
    }
}</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활치료 일괄예약</QUERY_NAME>
    <QUERY_TEXT>if (i_Rsvcd.Count &gt; 1)
            {
                foreach (var item in i_Rsvcd)
                {
                    if (!string.IsNullOrEmpty(sMON))
                    {
                        if (sMON == item.ORD_MON &amp;&amp; sTUE == item.ORD_TUE &amp;&amp; sWED == item.ORD_WED &amp;&amp; sTHU == item.ORD_THU &amp;&amp; sFRI == item.ORD_FRI &amp;&amp; sSAT == item.ORD_SAT &amp;&amp; sTyrm_cd == item.TYRM_CD &amp;&amp; sCNT == item.RSV_SLOT_CNT)
                        {
                            sMON = item.ORD_MON;
                            sTUE = item.ORD_TUE;
                            sWED = item.ORD_WED;
                            sTHU = item.ORD_THU;
                            sFRI = item.ORD_FRI;
                            sSAT = item.ORD_SAT;
                            sTyrm_cd = item.TYRM_CD;
                            sCNT = item.RSV_SLOT_CNT;
                        }
                        else
                        {
                            MsgBox.Display(TRCommon.getMessage("INPUT", "선택한 처방의 패턴/치료실/슬롯카운터가 일치하지 않습니다.!!"), MessageType.MSG_TYPE_EXCLAMATION, "확인", Owner: this.OwnerWindow, TimeSpan: TRCommon.msgTime);
                            return false;
                        }
                    }
                    else
                    {
                        sMON = item.ORD_MON;
                        sTUE = item.ORD_TUE;
                        sWED = item.ORD_WED;
                        sTHU = item.ORD_THU;
                        sFRI = item.ORD_FRI;
                        sSAT = item.ORD_SAT;
                        sTyrm_cd = item.TYRM_CD;
                        sCNT = item.RSV_SLOT_CNT;
                    }
                }
            }
PtRsvList_Out =&gt;예약 가능 처방 리스트
ISSELECTED -&gt; 선택된 로우
SelectPatientOrdList =&gt; 재활 오더 조회

처방낼때 선택기간을 지정한것이 RSV_DT에 들어감.
오늘을 포함한 미래 예정일에 대해서 월화수목금이 있는지 Y , N으로 데이터를 넣음. (월~토) //패턴
치료실 코드가 셋팅된 치료실 정보 -&gt; TYRM_CD
RSV_SLOT_CNT =&gt; 치료실정보에 세팅된 코드의 슬롯 카운트

일괄예약하려면 처방의 예약일(요일),치료코드의 치료실세팅, 치료코드의 슬롯카운트 3개가 전부 동일해야만 가능함.
</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>진검 균코드 정보 조회화면</QUERY_NAME>
    <QUERY_TEXT>미생물검사정보관리 -&gt; 미생물동정코드 탭을 조회하면 모든 균 정보를 볼 수 있음,항생제도 마찬가지.</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>프로시저 예외처리</QUERY_NAME>
    <QUERY_TEXT>      -- NAME         : 영상의학과 비예약검사 외부판독 여부 확인 
      -- DESC         : 영상의학과 비예약 검사 접수시 외부판독검사면 희망의사에 외부판독의사로 업데이트함.
      -- AUTHOR       : 오원빈
      -- CREATE DATE  : 2022-07-26
      -- UPDATE DATE  : 최종 수정일자 , 수정자, 수정개요 
      BEGIN
          IF HIS_HSP_TP_CD = '03' AND FT_MSE_USECNTR(HIS_HSP_TP_CD,'USECNTR','ACCEPT_01','PC_MSE_ACCEPT_PROC') = 'Y' THEN
              BEGIN                                                                                                      
                  UPDATE MOOOREXM A
                     SET EXM_CHDR_STF_NO = V_HOPE_STF_NO
                   WHERE A.HSP_TP_CD = HIS_HSP_TP_CD
                     AND A.ORD_ID = IN_ORD_ID
                     AND EXISTS(SELECT 1
                                  FROM MSERMCCC
                                 WHERE HSP_TP_CD = A.HSP_TP_CD
                                   AND EXM_GRP_CD = 'HEXM'
                                   AND EXM_GRP_DTL_CD = A.ORD_CD
                                   AND USE_YN = 'Y'); 
              EXCEPTION
                  WHEN OTHERS THEN
                      BEGIN   
                          PC_MSE_USECNTR('USECNTR','ACCEPT_01','PC_MSE_ACCEPT_PROC','N',HIS_HSP_TP_CD,HIS_STF_NO,HIS_PRGM_NM,HIS_IP_ADDR); --에러발생시 다음부터 해당로직을 타지 않게끔 수정함.
                      END;                  
              END;
          END IF;
      END;

;

EXEC PC_MSE_USECNTR('USECNTR','ACCEPT_01','PC_MSE_ACCEPT_PROC','N',HIS_HSP_TP_CD); --에러발생시 다음부터 해당로직을 타지 않게끔 수정함. (수동)


;
SELECT FT_MSE_USECNTR(HIS_HSP_TP_CD,'USECNTR','MSTRHSUD_01','PC_MST_MSTRHSUD_INSERT')
   FROM DUAL
;</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상의학과 재료자동발행 마스터 세팅</QUERY_NAME>
    <QUERY_TEXT>EXEC :IN_ORD_CD := '30078129';
EXEC :HIS_HSP_TP_CD := '03';
EXEC :IN_TRTM_QTY := '1';
EXEC :IN_SV_TBL_NM := 'MOOORFED';
EXEC :DUP_PBL_YN := 'N';
EXEC :MED_MIFI_TP_CD := '';
EXEC :PACT_TP_CD := '';
select *
    from msermatd
    where hsp_TP_CD='03'
--    and ord_slip_ctg_CD &lt;&gt;'RC'
;
BEGIN
INSERT INTO MSERMATD
     (
       ORD_CD                                             /*처방코드*/
     , HSP_TP_CD                                          /*병원구분코드*/
     , TRTM_QTY                                           /*처치수량*/
     , EXM_CD                                             /*검사코드*/
     , SV_TBL_NM                                          /*저장테이블명*/
     , FSR_STF_NO                                         /*최초등록직원번호*/
     , FSR_DTM                                            /*최초등록일시*/
     , FSR_PRGM_NM                                        /*최초등록프로그램명*/
     , FSR_IP_ADDR                                        /*최초등록IP주소*/
     , LSH_STF_NO                                         /*최종변경직원번호*/
     , LSH_DTM                                            /*최종변경일시*/
     , LSH_PRGM_NM                                        /*최종변경프로그램명*/
     , LSH_IP_ADDR                                        /*최종변경IP주소*/
     , PACT_TP_CD                                         /*원무접수구분코드*/
     , MED_MIFI_TP_CD                                     /*진료수가보험구분코드*/
     , DUP_PBL_YN                                         /*중복발행여부*/
     , ORD_SLIP_CTG_CD                                    /*처방전표분류코드*/
     , UPR_ORD_SLIP_CTG_CD                                /*상위처방전표분류코드*/
)
SELECT :IN_ORD_CD
     , A.HSP_TP_CD
     , :IN_TRTM_QTY
     , A.EXM_CD
     , :IN_SV_TBL_NM
     , 'SSSUP11'
     , SYSDATE
     , 'GOLDEN'
     , 'GOLDEN'
     , 'SSSUP11'
     , SYSDATE
     , 'GOLDEN'
     , 'GOLDEN'
     , B.PACT_TP_CD
     , :MED_MIFI_TP_CD
     , :DUP_PBL_YN
     , A.ORD_SLIP_CTG_CD
     , C.UPR_ORD_SLIP_CTG_CD
FROM MSERMMMC A
   , (SELECT 'O' PACT_TP_CD
        FROM DUAL
      UNION ALL
      SELECT 'I' PACT_TP_CD
        FROM DUAL
      UNION ALL
      SELECT 'E' PACT_TP_CD
        FROM DUAL
     )B
   , CCOOCCSC C
  WHERE A.HSP_TP_CD = C.HSP_TP_CD
    AND A.HSP_TP_CD = :HIS_HSP_TP_CD
    AND A.ORD_SLIP_CTG_CD = C.ORD_SLIP_CTG_CD
    AND A.EXM_CD NOT IN ('RM07017','RM07023','RM07028','RM07046','RM07051','RM07056')
    AND EXISTS(SELECT 1
                FROM MSERMCCC
                WHERE HSP_TP_CD = A.HSP_TP_CD
                AND EXM_GRP_CD = 'RM'
                AND EXM_GRP_DTL_CD = A.EXM_CD) 
    AND B.PACT_TP_CD LIKE :PACT_TP_CD || '%'                
order by exm_CD;
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        NULL;
END;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>화순 원외판독 가판독에서 판독으로 업데이트</QUERY_NAME>
    <QUERY_TEXT>SELECT *
    FROM MSERMAAD  A
    WHERE HSP_TP_CD ='02'
    AND PHTG_DTM &gt; '2022-06-13'
    AND EXM_PRGR_STS_CD = 'D'
    AND EXISTS(
SELECT *
    FROM MSERMMMC
    WHERE HSP_TP_CD='02'
      AND IPTN_RM_NM = 'MS'
      AND END_DT IS NULL
      AND (ORD_SLIP_CTG_CD LIKE 'RM%' OR ORD_SLIP_CTG_CD LIKE 'RC%')
      AND EXM_CD = A.ORD_CD
               )
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 치료 시행대상자 당일</QUERY_NAME>
    <QUERY_TEXT>
EXEC :SID := '1000898';
EXEC :FROM_DT := '20200817';
EXEC :TO_DT := '20200822';
EXEC :HIS_HSP_TP_CD := '01';

  SELECT   /*HIS.MS.TR.RE.RS.SelectPtRsvSlotList*/
          A.RSV_TIME                      RSV_TIME
        , A.RSV_DY_SEQ                    RSV_DY_SEQ
        , A.RSV_SLOT_SEQ                  RSV_SLOT_SEQ
        , A.RHRM_CD                       RHRM_CD
        , A.RHRM_NM                       RHRM_NM
        , A.TYRM_TEL_NO                   TYRM_TEL_NO   
        , A.RTST_SID                      RTST_SID                  
        , SELDAY.PACT_TP_NM || DECODE(SELDAY.TRSV_YN,'Y', '(가)' || NVL(SELDAY.PNMS, 'N')  ,NVL(SELDAY.PNMS, 'N'))      SELDAY
        , SELDAY.PT_NO                         PT_NO
        , SELDAY.PT_NM                         PT_NM 
        , SELDAY.RSV_DT                                                                                                 RSV_DT
        , MON.PACT_TP_NM || DECODE(MON.TRSV_YN,'Y', '(가)' || NVL(MON.PNMS, 'N')  ,NVL(MON.PNMS, 'N'))       MON
        , TUE.PACT_TP_NM || DECODE(TUE.TRSV_YN,'Y', '(가)' || NVL(TUE.PNMS, 'N')  ,NVL(TUE.PNMS, 'N'))       TUE
        , WED.PACT_TP_NM || DECODE(WED.TRSV_YN,'Y', '(가)' || NVL(WED.PNMS, 'N')  ,NVL(WED.PNMS, 'N'))       WED
        , THU.PACT_TP_NM || DECODE(THU.TRSV_YN,'Y', '(가)' || NVL(THU.PNMS, 'N')  ,NVL(THU.PNMS, 'N'))       THU
        , FRI.PACT_TP_NM || DECODE(FRI.TRSV_YN,'Y', '(가)' || NVL(FRI.PNMS, 'N')  ,NVL(FRI.PNMS, 'N'))       FRI
        , SAT.PACT_TP_NM || DECODE(SAT.TRSV_YN,'Y', '(가)' || NVL(SAT.PNMS, 'N')  ,NVL(SAT.PNMS, 'N'))       SAT
        , SELDAY.RSV_MEMO                 SEL_MEMO
        , MON.RSV_MEMO                    MON_MEMO
        , TUE.RSV_MEMO                    TUE_MEMO
        , WED.RSV_MEMO                    WED_MEMO
        , THU.RSV_MEMO                    THU_MEMO
        , FRI.RSV_MEMO                    FRI_MEMO
        , SAT.RSV_MEMO                    SAT_MEMO
        , SELDAY.PT_NO                    SEL_PT_NO
        , MON.PT_NO                    MON_PT_NO
        , TUE.PT_NO                      TUE_PT_NO
        , WED.PT_NO                      WED_PT_NO
        , THU.PT_NO                    THU_PT_NO
        , FRI.PT_NO                      FRI_PT_NO
        , SAT.PT_NO                      SAT_PT_NO
        , SELDAY.STTP_CD                  SEL_STTP_CD
        , MON.STTP_CD                     MON_STTP_CD
        , TUE.STTP_CD                     TUE_STTP_CD
        , WED.STTP_CD                     WED_STTP_CD
        , THU.STTP_CD                     THU_STTP_CD
        , FRI.STTP_CD                     FRI_STTP_CD
        , SAT.STTP_CD                     SAT_STTP_CD
        , SELDAY.TRP_FMT_YN               SEL_TRP_FMT_YN
        , MON.TRP_FMT_YN                  MON_TRP_FMT_YN
        , TUE.TRP_FMT_YN                  TUE_TRP_FMT_YN
        , WED.TRP_FMT_YN                  WED_TRP_FMT_YN
        , THU.TRP_FMT_YN                  THU_TRP_FMT_YN
        , FRI.TRP_FMT_YN                  FRI_TRP_FMT_YN
        , SAT.TRP_FMT_YN                  SAT_TRP_FMT_YN
        , SELDAY.TRSV_YN                  SELDAY_TRSV_YN
        , MON.TRSV_YN                     MON_TRSV_YN
        , TUE.TRSV_YN                     TUE_TRSV_YN
        , WED.TRSV_YN                     WED_TRSV_YN
        , THU.TRSV_YN                     THU_TRSV_YN
        , FRI.TRSV_YN                     FRI_TRSV_YN
        , SAT.TRSV_YN                     SAT_TRSV_YN
        , TO_CHAR(SELDAY.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  SEL_ACPT_DTM
        , TO_CHAR(MON.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  MON_ACPT_DTM
        , TO_CHAR(TUE.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  TUE_ACPT_DTM
        , TO_CHAR(WED.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  WED_ACPT_DTM
        , TO_CHAR(THU.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  THU_ACPT_DTM
        , TO_CHAR(FRI.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  FRI_ACPT_DTM
        , TO_CHAR(SAT.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  SAT_ACPT_DTM
        , DECODE(SELDAY.ACPT_DTM,NULL,'N','Y')            SEL_ACPT_DTM_YN
        , DECODE(MON.ACPT_DTM,NULL,'N','Y')               MON_ACPT_DTM_YN
        , DECODE(TUE.ACPT_DTM,NULL,'N','Y')               TUE_ACPT_DTM_YN
        , DECODE(WED.ACPT_DTM,NULL,'N','Y')               WED_ACPT_DTM_YN
        , DECODE(THU.ACPT_DTM,NULL,'N','Y')               THU_ACPT_DTM_YN
        , DECODE(FRI.ACPT_DTM,NULL,'N','Y')               FRI_ACPT_DTM_YN
        , DECODE(SAT.ACPT_DTM,NULL,'N','Y')               SAT_ACPT_DTM_YN
        , SELDAY.SCHD_CRE_SEQ                             SEL_SCHD_CRE_SEQ
        , MON.SCHD_CRE_SEQ                                MON_SCHD_CRE_SEQ
        , TUE.SCHD_CRE_SEQ                                TUE_SCHD_CRE_SEQ
        , WED.SCHD_CRE_SEQ                                WED_SCHD_CRE_SEQ
        , THU.SCHD_CRE_SEQ                                THU_SCHD_CRE_SEQ
        , FRI.SCHD_CRE_SEQ                                FRI_SCHD_CRE_SEQ
        , SAT.SCHD_CRE_SEQ                                SAT_SCHD_CRE_SEQ
        , TO_CHAR(SELDAY.ORD_DT, 'YYYY-MM-DD')            SEL_ORD_DT
        , TO_CHAR(MON.ORD_DT, 'YYYY-MM-DD')               MON_ORD_DT
        , TO_CHAR(TUE.ORD_DT, 'YYYY-MM-DD')               TUE_ORD_DT
        , TO_CHAR(WED.ORD_DT, 'YYYY-MM-DD')               WED_ORD_DT
        , TO_CHAR(THU.ORD_DT, 'YYYY-MM-DD')               THU_ORD_DT
        , TO_CHAR(FRI.ORD_DT, 'YYYY-MM-DD')               FRI_ORD_DT
        , TO_CHAR(SAT.ORD_DT, 'YYYY-MM-DD')               SAT_ORD_DT
        , SELDAY.SEC_RRN                                  SEL_SEC_RRN
        , MON.SEC_RRN                                     MON_SEC_RRN
        , TUE.SEC_RRN                                     TUE_SEC_RRN
        , WED.SEC_RRN                                     WED_SEC_RRN
        , THU.SEC_RRN                                     THU_SEC_RRN
        , FRI.SEC_RRN                                     FRI_SEC_RRN
        , SAT.SEC_RRN                                     SAT_SEC_RRN
        , SELDAY.PACT_ID                                  SEL_PACT_ID
        , MON.PACT_ID                                     MON_PACT_ID
        , TUE.PACT_ID                                     TUE_PACT_ID
        , WED.PACT_ID                                     WED_PACT_ID
        , THU.PACT_ID                                     THU_PACT_ID
        , FRI.PACT_ID                                     FRI_PACT_ID
        , SAT.PACT_ID                                     SAT_PACT_ID
        , SELDAY.PACT_TP_CD                               SEL_PACT_TP_CD
        , MON.PACT_TP_CD                                  MON_PACT_TP_CD
        , TUE.PACT_TP_CD                                  TUE_PACT_TP_CD
        , WED.PACT_TP_CD                                  WED_PACT_TP_CD 
        , THU.PACT_TP_CD                                  THU_PACT_TP_CD 
        , FRI.PACT_TP_CD                                  FRI_PACT_TP_CD 
        , SAT.PACT_TP_CD                                  SAT_PACT_TP_CD
        , SELDAY.RHTR_ORD_NM                              SEL_RHTR_ORD_NM
        , SELDAY.RPY_STS_CD                               SEL_RPY_STS_CD
        , SELDAY.RHTR_ORD_CD                              SEL_RHTR_ORD_CD
        , MON.RHTR_ORD_CD                                 MON_RHTR_ORD_CD
        , TUE.RHTR_ORD_CD                                 TUE_RHTR_ORD_CD
        , WED.RHTR_ORD_CD                                 WED_RHTR_ORD_CD
        , THU.RHTR_ORD_CD                                 THU_RHTR_ORD_CD
        , FRI.RHTR_ORD_CD                                 FRI_RHTR_ORD_CD
        , SAT.RHTR_ORD_CD                                 SAT_RHTR_ORD_CD
        , REPLACE(REPLACE(SELDAY.ORD_PBL_PTM_CNTE, CHR(10), '//') , CHR(10),'')                        SEL_ORD_PBL_PTM_CNTE
        , SELDAY.ORD_PBL_PTM_CNTE_CHK                     SEL_ORD_PBL_PTM_CNTE_CHK
        , MON.ORD_PBL_PTM_CNTE                            MON_ORD_PBL_PTM_CNTE
        , TUE.ORD_PBL_PTM_CNTE                            TUE_ORD_PBL_PTM_CNTE
        , WED.ORD_PBL_PTM_CNTE                            WED_ORD_PBL_PTM_CNTE
        , THU.ORD_PBL_PTM_CNTE                            THU_ORD_PBL_PTM_CNTE
        , FRI.ORD_PBL_PTM_CNTE                            FRI_ORD_PBL_PTM_CNTE
        , SAT.ORD_PBL_PTM_CNTE                            SAT_ORD_PBL_PTM_CNTE
        , NVL(SELDAY.MEDREC_YN, 'N')          SEL_MEDREC_YN
        , NVL(MON.MEDREC_YN, 'N')              MON_MEDREC_YN
        , NVL(TUE.MEDREC_YN, 'N')              TUE_MEDREC_YN
        , NVL(WED.MEDREC_YN, 'N')              WED_MEDREC_YN
        , NVL(THU.MEDREC_YN, 'N')              THU_MEDREC_YN
        , NVL(FRI.MEDREC_YN, 'N')              FRI_MEDREC_YN
        , NVL(SAT.MEDREC_YN, 'N')              SAT_MEDREC_YN
     , SELDAY.RHTR_TP_CD                         SEL_RHTR_TP_CD
      , MON.RHTR_TP_CD          MON_RHTR_TP_CD
      , TUE.RHTR_TP_CD          TUE_RHTR_TP_CD
      , WED.RHTR_TP_CD          WED_RHTR_TP_CD
      , THU.RHTR_TP_CD          THU_RHTR_TP_CD
      , FRI.RHTR_TP_CD          FRI_RHTR_TP_CD
      , SAT.RHTR_TP_CD          SAT_RHTR_TP_CD
      , MON.RSV_DT           MON_RSV_DT
      , TUE.RSV_DT           TUE_RSV_DT
      , WED.RSV_DT           WED_RSV_DT
      , THU.RSV_DT           THU_RSV_DT
      , FRI.RSV_DT           FRI_RSV_DT
      , SAT.RSV_DT           SAT_RSV_DT
      , SELDAY.RHTR_ORD_ID                           SEL_RHTR_ORD_ID
      , MON.RHTR_ORD_ID          MON_RHTR_ORD_ID
      , TUE.RHTR_ORD_ID          TUE_RHTR_ORD_ID
      , WED.RHTR_ORD_ID          WED_RHTR_ORD_ID
      , THU.RHTR_ORD_ID          THU_RHTR_ORD_ID
      , FRI.RHTR_ORD_ID          FRI_RHTR_ORD_ID
      , SAT.RHTR_ORD_ID          SAT_RHTR_ORD_ID
      , SELDAY.WD_DEPT_CD                               SEL_WD_DEPT_CD
      , MON.WD_DEPT_CD          MON_WD_DEPT_CD
      , TUE.WD_DEPT_CD          TUE_WD_DEPT_CD
      , WED.WD_DEPT_CD          WED_WD_DEPT_CD
      , THU.WD_DEPT_CD          THU_WD_DEPT_CD
      , FRI.WD_DEPT_CD          FRI_WD_DEPT_CD
      , SAT.WD_DEPT_CD          SAT_WD_DEPT_CD
   FROM
       (
        SELECT
               TO_CHAR(A.RSV_DTM, 'HH24:MI')       RSV_TIME
             , A.RSV_DY_SEQ                        RSV_DY_SEQ
             , A.RHRM_CD                           RHRM_CD
             , B.TYRM_NM                     RHRM_NM
             , A.RSV_SLOT_SEQ                      RSV_SLOT_SEQ
             , B.TYRM_TEL_NO                       TYRM_TEL_NO
             , A.RTST_SID                          RTST_SID
         FROM MSTRHSLD A , MSTRHSRD B
        WHERE A.HSP_TP_CD = B.HSP_TP_CD
          AND A.RHRM_CD = B.TYRM_CD
          AND B.USE_YN ='Y'
          AND A.RTST_SID  = :SID
          AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
          AND A.HSP_TP_CD = :HIS_HSP_TP_CD
        GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.TYRM_NM , A.RSV_SLOT_SEQ, B.TYRM_TEL_NO, A.RTST_SID
      ) A
     ,(
 SELECT
        TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO               PNMS
  --    , NVL(REPLACE(B.PT_NM, ' ','_'), 'X')               PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , B.PT_NM             PT_NM 
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD                   RHTR_TP_CD      
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
         AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
         AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
      , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID 
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
      , (SELECT C.PACT_TP_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6) 
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7))  SEC_RRN
      , (SELECT S.PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
      , (SELECT D.RHTR_ORD_NM
           FROM MSTRHODD C , MSTRHCDC D
          WHERE C.HSP_TP_CD = D.HSP_TP_CD
            AND C.RHTR_ORD_CD = D.RHTR_ORD_CD
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
         AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
         AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_NM
      , (SELECT DECODE(S.RFND_YN, 'Y', 'F', DECODE(XBIL.FT_HIPASS_YN(S.PT_NO, S.HSP_TP_CD, SYSDATE, S.PACT_ID),'Y', 'Y', S.RPY_STS_CD)) RPY_STS_CD --DECODE(XBIL.FT_ACP_HIPASS_YN(S.HSP_TP_CD, S.PT_NO, TO_CHAR(S.RSV_DT,'YYYY-MM-DD')),'Y','H', S.RPY_STS_CD) RPY_STS_CD
           FROM MSTRHODD C , MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RPY_STS_CD
      , (SELECT C.RHTR_ORD_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_PBL_PTM_CNTE
       ,(SELECT DECODE(Z.ORD_PBL_PTM_CNTE,NULL,'','★')
              FROM ( SELECT MIN(D.RSV_DT) RSV_DT, D.ORD_PBL_PTM_CNTE
              FROM MSTRHODD C, MSTRHODD D
             WHERE C.RSV_THRP_SID = A.RTST_SID
               AND C.TRP_RSV_DTM = A.RSV_DTM
               AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
               AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
               AND C.HSP_TP_CD = :HIS_HSP_TP_CD
               AND C.PT_NO = D.PT_NO
               AND C.ORD_DT = D.ORD_DT
               AND C.RHTR_ORD_SEQ = D.RHTR_ORD_SEQ
               AND C.HSP_TP_CD = D.HSP_TP_CD
               AND C.RHTR_ORD_CD = D.RHTR_ORD_CD
               AND C.RHRM_CD = A.RHRM_CD
                GROUP BY D.ORD_PBL_PTM_CNTE
           ) Z
             WHERE Z.RSV_DT = TRUNC(A.RSV_DTM)--TRUNC(A.RSV_DTM)
            AND ROWNUM = 1)                           ORD_PBL_PTM_CNTE_CHK
       , (SELECT MEDREC_YN
            FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                    , '2', 'T'
                                                    , '11', 'Y'
                                                    , '12', 'Y'
                                                    , 'N') MEDREC_YN
                    FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                   WHERE C.HSP_TP_CD = S.HSP_TP_CD
                     AND C.PT_NO = S.PT_NO
                     AND C.ORD_DT = S.ORD_DT
                     AND C.RSV_DT = S.RSV_DT
                     AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                     AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                     AND C.RSV_THRP_SID = A.RTST_SID
                     AND C.TRP_RSV_DTM = A.RSV_DTM
                     AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                     AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                     AND C.RHRM_CD = A.RHRM_CD
                     AND C.HSP_TP_CD = :HIS_HSP_TP_CD     
                     AND S.PT_NO = X.PT_NO
                     AND S.HSP_TP_CD = X.HSP_TP_CD
                     AND S.RTM_MED_DT = X.MED_DT
                     AND S.PACT_ID = X.PACT_ID
                     AND X.MDRC_DC_TP_CD = 'C'
                     AND X.LST_YN = 'Y'
                     AND X.MDFM_ID = Y.MDFM_ID
                     AND X.WK_SID = A.RTST_SID
                     AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                     AND Y.HSP_TP_CD = C.HSP_TP_CD
                   ORDER BY MDRC_FOM_SEQ DESC)
           WHERE ROWNUM = 1)                            MEDREC_YN
          , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
               FROM MSTRHODD C
                  , MSTRHSUD S
                  , ACPPRAAM R
              WHERE C.HSP_TP_CD = S.HSP_TP_CD
             AND C.PT_NO = S.PT_NO
             AND C.ORD_DT = S.ORD_DT
             AND C.RSV_DT = S.RSV_DT
             AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
             AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
             AND C.RSV_THRP_SID = A.RTST_SID
             AND C.TRP_RSV_DTM = A.RSV_DTM
             AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
             AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
             AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND R.PACT_ID = S.PACT_ID
                AND R.SIHS_YN = 'Y'
                AND R.APCN_YN = 'N'
                AND R.HSP_TP_CD = S.HSP_TP_CD
             AND ROWNUM = 1)                            WD_DEPT_CD
          , A.RHTR_ORD_ID                                  RHTR_ORD_ID
    FROM MSTRHSLD A
       , PCTPCPAM_DAMO B
      WHERE A.RSV_PT_NO = B.PT_NO(+)
        AND A.RTST_SID  = :SID
        AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:FROM_DT, 'YYYYMMDD') + 0.99999
        AND A.RSV_STS_TP_CD IN ('Y', 'B')
        AND A.HSP_TP_CD = :HIS_HSP_TP_CD
      GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
             , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ, A.RHTR_TP_CD, A.RHTR_ORD_ID
       ) SELDAY
     ,(
 SELECT TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO               PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD          RHTR_TP_CD
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
      , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
      , (SELECT C.PACT_TP_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD      
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6) 
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7)) SEC_RRN
      , (SELECT PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
       , (SELECT C.RHTR_ORD_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_PBL_PTM_CNTE
      , (SELECT MEDREC_YN
           FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                   , '2', 'T'
                                                   , '11', 'Y'
                                                   , '12', 'Y'
                                                   , 'N') MEDREC_YN
                   FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                  WHERE C.HSP_TP_CD = S.HSP_TP_CD
                    AND C.PT_NO = S.PT_NO
                    AND C.ORD_DT = S.ORD_DT
                    AND C.RSV_DT = S.RSV_DT
                    AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                    AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                    AND C.RSV_THRP_SID = A.RTST_SID
                    AND C.TRP_RSV_DTM = A.RSV_DTM
                    AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                    AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                    AND C.RHRM_CD = A.RHRM_CD
                    AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND S.PT_NO = X.PT_NO
                    AND S.HSP_TP_CD = X.HSP_TP_CD
                    AND S.RTM_MED_DT = X.MED_DT
                    AND S.PACT_ID = X.PACT_ID
                    AND X.MDRC_DC_TP_CD = 'C'
                    AND X.LST_YN = 'Y'
                    AND X.MDFM_ID = Y.MDFM_ID
                    AND X.WK_SID = A.RTST_SID
                    AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                    AND Y.HSP_TP_CD = C.HSP_TP_CD
                  ORDER BY MDRC_FOM_SEQ DESC)
          WHERE ROWNUM = 1)                             MEDREC_YN
       , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
            FROM MSTRHODD C
               , MSTRHSUD S
               , ACPPRAAM R
           WHERE C.HSP_TP_CD = S.HSP_TP_CD
          AND C.PT_NO = S.PT_NO
          AND C.ORD_DT = S.ORD_DT
          AND C.RSV_DT = S.RSV_DT
          AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
          AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
          AND C.RSV_THRP_SID = A.RTST_SID
          AND C.TRP_RSV_DTM = A.RSV_DTM
          AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
          AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
          AND C.RHRM_CD = A.RHRM_CD
             AND C.HSP_TP_CD = :HIS_HSP_TP_CD
             AND R.PACT_ID = S.PACT_ID
             AND R.SIHS_YN = 'Y'
             AND R.APCN_YN = 'N'
             AND R.HSP_TP_CD = S.HSP_TP_CD
          AND ROWNUM = 1)                               WD_DEPT_CD
       , A.RHTR_ORD_ID                                     RHTR_ORD_ID
 FROM MSTRHSLD A
    , PCTPCPAM_DAMO B
       WHERE A.RSV_PT_NO = B.PT_NO(+)
         AND A.RTST_SID  = :SID
         AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
         AND TO_CHAR(A.RSV_DTM, 'D') = '2'
         AND A.RSV_STS_TP_CD IN ('Y', 'B')
         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
              , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ, A.RHTR_TP_CD, A.RHTR_ORD_ID
        ) MON
     ,(
 SELECT
        TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO            PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD                   RHTR_TP_CD      
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
       , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
      , (SELECT C.PACT_TP_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6) 
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7)) SEC_RRN
      , (SELECT PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
       , (SELECT C.RHTR_ORD_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_PBL_PTM_CNTE
      , (SELECT MEDREC_YN
           FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                   , '2', 'T'
                                                   , '11', 'Y'
                                                   , '12', 'Y'
                                                   , 'N') MEDREC_YN
                   FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                  WHERE C.HSP_TP_CD = S.HSP_TP_CD
                    AND C.PT_NO = S.PT_NO
                    AND C.ORD_DT = S.ORD_DT
                    AND C.RSV_DT = S.RSV_DT
                    AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                    AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                    AND C.RSV_THRP_SID = A.RTST_SID
                    AND C.TRP_RSV_DTM = A.RSV_DTM
                    AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                    AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                    AND C.RHRM_CD = A.RHRM_CD
                    AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND S.PT_NO = X.PT_NO
                    AND S.HSP_TP_CD = X.HSP_TP_CD
                    AND S.RTM_MED_DT = X.MED_DT
                    AND S.PACT_ID = X.PACT_ID
                    AND X.MDRC_DC_TP_CD = 'C'
                    AND X.LST_YN = 'Y'
                    AND X.MDFM_ID = Y.MDFM_ID
                    AND X.WK_SID = A.RTST_SID
                    AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                    AND Y.HSP_TP_CD = C.HSP_TP_CD
                  ORDER BY MDRC_FOM_SEQ DESC)
          WHERE ROWNUM = 1)                             MEDREC_YN
       , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
            FROM MSTRHODD C
               , MSTRHSUD S
               , ACPPRAAM R
           WHERE C.HSP_TP_CD = S.HSP_TP_CD
          AND C.PT_NO = S.PT_NO
          AND C.ORD_DT = S.ORD_DT
          AND C.RSV_DT = S.RSV_DT
          AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
          AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
          AND C.RSV_THRP_SID = A.RTST_SID
          AND C.TRP_RSV_DTM = A.RSV_DTM
          AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
          AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
          AND C.RHRM_CD = A.RHRM_CD
             AND C.HSP_TP_CD = :HIS_HSP_TP_CD
             AND R.PACT_ID = S.PACT_ID
             AND R.SIHS_YN = 'Y'
             AND R.APCN_YN = 'N'
             AND R.HSP_TP_CD = S.HSP_TP_CD
          AND ROWNUM = 1)                               WD_DEPT_CD
       , A.RHTR_ORD_ID                                     RHTR_ORD_ID
 FROM MSTRHSLD A
    , PCTPCPAM_DAMO B
       WHERE A.RSV_PT_NO = B.PT_NO(+)
         AND A.RTST_SID  = :SID
         AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
         AND TO_CHAR(A.RSV_DTM, 'D') = '3'
         AND A.RSV_STS_TP_CD IN ('Y', 'B')
         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
              , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ , A.RHTR_TP_CD, A.RHTR_ORD_ID
        ) TUE
     ,(
 SELECT
        TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO            PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD                   RHTR_TP_CD      
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
      , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
      , (SELECT C.PACT_TP_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6) 
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7))  SEC_RRN
      , (SELECT PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
       , (SELECT C.RHTR_ORD_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_PBL_PTM_CNTE
      , (SELECT MEDREC_YN
           FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                   , '2', 'T'
                                                   , '11', 'Y'
                                                   , '12', 'Y'
                                                   , 'N') MEDREC_YN
                   FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                  WHERE C.HSP_TP_CD = S.HSP_TP_CD
                    AND C.PT_NO = S.PT_NO
                    AND C.ORD_DT = S.ORD_DT
                    AND C.RSV_DT = S.RSV_DT
                    AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                    AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                    AND C.RSV_THRP_SID = A.RTST_SID
                    AND C.TRP_RSV_DTM = A.RSV_DTM
                    AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                    AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                    AND C.RHRM_CD = A.RHRM_CD
                    AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND S.PT_NO = X.PT_NO
                    AND S.HSP_TP_CD = X.HSP_TP_CD
                    AND S.RTM_MED_DT = X.MED_DT
                    AND S.PACT_ID = X.PACT_ID
                    AND X.MDRC_DC_TP_CD = 'C'
                    AND X.LST_YN = 'Y'
                    AND X.MDFM_ID = Y.MDFM_ID
                    AND X.WK_SID = A.RTST_SID
                    AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                    AND Y.HSP_TP_CD = C.HSP_TP_CD
                  ORDER BY MDRC_FOM_SEQ DESC)
          WHERE ROWNUM = 1)                             MEDREC_YN
       , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
            FROM MSTRHODD C
               , MSTRHSUD S
               , ACPPRAAM R
           WHERE C.HSP_TP_CD = S.HSP_TP_CD
          AND C.PT_NO = S.PT_NO
          AND C.ORD_DT = S.ORD_DT
          AND C.RSV_DT = S.RSV_DT
          AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
          AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
          AND C.RSV_THRP_SID = A.RTST_SID
          AND C.TRP_RSV_DTM = A.RSV_DTM
          AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
          AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
          AND C.RHRM_CD = A.RHRM_CD
             AND C.HSP_TP_CD = :HIS_HSP_TP_CD
             AND R.PACT_ID = S.PACT_ID
             AND R.SIHS_YN = 'Y'
             AND R.APCN_YN = 'N'
             AND R.HSP_TP_CD = S.HSP_TP_CD
          AND ROWNUM = 1)                               WD_DEPT_CD
       , A.RHTR_ORD_ID                                     RHTR_ORD_ID
 FROM MSTRHSLD A
    , PCTPCPAM_DAMO B
       WHERE A.RSV_PT_NO = B.PT_NO(+)
         AND A.RTST_SID  = :SID
         AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
         AND TO_CHAR(A.RSV_DTM, 'D') = '4'
         AND A.RSV_STS_TP_CD IN ('Y', 'B')
         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
              , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ , A.RHTR_TP_CD, A.RHTR_ORD_ID
        ) WED
     ,(
 SELECT
        TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO            PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD            RHTR_TP_CD      
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
      , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
   , (SELECT C.PACT_TP_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6) 
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7))  SEC_RRN
      , (SELECT PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
      , (SELECT C.RHTR_ORD_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_PBL_PTM_CNTE
      , (SELECT MEDREC_YN
           FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                   , '2', 'T'
                                                   , '11', 'Y'
                                                   , '12', 'Y'
                                                   , 'N') MEDREC_YN
                   FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                  WHERE C.HSP_TP_CD = S.HSP_TP_CD
                    AND C.PT_NO = S.PT_NO
                    AND C.ORD_DT = S.ORD_DT
                    AND C.RSV_DT = S.RSV_DT
                    AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                    AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                    AND C.RSV_THRP_SID = A.RTST_SID
                    AND C.TRP_RSV_DTM = A.RSV_DTM
                    AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                    AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                    AND C.RHRM_CD = A.RHRM_CD
                    AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND S.PT_NO = X.PT_NO
                    AND S.HSP_TP_CD = X.HSP_TP_CD
                    AND S.RTM_MED_DT = X.MED_DT
                    AND S.PACT_ID = X.PACT_ID
                    AND X.MDRC_DC_TP_CD = 'C'
                    AND X.LST_YN = 'Y'
                    AND X.MDFM_ID = Y.MDFM_ID
                    AND X.WK_SID = A.RTST_SID
                    AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                    AND Y.HSP_TP_CD = C.HSP_TP_CD
                  ORDER BY MDRC_FOM_SEQ DESC)
          WHERE ROWNUM = 1)                             MEDREC_YN
       , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
            FROM MSTRHODD C
               , MSTRHSUD S
               , ACPPRAAM R
           WHERE C.HSP_TP_CD = S.HSP_TP_CD
          AND C.PT_NO = S.PT_NO
          AND C.ORD_DT = S.ORD_DT
          AND C.RSV_DT = S.RSV_DT
          AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
          AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
          AND C.RSV_THRP_SID = A.RTST_SID
          AND C.TRP_RSV_DTM = A.RSV_DTM
          AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
          AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
          AND C.RHRM_CD = A.RHRM_CD
             AND C.HSP_TP_CD = :HIS_HSP_TP_CD
             AND R.PACT_ID = S.PACT_ID
             AND R.SIHS_YN = 'Y'
             AND R.APCN_YN = 'N'
             AND R.HSP_TP_CD = S.HSP_TP_CD
          AND ROWNUM = 1)                               WD_DEPT_CD
       , A.RHTR_ORD_ID                                     RHTR_ORD_ID
 FROM MSTRHSLD A
    , PCTPCPAM_DAMO B
       WHERE A.RSV_PT_NO = B.PT_NO(+)
         AND A.RTST_SID  = :SID
         AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
         AND TO_CHAR(A.RSV_DTM, 'D') = '5'
         AND A.RSV_STS_TP_CD IN ('Y', 'B')
         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
           , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ, A.RHTR_TP_CD, A.RHTR_ORD_ID
        ) THU
     ,(
 SELECT
        TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO            PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD          RHTR_TP_CD      
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
      , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
      , (SELECT C.PACT_TP_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6) 
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7))  SEC_RRN
      , (SELECT PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
      , (SELECT C.RHTR_ORD_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_PBL_PTM_CNTE
      , (SELECT MEDREC_YN
            FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                    , '2', 'T'
                                                    , '11', 'Y'
                                                    , '12', 'Y'
                                                    , 'N') MEDREC_YN
                    FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                   WHERE C.HSP_TP_CD = S.HSP_TP_CD
                     AND C.PT_NO = S.PT_NO
                     AND C.ORD_DT = S.ORD_DT
                     AND C.RSV_DT = S.RSV_DT
                     AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                     AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                     AND C.RSV_THRP_SID = A.RTST_SID
                     AND C.TRP_RSV_DTM = A.RSV_DTM
                     AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                     AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                     AND C.RHRM_CD = A.RHRM_CD
                     AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                     AND S.PT_NO = X.PT_NO
                     AND S.HSP_TP_CD = X.HSP_TP_CD
                     AND S.RTM_MED_DT = X.MED_DT
                     AND S.PACT_ID = X.PACT_ID
                     AND X.MDRC_DC_TP_CD = 'C'
                     AND X.LST_YN = 'Y'
                     AND X.MDFM_ID = Y.MDFM_ID
                     AND X.WK_SID = A.RTST_SID
                     AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                     AND Y.HSP_TP_CD = C.HSP_TP_CD
                   ORDER BY MDRC_FOM_SEQ DESC)
           WHERE ROWNUM = 1)                            MEDREC_YN
       , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
            FROM MSTRHODD C
               , MSTRHSUD S
               , ACPPRAAM R
           WHERE C.HSP_TP_CD = S.HSP_TP_CD
          AND C.PT_NO = S.PT_NO
          AND C.ORD_DT = S.ORD_DT
          AND C.RSV_DT = S.RSV_DT
          AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
          AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
          AND C.RSV_THRP_SID = A.RTST_SID
          AND C.TRP_RSV_DTM = A.RSV_DTM
          AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
          AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
          AND C.RHRM_CD = A.RHRM_CD
             AND C.HSP_TP_CD = :HIS_HSP_TP_CD
             AND R.PACT_ID = S.PACT_ID
             AND R.SIHS_YN = 'Y'
             AND R.APCN_YN = 'N'
             AND R.HSP_TP_CD = S.HSP_TP_CD
          AND ROWNUM = 1)                               WD_DEPT_CD
       , A.RHTR_ORD_ID                                     RHTR_ORD_ID
 FROM MSTRHSLD A
    , PCTPCPAM_DAMO B
       WHERE A.RSV_PT_NO = B.PT_NO(+)
         AND A.RTST_SID  = :SID
         AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
         AND TO_CHAR(A.RSV_DTM, 'D') = '6'
         AND A.RSV_STS_TP_CD IN ('Y', 'B')
         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
              , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ, A.RHTR_TP_CD, A.RHTR_ORD_ID
        ) FRI
     ,(
 SELECT TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO            PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD          RHTR_TP_CD
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
      , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
      , (SELECT C.PACT_TP_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6) 
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7))  SEC_RRN
      , (SELECT PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
       , (SELECT C.RHTR_ORD_CD 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE 
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ORD_PBL_PTM_CNTE
      , (SELECT MEDREC_YN
           FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                   , '2', 'T'
                                                   , '11', 'Y'
                                                   , '12', 'Y'
                                                   , 'N') MEDREC_YN
                   FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                  WHERE C.HSP_TP_CD = S.HSP_TP_CD
                    AND C.PT_NO = S.PT_NO
                    AND C.ORD_DT = S.ORD_DT
                    AND C.RSV_DT = S.RSV_DT
                    AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                    AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                    AND C.RSV_THRP_SID = A.RTST_SID
                    AND C.TRP_RSV_DTM = A.RSV_DTM
                    AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                    AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                    AND C.RHRM_CD = A.RHRM_CD
                    AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                    AND S.PT_NO = X.PT_NO
                    AND S.HSP_TP_CD = X.HSP_TP_CD
                    AND S.RTM_MED_DT = X.MED_DT
                    AND S.PACT_ID = X.PACT_ID
                    AND X.MDRC_DC_TP_CD = 'C'
                    AND X.LST_YN = 'Y'
                    AND X.MDFM_ID = Y.MDFM_ID
                    AND X.WK_SID = A.RTST_SID
                    AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                    AND Y.HSP_TP_CD = C.HSP_TP_CD
                  ORDER BY MDRC_FOM_SEQ DESC)
          WHERE ROWNUM = 1)                             MEDREC_YN
       , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
            FROM MSTRHODD C
               , MSTRHSUD S
               , ACPPRAAM R
           WHERE C.HSP_TP_CD = S.HSP_TP_CD
          AND C.PT_NO = S.PT_NO
          AND C.ORD_DT = S.ORD_DT
          AND C.RSV_DT = S.RSV_DT
          AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
          AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
          AND C.RSV_THRP_SID = A.RTST_SID
          AND C.TRP_RSV_DTM = A.RSV_DTM
          AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
          AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
          AND C.RHRM_CD = A.RHRM_CD
             AND C.HSP_TP_CD = :HIS_HSP_TP_CD
             AND R.PACT_ID = S.PACT_ID
             AND R.SIHS_YN = 'Y'
             AND R.APCN_YN = 'N'
             AND R.HSP_TP_CD = S.HSP_TP_CD
          AND ROWNUM = 1)                               WD_DEPT_CD
       , A.RHTR_ORD_ID                                     RHTR_ORD_ID
 FROM MSTRHSLD A
    , PCTPCPAM_DAMO B
       WHERE A.RSV_PT_NO = B.PT_NO(+)
         AND A.RTST_SID  = :SID
         AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
         AND TO_CHAR(A.RSV_DTM, 'D') = '7'
         AND A.RSV_STS_TP_CD IN ('Y', 'B')
         AND A.HSP_TP_CD = :HIS_HSP_TP_CD
       GROUP BY A.RHRM_CD,TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
              , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ, A.RHTR_TP_CD, A.RHTR_ORD_ID
        ) SAT
 WHERE A.RSV_TIME = SELDAY.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = SELDAY.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = SELDAY.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = SELDAY.RSV_SLOT_SEQ(+)
   AND A.RSV_TIME = MON.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = MON.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = MON.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = MON.RSV_SLOT_SEQ(+)
   AND A.RSV_TIME = TUE.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = TUE.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = TUE.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = TUE.RSV_SLOT_SEQ(+)
   AND A.RSV_TIME = WED.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = WED.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = WED.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = WED.RSV_SLOT_SEQ(+)
   AND A.RSV_TIME = THU.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = THU.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = THU.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = THU.RSV_SLOT_SEQ(+)
   AND A.RSV_TIME = FRI.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = FRI.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = FRI.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = FRI.RSV_SLOT_SEQ(+)
   AND A.RSV_TIME = SAT.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = SAT.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = SAT.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = SAT.RSV_SLOT_SEQ(+)
 ORDER BY DECODE(A.RSV_TIME, '00:00', '23:59', A.RSV_TIME),A.RHRM_CD, A.RSV_DY_SEQ, A.RSV_SLOT_SEQ

</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 시행 수행</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MS.TR.RE.RS.InsertRsvExeActOrCancel2"&gt;
&lt;!--
    Clss :  [package] (쿼리유형)
    Desc : 치료예약화면에서 외래,입원 바로 치료시행취소작업
    Author : 전영준 
    Create date : 2013-03-21
    Update date : 2013-03-21 
--&gt;

  /*HIS.MS.TR.RE.RS.InsertRsvExeActOrCancel2*/
     PKG_MST_RH_PTRSV.PC_MST_RH_ACT_INS02
 &lt;/sql&gt;</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>화순 집계 재료 누락</QUERY_NAME>
    <QUERY_TEXT>SELECT *
    FROM MSERUSEV
    WHERE HSP_TP_CD='02'
    AND ORD_ID= 'MIG_OP_02_12611078_20220208_URO_RD_RMH28E_0'
--    AND ORD_DT IS NULL
AND USE_QTY &lt;&gt;0
;
select *
    from RCADOOLD
    where hsp_TP_CD='02'
    and ord_ID= 'MIG_OP_02_12611078_20220208_URO_RD_RMH28E_0'
    ;</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>배치프로시저 목록(스케줄러조회)</QUERY_NAME>
    <QUERY_TEXT>--migtest로 로그인해야 함.
SELECT * FROM MIGTEST.DAILY_BATCH_CHECK;
</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>코로나 ALERT 연동</QUERY_NAME>
    <QUERY_TEXT>TRIGGER HMED.HMED.TR_BSIIFSDH             --다제내성균대상자등록정보
AFTER INSERT OR 
      UPDATE ON HMED.BSIIFSDH  FOR EACH ROW  


DECLARE 
    V_END_DT_TXT VARCHAR2(20) := ''; 
    V_END_DT     DATE;        
BEGIN                                           

         
    IF INSERTING OR UPDATING THEN
    
        IF INSTR(REPLACE(:NEW.SDEF_CNTE, ' ', ''), '코로나19확진자') &gt; 0 THEN
            

            BEGIN
                SELECT SUBSTR(XMED.FN_SPLIT(REPLACE(TRIM(:NEW.INSP_RSLT_CNTE), ' ', ''), 2, '종료일:'), 1, 8)
                  INTO V_END_DT_TXT
                FROM DUAL;
                
                V_END_DT := TO_DATE(V_END_DT_TXT, 'YYYYMMDD');
                
                -- 추출한 문자열이 날짜 타입이 아니면 리턴함
                IF V_END_DT IS NULL THEN
                    RETURN;
                END IF;
                
                -- 종료일이 오늘 이전이면 리턴함
                IF V_END_DT &lt; TRUNC(SYSDATE) THEN
                    RETURN;
                END IF; 
                
                EXCEPTION
                    WHEN OTHERS THEN
                        RETURN;
            END;            
            
            BEGIN
                XMED.PKG_MOO_ALERT.PC_MOO_SAVE_INFECTIONITEM 
                ( :NEW.PT_NO              -- 01. 환자번호
                , NULL                    -- 02. 환자감염임신수유등록순번
                , :NEW.HSP_TP_CD          -- 03. 병원구분코드
                , 'A0061'                 -- 04. 감염임신수유코드
                , NULL                    -- 05. 삭제사유내용
                , :NEW.SDEF_CNTE          -- 06. 비고내용
                , 'I'                     -- 07. alert작업구분코드
                , 'AUTO'                  -- 08. 작업자직원번호
                , 'TR_BSIIFSDH'           -- 09. 작업프로그램내용
                , '0.0.0.0'               -- 10. 작업PC_IP
                , NULL                    -- 11. 관련처방ID
                , 'R001'                  -- 12. 자동등록구분코드
                , SYSDATE                 -- 13. 자동등록일자( = 양성검체접수일 )
                ) ;
                EXCEPTION  
                    WHEN OTHERS THEN
                        NULL;                
            END;
            
            
            BEGIN
                --종료일자 업데이트
                UPDATE MOOPTIPD
                   SET AVL_END_DT       = V_END_DT
                 WHERE HSP_TP_CD        = :NEW.HSP_TP_CD
                   AND PT_NO            = :NEW.PT_NO
                   AND AVL_STR_DT       = TRUNC(SYSDATE)
                   AND FSR_STF_NO       = 'AUTO'
                   AND FSR_PRGM_NM      = 'TR_BSIIFSDH'
                ;
                
                EXCEPTION
                    WHEN OTHERS THEN
                        NULL;
            END;            
        END IF;           
    END IF;                               

END;
</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>SAVEORDER 관련 에러</QUERY_NAME>
    <QUERY_TEXT>ALTER PACKAGE  XMED.PKG_MOO_SAVEORDERS COMPILE BODY;

ALTER PACKAGE  XMED.PKG_MOO_SAVEORDERS COMPILE;



호출 중인 프로그램 단위 관련 메세지가 뜰경우 migtest로 로그인해서 실행해야함.</QUERY_TEXT>
    <GROUP>ERROR</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ALERT 환자중 격리병실 재원중 환자</QUERY_NAME>
    <QUERY_TEXT>SELECT B.INFC_INF_NM,A.PT_NO,P.PT_NM,T.APY_STR_DT,T.APY_END_DT,XBIL.FT_AIM_CCCCCSTE_NM(A.HSP_TP_CD,'359',T.PRM_TP_CD,'')    PRM_TP_CD,XBIL.FT_AIM_CCCCCSTE_NM(A.HSP_TP_CD,'358',T.PRM_GRD_CD,'')  PRM_GRD_CD
    FROM MOOPTIPD A
        ,MOOPTICC B
        ,PCTPCPAM_DAMO P
        ,ACPPRAAM I
        ,ACPPRTSD T
    WHERE A.HSP_TP_CD = B.HSP_TP_CD
      AND A.HSP_TP_CD = :IN_HSP_TP_CD
      AND A.HSP_TP_CD = I.HSP_TP_CD
      AND A.HSP_TP_CD = T.HSP_TP_CD
      AND A.PT_NO = I.PT_NO
      AND I.PACT_ID = T.RPY_PACT_ID
      AND T.PRM_TP_CD IN (SELECT COMN_CD FROM CCCCCSTE WHERE COMN_GRP_CD = '359' AND COMN_CD_NM LIKE '%격리%')
      AND I.SIHS_YN = 'Y'
      AND I.TDS_DTM IS NULL
      AND I.APCN_YN = 'N'
      AND A.PT_NO = P.PT_NO
      AND A.INFC_INF_CD = B.INFC_INF_CD
      AND A.DEL_YN = 'N'
      AND TRUNC(SYSDATE) BETWEEN A.AVL_STR_DT AND A.AVL_END_DT + .99999
      AND TRUNC(SYSDATE) BETWEEN T.APY_STR_DT AND T.APY_END_DT + .99999
;</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ALERT 등록 화면 쿼리</QUERY_NAME>
    <QUERY_TEXT>&lt;sql id="HIS.MC.DM.PT.AL.SelectDataForAlert"&gt;
&lt;!--
    Clss :  [package] (쿼리유형)
    Desc : 환자 Alert 관리 데이터를 조회하는 쿼리
    Author : 손무경
    Create date : 2012-04-24
    Update date : 2012-04-24 
--&gt;
/*◐◐◐◐◐ *** 병원구분 : 김인호  *** ◑◑◑◑◑*/
    PKG_MOO_ALERT.PC_MOO_SELECT_DATAFORALERT
 &lt;/sql&gt;

    /**********************************************************************
    작 성 자 :  손무경
    작 성 일 : 2012-04-13
    내    용 : 환자의 INFECTION 정보를 조회
    수정이력 : ◐◐◐◐◐ *** 병원구분 : 문병길 *** ◑◑◑◑◑ 
    **********************************************************************/ 

SELECT /*+ USE_NL(A B C D) XMED.PKG_MOO_ALERT.PC_MOO_SELECT_PAT_INFECTION */
                   A.INFC_INF_CD                                                INFC_INF_CD               --감염정보코드
                 , A.ALERT_INF_MRK_ABBR_NM                                      ALERT_INF_MRK_ABBR_NM     --감염정보ALERT표시명
                 , A.INFC_PATH_TP_CD                                            INFC_PATH_TP_CD          --감염경로구분코드
                 , B.COMN_CD_NM                                                 INFC_PATH_TP_NM        --감염경로구분코드명
                 , A.SCRN_SORT_SEQ                                              SCRN_SORT_SEQ             --감염코드화면표시순번
                 , B.SCRN_MRK_SEQ                                               INFC_PATH_SCRN_SEQ     --구분코드화면표시순번
                 , C.PT_NO                                                      PT_NO                     --환자번호
                 , C.PT_INFC_REG_SEQ                                            PT_INFC_REG_SEQ           --환자감염코드등록순번
                 , C.RMK_CNTE                                                   RMK_CNTE                  --비고내용
                 , C.AVL_STR_DT                                                 AVL_STR_DT
                 , CASE WHEN A.INFC_INF_AVL_PRD IS NULL THEN
                        TO_DATE('99991231','YYYYMMDD')
                   ELSE
                        TRUNC(C.AVL_STR_DT) + A.INFC_INF_AVL_PRD
                   END                                                          AVL_END_DT        
                 , D.EXRM_HH_DTM                                                EXRM_HH_DTM              --검사실시일시           
                 , C.HSP_TP_CD                                                          HSP_TP_CD      -- 2019-01-31 정원준 : 병원구분코드 추가
                 , XBIL.FT_GET_AIMIPHID_DAMO(C.HSP_TP_CD, NULL, NULL, 'HSP_ABBR_NM')    HSP_NM         -- 2019-01-31 정원준 : 병원명 추가
              FROM MOOPTICC A             --감염임신수유정보코드
                 , CCCCCSTE B             --공통그룹코드상세
                 , MOOPTIPD C             --환자감염임신수유정보
                 , MOOOREXM D             --환자검사처방기본
             WHERE A.INFC_PATH_TP_CD   = B.COMN_CD       
               AND A.ALERT_INF_ICLS_YN = 'Y'   
               AND A.INFC_PATH_TP_CD   &lt;&gt; 'A'
               AND A.INFC_INF_CD       = C.INFC_INF_CD
               AND A.HSP_TP_CD         = C.HSP_TP_CD                    
               AND C.RLV_ORD_ID        = D.ORD_ID(+)
               AND C.HSP_TP_CD         = D.HSP_TP_CD(+)
--               AND A.HSP_TP_CD         = IN_HIS_HSP_TP_CD    -- 2019-01-31 정원준 : 병원구분코드 조건 제거(멀티병원 적용)
               AND A.AVL_END_DT        = TO_DATE('99991231','YYYYMMDD')
               AND B.COMN_GRP_CD       = 'DR00065'
               AND C.PT_NO             = IN_PT_NO
               AND C.DEL_YN            = 'N'
             ORDER BY B.SCRN_MRK_SEQ, A.SCRN_SORT_SEQ</QUERY_TEXT>
    <GROUP>감염</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>특정날의 주 구하기</QUERY_NAME>
    <QUERY_TEXT>        /// &lt;summary&gt;
        /// 기준일(day)로부터 원하는 요일을 DayOfWeek 형식으로 넘겨주면 기준일이 포함된 주의 특정요일의 날짜를 리턴한다.
        /// &lt;/summary&gt;
        /// &lt;param name="dayOfWeek"&gt;원하는요일&lt;/param&gt;
        /// &lt;param name="day"&gt;기준일&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        private DateTime GetWantDate(DayOfWeek dayOfWeek, DateTime day) =&gt; day.AddDays(dayOfWeek - day.DayOfWeek); </QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>주석에 줄바꿈 추가</QUERY_NAME>
    <QUERY_TEXT> /// &lt;summary&gt;        
        /// &lt;para&gt;1.his_prgm_id = ViewModelBase 혹은 HIS_PRGM_ID (EAM의 MENU_CD를 넘겨야함.) ViewModelBase를 상속받았으면 this를 넘기면 됨. &lt;/para&gt;
        /// &lt;para&gt;2.DataTable로 넘길경우에는 데이터의 첫번째 환자번호와 환자이름을 pt_no,pt_nm 파라미터에 넘겨줘야함. EX) pt_no: 01234567 , pt_nm:"테스트환자명"&lt;/para&gt;
        /// &lt;para&gt;3.HDataGridEx로 넘길경우에는 Binding된 컬럼중에 PT_NO, PT_NM 이 바인딩 되어 있어야 환자정보가 로그에 쌓임. 없을 경우 첫번쨰 환자에 해당하는 환자번호와 환자명을 
        ///   pt_no,pt_nm 파라미터에 넘겨줘야함. &lt;/para&gt;
        ///   &lt;para&gt;EX) pt_no: 01234567 , pt_nm:"테스트환자명"&lt;/para&gt;
        /// &lt;/summary&gt;
        /// &lt;param name="grid"&gt; 엑셀 출력할 DataGridEx 혹은 DataTable&lt;/param&gt;
        /// &lt;param name="his_prgm_id"&gt; ViewModelBase 혹은 HIS_PRGM_ID (EAM의 MENU_CD를 넘겨야함.) ViewModelBase를 상속받았으면 this를 넘기면 됨.&lt;/param&gt;
        /// &lt;param name="sheetName"&gt;&lt;/param&gt;
        /// &lt;param name="rowHeight"&gt;&lt;/param&gt;
        /// &lt;param name="fontSize"&gt;&lt;/param&gt;
        /// &lt;param name="fstRowFreezeYn"&gt;첫행 고정여부&lt;/param&gt;
        /// &lt;param name="red"&gt;첫행 색상&lt;/param&gt;
        /// &lt;param name="green"&gt;첫행 색상&lt;/param&gt;
        /// &lt;param name="blue"&gt;첫행 색상&lt;/param&gt;
        /// &lt;param name="startRowIndex"&gt;시작 ROW 위치&lt;/param&gt;
        /// &lt;param name="startColIndex"&gt;시작 COL 위치&lt;/param&gt;
        /// &lt;param name="Alignment"&gt;정렬 CENTER ,LEFT , RIGHT &lt;/param&gt;
        /// &lt;param name="downExcelYn"&gt;다운여부&lt;/param&gt;
        /// &lt;param name="IsDisplay"&gt;출력여부&lt;/param&gt;
        /// &lt;param name="isEncrypt"&gt;암호화여부&lt;/param&gt;
        /// &lt;param name="FileName"&gt;&lt;/param&gt;

&lt;para&gt;&lt;/para&gt;로 감싸면 줄바꿈 처리됨.</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Collection Foreach</QUERY_NAME>
    <QUERY_TEXT>this.dgrdQuery.SelectedItems.Cast&lt;FavQuery&gt;().ToList().ForEach(x =&gt; { OcFavQuery.Remove(x); });</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사실 Acting</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '02';
EXEC :IN_PT_NO := '72195667';
EXEC :IN_FR_DTE := '2022-09-27';
EXEC :IN_TO_DTE := '2022-09-27';
EXEC :IN_EXCT_EXRM_CD := 'RC';

SELECT /*진료지원-특수검사-검사약간호수행-HIS.MS.IV.SE.EX.UI.SelectExaminationDrugActingRegistration*/
       SA.ORD_GRP_CD                                                                               ORD_GRP_CD              /*처방그룹코드*/
     , SA.ORD_GRP_NM                                                                               ORD_GRP_NM              /*처방그룹명*/
     , SA.ORD_ID                                                                                   ORD_ID                  /*처방ID*/
     , SA.OPRS_ID                                                                                  OPRS_ID                 /*원처방ID*/
     , SA.PACT_ID                                                                                  PACT_ID                 /*원무접수ID*/
     , SA.PACT_TP_CD                                                                               PACT_TP_CD              /*원무접수구분코드*/
     , SA.MED_PACT_ID                                                                              MED_PACT_ID             /*진료원무접수ID*/
     , SA.MED_PACT_TP_CD                                                                           MED_PACT_TP_CD          /*진료원무접수구분코드*/
     , SA.PT_NO                                                                                    PT_NO                   /*환자번호*/
     , XBIL.FT_ACP_PATNAME(:HIS_HSP_TP_CD, SA.PT_NO)                                               PT_NM                   /*환자명*/
     , SA.ORD_DT                                                                                   ORD_DT                  /*처방일자*/
     , SA.ORD_SEQ                                                                                  ORD_SEQ                 /*처방순번*/
     , SA.ORD_SEQ_PRN                                                                              ORD_SEQ_PRN             /*처방순번(PRN포함)*/
     , SA.ORD_CD                                                                                   ORD_CD                  /*처방코드*/
     , SA.MIF_CD                                                                                   MIF_CD                  /*수가코드*/
     , SA.PRE_ORD_NM                                                                               PRE_ORD_NM              /*PRE처방명*/
     , SA.ORD_NM                                                                                   ORD_NM                  /*처방명*/
     , SA.POST_ORD_NM                                                                              POST_ORD_NM             /*POST처방명*/
     , SA.EXM_BNDL_ORD_NM                                                                          EXM_BNDL_ORD_NM         /*검사묶음처방명*/
     , SA.ODDSC_TP_CD                                                                              ODDSC_TP_CD             /*처방중단구분코드*/
     , SA.ODDSC_TP_CD_NM                                                                           ODDSC_TP_CD_NM          /*처방중단구분코드명*/
     , SA.ODDSC_TP_CD_YN                                                                           ODDSC_TP_CD_YN          /*처방중단구분코드여부*/
     , SA.ORD_MRK_CTG_CD                                                                           ORD_MRK_CTG_CD          /*처방표시분류코드 : MEDTYPE*/
     , SA.ODAPL_POP_CD                                                                             ODAPL_POP_CD            /*처방적용목적코드 : JOBTYPE*/
     , SA.ODAPL_POP_NM                                                                             ODAPL_POP_NM            /*처방적용목적코드명 : JOBTYPE*/
     , SA.PRN_ORD_YN                                                                               PRN_ORD_YN              /*PRN처방여부 : PRN_YN*/
     , SA.ADD_ORD_YN                                                                               ADD_ORD_YN              /*추가처방여부*/
     , SA.ORD_VIEW_YN                                                                              ORD_VIEW_YN             /*오더표시여부*/
--     , SA.REQ_ORD_1TM_PBL_YN                                                                       REQ_ORD_1TM_PBL_YN      /*1회청구처방발행여부*/
--     , SA.REQ_ORD_QTY_PBL_YN                                                                       REQ_ORD_QTY_PBL_YN      /*수량요청처방발행여부*/
     , SA.PBS_ORD_1TM_PBL_YN                                                                       PBS_ORD_1TM_PBL_YN      /*1회청구처방발행가능여부*/
     , SA.PBS_ORD_QTY_PBL_YN                                                                       PBS_ORD_QTY_PBL_YN      /*수량요청처방발행가능여부*/
     , SA.ORD_NUR_PBL_YN                                                                           ORD_NUR_PBL_YN          /*처방간호발행여부*/
     , SA.EMRG_YN                                                                                  EMRG_YN                 /*응급여부 : ER_YN*/
     , SA.ORD_SLIP_CTG_CD                                                                          ORD_SLIP_CTG_CD         /*처방전표분류코드*/
     , SA.PBSO_DEPT_CD                                                                             PBSO_DEPT_CD            /*발행처부서코드*/
     , SA.PBSO_DEPT_NM                                                                             PBSO_DEPT_NM            /*발행처부서코드명*/
     , SA.RPY_STS_CD                                                                               RPY_STS_CD              /*수납상태코드*/
     , SA.RPY_STS_NM                                                                               RPY_STS_NM              /*수납상태코드명*/
     , SA.SCRN_SORT_SEQ                                                                            SCRN_SORT_SEQ           /*정렬순번 IN_SEQ*/
     , SA.GRP_SORT_SEQ                                                                             GRP_SORT_SEQ            /*간호정렬순번*/
     , SA.ODDSC_SORT_SEQ                                                                           ODDSC_SORT_SEQ          /*처방중단정렬순번*/
     , SA.PT_HME_DEPT_CD                                                                           PT_HME_DEPT_CD          /*환자수진부서코드*/
     , SA.FSR_STF_DEPT_CD                                                                          FSR_STF_DEPT_CD         /*최초등록직원부서코드*/
     , SA.FSR_STF_NO                                                                               FSR_STF_NO              /*최초등록직원번호*/
     , SA.FSR_STF_NM                                                                               FSR_STF_NM              /*최초등록직원명*/
     , SA.FSR_DTM                                                                                  FSR_DTM                 /*최초등록일시*/
     , SA.ACTING_TIME                                                                              ACTING_TIME             /*수행시간*/
     , SA.ACTING_TIME_TIP                                                                          ACTING_TIME_TIP         /*수행시간 툴팁*/
     , SA.FSR_STF_INFO                                                                             FSR_STF_INFO            /*발행의정보*/
     , SA.RTM_CLSN_FMT_YN                                                                          RTM_CLSN_FMT_YN         /*실시간마감수행여부*/
     , SA.DG_BNDL_MAIN_YN                                                                          DG_BNDL_MAIN_YN         /*약묶음주여부*/
     , SA.FMT_DRST_DEPT_CD                                                                         FMT_DRST_DEPT_CD        /*수행약국부서코드*/
     , SA.FMT_DRST_DEPT_NM                                                                         FMT_DRST_DEPT_NM        /*수행약국부서명*/
     , SA.DRST_FLPRS_DTM                                                                           DRST_FLPRS_DTM          /*약국조제일시*/
     , SA.DRST_FLPRS_DTM_NM                                                                        DRST_FLPRS_DTM_NM       /*약국조제일시명*/
     , SA.DG_BDOP_SEQ                                                                              DG_BDOP_SEQ             /*투약묶음처방순번*/
     , SA.DG_BDOP_YN                                                                               DG_BDOP_YN              /*투약묶음처방여부*/
     , SA.DG_QTY_CHG_YN                                                                            DG_QTY_CHG_YN           /*주사접수요청가능여부*/
     , SA.DG_QTY_ADD_YN                                                                            DG_QTY_ADD_YN           /*주사접수요청가능여부*/
     , SA.DRST_ACPT_YN                                                                             DRST_ACPT_YN            /*약국접수여부*/
     , SA.AMS_ORD_STS_CD                                                                           AMS_ORD_STS_CD          /*투약처방상태코드*/
     , SA.DG_RINS_STF_NO                                                                           DG_RINS_STF_NO          /*약반납지시직원번호*/
     , SA.NXDY_ORD_YN                                                                              NXDY_ORD_YN             /*익일처방여부*/
     , SA.IORD_PSB_YN                                                                              IORD_PSB_YN             /*원내처방가능여부*/
     , SA.PT_BNG_DG_YN                                                                             PT_BNG_DG_YN            /*환자지참약여부*/
     , SA.MDPR_LGL_TP_CD                                                                           MDPR_LGL_TP_CD          /*약품법적구분코드*/
     , SA.USG_CD                                                                                   USG_CD                  /*용법코드*/
     , SA.SPCF_MTD_ORD_MDPR_YN                                                                     SPCF_MTD_ORD_MDPR_YN    /*특정진료과처방약품여부*/
     , SA.CTN_CNTE_YN                                                                              CTN_CNTE_YN             /*주의내용여부*/
     , SA.CTN_CNTE                                                                                 CTN_CNTE                /*주의내용*/
     , SA.USG_EXPL_NM                                                                              USG_EXPL_NM             /*용법설명명*/
     , SA.AMPTH_TP_NM                                                                              AMPTH_TP_NM             /*투여경로구분명*/
     , SA.MNF_CMP_CD                                                                               MNF_CMP_CD              /*제조회사코드*/
     , SA.AMD_QTY                                                                                  AMD_QTY                 /*투여수량*/
     , SA.TH2_AMD_QTY                                                                              TH2_AMD_QTY             /*2번째투여수량*/
     , SA.DG_MIX_YN                                                                                DG_MIX_YN               /*약혼합여부*/
     , SA.VCCN_TGT_YN                                                                              VCCN_TGT_YN             /*예방접종대상여부*/
     , SA.DG_CNCN_YN                                                                               DG_CNCN_YN              /*관심약여부:마약,향정,고가*/
     , SA.INJC_IMPL_PLC || ' '
       || DECODE(SA.EXCT_EXRM_CD, NULL, NULL, '[ '||XCOM.FT_MCC_CODENAME(:HIS_HSP_TP_CD, 'DR00160', SA.EXCT_EXRM_CD)||' ]')  INJC_IMPL_PLC           /*주사시행처*/
     , SA.DG_HOLD_MRK_YN                                                                           DG_HOLD_MRK_YN          /*투약보류표시여부*/
     , SA.DG_HOLD_LWR_MRK_YN                                                                       DG_HOLD_LWR_MRK_YN      /*투약보류표시여부(자식)*/
     , SA.DG_RTN_MRK_YN                                                                            DG_RTN_MRK_YN           /*투약반납표시여부*/
     , SA.DG_RTN_LWR_MRK_YN                                                                        DG_RTN_LWR_MRK_YN       /*투약반납표시여부(자식)*/
     , SA.PRPD_NOTM                                                                                PRPD_NOTM               /*기간별횟수*/
     , SA.NR_PBL_STF_NO                                                                            NR_PBL_STF_NO           /*간호발행직원번호*/
     , SA.NR_PBL_STF_NM                                                                            NR_PBL_STF_NM           /*간호발행직원번호*/
     , SA.NR_PBL_DTM                                                                               NR_PBL_DTM              /*간호발행일시*/
--     , SA.EXM_PRGR_STS_CD                                                                          EXM_PRGR_STS_CD         /*검사진행상태코드*/
--     , SA.EXM_PRGR_STS_NM                                                                          EXM_PRGR_STS_NM         /*검사진행상태명*/
--     , SA.EXM_PRGR_STS_DTM_NM                                                                      EXM_PRGR_STS_DTM_NM     /*검사진행상태일시명*/
--     , SA.RSEX_YN                                                                                  RSEX_YN                 /*예약검사여부*/
--     , SA.IDPT_EXM_YN                                                                              IDPT_EXM_YN             /*과내검사여부*/
--     , SA.SPCM_EXM_YN                                                                              SPCM_EXM_YN             /*검체검사여부*/
--     , SA.EHSP_FLIT_YN                                                                             EHSP_FLIT_YN            /*외부병원필름판독여부*/
--     , SA.STM_EXM_BNDL_SEQ                                                                         STM_EXM_BNDL_SEQ        /*동시검사묶음순번*/
--     , SA.STM_EXM_BNDL_YN                                                                          STM_EXM_BNDL_YN         /*동시검사묶음여부*/
--     , SA.EXM_HOPE_DT                                                                              EXM_HOPE_DT             /*검사희망일자*/
--     , SA.TH1_SPCM_CD                                                                              TH1_SPCM_CD             /*1번째검체코드*/
--     , SA.EXRM_EXM_CTG_CD                                                                          EXRM_EXM_CTG_CD         /*검사실검사분류코드*/
--     , SA.SPCM_MED_EXM_CTG_CD                                                                      SPCM_MED_EXM_CTG_CD     /*진료검사분류코드:검체출력용*/
--     , SA.SPCM_PTHL_NO                                                                             SPCM_PTHL_NO            /*검체병리번호*/
--     , SA.SPCM_INLZ_PSB_YN                                                                         SPCM_INLZ_PSB_YN        /*검체초기화가능여부*/
--     , SA.BLCL_DTM                                                                                 BLCL_DTM                /*채혈일시*/
--     , SA.BLCL_STF_NO                                                                              BLCL_STF_NO             /*채혈직원번호*/
--     , SA.RLT_BLCL_DTM                                                                             RLT_BLCL_DTM            /*실제채혈일시*/
--     , SA.RLT_BLCL_STF_NO                                                                          RLT_BLCL_STF_NO         /*실제채혈직원번호*/
--     , SA.SPCM_ODAPL_POP_CD                                                                        SPCM_ODAPL_POP_CD       /*검체처방적용목적코드*/
--     , SA.BF_FMT_YN                                                                                BF_FMT_YN               /*선수행여부*/
--     , SA.BFDS_QUICK_RSLT_YN                                                                       BFDS_QUICK_RSLT_YN      /*퇴원이전빠른결과여부*/    /*2015-08-20 김병수 추가*/
--     , SA.BLD_ORD_YN                                                                               BLD_ORD_YN              /*수혈오더여부*/
--     , SA.TRFS_EXPT_OW_TP_CD                                                                       TRFS_EXPT_OW_TP_CD      /*수혈예정출고구분코드*/
--     , SA.TXT_ORD_YN                                                                               TXT_ORD_YN              /*텍스트오더여부*/
--     , SA.ODRDR_RPLY_YN                                                                            ODRDR_RPLY_YN           /*타과의뢰회신여부*/
--     , SA.MDRC_ID                                                                                  MDRC_ID                 /*진료기록ID*/
     , SA.ORD_STS_RGB_CD                                                                           ORD_STS_RGB_CD          /*오더상태RGB코드*/
     , SA.HSP_TP_CD                                                                                HSP_TP_CD               /*병원구분코드*/
     , SA.AVT_PRNT_LBL_YN                                                                          AVT_PRNT_LBL_YN         /*라벨출력활성여부*/
     , SA.AVT_PRNT_MNL_YN                                                                          AVT_PRNT_MNL_YN         /*설명서출력활성여부*/
     , SA.NRPD_PRNT_YN                                                                             NRPD_PRNT_YN            /*간호계획서출력여부*/
     , SA.NRS_CHG_ORD_CFMT_YN                                                                      NRS_CHG_ORD_CFMT_YN     /*간호사변경처방확인여부*/
     , SA.NRS_ANW_ORD_CFMT_YN                                                                      NRS_ANW_ORD_CFMT_YN     /*간호사신규처방확인여부*/
     , SA.NRS_CFMT_ORD_CFMT_YN                                                                     NRS_CFMT_ORD_CFMT_YN    /*간호사확인처방확인여부*/
     , SA.NRS_ADD_ORD_CFMT_YN                                                                      NRS_ADD_ORD_CFMT_YN     /*간호사추가처방확인여부*/
     , SA.FLPRS_CMPL_YN                                                                            FLPRS_CMPL_YN           /*조제완료 여부 (방수석차장 제공)*/
     , DECODE(SA.FLPRS_CMPL_YN, 'Y', '조제완료' || DECODE(SA.DRST_FLPRS_NM, '', '',  chr(13))
                                               || SA.DRST_FLPRS_NM, SA.DRST_FLPRS_NM)              DRST_FLPRS_NM           /*약국조제약사 김국경 추가(2014-10-17)*/
--     , SA.BLOD_AVL_DTM                                                                             BLOD_AVL_DTM            /*수혈가능시간 김준혁 추가(2014-10-28)*/
--     , SA.TRFS_MMDC_CTG_CD                                                                         TRFS_MMDC_CTG_CD        /*수혈제제분류코드*/
     , NVL(SA.CFMT_AFT_AMD_YN, 'N')                                                                CFMT_AFT_AMD_YN         /*확인후 투여여부*/
     , SA.HHC_ODRDR_RPLY_YN                                                                        HHC_ODRDR_RPLY_YN       /*가정간호의뢰서회신여부*/
     /* 검체분리묶음 대상 D/C된 오더 제외 start */
--     , DECODE(SA.ODDSC_TP_CD, 'D', 'N', 'N', 'N',
--       DECODE(DECODE(SA.ORD_GRP_CD, '03', 'Y', 'N') ||
--       DECODE(SA.EXM_PRGR_STS_CD, 'X', 'Y', 'N') ||
--       DECODE(SA.TH1_SPCM_CD, NULL, 'N', 'Y') ||
--       DECODE(SA.ORD_CTG_CD, 'CP', 'Y', 'NM', 'Y', 'N'), 'YYYY', 'Y', 'N'))                        INSP_YN                 /*검체묶음 및 해지 여부 - 김국경 추가*/
     /* 검체분리묶음 대상 D/C된 오더 제외 end */
--     , SA.STM_EXM_BNDL_SEQ                                                                         STM_EXM_BNDL_SEQ_OLD    /*동시검사묶음순번 - 김국경 추가*/
     , SA.ORD_CTG_CD                                                                               ORD_CTG_CD              /*진검, 핵체외검사*/
     , SA.TH3_AMD_QTY                                                                              TH3_AMD_QTY             /*3번째투여수량 - 투여용량에 의한 추가(김국경 2015-02-11)*/
     , SA.TH4_AMD_QTY                                                                              TH4_AMD_QTY             /*4번째투여수량 - 투여용량에 의한 추가(김국경 2015-02-11)*/
     , SA.TH5_AMD_QTY                                                                              TH5_AMD_QTY             /*5번째투여수량 - 투여용량에 의한 추가(김국경 2015-02-11)*/
     , SA.AMD_TP_YN                                                                                AMD_TP_YN               /*약품구분 - 경구약인지 체크하고 2회투여 이상만 가져온다. (김국경 추가 2015-02-11)*/
     , SA.MDPR_UNIT_CD                                                                             MDPR_UNIT_CD            /*용량 단위 - 투여용량에 의한 추가(김국경 2015-02-11)*/
     , DECODE(DECODE(SA.ORD_CTG_CD, 'BR1', 'Y', 'N') ||
       DECODE(SUBSTR(SA.ORD_CD, 0, 2), 'RC', 'Y', 'N') ||
       DECODE(SA.PBSO_DEPT_CD, 'AER', 'Y', 'EICU', 'Y', 'N'), 'YYY', 'Y', 'N')                     EMRM_EXM_REG_YN         /*응급실 검사정보등록 여부 - 김국경 추가 2015-03-10*/
     , DECODE(SA.ORD_CTG_CD, 'CP', 'Y', 'NM', 'Y', 'N')                                            SPCM_EXM_ASK_YN         /*검체검사여부 재 확인(CP, NM) - 김국경 추가 2015-05-06*/
     , DECODE(SA.DRST_ACPT_YN, 'Y', SA.NRCT_RTN_DSP, 'N')                                          NRCT_RTN_DSP            /* 마약류 반납 표출여부, 김국경 추가 2015-06-30 */
     , SA.UGT_TRFS_TP_CD                                                                           UGT_TRFS_TP_CD          /* 긴급, 초긴급 확인, 김국경 추가 2015-07-14 */
     , SA.EQUP_MBL_PSB_YN                                                                          EQUP_MBL_PSB_YN         /*장비휴대가능여부 - 박제영 추가, 2016-02-18*/
     , SA.MBL_EQUP_EXM_REQ_YN                                                                      MBL_EQUP_EXM_REQ_YN     /*휴대장비검사요청여부 - 박제영 추가, 2016-02-18*/
     , SA.ORD_RMK_CNTE                                                                             ORD_RMK_CNTE            /*처방비고내용- 박제영 추가, 2016-02-18*/
     , SA.ADC_DRUG_YN                                                                              ADC_DRUG_YN             /*ADC대상약 - 박제영 추가, 2016-03-17*/
     , SA.POWD_DG_YN                                                                               POWD_DG_YN              /*분쇄여부 - 주범식 추가, 2016-06-09*/
     , SA.POWD_PSB_YN                                                                              POWD_PSB_YN             /*분쇄가능여부 - 주범식 추가, 2016-06-09*/
     , SA.DTL_AMPTH_CLS_CD                                                                         DTL_AMPTH_CLS_CD        /*상세투여경로유형코드, Infusion작업, 2016-09-29 */
     , SA.ADD_EXM_YN                                                                               ADD_EXM_YN              /*추가검사여부, 2016-09-22, 김국경 추가*/
     , SA.ORD_INJT_RTO                                                                             ORD_INJT_RTO            /*주입속도(cc/hr), Infusion작업, 2016-11-XX*/
     , SA.ORD_INJT_DSG                                                                             ORD_INJT_DSG            /*주입총용량(ml), Infusion작업, 2016-11-XX*/
     , SA.EXM_ORD_ID                                                                               EXM_ORD_ID              --검사처방ID
     , SA.AMS_EXPT_DT                                                                              AMS_EXPT_DT             --투약예정일자
     , SA.EXCT_EXRM_CD                                                                             EXCT_EXRM_CD            --실행검사실코드
     , SA.IMPL_EXRM_TP_CD                                                                          IMPL_EXRM_TP_CD         --실제실행검사실코드
     , SA.DEFAULT_IMPL_EXRM_TP_CD                                                                  DEFAULT_IMPL_EXRM_TP_CD
--     , SA.IFS_PDAU_YN                                                                              IFS_PDAU_YN             /*Infusion 오더 인터페이스 테이블 PDA 수행 여부 */
,SA.EXCT_EXRM_CD
  FROM (
          SELECT V.ORD_GRP_CD                                                                          ORD_GRP_CD            /*처방그룹코드*/
               , V.ORD_GRP_NM                                                                          ORD_GRP_NM            /*처방그룹명*/
               , V.ORD_ID                                                                              ORD_ID                /*처방ID*/
               , NVL(V.OPRS_ID, V.ORD_ID)                                                              OPRS_ID               /*원처방ID*/
               , V.PACT_ID                                                                             PACT_ID               /*원무접수ID*/
               , V.PACT_TP_CD                                                                          PACT_TP_CD            /*원무접수구분코드*/
               , M.MED_PACT_ID                                                                         MED_PACT_ID           /*진료원무접수ID*/
               , M.MED_PACT_TP_CD                                                                      MED_PACT_TP_CD        /*진료원무접수구분코드*/
               , V.PT_NO                                                                               PT_NO                 /*환자번호*/
               , V.ORD_DT                                                                              ORD_DT                /*처방일자*/
               , V.ORD_SEQ                                                                             ORD_SEQ               /*처방순번*/
               , CASE WHEN V.ORD_MRK_CTG_CD IN ('P','E','R') THEN
                          (SELECT ORD_SEQ
                             FROM XMED.MOOORONV
                            WHERE ORD_ID     = V.OPRS_ID
                              AND ORD_GRP_CD = V.ORD_GRP_CD
                              AND HSP_TP_CD  = :HIS_HSP_TP_CD)
                      ELSE V.ORD_SEQ
                 END                                                                                   ORD_SEQ_PRN           /*처방순번(PRN포함)*/
               , V.ORD_CD                                                                              ORD_CD                /*처방코드*/
               , V.MIF_CD                                                                              MIF_CD                /*수가코드*/
               , V.PRE_ORD_NM                                                                          PRE_ORD_NM            /*PRE처방명*/
               , V.ORD_NM                                                                              ORD_NM                /*처방명*/
               , V.POST_ORD_NM || XSUP.FT_MSE_GET_PM_CNCLRSN(V.ORD_ID, '01', '02', V.HSP_TP_CD)        POST_ORD_NM           /*POST처방명*/
               , V.EXM_BNDL_ORD_NM                                                                     EXM_BNDL_ORD_NM       /*검사묶음처방명*/
               , V.ODDSC_TP_CD                                                                         ODDSC_TP_CD           /*처방중단구분코드*/
               , DECODE(V.ODDSC_TP_CD,'D','D/C','N','D/C','')                                          ODDSC_TP_CD_NM        /*처방중단구분코드명*/
               , DECODE(V.ODDSC_TP_CD,'D','Y','N','Y','N')                                             ODDSC_TP_CD_YN        /*처방중단구분코드여부*/
               , V.ORD_MRK_CTG_CD                                                                      ORD_MRK_CTG_CD        /*처방표시분류코드 : MEDTYPE*/
               , V.ODAPL_POP_CD                                                                        ODAPL_POP_CD          /*처방적용목적코드 : JOBTYPE*/
               , XCOM.FT_CCC_CODENAME(V.HSP_TP_CD,'405',V.ODAPL_POP_CD)                                ODAPL_POP_NM          /*처방적용목적코드명 : JOBTYPE*/
               , NVL(V.PRN_ORD_YN, 'N')                                                                PRN_ORD_YN            /*PRN처방여부 : PRN_YN*/
               , V.ADD_ORD_YN                                                                          ADD_ORD_YN            /*추가처방여부*/
               , DECODE(XCOM.FT_CCC_CODEDTRL(V.HSP_TP_CD,'DR00040',V.ORD_MRK_CTG_CD,'2'),'Y','N','Y')  ORD_VIEW_YN           /*오더표시여부*/
--               , XMED.PKG_MOO_SAVEORDERS_NUR.FN_GET_ORDER_CHILD_YN(V.ORD_ID,'R','Y',V.HSP_TP_CD)       REQ_ORD_1TM_PBL_YN    /*1회청구처방발행여부*/
--               , XMED.PKG_MOO_SAVEORDERS_NUR.FN_GET_ORDER_CHILD_YN(V.ORD_ID,'E','Y',V.HSP_TP_CD)       REQ_ORD_QTY_PBL_YN    /*수량요청처방발행여부*/
               /* Z오더 관련 투약 1회 청구 제어, 김국경 작업, 2016-03-17 start : 빌드보류 처리  */
               /*, XSUP.FT_MSD_NURJOB_MDPR_CD_YN('2', V.HSP_TP_CD, V.ORD_CD) */
               , DECODE(XSUP.FT_MSD_NURJOB_MDPR_CD_YN('2', V.HSP_TP_CD, V.ORD_CD), 'Y'
                                                                                 , DECODE(V.PACT_TP_CD, 'E'
                                                                                 , NULL
                                                                                 , DECODE(V.EMRG_YN, 'Y', 'N', 'Y'))
                                                                                 , 'N')                PBS_ORD_1TM_PBL_YN    /*1회청구처방발행가능여부*/
               /* Z오더 관련 투약 1회 청구 제어 end */
               , XSUP.FT_MSD_NURJOB_MDPR_CD_YN('1', V.HSP_TP_CD, V.ORD_CD)                             PBS_ORD_QTY_PBL_YN    /*수량요청처방발행가능여부*/
               , XCOM.FT_CCC_CODEDTRL(V.HSP_TP_CD,'DR00040',V.ORD_MRK_CTG_CD,'2')                      ORD_NUR_PBL_YN        /*처방간호발행여부*/
               , V.EMRG_YN                                                                             EMRG_YN               /*응급여부 : ER_YN*/
               , V.ORD_SLIP_CTG_CD                                                                     ORD_SLIP_CTG_CD       /*처방전표분류코드*/
               , V.PBSO_DEPT_CD                                                                        PBSO_DEPT_CD          /*발행처부서코드*/
               , XCOM.FT_PDE_SELDEPTNM(V.PBSO_DEPT_CD,V.HSP_TP_CD)                                     PBSO_DEPT_NM          /*발행처부서코드명*/
               , V.RPY_STS_CD                                                                          RPY_STS_CD            /*수납상태코드*/
               , XCOM.FT_CCC_CODENAME(V.HSP_TP_CD,'PA240', V.RPY_STS_CD)                               RPY_STS_NM            /*수납상태코드명*/
               , CASE WHEN V.ORD_MRK_CTG_CD IN ('P','E','R') THEN
                          (SELECT SCRN_SORT_SEQ
                             FROM XMED.MOOORONV
                            WHERE ORD_ID     = V.OPRS_ID
                              AND ORD_GRP_CD = V.ORD_GRP_CD
                              AND HSP_TP_CD  = :HIS_HSP_TP_CD)
                      ELSE V.SCRN_SORT_SEQ
                 END                                                                                   SCRN_SORT_SEQ         /*정렬순번 IN_SEQ*/
               , V.GRP_SORT_SEQ                                                                        GRP_SORT_SEQ          /*간호정렬순번*/
               , CASE WHEN V.ORD_MRK_CTG_CD IN ('P','E','R') THEN
                          (SELECT ODDSC_SORT_SEQ
                             FROM XMED.MOOORONV
                            WHERE ORD_ID     = V.OPRS_ID
                              AND ORD_GRP_CD = V.ORD_GRP_CD
                              AND HSP_TP_CD  = :HIS_HSP_TP_CD)
                      ELSE V.ODDSC_SORT_SEQ
                 END                                                                                   ODDSC_SORT_SEQ        /*처방중단정렬순번*/
               , V.PT_HME_DEPT_CD                                                                      PT_HME_DEPT_CD        /*환자수진부서코드*/
               , V.FSR_STF_DEPT_CD                                                                     FSR_STF_DEPT_CD       /*최초등록직원부서코드*/
               , V.FSR_STF_NO                                                                          FSR_STF_NO            /*최초등록직원번호*/
               , XCOM.FT_CNL_SELSTFINFO('4',V.FSR_STF_NO,V.HSP_TP_CD,NULL)                             FSR_STF_NM            /*최초등록직원명*/
               , V.FSR_DTM                                                                             FSR_DTM               /*최초등록일시*/
               , CASE WHEN V.ORD_GRP_CD != '03' THEN
                           CASE WHEN V.ODAPL_POP_CD != '9' THEN
                                     CASE WHEN V.ODDSC_TP_CD != 'C' THEN
                                               XMED.PKG_MOO_ACTORDER_INFO.FT_ACTING_NAME(V.ORD_ID,'VA_DTTM','Y','N','N', V.HSP_TP_CD)
                                          WHEN XMED.PKG_MOO_ACTORDER_INFO.FT_GET_DRUG_MAINORDER_YN(V.DG_BNDL_MAIN_YN,V.DG_BDOP_SEQ) = 'Y' THEN
                                               CASE WHEN V.ORD_MRK_CTG_CD NOT IN ('E','R') THEN
                                                         XMED.PKG_MOO_ACTORDER_INFO.FT_ACTING_NAME(V.ORD_ID,'VA_DTTM','Y','N','N', V.HSP_TP_CD)
                                               END
                                     END
                           END
                 END                                                                                   ACTING_TIME           /*수행시간*/
               , CASE WHEN V.ORD_GRP_CD != '03' THEN
                           CASE WHEN V.ORD_MRK_CTG_CD NOT IN ('E','R') THEN
                                     REPLACE(XMED.PKG_MOO_ACTORDER_INFO.FT_ACTING_NAME(V.ORD_ID,'VA_DTTM','Y','Y','Y', V.HSP_TP_CD),', ',CHR(10))
                           END
                 END                                                                                   ACTING_TIME_TIP       /*수행시간 툴팁*/
               , XCOM.FT_CNL_SELSTFINFO('4',V.FSR_STF_NO,V.HSP_TP_CD,'') || '(' || XCOM.FT_PDE_SELDEPTNM(V.FSR_STF_DEPT_CD, V.HSP_TP_CD) || ')'  FSR_STF_INFO  /*발행의정보*/
               /*실시간정보*/
               , V.RTM_CLSN_FMT_YN                                                                     RTM_CLSN_FMT_YN       /*실시간마감수행여부*/
               /*투약*/
               , V.DG_BNDL_MAIN_YN                                                                     DG_BNDL_MAIN_YN       /*약묶음주여부*/
               , V.FMT_DRST_DEPT_CD                                                                    FMT_DRST_DEPT_CD      /*수행약국부서코드*/
               , XSUP.FT_MSD_MDCNDEPTNM(V.HSP_TP_CD,V.FMT_DRST_DEPT_CD)                                FMT_DRST_DEPT_NM      /*수행약국부서명*/
               , V.DRST_FLPRS_DTM                                                                      DRST_FLPRS_DTM        /*약국조제일시*/
               , XMED.PKG_MOO_ACTORDER_INFO.FT_GET_DRUG_FLPRS_DTM_NM(V.ORD_ID,V.HSP_TP_CD)             DRST_FLPRS_DTM_NM     /*약국조제일시명*/
               , V.DG_BDOP_SEQ                                                                         DG_BDOP_SEQ           /*투약묶음처방순번*/
               , NVL2(V.DG_BDOP_SEQ, 'Y', 'N')                                                         DG_BDOP_YN            /*투약묶음처방여부*/
               , XSUP.FT_MSD_NURJOB_MDPR_CD_YN('1',V.HSP_TP_CD,V.ORD_CD)                               DG_QTY_CHG_YN         /*주사접수요청가능여부*/
               , XSUP.FT_MSD_NURJOB_MDPR_CD_YN('2',V.HSP_TP_CD,V.ORD_CD)                               DG_QTY_ADD_YN         /*주사접수요청가능여부*/
               , DECODE(V.AMS_ORD_STS_CD, '0', 'N', 'Y')                                               DRST_ACPT_YN          /*약국접수여부*/
               , V.AMS_ORD_STS_CD                                                                      AMS_ORD_STS_CD        /*투약처방상태코드*/
               , V.DG_RINS_STF_NO                                                                      DG_RINS_STF_NO        /*약반납지시직원번호*/
               , V.NXDY_ORD_YN                                                                         NXDY_ORD_YN           /*익일처방여부*/
               , V.IORD_PSB_YN                                                                         IORD_PSB_YN           /*원내처방가능여부*/
               , V.PT_BNG_DG_YN                                                                        PT_BNG_DG_YN          /*환자지참약여부*/
               , V.MDPR_LGL_TP_CD                                                                      MDPR_LGL_TP_CD        /*약품법적구분코드*/
               , V.USG_CD                                                                              USG_CD                /*용법코드*/
               , V.SPCF_MTD_ORD_MDPR_YN                                                                SPCF_MTD_ORD_MDPR_YN  /*특정진료과처방약품여부*/
               , V.CTN_CNTE_YN                                                                         CTN_CNTE_YN           /*주의내용여부*/
               , V.CTN_CNTE                                                                            CTN_CNTE              /*주의내용*/
               , V.USG_EXPL_NM                                                                         USG_EXPL_NM           /*용법설명명*/
               , XCOM.FT_CCC_CODENAME(V.HSP_TP_CD, '681', V.AMPTH_TP_CD)                               AMPTH_TP_NM           /*투여경로구분명*/
               , V.MNF_CMP_CD                                                                          MNF_CMP_CD            /*제조회사코드*/
               , V.AMD_QTY                                                                             AMD_QTY               /*투여수량*/
               , V.TH2_AMD_QTY                                                                         TH2_AMD_QTY           /*2번째투여수량*/
               , V.DG_MIX_YN                                                                           DG_MIX_YN             /*약혼합여부*/
               , V.VCCN_TGT_YN                                                                         VCCN_TGT_YN           /*예방접종대상여부*/
               , DECODE(V.ORD_GRP_CD,'02',XMED.PKG_MOO_ACTORDER_INFO.FT_GET_DG_CNCN_YN(V.ORD_CD,V.ORD_DT,V.HSP_TP_CD)
                                         ,'N')                                                         DG_CNCN_YN            /*관심약여부:마약,향정,고가*/
               , CASE WHEN (V.PACT_TP_CD &lt;&gt; 'I') OR (V.ODAPL_POP_CD = '9') THEN
                           DECODE(V.AMDPO_TP_CD,'2',DECODE(V.AMPTH_TP_CD,'0','자가','집으로')
                                                   ,XCOM.FT_CCC_CODENAME(V.HSP_TP_CD,'DR00045',V.AMDPO_TP_CD))
                 END                                                                                   INJC_IMPL_PLC         /*주사시행처*/
               , DECODE(V.AMS_ORD_STS_CD,'H','Y','N')                                                                        DG_HOLD_MRK_YN        /*투약보류표시여부*/
               , DECODE(V.ORD_GRP_CD,'02',XMED.PKG_MOO_ACTORDER_INFO.FT_GET_DG_HOLD_MRK_YN(V.ORD_ID,V.HSP_TP_CD,'ALL'),'N')  DG_HOLD_LWR_MRK_YN    /*투약보류표시여부(자식)*/
               , NVL2(V.DG_RINS_STF_NO,'Y','N')                                                                              DG_RTN_MRK_YN         /*투약반납표시여부*/
               , DECODE(V.ORD_GRP_CD,'02',XMED.PKG_MOO_ACTORDER_INFO.FT_GET_DG_RTN_MRK_YN(V.ORD_ID,V.HSP_TP_CD,'ALL'),'N')   DG_RTN_LWR_MRK_YN     /*투약반납표시여부(자식)*/
               , V.PRPD_NOTM                                                                           PRPD_NOTM             /*기간별횟수*/
               , V.NR_PBL_STF_NO                                                                       NR_PBL_STF_NO         /*간호발행직원번호*/
               , XCOM.FT_CNL_SELSTFINFO('4',V.NR_PBL_STF_NO,V.HSP_TP_CD,NULL)                          NR_PBL_STF_NM         /*간호발행직원번호*/
               , V.NR_PBL_DTM                                                                          NR_PBL_DTM            /*간호발행일시*/
               /*검사*/
--               , V.EXM_PRGR_STS_CD                                                                     EXM_PRGR_STS_CD       /*검사진행상태코드*/
--               , CASE WHEN V.ORD_GRP_CD = '03' THEN
--                           CASE WHEN (V.EXM_PRGR_STS_CD = 'B') THEN
--                                     CASE WHEN (XMED.PKG_MOO_ACTORDER_INFO.FT_DEXM_MDSC_SPCM_CNCL_DT(V.ORD_ID, V.HSP_TP_CD) IS NOT NULL) THEN
--                                                '접수취소'
--                                          ELSE
--                                               CASE WHEN (V.SPCM_ARVL_DTM IS NOT NULL) THEN
--                                                          CASE WHEN (V.BFDS_QUICK_RSLT_YN = 'Y') THEN
--                                                                    '진검도착(빠른결과)'
--                                                               ELSE '진검도착'
--                                                          END
--                                                     ELSE
--                                                          CASE WHEN (V.RLT_BLCL_DTM IS NULL) THEN
--                                                               CASE WHEN (XSUP.FT_MSE_GET_PM_CNCLRSN(V.ORD_ID, '01', '03', V.HSP_TP_CD) IS NOT NULL) THEN '병리도착'
--                                                               ELSE '라벨'
--                                                               END
--                                                          ELSE
--                                                               XCOM.FT_CCC_CODENAME(V.HSP_TP_CD,'414', V.EXM_PRGR_STS_CD)
--                                                          END
--                                                END
--                                     END
--                                ELSE
--                                     /* 2016-09-22, 김국경 추가 : 접수취소(병리) */
--                                     CASE WHEN (XSUP.FT_MSE_GET_PM_CNCLRSN(V.ORD_ID, '01', '01', V.HSP_TP_CD) IS NOT NULL) THEN '접수취소'
--                                          ELSE
--                                               CASE WHEN V.EXM_PRGR_STS_CD = 'X' AND NVL2(V.MBL_EQUP_EXM_REQ_STF_NO, 'Y', 'N') = 'Y' THEN '요청'
--                                                    ELSE XCOM.FT_CCC_CODENAME(V.HSP_TP_CD,'414', V.EXM_PRGR_STS_CD)
--                                               END
--                                     END
--                                END
--
--                 END                                                                                   EXM_PRGR_STS_NM       /*검사진행상태명*/
--               , CASE WHEN V.ORD_GRP_CD = '03' THEN
--                           CASE WHEN (V.EXM_PRGR_STS_CD = 'B') THEN
--                                     CASE WHEN (XMED.PKG_MOO_ACTORDER_INFO.FT_DEXM_MDSC_SPCM_CNCL_DT(V.ORD_ID, V.HSP_TP_CD) IS NOT NULL) THEN
--                                               TO_CHAR(XMED.PKG_MOO_ACTORDER_INFO.FT_DEXM_MDSC_SPCM_CNCL_DT(V.ORD_ID, V.HSP_TP_CD), 'YYYY-MM-DD HH24:MI')
--                                          ELSE
--                                               CASE WHEN (V.SPCM_ARVL_DTM IS NOT NULL) THEN
--                                                          TO_CHAR(V.SPCM_ARVL_DTM, 'YYYY-MM-DD HH24:MI')
--                                                    ELSE
--                                                          CASE WHEN (V.RLT_BLCL_DTM IS NOT NULL) THEN
--                                                              TO_CHAR(V.RLT_BLCL_DTM, 'YYYY-MM-DD HH24:MI')
--                                                          ELSE
--                                                               CASE WHEN (XSUP.FT_MSE_GET_PM_CNCLRSN(V.ORD_ID, '01', '04', V.HSP_TP_CD) IS NOT NULL) THEN
--                                                                    XSUP.FT_MSE_GET_PM_CNCLRSN(V.ORD_ID, '01', '04', V.HSP_TP_CD)
--                                                               ELSE
--                                                                    V.EXM_PRGR_STS_DTM_NM
--                                                               END
--                                                          END
--                                               END
--                                     END
--
--                                ELSE
--                                     CASE WHEN V.EXM_PRGR_STS_CD = 'X' AND V.MBL_EQUP_EXM_REQ_DTM IS NOT NULL THEN
--                                               TO_CHAR(V.MBL_EQUP_EXM_REQ_DTM, 'YYYY-MM-DD HH24:MI')
--                                          ELSE
--                                               V.EXM_PRGR_STS_DTM_NM
--                                     END
--                           END
--                 END                                                                                   EXM_PRGR_STS_DTM_NM   /*검사진행상태일시명*/
--               , V.RSEX_YN                                                                             RSEX_YN               /*예약검사여부*/
--               , V.IDPT_EXM_YN                                                                         IDPT_EXM_YN           /*과내검사여부*/
--               , V.SPCM_EXM_YN                                                                         SPCM_EXM_YN           /*검체검사여부*/
--               , V.EHSP_FLIT_YN                                                                        EHSP_FLIT_YN          /*외부병원필름판독여부*/
--               , V.STM_EXM_BNDL_SEQ                                                                    STM_EXM_BNDL_SEQ      /*동시검사묶음순번*/
--               , NVL2(V.STM_EXM_BNDL_SEQ, 'Y', 'N')                                                    STM_EXM_BNDL_YN       /*동시검사묶음여부*/
--               , V.EXM_HOPE_DT                                                                         EXM_HOPE_DT           /*검사희망일자*/
--               , V.TH1_SPCM_CD                                                                         TH1_SPCM_CD           /*1번째검체코드*/
--               , V.EXRM_EXM_CTG_CD                                                                     EXRM_EXM_CTG_CD       /*검사실검사분류코드*/
--               , V.SPCM_MED_EXM_CTG_CD                                                                 SPCM_MED_EXM_CTG_CD   /*진료검사분류코드:검체출력용*/
--               , V.SPCM_PTHL_NO                                                                        SPCM_PTHL_NO          /*검체병리번호*/
--               , V.SPCM_INLZ_PSB_YN                                                                    SPCM_INLZ_PSB_YN      /*검체초기화가능여부*/
--               , V.BLCL_DTM                                                                            BLCL_DTM              /*채혈일시*/
--               , V.BLCL_STF_NO                                                                         BLCL_STF_NO           /*채혈직원번호*/
--               , V.RLT_BLCL_DTM                                                                        RLT_BLCL_DTM          /*실제채혈일시*/
--               , V.RLT_BLCL_STF_NO                                                                     RLT_BLCL_STF_NO       /*실제채혈직원번호*/
--               , DECODE(V.ODAPL_POP_CD,'3','3','9','9','7','7','1')                                    SPCM_ODAPL_POP_CD     /*검체처방적용목적코드*/
--               , V.BF_FMT_YN                                                                           BF_FMT_YN             /*선수행여부*/
--               , V.BFDS_QUICK_RSLT_YN                                                                  BFDS_QUICK_RSLT_YN    /*퇴원이전빠른결과여부*/    /*2015-08-20 김병수 추가*/
--               /*수혈*/
--               , DECODE(V.ORD_GRP_CD,'04','Y','N')                                                     BLD_ORD_YN            /*수혈오더여부*/
--               , TRFS_EXPT_OW_TP_CD                                                                    TRFS_EXPT_OW_TP_CD    /*수혈예정출고구분코드*/
--               /*처치*/
--               , DECODE(V.ORD_CD,'9999999999','Y','N')                                                 TXT_ORD_YN            /*텍스트오더여부*/
--               , DECODE(V.ORD_CD,'CCE0000002',NVL2(V.MDRC_ID,'Y','N'))                                 ODRDR_RPLY_YN         /*타과의뢰회신여부*/
--               , V.MDRC_ID                                                                             MDRC_ID               /*진료기록ID*/
               /*공통*/
               , XMED.PKG_MOO_ACTORDER_INFO.FT_ORD_STS_RGB(V.ORD_ID,V.HSP_TP_CD)                       ORD_STS_RGB_CD        /*오더상태RGB코드*/
               , V.HSP_TP_CD                                                                           HSP_TP_CD             /*병원구분코드*/
               /*출력물 체크박스 활성화 여부*/
               , DECODE(V.ORD_GRP_CD, '02', CASE WHEN V.ODDSC_TP_CD            IN ('N','D') THEN 'N'
                                                 WHEN V.ORD_MRK_CTG_CD NOT IN ('A','N','M') THEN 'N'
                                                 WHEN XMED.PKG_MOO_ACTORDER_INFO.FT_GET_DRUG_MAINORDER_YN(V.DG_BNDL_MAIN_YN,V.DG_BDOP_SEQ) = 'Y' THEN 'Y'
                                                 ELSE 'N'
                                            END
                                    , '03', CASE WHEN V.ORD_CTG_CD IN ('CP','PA','NM') AND V.ODDSC_TP_CD = 'C' THEN
                                                        DECODE(V.ADD_EXM_YN, 'Y', 'N', DECODE(V.EXM_PRGR_STS_CD,'X','Y','B','Y','N'))        /*접수 후 출력 안됨  2013-05-23 김병수*/
                                                    --  DECODE(V.EXM_PRGR_STS_CD,'N','N','Y')                /*결과보고 출력 안됨*/
                                                    --  'Y'
                                                    --  CASE WHEN V.ODAPL_POP_CD = '9' THEN 'N'
                                                    --       ELSE 'Y'
                                                    --  END
                                                 ELSE 'N'
                                            END
                                    , '04', 'Y'
                                    , '05', CASE WHEN V.ORD_SLIP_CTG_CD NOT IN ('110','111','112','113') THEN 'Y'
                                                 ELSE 'N'
                                            END
                                    , 'N')                                                             AVT_PRNT_LBL_YN       /*라벨출력활성여부*/
               , DECODE(V.ORD_GRP_CD, '02', CASE WHEN V.ODDSC_TP_CD != 'C' THEN 'N'
                                                 WHEN V.ORD_MRK_CTG_CD NOT IN ('A','N') THEN 'N'
                                                 ELSE 'Y'
                                            END
                                    , '03', NVL2(R.ORD_CD, 'Y', 'N')
                                    , 'N')                                                             AVT_PRNT_MNL_YN       /*설명서출력활성여부*/
               /*간호사업무확인*/
               , NVL(O.NRPD_PRNT_YN,'N')                                                               NRPD_PRNT_YN          /*간호계획서출력여부*/
               , NVL(O.NRS_CHG_ORD_CFMT_YN,'N')                                                        NRS_CHG_ORD_CFMT_YN   /*간호사변경처방확인여부*/
               , NVL(O.NRS_ANW_ORD_CFMT_YN,'N')                                                        NRS_ANW_ORD_CFMT_YN   /*간호사신규처방확인여부*/
               , NVL(O.NRS_CFMT_ORD_CFMT_YN,'N')                                                       NRS_CFMT_ORD_CFMT_YN  /*간호사확인처방확인여부*/
               , NVL(O.NRS_ADD_ORD_CFMT_YN,'N')                                                        NRS_ADD_ORD_CFMT_YN   /*간호사추가처방확인여부*/
               , (SELECT 'Y'
                    FROM MSDDGBAM
                   WHERE PACT_TP_CD     IN ('I','E')
                     AND AMS_ORD_STS_CD IN ('2','3') --접수이후
                     AND FLPRS_STS_CD   = 'P' --조제완료 : P, 인수인계완료 : O
                     AND ORD_TSFM_SEQ   &gt; 0
                     AND ORD_ID         = V.ORD_ID--처방ID
                     AND HSP_TP_CD      = :HIS_HSP_TP_CD
                     AND ROWNUM         = 1
                 )                                                                                        FLPRS_CMPL_YN         /*조제완료 여부 (방수석차장 제공)*/
               , DECODE(XSUP.FT_MSD_GET_ADT_SGNT_STF_INFO(V.HSP_TP_CD, '2', V.ORD_ID )
                      , '', ''
                      , '조제약사 :  ' || XSUP.FT_MSD_GET_ADT_SGNT_STF_INFO(V.HSP_TP_CD, '2', V.ORD_ID ))  DRST_FLPRS_NM         /*약국조제약사 김국경 추가(2014-10-17)*/
--               , CASE WHEN V.ORD_CD IN ('M3262','M32621','M3263','M3266','M3267','M3269','M32913','M32915') THEN
--                         ( SELECT A.CMPL_DTM + 1 FROM MSBIOBRD A WHERE A.ORD_ID = V.ORD_ID AND A.CMPL_DTM IS NOT NULL )
--                      WHEN V.ORD_CD IN ('M3288') THEN /*Leukapheresis*/
--                          (
--                           SELECT MIN(H.WK_DTM) + 1
--                             FROM MSBIOBMD         S
--                                , MSBIOBHH         H
--                            WHERE S.ORD_ID         = V.ORD_ID
--                              AND S.HSP_TP_CD      = V.HSP_TP_CD
--                              AND S.BLOD_NO        = H.BLOD_NO
--                              AND S.HSP_TP_CD      = H.HSP_TP_CD
--                              AND H.BLOD_IOW_TP_CD = '1'
--                          )
--                      ELSE CASE WHEN V.TRFS_MMDC_CTG_CD = '002' THEN  /*FFP는 혈액완료시간 + 3시간*/
--                                   ( SELECT MAX(A.CMPL_DTM) + 3/24 FROM MSBIOBRD A WHERE A.ORD_ID = V.ORD_ID AND A.CMPL_DTM IS NOT NULL )
--                                WHEN V.TRFS_MMDC_CTG_CD = '004' THEN  /*Cryo는 혈액완료시간 + 1시간*/
--                                   ( SELECT MAX(A.CMPL_DTM) + 1/24 FROM MSBIOBRD A WHERE A.ORD_ID = V.ORD_ID AND A.CMPL_DTM IS NOT NULL )
--                                ELSE NULL
--                           END
--                 END                                                                                                BLOD_AVL_DTM            /*수혈가능시간*/ /*(2014-10-28, 진료지원 김성룡 제공), 2015-09-10 김병수 수혈가능시간조건추가*/
--               , V.TRFS_MMDC_CTG_CD                                                                                 TRFS_MMDC_CTG_CD        /*수혈제제분류코드*/
               , V.CFMT_AFT_AMD_YN                                                                                  CFMT_AFT_AMD_YN         /*확인후투여여부*/
               , DECODE(M.ORD_CD, 'CCZ0000001', 'Y', 'N')                                                           HHC_ODRDR_RPLY_YN       /*가정간호의뢰서회신여부*/
               , V.ORD_CTG_CD                                                                                       ORD_CTG_CD
               , V.TH3_AMD_QTY                                                                                      TH3_AMD_QTY           /*3번째투여수량 - 투여용량에 의한 추가(김국경 2015-02-11)*/
               , V.TH4_AMD_QTY                                                                                      TH4_AMD_QTY           /*4번째투여수량 - 투여용량에 의한 추가(김국경 2015-02-11)*/
               , V.TH5_AMD_QTY                                                                                      TH5_AMD_QTY           /*5번째투여수량 - 투여용량에 의한 추가(김국경 2015-02-11)*/
               , V.AMD_TP_YN                                                                                        AMD_TP_YN             /*투여용량 대상여부 - 투여용량에 의한 추가(김국경 2015-02-11)*/
               , V.MDPR_UNIT_CD                                                                                     MDPR_UNIT_CD          /*용량 단위 - 투여용량에 의한 추가(김국경 2015-02-11)*/
               , DECODE(V.AMPTH_TP_CD, '0', DECODE(V.MDPR_LGL_TP_CD, '1', DECODE(DTL_AMPTH_CLS_NM, 'IV', 'Y', 'IVS', 'Y', 'MIV', 'Y', 'N')
                                                                   , '2', DECODE(DTL_AMPTH_CLS_NM, 'IV', 'Y', 'IVS', 'Y', 'MIV', 'Y', 'N')
                                                                   , 'N'), 'N')                                                                     NRCT_RTN_DSP           /* 주사제 인 것만 마약류 반납 표출여부 - 김국경 추가, 2015-06-30 */
               , V.UGT_TRFS_TP_CD                                                                                                                   UGT_TRFS_TP_CD         /* 긴급, 초긴급 확인 - 김국경 추가, 2015-07-14 */
               , V.EQUP_MBL_PSB_YN                                                                                  EQUP_MBL_PSB_YN            /*장비휴대가능여부 - 박제영 추가, 2016-02-18*/
               , NVL2(V.MBL_EQUP_EXM_REQ_STF_NO, 'Y', 'N')                                                          MBL_EQUP_EXM_REQ_YN        /*휴대장비검사요청여부 - 박제영 추가, 2016-02-18*/
               , V.ORD_RMK_CNTE                                                                                     ORD_RMK_CNTE               /*처방비고내용 - 박제영 추가, 2016-02-18*/
               , NVL(XSUP.FT_MSD_GET_INTIPHARM_DRUG_INFO(V.ORD_ID, V.HSP_TP_CD, V.ORD_CD, V.PBSO_DEPT_CD), 'N')     ADC_DRUG_YN                /*ADC대상약 - 박제영 추가, 2016-03-17*/
               , V.POWD_DG_YN                                                                                       POWD_DG_YN                 /*분쇄여부*/
               , V.POWD_PSB_YN                                                                                      POWD_PSB_YN                /*분쇄가능여부*/
               , V.DTL_AMPTH_CLS_CD                                                                                 DTL_AMPTH_CLS_CD           /*상세투여유형경로코드 #18, Infusion작업 2017-03-16, 김국경*/
               , V.ADD_EXM_YN                                                                                       ADD_EXM_YN                 /*추가검사여부, 2016-09-22, 김국경 추가*/
               /* Infusion 작업, 김국경, 운영반영X 시작 */
               , XMED.PKG_MRN_CLCOREC.FT_GETDRUGINFO(V.ORD_ID, V.HSP_TP_CD, 'F')                                    ORD_INJT_DSG                    /* #18, 주입총용량(ml),  Infusion작업, 2017-03-16, 김국경 */
               , XMED.PKG_MRN_CLCOREC.FT_MRN_INJT_DSG_CALC(V.ORD_ID, V.HSP_TP_CD)                                   ORD_INJT_RTO                    /* #18, 주입속도(cc/hr), Infusion작업, 2017-03-16, 김국경 */
--               , CASE WHEN V.ORD_GRP_CD = '02' AND V.DTL_AMPTH_CLS_CD = '}' THEN
--                      (SELECT DECODE(COUNT(K.ORD_ID), 0, 'N', 'Y')
--                         FROM CIFCINFD K
--                        WHERE K.ORD_ID            = V.ORD_ID
--                          AND K.AVL_END_DTM       = TO_DATE('9999-12-31', 'YYYY-MM-DD')
--                          AND NVL(K.PDAU_YN, 'N') = 'Y'
--                          AND K.HSP_TP_CD         = V.HSP_TP_CD
--                       )
--                 ELSE 'N'
--                 END                                                                                                IFS_PDAU_YN                /*Infusion 오더 인터페이스 테이블 PDA 수행 여부 #18, Infusion작업 2016-11-XX */
               , EXM_ORD_ID                                                                                         EXM_ORD_ID      --검사처방ID
               , AMS_EXPT_DT                                                                                        AMS_EXPT_DT     --투약예정일자
               , EXCT_EXRM_CD                                                                                       EXCT_EXRM_CD    --실행검사실코드
               , V.IMPL_EXRM_TP_CD                                                                                  IMPL_EXRM_TP_CD  --실제실행검사실코드
               , NVL(( SELECT AA.HOPE_EXRM_NO
                         FROM MOOOREXM AA
                        WHERE AA.ORD_ID = V.EXM_ORD_ID
                          AND AA.HSP_TP_CD = :HIS_HSP_TP_CD
                          AND AA.PT_NO  = V.PT_NO
                          AND ROWNUM = 1
                      ), XCOM.FT_MCC_CODEDTRL(:HIS_HSP_TP_CD, 'DR00160', V.EXCT_EXRM_CD, '3'))                      DEFAULT_IMPL_EXRM_TP_CD
            FROM MOOORPTD        M
               , XMED.MOOORONV   V
               , CCOOCEBD        R
               , MOOOROND        O
           WHERE 0=0
             AND M.ORD_ID        = V.ORD_ID
             AND M.ORD_CD        = R.ORD_CD(+)
             AND M.ORD_ID        = O.ORD_ID(+)
             AND V.PT_NO         = :IN_PT_NO

             AND V.ORD_DT       BETWEEN TRUNC(TO_DATE(:IN_FR_DTE,'YYYY-MM-DD'))
                                    AND TRUNC(TO_DATE(:IN_TO_DTE,'YYYY-MM-DD')) + 0.99999

             AND V.HSP_TP_CD     = :HIS_HSP_TP_CD
             AND M.HSP_TP_CD     = :HIS_HSP_TP_CD
             AND R.HSP_TP_CD(+)  = :HIS_HSP_TP_CD
             AND O.HSP_TP_CD(+)  = :HIS_HSP_TP_CD
             AND V.ORD_GRP_CD    = '02'
             AND V.AMDPO_TP_CD   IN ('1')
             --AND V.AMS_ORD_STS_CD = '0'
             AND V.PACT_TP_CD                 = 'O'
             AND NVL(V.PRN_ORD_YN, '*')      != 'Y'          /* PRN 오더 아닌 것       */
             AND NVL(V.PT_BNG_DG_YN, '*')    != 'Y'          /* SELF 조제 아닌 것      */
--             AND V.ORD_GRP_CD    = NVL(:ORD_GRP_CD, V.ORD_GRP_CD)
             /*삭제오더 제외(단, 자식오더가 있다면 부모오더 모두조회)*/    /*2013-06-26 김병수*/
             AND M.ODDSC_TP_CD NOT IN DECODE(( SELECT COUNT(1) FROM MOOORDRM WHERE OPRS_ID = M.ORD_ID AND ORD_MRK_CTG_CD IN ('P','E','R') AND ROWNUM = 1), 1, 'NNN', 'N')
--             AND V.EXCT_EXRM_CD IN ( SELECT AA.COMN_CD
--                                       FROM CCCMCSTE AA
--                                      WHERE AA.COMN_GRP_CD  = 'DR00160'
--                                        AND AA.DTRL2_NM     IN ( NVL(:IN_EXCT_EXRM_CD, DTRL1_NM), 'ETC' )
--                                        AND AA.HSP_TP_CD    = :HIS_HSP_TP_CD
--                                    )

        ) SA
    ORDER BY SA.ACTING_TIME DESC, SA.ORD_ID
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>퇴원오더 입원 PACT_ID</QUERY_NAME>
    <QUERY_TEXT>PROCEDURE XSUP.PC_MSE_MOOOREXM_CONTINUE (  IN_PT_NO            IN        VARCHAR2          -- 환자ID
                                         , IN_ORD_DTE          IN        VARCHAR2          -- 오더일자
                                         , IN_ORD_SEQ          IN        VARCHAR2          -- 오더순번
                                         , IN_ORD_ID           IN        VARCHAR2  
                                         , IN_RSVDTE           IN        VARCHAR2          -- 예약일자
                                         , IN_TST_CD           IN        VARCHAR2          -- 오더코드   
                                         , HIS_HSP_TP_CD       IN        VARCHAR2
                                         , HIS_STF_NO          IN        VARCHAR2
                                         , HIS_PRGM_NM         IN        VARCHAR2
                                         , HIS_IP_ADDR         IN        VARCHAR2
                                         , IO_ERRYN            IN OUT    VARCHAR2          -- ERROR여부
                                         , IO_ERRMSG           IN OUT    VARCHAR2 )        -- ERROR MESSAGE
AS

 WK_WRKTYPE                  VARCHAR2(01)                    := '';
 WK_DPCD                     MOOOREXM.PT_HME_DEPT_CD%TYPE    := '';
 WK_WKPERS                   ACPPRODM.MEDR_STF_NO%TYPE       := '';
 WK_MAXSEQ                   NUMBER                          :=  0;
 WK_MEDDR                    ACPPRODM.MEDR_STF_NO%TYPE       := '';
 WK_RSVDATE                  VARCHAR2(10)                    := '';
 WK_RSVTYPE                  VARCHAR2(1)                     := '9';     
 
 WK_PME_CLS_CD               PCTPCPAM_DAMO.PME_CLS_CD%TYPE   := '';
 WK_PSE_CLS_CD               PCTPCPAM_DAMO.PSE_CLS_CD%TYPE   := '';
 WK_CTRC_ORG_CD              PCTPCPAM_DAMO.CTRC_ORG_CD%TYPE  := '';
 
 WK_RPY_PACT_IN              ACPPRODM.RPY_PACT_ID%TYPE       := NULL ; 
 WK_RPY_CLS_SEQ              ACPPRODM.RPY_CLS_SEQ%TYPE       := NULL ;
 WK_MEDR_SID                 ACPPRODM.MEDR_SID%TYPE          := ''; 
 WK_PACT_IN                  ACPPRODM.PACT_ID%TYPE           := NULL ;
 WK_DUTY_CLS                 VARCHAR2(4)                     := NULL ; 
 WK_RNS_DR_STF_NO            MOOOREXM.RNS_DR_STF_NO%TYPE     := NULL ;

-- 2019.04.16 RPY_PACT_ID를 업데이트 하는 부분 : L7574검사에 대해서 분당에 하드코딩아 있었음. 사용자가 검사실 혹은 슬립을 변경할 경우, 해당 ORD_ID에 업데이트 되지 않는 경우가 있어, ORD_ID 조건만 추가하여 업데이트 함.
-- 2020.07.15 HPC PACT_ID 기준으로 처리함. (ONIT 에서 RPY_PACT_ID를 의사 번호를 넘겨서 기준을 변경함..)

BEGIN
   BEGIN     
      BEGIN
          SELECT /* XSUP.PC_MSE_MOOOREXM_CONTINUE */
                 PME_CLS_CD
               , DECODE(PME_CLS_CD, 'TD','DDD', PSE_CLS_CD ) 
               , CTRC_ORG_CD
            INTO WK_PME_CLS_CD
               , WK_PSE_CLS_CD 
               , WK_CTRC_ORG_CD
            FROM PCTPCPAM_DAMO
           WHERE PT_NO         = IN_PT_NO
            ;

      EXCEPTION
           WHEN OTHERS THEN
                IO_ERRYN  := 'Y';
                IO_ERRMSG := '환자 급여정보 조회 중 에러 발생 ERRCODE = ' || TO_CHAR(SQLCODE) || CHR(13) || ' ' || SQLERRM ;
                RETURN;
      END ;            
      
      /* 예약검사인 것 조회 */
      BEGIN
          SELECT /* XSUP.PC_MSE_MOOOREXM_CONTINUE */
                  DECODE(NVL(A.RPY_STS_CD, 'N') || A.PACT_TP_CD || NVL(B.RSEX_YN, 'N'), 'NOY', 'Y', 'N')
                , A.PT_HME_DEPT_CD
                , C.MEDR_STF_NO
                , A.RNS_DR_STF_NO
             INTO WK_WRKTYPE
                , WK_DPCD
                , WK_WKPERS
                , WK_RNS_DR_STF_NO
             FROM MOOOREXM A
                , MSERMMMC B
                , ACPPRODM C
            WHERE A.ORD_ID           = IN_ORD_ID
              AND A.PACT_TP_CD       = 'O'
              AND C.PT_NO            = A.PT_NO
              /*2013-08-13 김승모 : 원무팀 박수현차장 지원 RPY_PACT_ID로 조인*/
--              AND C.RPY_PACT_ID     = A.RPY_PACT_ID
              -- 2020.07.14 HPC는 RPY_PACT_ID 가 없어서 PACT_ID 기준으로 체크한다.
              AND ((A.PT_HME_DEPT_CD = 'HPC' AND A.PACT_ID = C.PACT_ID)
                OR (A.PT_HME_DEPT_CD &lt;&gt; 'HPC' AND A.RPY_PACT_ID = C.RPY_PACT_ID))
              AND B.EXM_CD          = A.ORD_CD
              AND C.APCN_YN         = 'N'
              AND C.MEF_RPY_CLS_CD  = 'Y'  -- 진찰료 수납건
              AND A.HSP_TP_CD       = HIS_HSP_TP_CD --2017.04.10 LIM ADD
              AND A.HSP_TP_CD       = B.HSP_TP_CD   --2017.04.10 LIM ADD
              AND B.HSP_TP_CD       = C.HSP_TP_CD   --2017.04.10 LIM ADD
              ;
              
      EXCEPTION
           WHEN NO_DATA_FOUND THEN
                BEGIN
                    SELECT WRKTYPE
                         , PT_HME_DEPT_CD
                         , MEDR_STF_NO
                         , RNS_DR_STF_NO
                      INTO WK_WRKTYPE
                         , WK_DPCD
                         , WK_WKPERS
                         , WK_RNS_DR_STF_NO
                      FROM (                       
                            SELECT /* XSUP.PC_MSE_MOOOREXM_CONTINUE */
                                -- 2020.07.20. LEECK. 검진은 수납상태로 데이터가 들어오므로 무료수진을 잡아주기 위해서 예외처리 함.
        --                         DECODE(NVL(A.RPY_STS_CD, 'N') || A.PACT_TP_CD || NVL(B.RSEX_YN, 'N'), 'NOY', 'Y', 'N')     -- HPC 제외하고.
                                   CASE WHEN A.PT_HME_DEPT_CD = 'HPC' THEN DECODE(A.PACT_TP_CD || NVL(B.RSEX_YN, 'N'), 'OY', 'Y', 'N')  -- HPC
                                        ELSE DECODE(NVL(A.RPY_STS_CD, 'N') || A.PACT_TP_CD || NVL(B.RSEX_YN, 'N'), 'NOY', 'Y', 'N')     -- HPC 제외하고.
                                         END      WRKTYPE
                                 , A.PT_HME_DEPT_CD
                                 , C.MEDR_STF_NO
                                 , A.RNS_DR_STF_NO
                              FROM MOOOREXM A
                                 , MSERMMMC B
                                 , ACPPRODM C
                             WHERE A.ORD_ID       = IN_ORD_ID          
                               AND A.PACT_TP_CD   = 'O'
                               AND C.PT_NO        = A.PT_NO
                              /*2013-08-13 김승모 : 원무팀 박수현차장 지원 RPY_PACT_ID로 조인*/
                               --AND C.RPY_PACT_ID  = A.RPY_PACT_ID
                               -- 2020.07.14 HPC는 RPY_PACT_ID 가 없어서 PACT_ID 기준으로 체크한다.
                               AND ((A.PT_HME_DEPT_CD = 'HPC' AND A.PACT_ID = C.PACT_ID)
                                 OR (A.PT_HME_DEPT_CD &lt;&gt; 'HPC' AND A.RPY_PACT_ID = C.RPY_PACT_ID))
                               AND B.EXM_CD       = A.ORD_CD
                               AND A.HSP_TP_CD    = HIS_HSP_TP_CD --2017.04.10 LIM ADD
                               AND A.HSP_TP_CD    = B.HSP_TP_CD   --2017.04.10 LIM ADD
                               AND B.HSP_TP_CD    = C.HSP_TP_CD   --2017.04.10 LIM ADD
        --                              AND C.APCN_YN     = 'N'   /* 2015-12-09 김세용  원무예약  취소시 무료예약 잡히도록 수정 */
                            UNION ALL  --퇴원오더면 입원테이블에 수진 있는지 한번 더 체크
                            SELECT /* XSUP.PC_MSE_MOOOREXM_CONTINUE*/                                                    
                                -- 2020.07.20. LEECK. 검진은 수납상태로 데이터가 들어오므로 무료수진을 잡아주기 위해서 예외처리 함.
        --                         DECODE(NVL(A.RPY_STS_CD, 'N') || A.PACT_TP_CD || NVL(B.RSEX_YN, 'N'), 'NOY', 'Y', 'N')     -- HPC 제외하고.
                                   CASE WHEN A.PT_HME_DEPT_CD = 'HPC' THEN DECODE(A.PACT_TP_CD || NVL(B.RSEX_YN, 'N'), 'OY', 'Y', 'N')  -- HPC
                                        ELSE DECODE(NVL(A.RPY_STS_CD, 'N') || A.PACT_TP_CD || NVL(B.RSEX_YN, 'N'), 'NOY', 'Y', 'N')     -- HPC 제외하고.
                                    END           WRKTYPE
                                 , A.PT_HME_DEPT_CD
                                 , C.ADIS_MEDR_STF_NO       MEDR_STF_NO
                                 , A.RNS_DR_STF_NO
                              FROM MOOOREXM A
                                 , MSERMMMC B
                                 , ACPPRAAM C
                             WHERE A.ORD_ID       = IN_ORD_ID
                               AND A.PACT_TP_CD   = 'O'
                               AND C.PT_NO        = A.PT_NO
                              /*2013-08-13 김승모 : 원무팀 박수현차장 지원 RPY_PACT_ID로 조인*/
                               --AND C.RPY_PACT_ID  = A.RPY_PACT_ID
                               -- 2020.07.14 HPC는 RPY_PACT_ID 가 없어서 PACT_ID 기준으로 체크한다.
                               AND ((A.PT_HME_DEPT_CD = 'HPC' AND A.PACT_ID = C.PACT_ID)
                                 OR (A.PT_HME_DEPT_CD &lt;&gt; 'HPC' AND A.RPY_PACT_ID = C.PACT_ID))
                               AND B.EXM_CD       = A.ORD_CD
                               AND A.ODAPL_POP_CD = '9' --퇴원오더
                               AND A.HSP_TP_CD    = HIS_HSP_TP_CD --2017.04.10 LIM ADD
                               AND A.HSP_TP_CD    = B.HSP_TP_CD   --2017.04.10 LIM ADD
                               AND B.HSP_TP_CD    = C.HSP_TP_CD   --2017.04.10 LIM ADD
                               AND FT_MSE_USECNTR(HIS_HSP_TP_CD,'USECNTR','PACT_01','PC_MSE_MOOOREXM_CONTINUE') = 'Y' -- 공통코드 사용여부를 N으로 넣으면 로직 종료  
                           )                 
                       ; 
                            
                EXCEPTION
                     WHEN OTHERS THEN
                          WK_WKPERS := NULL;                                                                   
                END;
           WHEN OTHERS THEN
                  WK_WKPERS := NULL;  
      END;   
      
      IF WK_DPCD = 'CRI' OR WK_DPCD=  'CTC' THEN
          WK_RSVTYPE := 'C' ;
      END IF ;
      
      IF WK_WKPERS IS NOT NULL THEN
--         DBMS_OUTPUT.put_line('WK_WRKTYPE : ' || WK_WRKTYPE);
--         DBMS_OUTPUT.put_line('WK_WKPERS : ' || WK_WRKTYPE);
      
         IF WK_WRKTYPE = 'Y' THEN   
             BEGIN
               /*------------------------------------------------------------------
                 진료의 SID를 조회함(퇴사자 포함)
               ------------------------------------------------------------------*/
                BEGIN
                   SELECT SID
                     INTO WK_MEDR_SID
                     FROM CNLRRUSD
                    WHERE STF_NO    = WK_WKPERS 
                      AND HSP_TP_CD = HIS_HSP_TP_CD --2017.04.10 LIM ADD
                    ;
                EXCEPTION
                     WHEN NO_DATA_FOUND THEN
                          IO_ERRYN  := 'Y';
                          IO_ERRMSG := '진료의 식별ID 조회 중 에러'||'진료의직원번호가 존재하지않습니다. ERRCODE = '||TO_CHAR(SQLCODE)||SQLERRM ;
                          RETURN;
                            
                     WHEN OTHERS THEN
                          IO_ERRYN  := 'Y';
                          IO_ERRMSG := '진료의 식별ID 조회 중 에러. ERRCODE = '||TO_CHAR(SQLCODE)||SQLERRM ;
                          RETURN;
                END;   
                            
               /*------------------------------------------------------------------
                 예약검사의 경우 예약일자로 오더발생과 무료예약을 하는 루틴
               ------------------------------------------------------------------*/
               SELECT /* XSUP.PC_MSE_MOOOREXM_CONTINUE */
                      A.MEDR_STF_NO
                    , CASE WHEN A.MED_DEPT_CD = 'HPC' THEN A.PACT_ID 
                                                      ELSE A.RPY_PACT_ID --A.PACT_ID
                                                       END
                    , A.RPY_CLS_SEQ 
                    , A.PACT_ID
                 INTO WK_MEDDR  
                    , WK_RPY_PACT_IN 
                    , WK_RPY_CLS_SEQ  
                    , WK_PACT_IN
                 FROM ACPPRODM A
                    , CNLRRUSD B
                    , MOOOREXM C
                WHERE A.PT_NO       = IN_PT_NO
                  AND C.ORD_ID      = IN_ORD_ID
                  AND A.MED_DT      = TO_DATE(SUBSTR(IN_RSVDTE,1, 10),'YYYY-MM-DD')
                  AND A.MED_DEPT_CD = WK_DPCD
                  AND A.APCN_YN     = 'N' 
                  AND B.STF_NO      = A.MEDR_STF_NO
                  AND B.USE_GRP_CD  = 'DO'
--                  AND B.USE_GRP_DTL_CD = '01'-----******
                  AND A.PT_NO       = C.PT_NO
                  /*2013-08-13 김승모 : 원무팀 박수현차장 지원 RPY_PACT_ID로 조인*/
                  --AND A.RPY_PACT_ID = C.RPY_PACT_ID
                  AND ((C.PT_HME_DEPT_CD = 'HPC' AND C.PACT_ID = A.PACT_ID)
                    OR (C.PT_HME_DEPT_CD &lt;&gt; 'HPC' AND C.RPY_PACT_ID = A.RPY_PACT_ID))
                  AND A.HSP_TP_CD   = HIS_HSP_TP_CD --2017.04.10 LIM ADD
                  AND A.HSP_TP_CD   = B.HSP_TP_CD   --2017.04.10 LIM ADD
                  AND B.HSP_TP_CD   = C.HSP_TP_CD   --2017.04.10 LIM ADD
                  AND ROWNUM        = 1
                    ;
             EXCEPTION
                  WHEN NO_DATA_FOUND THEN   
                        
--                        BEGIN    
--                                        XBIL.PC_ACP_CREATE_ACPPRODM  (  HIS_HSP_TP_CD                                     --01* 병원구분코드(HSPCL)
--                                                                                                 , IN_PT_NO                                          --03* 환자번호(PT_NO)
--                                                                                                 , TO_CHAR(TO_DATE(SUBSTR(IN_RSVDTE,1,10), 'YYYY-MM-DD'),'YYYYMMDD')     --04* 진료일자(MEDDATE)
--                                                                                                 , WK_DPCD                                            --05* 진료부서코드(MEDDEPT)      
--                                                                                                 , WK_MEDR_STF_NO                                     --06* 진료의직원식별ID(MEDR_STF_NO)   2013-04-22  WK_MEDR_STF_NO로 교체
--                                                                                                 --, XCOM.FT_CNL_SELSTFINFO('1',WK_WKPERS, HIS_HSP_TP_CD, TRUNC(SYSDATE))
--                                                                                                 --, XCOM.FT_CNL_SELSTFINFO('1','C0EMR',HIS_HSP_TP_CD,TRUNC(SYSDATE))--06* 진료의직원식별ID(MEDDR)
--                                                                                                 , TO_CHAR(TO_DATE(IN_RSVDTE,'YYYY-MM-DD HH24:MI:SS'),'HH24MI')                         --07* 진료예약일시(MEDTIME,'HH24MI')
--                                                                                                 , WK_RSVTYPE                                          --08* 진료예약구분코드(RSVTYPE [364] )
--                                                                                                 , WK_PME_CLS_CD                                       --09* 환자급종유형코드(PATTYPE [356] )
--                                                                                                 , WK_PSE_CLS_CD                                        --10* 환자보조급종유형코드(TYPECD [357])
--                                                                                                 , WK_CTRC_ORG_CD                                     --11* 계약기관코드(CUSTCD)
--                                                                                                 , ''                                                --12* 선택진료여부(SPCDRYN)
--                                                                                                 , ''                                                 --13* 초진재진구분코드(MEDTYPE [231] )
--                                                                                                 , ''                                                 --14* 임상연구번호(LABNO) 
--                                                                                                 , ''                                                 --15  원내처방사유코드(INORDCD [20C] )
--                                                                                                 , ''                                                 --16  진찰료50%구분코드(RSVTYPE_HALF [PA230])
--                                                                                                 , ''                                                  --17  처방총액본인부담사유코드(DDTYPE [484])
--                                                                                                 , ''                                                 --18  타과의뢰여부(CONSLTYN)
--                                                                                                 , ''                                                 --19  이전원무접수ID()  
--                                                                                                 , '01'                                                 --20* 예약접수구분코드( [PA216])
--                                                                                                 , ''                                                 --21  진료유형코드()
--                                                       , ''                                                --22* 건증접수구분코드(HPCTYPE [20A])
--                                                                                                 , ''                                                --23  외부기관의뢰여부(OTHERREQUESTYN)
--                                                                                                 , ''                                                --24  진료의뢰요양기관번호(REQ_HSP_NO)
--                                                                                                 , ''                                                --25  진찰료수납유형코드( [PA229])
--                                                                                                 , HIS_STF_NO                                        --26* 최초등록직원식별ID(ENTERID)
--                                                                                                 , HIS_PRGM_NM                                       --27* 최초등록프로그램명()
--                                                                                                 , HIS_IP_ADDR                                       --28* 최초등록IP주소()
--                                                                                                 , ''                                                --29  병원가산비율()
--                                                                                                 , ''                                                --30  의료급여본인부담구분코드()
--                                                                                                 , ''                                                --31  묶음계약기관코드()
--                                                                                                 , 'I'                                                  --32* 작업구분('I':입력,'D':취소)
--                                                                                                 , ''                                                   --33* 의학연구소 구분(1 :의학연구소 부담, 2 :자비연구 부담)
--                                                                                                 , WK_RPY_PACT_IN                                    --34  수납원무접수ID(접수시 발생한..) 
--                                                                                                 , WK_RPY_CLS_SEQ                                      --35  수납유형순번 
--                                                                                                 , IO_ERRYN                                           --36  에러
--                                                                                                 , IO_ERRMSG     ) ;                                 --37  에러메세지                           
--                        END;   
                        
                       BEGIN   
                          XBIL.PC_ACP_FREERSV_ACPPRODM  ( HIS_HSP_TP_CD                                     --01* 병원구분코드(HSPCL)
                                                        , IN_PT_NO                                          --03* 환자번호(PT_NO)
                                                        , TO_CHAR(TO_DATE(SUBSTR(IN_RSVDTE,1,10), 'YYYY-MM-DD'),'YYYYMMDD')     --04* 진료일자(MEDDATE)
                                                        , WK_DPCD                                           --05* 진료부서코드(MEDDEPT)      
                                                        , WK_MEDR_SID                                       --06* 진료의직원식별ID(MEDR_STF_NO)   2013-04-22  WK_MEDR_STF_NO로 교체
                                                        --    , TO_CHAR(TO_DATE(IN_RSVDTE,'YYYY-MM-DD HH24:MI:SS'),'HH24MI')    --07* 진료예약일시(MEDTIME,'HH24MI')   
                                                        , '0000'                                            --07* 진료예약일시(MEDTIME,'HH24MI')
                                                        , WK_RSVTYPE                                        --08* 진료예약구분코드(RSVTYPE [364] )
                                                        --  , WK_PME_CLS_CD                                 --09* 환자급종유형코드(PATTYPE [356] )
                                                        --  , WK_PSE_CLS_CD                                 --10* 환자보조급종유형코드(TYPECD [357])
                                                        --  , WK_CTRC_ORG_CD                                --11* 계약기관코드(CUSTCD)
                                                        , ''                                                --09* 환자급종유형코드(PATTYPE [356] )
                                                        , ''                                                --10* 환자보조급종유형코드(TYPECD [357])
                                                        , ''                                                --11* 계약기관코드(CUSTCD)
                                                        , ''                                                --12* 선택진료여부(SPCDRYN)
                                                        , ''                                                --13* 초진재진구분코드(MEDTYPE [231] )
                                                        , ''                                                --14* 임상연구번호(LABNO) 
                                                        , ''                                                --15  원내처방사유코드(INORDCD [20C] )
                                                        , ''                                                --16  진찰료50%구분코드(RSVTYPE_HALF [PA230])
                                                        , ''                                                --17  처방총액본인부담사유코드(DDTYPE [484])
                                                        , ''                                                --18  타과의뢰여부(CONSLTYN)
                                                        , ''                                                --19  이전원무접수ID()  
                                                        , '01'                                              --20* 예약접수구분코드( [PA216])
                                                        , ''                                                --21  진료유형코드()
                                                        , ''                                                --22* 건증접수구분코드(HPCTYPE [20A])
                                                        , ''                                                --23  외부기관의뢰여부(OTHERREQUESTYN)
                                                        , ''                                                --24  진료의뢰요양기관번호(REQ_HSP_NO)
                                                        , ''                                                --25  진찰료수납유형코드( [PA229])
                                                        , HIS_STF_NO                                        --26* 최초등록직원식별ID(ENTERID)
                                                        , HIS_PRGM_NM                                       --27* 최초등록프로그램명()
                                                        , HIS_IP_ADDR                                       --28* 최초등록IP주소()
                                                        , ''                                                --29  병원가산비율()
                                                        , ''                                                --30  의료급여본인부담구분코드()
                                                        , ''                                                --31  묶음계약기관코드()
                                                        , 'I'                                               --32* 작업구분('I':입력,'D':취소)
                                                        , ''                                                --33* 의학연구소 구분(1 :의학연구소 부담, 2 :자비연구 부담)
                                                        , WK_RPY_PACT_IN                                    --34  수납원무접수ID(접수시 발생한..) 
                                                        , WK_RPY_CLS_SEQ                                    --35  수납유형순번 
                                                        , IO_ERRYN                                          --36  에러
                                                        , IO_ERRMSG                                         --37  에러메세지            
                                                        , WK_PACT_IN 
                                                        , WK_RNS_DR_STF_NO ) ;                                              
                       END;       
                        
                       IF IO_ERRYN = 'Y' THEN
                          IO_ERRYN  := 'Y';
                          IO_ERRMSG := IO_ERRMSG || '-' || SQLERRM ;
                                       RETURN;  
                        END IF ;  
                           
             END; 
      --IF SQL%ROWCOUNT = 1 THEN  
--      IO_ERRYN  := 'Y';
--               IO_ERRMSG := '검사처방에 원무접수ID UPDATE 중 에러 -' || IN_PT_NO  || ' - ' ||  IN_ORD_DTE || ' - ' ||  IN_TST_CD || ' - ' ||  IN_ORD_ID || '-' || WK_PACT_IN  || '-' || WK_RPY_PACT_IN || '-' || WK_RPY_CLS_SEQ ;
--               RETURN;           
             BEGIN
                UPDATE /* XSUP.PC_MSE_MOOOREXM_CONTINUE */
                       MOOOREXM
                   SET PACT_ID     = WK_PACT_IN
                     , RPY_PACT_ID = WK_RPY_PACT_IN
                     , RPY_CLS_SEQ = WK_RPY_CLS_SEQ 
                     , LSH_STF_NO  = HIS_STF_NO
                     , LSH_DTM     = SYSDATE
                     , LSH_PRGM_NM = HIS_PRGM_NM
                     , LSH_IP_ADDR = HIS_IP_ADDR    
                WHERE 
                      ORD_ID       = IN_ORD_ID
-- 2019.04.16 분당에 있던 하드코딩으로, 사용자가 검사실 혹은 슬립을 변경할 경우, 해당 ORD_ID에 업데이트 되지 않는 경우가 있어, ORD_ID 조건만 추가하여 업데이트 함.
--                ( ORD_CTG_CD, DECODE(SUBSTR(IN_TST_CD, 1,2), 'RM', 'RDM',  DECODE(ORD_CD,'L7574','NBS30', HOPE_EXRM_NO) ) , ORD_CD, DECODE(ORD_ID, IN_ORD_ID, 'X', EXM_PRGR_STS_CD)) IN ( SELECT A.ORD_CTG_CD  
--                                                                                                                                                                                   , DECODE(SUBSTR(IN_TST_CD, 1,2), 'RM', SUBSTR(A.HOPE_EXRM_NO, 1, 3), DECODE(A.ORD_CD,'L7574','NBS30', A.HOPE_EXRM_NO) )
--                                                                                                                                                                                   , B.EXM_CD
--                                                                                                                                                                                   , 'X'
--                                                                                                                                                                                FROM MOOOREXM A
--                                                                                                                                                                                   , MSERMMMC B
--                                                                                                                                                                               WHERE A.ORD_ID        = IN_ORD_ID
--                                                                                                                                                                                 AND B.ORD_CTG_CD    = A.ORD_CTG_CD
--                                                                                                                                                                                 AND DECODE(B.EXM_CD, 'L7574', 'N11', B.ORD_SLIP_CTG_CD) = DECODE(A.ORD_CD, 'L7574', 'N11', A.ORD_SLIP_CTG_CD)
--                                                                                                                                                                                 AND B.RSEX_YN =  'Y' 
--                                                                                                                                                                                 AND A.HSP_TP_CD   = HIS_HSP_TP_CD --병원구분
--                                                                                                                                                                                 AND B.HSP_TP_CD   = HIS_HSP_TP_CD --병원구분
--                                                                                                                                                                                 )
                  AND PT_NO         = IN_PT_NO
                  AND HSP_TP_CD     = HIS_HSP_TP_CD
                  AND ORD_DT        = TO_DATE(IN_ORD_DTE, 'YYYY-MM-DD')
                  AND PACT_TP_CD    = 'O'
                  AND ODDSC_TP_CD   = 'C' ;  
    
               EXCEPTION
                  WHEN OTHERS THEN
                   IO_ERRYN  := 'Y';
                   IO_ERRMSG := '검사처방에 원무접수ID UPDATE 중 에러 ERRCODE = ' ||  TO_CHAR(SQLCODE) || WK_RPY_PACT_IN  || ' AAAA ' || CHR(13) || ' ' || SQLERRM ;
                   RETURN;
                   
            --SP_TCP_LOG('172.17.79.77', 47110, IN_TST_CD || ' ' || IN_ORD_DTE  );  
           END;             
           /*2022-03-16 검사 예약변경되어서 수진 새로 생성할 때 연결된 2차처방의 수진일도 검사의 수진일로 옮겨준다. */
           BEGIN
               IF SQL%ROWCOUNT &gt; 0 THEN
                   BEGIN
                       UPDATE MSERMAMD
                         SET PACT_ID     = WK_PACT_IN
                           , RPY_PACT_ID = WK_RPY_PACT_IN
                           , RPY_CLS_SEQ = WK_RPY_CLS_SEQ  
                           , LSH_DTM     = SYSDATE
                           , LSH_PRGM_NM = HIS_PRGM_NM
                           , LSH_IP_ADDR = HIS_IP_ADDR    
                        WHERE 1=1
                           AND HSP_TP_CD = HIS_HSP_TP_CD
                           AND ORD_ID       = IN_ORD_ID                       
                           AND NVL(RPY_STS_CD,'N') = 'N'
                           ;
                    EXCEPTION
                        WHEN OTHERS THEN
                            IO_ERRYN := 'N';
                            IO_ERRMSG := '';
                    END;                       
               END IF;
           END;
           
         ELSE   -- 이미 수납이 되었을 경우
           BEGIN
               UPDATE MOOOREXM
                  SET RSV_DTM        = TO_DATE(IN_RSVDTE,'YYYY-MM-DD HH24:MI') 
                    , RSV_PRO_STF_NO = HIS_STF_NO
                    , LSH_STF_NO      = HIS_STF_NO
                    , LSH_DTM         = SYSDATE
                    , LSH_PRGM_NM     = HIS_PRGM_NM
                    , LSH_IP_ADDR     = HIS_IP_ADDR    
                WHERE ORD_ID          = IN_ORD_ID
-- 2019.04.16 분당에 있던 하드코딩으로, 사용자가 검사실 혹은 슬립을 변경할 경우, 해당 ORD_ID에 업데이트 되지 않는 경우가 있어, ORD_ID 조건만 추가하여 업데이트 함.
--                ( ORD_CTG_CD, DECODE(SUBSTR(IN_TST_CD, 1,2), 'RM', 'RDM',  DECODE(ORD_CD,'L7574','NBS30', HOPE_EXRM_NO) ) , ORD_CD, DECODE(ORD_ID, IN_ORD_ID, 'X', EXM_PRGR_STS_CD)) IN ( SELECT A.ORD_CTG_CD  
--                                                                                                                                                                                   , DECODE(SUBSTR(IN_TST_CD, 1,2), 'RM', SUBSTR(A.HOPE_EXRM_NO, 1, 3), DECODE(A.ORD_CD,'L7574','NBS30', A.HOPE_EXRM_NO) )
--                                                                                                                                                                                   , B.EXM_CD
--                                                                                                                                                                                   , 'X'
--                                                                                                                                                                                FROM MOOOREXM A
--                                                                                                                                                                                   , MSERMMMC B
--                                                                                                                                                                               WHERE A.ORD_ID        = IN_ORD_ID
--                                                                                                                                                                                 AND B.ORD_CTG_CD    = A.ORD_CTG_CD
--                                                                                                                                                                                 AND DECODE(B.EXM_CD, 'L7574', 'N11', B.ORD_SLIP_CTG_CD) = DECODE(A.ORD_CD, 'L7574', 'N11', A.ORD_SLIP_CTG_CD)
--                                                                                                                                                                                 AND B.RSEX_YN =  'Y' 
--                                                                                                                                                                                 AND A.HSP_TP_CD   = HIS_HSP_TP_CD --병원구분
--                                                                                                                                                                                 AND B.HSP_TP_CD   = HIS_HSP_TP_CD --병원구분
--                                                                                                                                                                                 )
                  AND PT_NO           = IN_PT_NO
                  AND HSP_TP_CD       = HIS_HSP_TP_CD
                  AND ORD_DT          = TO_DATE(IN_ORD_DTE, 'YYYY-MM-DD')
                  AND PACT_TP_CD      = 'O'
                  AND ODDSC_TP_CD     = 'C' ;  
    
               EXCEPTION
                  WHEN OTHERS THEN
                   IO_ERRYN  := 'Y';
                   IO_ERRMSG := '검사처방에 예약일자 UPDATE 중 에러 ERRCODE = ' ||  TO_CHAR(SQLCODE) || IN_ORD_ID  || ' - ' || CHR(13) || ' ' || SQLERRM ;
                   RETURN;
                   
            --SP_TCP_LOG('172.17.79.77', 47110, IN_TST_CD || ' ' || IN_ORD_DTE  );
           END;
         END IF ;  
     END IF;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            IO_ERRYN := 'N';
    END;

END PC_MSE_MOOOREXM_CONTINUE;
</QUERY_TEXT>
    <GROUP>PL/SQL</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EAM 권한 부여2</QUERY_NAME>
    <QUERY_TEXT>
DECLARE
HIS_HSP_TP_CD VARCHAR2(2) :='01';
V_ROLE_CD VARCHAR2(10) :='R0400';
V_STF_NO VARCHAR2(7) :='SI01157';
V_DEPT_CD VARCHAR(10) :='';
BEGIN
    IF V_DEPT_CD IS NULL THEN
    --재직중인 직원인지 체크
        BEGIN
            SELECT STF_NO
              INTO V_STF_NO
              FROM CNLRRUSD A
             WHERE 1=1
               AND A.HSP_TP_CD = HIS_HSP_TP_CD
               AND A.STF_NO = V_STF_NO
               AND A.RTRM_DT IS NULL
               AND ROWNUM = 1 ;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                RETURN;
        END;
        BEGIN
            INSERT INTO HEAM.EMUSRBUT
             SELECT HSP_TP_CD
                  , STF_NO WK_ID
                  , (SELECT BUSINESS_TYP
                       FROM EMBUROLT
                       WHERE ROLE_CD = V_ROLE_CD
                         AND HSP_TP_CD = A.HSP_TP_CD
                    ) BUSINESS_TYP
                  , V_ROLE_CD
                  , '' START_DT
                  , '' END_DT
                  , '' EDIT_ID
                  , '' EDIT_DT
                  , '' ROLE_AUTH_DOC_NM
                  , '' ROLE_AUTH_RSN_CNTE
              FROM CNLRRUSD A
             WHERE RTRM_DT IS NULL -- 재직자 중
               AND HSP_TP_CD = HIS_HSP_TP_CD
               AND STF_NO = V_STF_NO
               AND NOT EXISTS(SELECT 1 FROM HEAM.EMUSRBUT WHERE WK_ID = A.STF_NO AND ROLE_CD = V_ROLE_CD);
        END;
        BEGIN
            DBMS_OUTPUT.PUT_LINE(RPAD('HSP_TP_CD',20,' ') ||' ' || RPAD('WK_ID',20,' ') ||' ' ||RPAD('BUSINESS_TYP',20,' ') ||' ' ||RPAD('ROLE_CD',20,' '));
            FOR REC IN
            (SELECT *
                FROM HEAM.EMUSRBUT
                WHERE WK_ID = V_STF_NO
                 AND HSP_TP_CD = HIS_HSP_TP_CD
                 AND ROLE_CD = V_ROLE_CD)
            LOOP
            DBMS_OUTPUT.PUT_LINE(RPAD(REC.HSP_TP_CD,28,' ') ||' ' || RPAD(REC.WK_ID,21,' ') ||' ' ||RPAD(REC.BUSINESS_TYP,30,' ') ||' ' ||RPAD(REC.ROLE_CD,20,' '));
            END LOOP;
        END;
    ELSE
        BEGIN
            INSERT INTO HEAM.EMUSRBUT
             SELECT HSP_TP_CD
                  , STF_NO WK_ID
                  , (SELECT BUSINESS_TYP
                       FROM EMBUROLT
                       WHERE ROLE_CD = V_ROLE_CD
                         AND HSP_TP_CD = A.HSP_TP_CD
                    ) BUSINESS_TYP
                  , V_ROLE_CD
                  , '' START_DT
                  , '' END_DT
                  , '' EDIT_ID
                  , '' EDIT_DT
                  , '' ROLE_AUTH_DOC_NM
                  , '' ROLE_AUTH_RSN_CNTE
              FROM CNLRRUSD A
             WHERE RTRM_DT IS NULL -- 재직자 중
               AND HSP_TP_CD = HIS_HSP_TP_CD
               AND (AOA_WKDP_CD = V_DEPT_CD OR AADP_CD = V_DEPT_CD)
               AND NOT EXISTS(SELECT 1 FROM HEAM.EMUSRBUT WHERE WK_ID = A.STF_NO AND ROLE_CD = V_ROLE_CD);
        END;
        BEGIN
            DBMS_OUTPUT.PUT_LINE(RPAD('ROWCOUNT',20,' ') || ' ' || RPAD('HSP_TP_CD',20,' ') ||' ' || RPAD('WK_ID',20,' ') ||' ' ||RPAD('BUSINESS_TYP',20,' ') ||' ' ||RPAD('ROLE_CD',20,' '));
            FOR REC IN
            (SELECT ROWNUM SEQ,A.*
                FROM HEAM.EMUSRBUT A
                   , CNLRRUSD B
                WHERE A.WK_ID = B.STF_NO
                 AND A.HSP_TP_CD = HIS_HSP_TP_CD
                 AND A.HSP_TP_CD = B.HSP_TP_CD
                 AND (B.AOA_WKDP_CD = V_DEPT_CD OR B.AADP_CD = V_DEPT_CD)
                 AND A.ROLE_CD = V_ROLE_CD)
            LOOP
            DBMS_OUTPUT.PUT_LINE(RPAD(REC.SEQ,30,' ') || ' ' ||RPAD(REC.HSP_TP_CD,28,' ') ||' ' || RPAD(REC.WK_ID,21,' ') ||' ' ||RPAD(REC.BUSINESS_TYP,30,' ') ||' ' ||RPAD(REC.ROLE_CD,20,' '));
            END LOOP;
        END;
    END IF;
END;

</QUERY_TEXT>
    <GROUP>EAM</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>무료접수등록 진료의 조회 조건 및 등록</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :HIS_IP_ADDR := 'Golden';
EXEC :HIS_PRGM_NM := 'Golden';
EXEC :HIS_STF_NO := 'SSSUP11';
EXEC :IN_MTD_BLNG_YN := 'N';     --'Y'여야 진료의조회 됨.
EXEC :IN_ODRER_RCV_YN := 'Y';
EXEC :IN_WD_MED_PSB_YN := 'Y';
EXEC :IN_OTPT_MED_PSB_YN := 'Y';
EXEC :IN_MAIN_MTD_YN := 'N';

MERGE /* HIS.EQSID */
 INTO ACDPCDRD A -- 진료의진료과등록정보
USING (SELECT HSP_TP_CD
            , SID
            , STF_NO
            , AADP_CD
         FROM CNLRRUSD
        WHERE HSP_TP_CD  = :HIS_HSP_TP_CD
          AND STF_NO = :HIS_STF_NO
          AND RTRM_DT IS NULL
       )B
ON (
       A.HSP_TP_CD                      = B.HSP_TP_CD
   AND A.DR_SID                         = B.SID
   AND A.DR_STF_NO                      = B.STF_NO
   AND A.MED_DEPT_CD                    = B.AADP_CD
   )
WHEN MATCHED THEN
UPDATE
   SET LSH_IP_ADDR                                        = :HIS_IP_ADDR                                       /*최종변경IP주소*/
     , LSH_PRGM_NM                                        = :HIS_PRGM_NM                                       /*최종변경프로그램명*/
     , LSH_STF_NO                                         = :HIS_STF_NO                                        /*최종변경직원번호*/
     , FSR_IP_ADDR                                        = :HIS_IP_ADDR                                       /*최초등록IP주소*/
     , LSH_DTM                                            = SYSDATE                                            /*최종변경일시*/
     , FSR_PRGM_NM                                        = :HIS_PRGM_NM                                       /*최초등록프로그램명*/
     , FSR_STF_NO                                         = :HIS_STF_NO                                        /*최초등록직원번호*/
     , MSRI_DR_RLT_SID                                    = B.SID                                /*의학연구소의사실제직원식별ID*/
     , FSR_DTM                                            = SYSDATE                                            /*최초등록일시*/
     , MJR_DEPT_DEPT_CD                                   = B.AADP_CD                               /*전공부서부서코드*/
WHEN NOT MATCHED THEN
INSERT
     (
       LSH_IP_ADDR                                        /*최종변경IP주소*/
     , LSH_PRGM_NM                                        /*최종변경프로그램명*/
     , LSH_STF_NO                                         /*최종변경직원번호*/
     , FSR_IP_ADDR                                        /*최초등록IP주소*/
     , LSH_DTM                                            /*최종변경일시*/
     , FSR_PRGM_NM                                        /*최초등록프로그램명*/
     , FSR_STF_NO                                         /*최초등록직원번호*/
     , MSRI_DR_RLT_SID                                    /*의학연구소의사실제직원식별ID*/
     , FSR_DTM                                            /*최초등록일시*/
     , MJR_DEPT_DEPT_CD                                   /*전공부서부서코드*/
     , MED_DEPT_CD                                        /*진료부서코드*/
     , DR_STF_NO                                          /*의사직원번호*/
     , DR_SID                                             /*의사직원식별ID*/
     , HSP_TP_CD                                          /*병원구분코드*/
     )
VALUES
     (
       :HIS_IP_ADDR
     , :HIS_PRGM_NM
     , :HIS_STF_NO
     , :HIS_IP_ADDR
     , SYSDATE
     , :HIS_PRGM_NM
     , :HIS_STF_NO
     , B.SID
     , SYSDATE
     , B.AADP_CD
     , B.AADP_CD
     , :HIS_STF_NO
     , B.SID
     , :HIS_HSP_TP_CD
     )
;
MERGE /* HIS.EQSID */
 INTO CNLMRUDD A
USING (SELECT HSP_TP_CD
            , SID
            , STF_NO
            , AADP_CD
         FROM CNLRRUSD
        WHERE HSP_TP_CD  = :HIS_HSP_TP_CD
          AND STF_NO = :HIS_STF_NO
          AND RTRM_DT IS NULL
       )B
ON (
       A.HSP_TP_CD                      = B.HSP_TP_CD
   AND A.USE_SID                        = B.SID
   AND A.MED_DEPT_CD                    = B.AADP_CD

   )
WHEN MATCHED THEN
UPDATE
   SET MED_STR_DT                                         = SYSDATE                                            /*진료시작일자*/
     , MED_END_DT                                         = TO_DATE('9999-12-31','yyyy-mm-dd')                                            /*진료종료일자*/
     , RPRN_MED_DEPT_CD                                   = B.AADP_CD                               /*대표진료부서코드*/
     , SCRN_SORT_SEQ                                      = :IN_SCRN_SORT_SEQ                                  /*화면정렬순번*/
     , ODRER_RCV_YN                                       = :IN_ODRER_RCV_YN                                   /*타과의뢰수신여부*/
     , WD_MED_PSB_YN                                      = :IN_WD_MED_PSB_YN                                  /*병동진료가능여부*/
     , OTPT_MED_PSB_YN                                    = :IN_OTPT_MED_PSB_YN                                /*외래진료가능여부*/
     , MTD_BLNG_YN                                        = :IN_MTD_BLNG_YN                                    /*진료과소속여부*/
     , ODRER_RMK_CNTE                                     = :IN_ODRER_RMK_CNTE                                 /*타과의뢰비고내용*/
     , MAIN_MTD_YN                                        = :IN_MAIN_MTD_YN                                    /*주진료과여부*/
     , FMR_SCRN_SORT_SEQ                                  = :IN_FMR_SCRN_SORT_SEQ                              /*이전화면정렬순번*/
     , FSR_DTM                                            = SYSDATE                                            /*최초등록일시*/
     , FSR_STF_NO                                         = :HIS_STF_NO                                        /*최초등록직원번호*/
     , FSR_PRGM_NM                                        = :HIS_PRGM_NM                                       /*최초등록프로그램명*/
     , FSR_IP_ADDR                                        = :HIS_IP_ADDR                                       /*최초등록IP주소*/
     , LSH_DTM                                            = SYSDATE                                            /*최종변경일시*/
     , LSH_STF_NO                                         = :HIS_STF_NO                                        /*최종변경직원번호*/
     , LSH_PRGM_NM                                        = :HIS_PRGM_NM                                       /*최종변경프로그램명*/
     , LSH_IP_ADDR                                        = :HIS_IP_ADDR                                       /*최종변경IP주소*/
WHEN NOT MATCHED THEN
INSERT
     (
       HSP_TP_CD                                          /*병원구분코드*/
     , USE_SID                                            /*사용직원식별ID*/
     , MED_DEPT_CD                                        /*진료부서코드*/
     , MED_STR_DT                                         /*진료시작일자*/
     , MED_END_DT                                         /*진료종료일자*/
     , RPRN_MED_DEPT_CD                                   /*대표진료부서코드*/
     , SCRN_SORT_SEQ                                      /*화면정렬순번*/
     , ODRER_RCV_YN                                       /*타과의뢰수신여부*/
     , WD_MED_PSB_YN                                      /*병동진료가능여부*/
     , OTPT_MED_PSB_YN                                    /*외래진료가능여부*/
     , MTD_BLNG_YN                                        /*진료과소속여부*/
     , ODRER_RMK_CNTE                                     /*타과의뢰비고내용*/
     , MAIN_MTD_YN                                        /*주진료과여부*/
     , FMR_SCRN_SORT_SEQ                                  /*이전화면정렬순번*/
     , FSR_DTM                                            /*최초등록일시*/
     , FSR_STF_NO                                         /*최초등록직원번호*/
     , FSR_PRGM_NM                                        /*최초등록프로그램명*/
     , FSR_IP_ADDR                                        /*최초등록IP주소*/
     , LSH_DTM                                            /*최종변경일시*/
     , LSH_STF_NO                                         /*최종변경직원번호*/
     , LSH_PRGM_NM                                        /*최종변경프로그램명*/
     , LSH_IP_ADDR                                        /*최종변경IP주소*/
     )
VALUES
     (
       :HIS_HSP_TP_CD
     , :IN_USE_SID
     , B.AADP_CD
     , SYSDATE
     , SYSDATE
     , B.AADP_CD
     , :IN_SCRN_SORT_SEQ
     , :IN_ODRER_RCV_YN
     , :IN_WD_MED_PSB_YN
     , :IN_OTPT_MED_PSB_YN
     , :IN_MTD_BLNG_YN
     , :IN_ODRER_RMK_CNTE
     , :IN_MAIN_MTD_YN
     , :IN_FMR_SCRN_SORT_SEQ
     , SYSDATE
     , :HIS_STF_NO
     , :HIS_PRGM_NM
     , :HIS_IP_ADDR
     , SYSDATE
     , :HIS_STF_NO
     , :HIS_PRGM_NM
     , :HIS_IP_ADDR
     )
  ;
  --데이터가 있어야함.
SELECT A.*
  FROM ACDPCDRD A -- 진료의진료과등록정보
 WHERE 1=1
   AND HSP_TP_CD = :HIS_HSP_TP_CD
   and DR_STF_NO = :HIS_STF_NO
   and rownum&lt;10
;
--MTD_BLNG_YN 가 Y여야함.
select MTD_BLNG_YN,A.*
    from CNLMRUDD A
        ,CNLRRUSD B
    where A.hsp_TP_CD = :HIS_HSP_TP_CD
    AND A.HSP_TP_CD  =B.HSP_TP_CD
    and A.USE_SID = B.SID
    AND B.STF_NO = :STF_NO
;
--데이터가 있어야함.
select *
    from PDEDBRTD A
       , CNLMRUDD B
       , CNLRRUSD C
    where A.hsp_TP_CD = :HIS_HSP_TP_CD
    AND A.HSP_TP_CD = B.HSP_TP_Cd
    AND A.HSP_TP_CD = C.HSP_TP_CD
    AND B.USE_SID = C.SID
    AND C.STF_NO = :STF_NO
    and A.own_ify_no = B.MED_DEPT_CD
    AND A.DUTY_REL_CD = 'M0001'
</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>EQS ID조회</QUERY_NAME>
    <QUERY_TEXT>EXEC :EQS_ID :='HIS.MS.IV.RM.CO.SelectDtCbExrmOrd';
SELECT *
FROM FXQUERYSTORE
WHERE 0=0
--AND UPPER(QUERYID) LIKE UPPER('HIS.MC%')
AND UPPER(QUERYID) = UPPER(:EQS_ID)
--AND UPPER(QUERYTEXT) LIKE UPPER('%' || 'PC_MSD_ADESIT_NOSTAY' ||'%')
ORDER BY QUERYID
;
SELECT *
FROM FXQUERYSTORE@DL_PROD2STG
WHERE 0=0
--AND UPPER(QUERYID) LIKE UPPER('HIS.MC%')
AND UPPER(QUERYID) = UPPER(:EQS_ID)
ORDER BY QUERYID</QUERY_TEXT>
    <GROUP>EQS</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>전체화면으로 여는법</QUERY_NAME>
    <QUERY_TEXT>--Loaded 이벤트를 이용해서 전체화면으로 열수 있음.
private void MSUserControlBase_Loaded(object sender, RoutedEventArgs e)
        {
            this.OwnerWindow.WindowState = WindowState.Maximized;
        }</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 통계(GROUPING ,CUBE,GROUPING_ID사용)</QUERY_NAME>
    <QUERY_TEXT>EXEC :HIS_HSP_TP_CD := '01';
EXEC :FROM_DT := '2022-09-30';
EXEC :TO_DT := '2022-09-30';
EXEC :FLAG := '3';
--HIS.MS.TR.RE.ST.SelectPtcount
--&lt;IsEqual Property="PERIOD_GUBN" CompareValue="Day"&gt;
SELECT DECODE(GROUPING(RHTR_LCLS_CD),1,'총계',RHTR_LCLS_CD)    RHTR_LCLS_CD
      ,TYRM_NM
      ,FMT_STF_NM
      ,PT_HME_DEPT_NM
      ,TO_CHAR(RSV_DT,'YYYY-MM-DD') RSV_DT
      ,TO_CHAR(NVL(SUM(OCNT),0)) OCNT
      ,TO_CHAR(NVL(SUM(ICNT),0)) ICNT
      ,TO_CHAR(NVL(SUM(TOT),0)) SUMCNT
FROM
    (
    SELECT RHTR_LCLS_CD
          ,TYRM_NM
          ,FMT_STF_NM           
          ,PT_HME_DEPT_NM
          ,RSV_DT
          ,DECODE(PACT_TP_CD,'O',COUNT(*)) OCNT
          ,DECODE(PACT_TP_CD,'I',COUNT(*)) ICNT
          ,COUNT(*) TOT
     FROM(
        SELECT /*+ LEADING (A) */
               (SELECT DTRL2_NM FROM CCCCCSTE WHERE COMN_GRP_CD='RHB' AND COMN_CD = B.RHTR_LCLS_CD) RHTR_LCLS_CD
               , B.TYRM_NM                                                                          TYRM_NM
               , A.PACT_TP_CD                                                                       PACT_TP_CD
               , NVL(XCOM.FT_CNL_SELSTFINFO('4', A.FMT_STF_NO, :HIS_HSP_TP_CD, ''),FMT_STF_NO)      FMT_STF_NM               
               , (SELECT DEPT_NM
                    FROM PDEDBMSM
                   WHERE DEPT_CD = A.PT_HME_DEPT_CD
                     AND HSP_TP_CD = :HIS_HSP_TP_CD)                                                PT_HME_DEPT_NM
               , A.RSV_DT                                                                           RSV_DT
         FROM MSTRHODD@DL_STG2PROD A
            , (SELECT A.RHTR_ORD_CD
                    , B.TYRM_CD
                    , B.TYRM_NM
                   , A.RHTR_LCLS_CD
                FROM MSTRHCDC@DL_STG2PROD A
                   , MSTRHSRD@DL_STG2PROD B
               WHERE B.TRP_DUTY_TP_CD = 'R'
                 AND B.USE_YN = 'Y'
                 AND B.TYRM_CD = A.APCB_TYRM_CD
                 AND B.HSP_TP_CD = A.HSP_TP_CD
                 AND B.HSP_TP_CD = :HIS_HSP_TP_CD
             ) B
            , MSTRHSLD@DL_STG2PROD C
         WHERE A.RSV_DT BETWEEN TO_DATE(:FROM_DT, 'YYYY-MM-DD') AND TO_DATE(:TO_DT, 'YYYY-MM-DD') + 0.9999
          AND A.ODDSC_TP_CD = 'C'
          AND A.TRP_FMT_YN = 'Y'
          AND A.FMT_STF_NO IS NOT NULL
          AND A.FMT_DTM IS NOT NULL
          AND A.TRP_RSV_DTM IS NOT NULL
          AND A.RHTR_ORD_CD = B.RHTR_ORD_CD
          AND A.RSV_THRP_SID = C.RTST_SID
          AND A.TRP_RSV_DTM = C.RSV_DTM
          AND A.TRP_RSV_SEQ = C.RSV_DY_SEQ
          AND A.TRP_RSV_SLOT_SEQ = C.RSV_SLOT_SEQ
          AND A.HSP_TP_CD = C.HSP_TP_CD
          AND A.RHRM_CD = C.RHRM_CD
          AND A.HSP_TP_CD = :HIS_HSP_TP_CD
        GROUP BY RSV_DT,A.PACT_TP_CD,A.PT_NO,B.RHTR_LCLS_CD,TYRM_NM,A.FMT_STF_NO,A.PT_HME_DEPT_CD
        )A
    GROUP BY RSV_DT,PACT_TP_CD,CUBE(RHTR_LCLS_CD,TYRM_NM,FMT_STF_NM,PT_HME_DEPT_NM)
    HAVING GROUPING_ID(RHTR_LCLS_CD ,TYRM_NM ,FMT_STF_NM,PT_HME_DEPT_NM) = TO_NUMBER(:FLAG)
    )Y
GROUP BY CUBE((RHTR_LCLS_CD,TYRM_NM,PT_HME_DEPT_NM,FMT_STF_NM)),RSV_DT
ORDER BY RHTR_LCLS_CD , TYRM_NM, FMT_STF_NM, PT_HME_DEPT_NM,RSV_DT
--&lt;/IsEqual&gt;
--&lt;IsEqual Property="PERIOD_GUBN" CompareValue="Week"&gt;
;
SELECT DECODE(GROUPING(RHTR_LCLS_CD),1,'총계',RHTR_LCLS_CD)    RHTR_LCLS_CD
      ,TYRM_NM
      ,FMT_STF_NM
      ,DECODE(GROUPING(PT_HME_DEPT_NM),1,'주별 총계(명)',PT_HME_DEPT_NM)    PT_HME_DEPT_NM
      ,WEEK      
      ,TO_CHAR(NVL(SUM(OCNT),0)) OCNT
      ,TO_CHAR(NVL(SUM(ICNT),0)) ICNT
      ,TO_CHAR(NVL(SUM(TOT),0)) SUMCNT
FROM
    (
    SELECT RHTR_LCLS_CD
          ,TYRM_NM
          ,FMT_STF_NM
          ,PT_HME_DEPT_NM
          ,WEEK
          ,DECODE(PACT_TP_CD,'O',COUNT(*)) OCNT
          ,DECODE(PACT_TP_CD,'I',COUNT(*)) ICNT
          ,COUNT(*) TOT
     FROM(
        SELECT /*+ LEADING (A) */
               (SELECT DTRL2_NM FROM CCCCCSTE WHERE COMN_GRP_CD='RHB' AND COMN_CD = B.RHTR_LCLS_CD) RHTR_LCLS_CD
               , B.TYRM_NM                                                                          TYRM_NM
               , A.PACT_TP_CD
               , XCOM.FT_CNL_SELSTFINFO('4', A.FMT_STF_NO, :HIS_HSP_TP_CD, '')                      FMT_STF_NM
               , (SELECT DEPT_NM
                    FROM PDEDBMSM@DL_STG2PROD
                   WHERE DEPT_CD = A.PT_HME_DEPT_CD
                     AND HSP_TP_CD = :HIS_HSP_TP_CD)                                                PT_HME_DEPT_NM
               , A.RSV_DT                                                                           RSV_DT
               , XSUP.FT_MST_GET_WEEK(TO_CHAR(A.RSV_DT, 'YYYYMMDD'))                                WEEK
         FROM MSTRHODD@DL_STG2PROD A
            , (SELECT A.RHTR_ORD_CD
                    , B.TYRM_CD
                    , B.TYRM_NM
                   , A.RHTR_LCLS_CD
                FROM MSTRHCDC@DL_STG2PROD A
                   , MSTRHSRD@DL_STG2PROD B
               WHERE B.TRP_DUTY_TP_CD = 'R'
                 AND B.USE_YN = 'Y'
                 AND B.TYRM_CD = A.APCB_TYRM_CD
                 AND B.HSP_TP_CD = A.HSP_TP_CD
                 AND B.HSP_TP_CD = :HIS_HSP_TP_CD
             ) B
            , MSTRHSLD@DL_STG2PROD C
         WHERE 1=1
          AND A.RSV_DT BETWEEN TRUNC(TO_DATE(:FROM_DT, 'YYYY-MM-DD'),'MM') AND LAST_DAY(TO_DATE(:FROM_DT, 'YYYY-MM-DD')) + 0.9999
          AND A.ODDSC_TP_CD = 'C'
          AND A.TRP_FMT_YN = 'Y'
          AND A.FMT_STF_NO IS NOT NULL
          AND A.FMT_DTM IS NOT NULL
          AND A.TRP_RSV_DTM IS NOT NULL
          AND A.RHTR_ORD_CD = B.RHTR_ORD_CD
          AND A.RSV_THRP_SID = C.RTST_SID
          AND A.TRP_RSV_DTM = C.RSV_DTM
          AND A.TRP_RSV_SEQ = C.RSV_DY_SEQ
          AND A.TRP_RSV_SLOT_SEQ = C.RSV_SLOT_SEQ
          AND A.HSP_TP_CD = C.HSP_TP_CD
          AND A.RHRM_CD = C.RHRM_CD
          AND A.HSP_TP_CD = :HIS_HSP_TP_CD
        GROUP BY RSV_DT,A.PACT_TP_CD,A.PT_NO,B.RHTR_LCLS_CD,TYRM_NM,A.FMT_STF_NO,A.PT_HME_DEPT_CD
        )A
    GROUP BY WEEK,PACT_TP_CD,CUBE(RHTR_LCLS_CD,TYRM_NM,FMT_STF_NM,PT_HME_DEPT_NM)
    HAVING GROUPING_ID(RHTR_LCLS_CD ,TYRM_NM ,FMT_STF_NM,PT_HME_DEPT_NM) = TO_NUMBER(:FLAG)
    )Y
GROUP BY CUBE((RHTR_LCLS_CD,TYRM_NM,PT_HME_DEPT_NM,FMT_STF_NM)),WEEK
ORDER BY RHTR_LCLS_CD, TYRM_NM, FMT_STF_NM, PT_HME_DEPT_NM,WEEK
--&lt;/IsEqual&gt;
--치료건수 통계
SELECT DECODE(GROUPING(RHTR_LCLS_CD),1,'총계',RHTR_LCLS_CD)    RHTR_LCLS_CD
      ,TYRM_NM
      ,FMT_STF_NM
      ,PT_HME_DEPT_NM
      ,TO_CHAR(RSV_DT,'YYYY-MM-DD') RSV_DT
      ,TO_CHAR(NVL(SUM(OCNT),0)) OCNT
      ,TO_CHAR(NVL(SUM(ICNT),0)) ICNT
      ,TO_CHAR(NVL(SUM(TOT),0)) SUMCNT
FROM
    (
    SELECT RHTR_LCLS_CD
          ,TYRM_NM
          ,FMT_STF_NM
          ,PT_HME_DEPT_NM
          ,RSV_DT
          ,DECODE(PACT_TP_CD,'O',COUNT(*)) OCNT
          ,DECODE(PACT_TP_CD,'I',COUNT(*)) ICNT
          ,COUNT(*) TOT
     FROM(
        SELECT /*+ LEADING (A) */
               (SELECT DTRL2_NM FROM CCCCCSTE WHERE COMN_GRP_CD='RHB' AND COMN_CD = B.RHTR_LCLS_CD) RHTR_LCLS_CD
               , B.TYRM_NM                                                                          TYRM_NM
               , A.PACT_TP_CD                                                                       PACT_TP_CD
               , NVL(XCOM.FT_CNL_SELSTFINFO('4', A.FMT_STF_NO, :HIS_HSP_TP_CD, ''),FMT_STF_NO)      FMT_STF_NM
               , (SELECT DEPT_NM
                    FROM PDEDBMSM
                   WHERE DEPT_CD = A.PT_HME_DEPT_CD
                     AND HSP_TP_CD = :HIS_HSP_TP_CD)                                                PT_HME_DEPT_NM
               , A.RSV_DT                                                                           RSV_DT
         FROM MSTRHODD A
            , (SELECT A.RHTR_ORD_CD
                    , B.TYRM_CD
                    , B.TYRM_NM
                   , A.RHTR_LCLS_CD
                FROM MSTRHCDC A
                   , MSTRHSRD B
               WHERE B.TRP_DUTY_TP_CD = 'R'
                 AND B.USE_YN = 'Y'
                 AND B.TYRM_CD = A.APCB_TYRM_CD
                 AND B.HSP_TP_CD = A.HSP_TP_CD
                 AND B.HSP_TP_CD = :HIS_HSP_TP_CD
             ) B
            , MSTRHSLD C
         WHERE A.RSV_DT BETWEEN TO_DATE(:FROM_DT, 'YYYY-MM-DD') AND TO_DATE(:TO_DT, 'YYYY-MM-DD') + 0.9999
          AND A.ODDSC_TP_CD = 'C'
          AND A.TRP_FMT_YN = 'Y'
          AND A.FMT_STF_NO IS NOT NULL
          AND A.FMT_DTM IS NOT NULL
          AND A.TRP_RSV_DTM IS NOT NULL
          AND A.RHTR_ORD_CD = B.RHTR_ORD_CD
          AND A.RSV_THRP_SID = C.RTST_SID
          AND A.TRP_RSV_DTM = C.RSV_DTM
          AND A.TRP_RSV_SEQ = C.RSV_DY_SEQ
          AND A.TRP_RSV_SLOT_SEQ = C.RSV_SLOT_SEQ
          AND A.HSP_TP_CD = C.HSP_TP_CD
          AND A.RHRM_CD = C.RHRM_CD
          AND A.HSP_TP_CD = :HIS_HSP_TP_CD
        --GROUP BY RSV_DT,A.PACT_TP_CD,A.PT_NO,B.RHTR_LCLS_CD,TYRM_NM,A.FMT_STF_NO,A.PT_HME_DEPT_CD
        )A
    GROUP BY RSV_DT,PACT_TP_CD,CUBE(RHTR_LCLS_CD,TYRM_NM,FMT_STF_NM,PT_HME_DEPT_NM)
    HAVING GROUPING_ID(RHTR_LCLS_CD ,TYRM_NM ,FMT_STF_NM,PT_HME_DEPT_NM) = TO_NUMBER(:FLAG)
    )Y
GROUP BY CUBE((RHTR_LCLS_CD,TYRM_NM,PT_HME_DEPT_NM,FMT_STF_NM)),RSV_DT
ORDER BY RHTR_LCLS_CD , TYRM_NM, FMT_STF_NM, PT_HME_DEPT_NM,RSV_DT</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>(그리드)Grid 사이즈 조절 Behind </QUERY_NAME>
    <QUERY_TEXT>            if((bool)this.togBtnTrm.IsChecked)
            { 
                this.grdTrmV2.Visibility = Visibility.Collapsed;
                this.grdTrmMng.Visibility = Visibility.Visible;
                grdMain.ColumnDefinitions[0].Width = new GridLength(0);
                grdMain.ColumnDefinitions[1].Width = new GridLength(0);
                grdMain.ColumnDefinitions[2].Width = new GridLength(1,GridUnitType.Star);
            }
            else 
            {
                this.grdTrmV2.Visibility = Visibility.Visible;
                this.grdTrmMng.Visibility = Visibility.Collapsed;
                grdMain.ColumnDefinitions[0].Width = new GridLength(0.3,GridUnitType.Star);
                grdMain.ColumnDefinitions[1].Width = new GridLength(20);
                grdMain.ColumnDefinitions[2].Width = new GridLength(0.7,GridUnitType.Star);
            }</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>DTO 변환</QUERY_NAME>
    <QUERY_TEXT>WITH EXMV AS(
SELECT 'PT_NO,PT_NM,PT_BRDY_DT,PT_AGE,PT_SEX,PTNT_ADDR,PTNT_TEL,TEL,DIAG_NAME,ANDR_STF_NO,ASDR_STF_NO,ANDR_STF_NM,ASDR_STF_NM,WEIGHT,HEIGHT,BMI,PT_HME_DEPT_CD,PT_HME_DEPT_NM,PBSO_DEPT_CD,PBSO_DEPT_NM,ORD_ID,ORD_NM,ORD_CD,CUR_MED_DT,MED_DT,CUR_PACT_TP_CD,PACT_TP_CD,CUR_PACT_TP_NM,PACT_TP_NM,CUR_PACT_ID,PACT_ID,WD_DEPT,MEDR_STF_NO,MEDR_STF_NM' AS TXT
FROM DUAL
)
SELECT ':' || EXM
FROM(
SELECT DISTINCT TRIM(REGEXP_SUBSTR(A.TXT,'[^,]+',1,LEVEL)) EXM
 FROM EXMV A
 CONNECT BY INSTR(A.TXT,',',1,LEVEL-1)&gt;0
 )
;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>판독건수 집계</QUERY_NAME>
    <QUERY_TEXT>EXEC :FROM_DT :='2022-10-01';
EXEC :TO_DT :='2022-10-11';
EXEC :IN_HSP_TP_CD := '01';
SELECT EDITID
      ,EDITNM
      ,IPTN_DT
      ,HSP_TP_CD
      ,ORD_SLIP_CTG_NM
      ,COUNT(*)
FROM(
SELECT XSUP.FT_MSE_IPDR_STF_INFO('ID', A.IPTN_NO, A.HSP_TP_CD)         AS EDITID      -- 최종판독의
     , XSUP.FT_MSE_IPDR_STF_INFO('NM', A.IPTN_NO, A.HSP_TP_CD)         AS EDITNM         -- 최종판독의명
     , TO_CHAR(A.IPTN_DTM,'YYYY-MM-DD') IPTN_DT
     , A.HSP_TP_CD
     , D.ORD_SLIP_CTG_NM
    FROM MSERMDDD A
        ,MSERMAAD B
        ,MSERMMMC C
        ,CCOOCCSC D
    WHERE A.HSP_TP_CD = :IN_HSP_TP_CD
      AND A.HSP_TP_CD = B.HSP_TP_CD
      AND A.HSP_TP_CD = C.HSP_TP_CD
      AND A.HSP_TP_CD = D.HSP_TP_CD
      AND C.ORD_SLIP_CTG_CD = D.ORD_SLIP_CTG_CD
      AND C.ORD_CTG_CD = 'BR1'
      AND B.ORD_CD = C.EXM_CD
      AND A.IPTN_NO = B.IPTN_NO
      AND A.SGKY_NO IS NOT NULL
      AND A.IPTN_DTM BETWEEN TO_DATE(:FROM_DT,'YYYY-MM-DD') AND  TO_DATE(:TO_DT,'YYYY-MM-DD') + .99999
      AND A.IPTN_TP_CD = '1'
)
GROUP BY EDITID,EDITNM,IPTN_DT,ORD_SLIP_CTG_NM,HSP_TP_CD
ORDER BY HSP_TP_CD,IPTN_DT,EDITID,ORD_SLIP_CTG_NM
;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>UserControl 단축키 이벤트</QUERY_NAME>
    <QUERY_TEXT>1. xaml 딴에서 Loaded 이벤트를 실행하여 UserControl이 실행될때 Window의 이벤트를 발생시킨다.
2. Loaded 이벤트에서 KeyUp이벤트를 실행한다. (단축키를 위해)
3. 실행시킬 단축키 관련 이벤트를 작성한다. (ucTrmMain_KeyUp) 
4. Loaded에서 Window에 이벤트를 넣어두면 키를 입력할때마다 KeyUp이벤트가 호출된다. 
&lt;msbase:MSUserControlBase x:Name="ucTrmMain" x:Class="HIS.MS.IV.RM.EX.UI.SaveTm2SOrdRegV2"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:base="clr-namespace:HIS.UI.Base;assembly=HIS.UI.Base"
             xmlns:baseConverter="clr-namespace:HIS.UI.Utility.Converters;assembly=HIS.UI.Utility"
             xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"             
             xmlns:local="clr-namespace:HIS.MS.IV.RM.EX.UI"            
             xmlns:comn_rm="clr-namespace:HIS.MS.IV.RM.CO.UI;assembly=HIS.MS.IV.RM.CO.UI"
       xmlns:msbase="clr-namespace:HIS.MS.EC.CS.CO.UI.Common;assembly=HIS.MS.EC.CS.CO.UI" 
             mc:Ignorable="d" 
             xmlns:helper="clr-namespace:HSF.Controls.WPF.Extension.Helpers;assembly=HSF.Controls.WPF.Extension"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:comn_uc="clr-namespace:HIS.MS.EC.CS.CO.UI.UserControl;assembly=HIS.MS.EC.CS.CO.UI"
             xmlns:conv="clr-namespace:HIS.MC.NM.NO.CM.UI.Converters;assembly=HIS.MC.NM.NO.CM.UI"     
             xmlns:trm="clr-namespace:HIS.MC.NM.NO.CM.UI;assembly=HIS.MC.NM.NO.CM.UI"
             Loaded="MSUserControlBase_Loaded"                          
             d:DesignWidth="1950" d:DesignHeight="1000"  DesignWidth="1800" DesignHeight="800" Background="{StaticResource MainNormalBackground}" UseLayoutRounding="True"&gt;


private void MSUserControlBase_Loaded(object sender, RoutedEventArgs e)
        {
            var window = Window.GetWindow(this);
            window.KeyUp += ucTrmMain_KeyUp;
            //this.OwnerWindow.WindowState = WindowState.Maximized;
            SelectPatientInfo();
        }

private void ucTrmMain_KeyUp(object sender, System.Windows.Input.KeyEventArgs e)
        {            
            if (e.Key == System.Windows.Input.Key.F2)
            {
                this.model.TOGBTN_CHECKED = this.model.TOGBTN_CHECKED ? false : true;
                togBtnTrm_Click(sender, e);
            }
        }</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Delegate (델리게이트)</QUERY_NAME>
    <QUERY_TEXT>Func 델리게이트와 Action 델리게이트는 같은 역활을 합니다.

Action 도 Func 처럼 system 네임스페이스안에 선언이 되어 있죠

 

단 큰 차이점은 위임된 메소드가 처리되고 결과값이 반환되느냐 아니냐 차이입니다.


Func&lt;out TResult&gt;

Func&lt;in T1, out TResult&gt;

Func&lt;in T1,in T2, out TResult&gt;

Func&lt;in T1,in T2,...in T16, out TResult&gt;

Func의 오른쪽 끝의 1개는 Return 타입 , 왼쪽부터 순서대로 매개변수 타입.

Action

Action &lt;in T1&gt;

Action &lt;in T1,in T2&gt;

Action &lt;in T1,in T2,...in T16&gt;

Action은 Void 타입. Return이 없음. 


리턴값이 있는 메서드 혹은 익명 메서드를 Delegate해야 할 경우에는 Func을 사용하고

리턴값이 없이 실행하는 메서드나 익명메서드를 Delegate할 경우에는 Action을 사용한다.

 </QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>RTM_FMT_DTM 업데이트 관련 컬럼</QUERY_NAME>
    <QUERY_TEXT>A.RTM_MED_DT                --01.실시간진료일자
A.RTM_MEDR_STF_NO           --02.실시간진료의직원번호
A.RTM_MEDR_AADP_CD          --03.실시간진료의발령부서코드
A.RTM_MEDR_WKDP_CD          --04.실시간진료의근무부서코드
A.RTM_PBL_DTM               --05.실시간발행일시
A.RTM_PBL_STF_NO            --06.실시간발행직원번호
A.RTM_PBR_AADP_CD           --07.실시간발행자발령부서코드
A.RTM_PBR_WKDP_CD           --08.실시간발행자근무부서코드
A.RTM_FMT_DTM               --09.실시간수행일시
A.RTM_FMT_STF_NO            --10.실시간수행직원번호
A.RTM_FMPS_COAP_DEPT_CD     --11.실시간수행자비용적용부서코드
A.RTM_FMPS_WKDP_CD          --12.실시간수행자근무부서코드
A.RTM_FMCN_STF_NO           --13.실시간수행취소직원번호
A.RTM_FMCN_DTM              --14.실시간수행취소일시
A.RTM_CLSN_STF_NO           --15.실시간마감직원번호
A.RTM_CLSN_DT               --16.실시간마감일자
A.RTM_CLSN_FMT_YN           --17.실시간마감수행여부
A.RTM_USE_EQUP_CD           --18.실시간사용장비코드
A.RTM_PDAU_YN               --19.실시간PDA사용여부</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Golden 옵티마이저 조회(튜닝순서)</QUERY_NAME>
    <QUERY_TEXT>Ctrl + P</QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>옵티마이저(Optimizer) 모드 조회</QUERY_NAME>
    <QUERY_TEXT># MODE
1. RULE  = Analyze작업 불필요, 일정 응답속도 기대 , Optimizer 기능을 거의 사용 못함.\
2. CHOOSE = Optimizer 기능을 최대한 활용
3. FIRST_ROWS = Nested Loop 위주 실행계획수립.
4. ALL_ROWS = Hash Join 위주 실행계획 수립


SELECT NAME,VALUE,ISDEFAULT,ISMODIFIED,DESCRIPTION FROM V$PARAMETER WHERE NAME LIKE '%optimizer_mode%'
</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>프로젝트 수정 (xaml안에 클래스 그룹화하기)</QUERY_NAME>
    <QUERY_TEXT>1. 솔루션 탐색기에서 프로젝트를 마우스 오른쪽 버튼으로 클릭하고 프로젝트 언로드를 선택하십시오.
2. 프로젝트를 마우스 오른쪽 버튼으로 클릭하고 (솔루션 탐색기에서 사용할 수없는 것으로 태그 지정됨) “Edit yourproj.csproj”를 클릭하십시오. 편집 할 CSPROJ 파일이 열립니다. 
3. 원하는 사항을 변경 한 후 파일을 저장하고 닫습니다. 노드를 다시 마우스 오른쪽 단추로 클릭하고 완료되면 프로젝트 다시로드를 선택하십시오.


-- 프로젝트 언로드 -&gt; 프로젝트 편집 -&gt; 포함하고자 하는 파일을 ItempGroup안에 포함시킨 후 저장. -&gt; 프로젝트 다시 로드 </QUERY_TEXT>
    <GROUP>기타</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>FontFamily</QUERY_NAME>
    <QUERY_TEXT> FontFamily="Courier New"</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Timer</QUERY_NAME>
    <QUERY_TEXT>Timer timer = new Timer((double)1000)
            {
                AutoReset = false
            };                        
            timer.Elapsed += (ElapsedEventHandler)((_param1, _param2) =&gt; System.Windows.Application.Current.Dispatcher.BeginInvoke((Delegate)(() =&gt;
            {
                
            }), DispatcherPriority.Send));
            timer.Enabled = true;</QUERY_TEXT>
    <GROUP>C#</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ActualWidth 조절</QUERY_NAME>
    <QUERY_TEXT> if (ucInsertOperationPvtnAtbaMonitoring.ActualWidth - e.HorizontalChange &gt; 0)
                ucInsertOperationPvtnAtbaMonitoring.Width = ucInsertOperationPvtnAtbaMonitoring.ActualWidth - e.HorizontalChange;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>정규식 패턴</QUERY_NAME>
    <QUERY_TEXT>^ : 행의 시작 지점을 나타낸다.

$ : 행의 끝 지점을 나타낸다.

\b : 영문, 숫자와 그 밖의 문자와의 경계를 나타낸다.

. : 임의의 한 문자를 나타낸다.

\d : 0에서 9까지의 숫자 한 문자와 일치한다

\s : 공백, 탭, 줄바꿈 코드의 한 문자와 일치한다.

\S: 공백 외의 문자 하나와 일치한다

\w : 단어에 사용된 임의의 문자 하나와 일치한다.

| : 파이프기호로 구분된 요소중 하나와 일치한다.

[] : [] 안에 있는 임의의 한 문자와 일치한다. 하이픈(-)은 범위를 나타낸다.

[^] : 지정한 문자 외의 문자가 [] 안에서 일치한다.

* : 직전의 요소가 0번 이상 반복되는 것과 일치한다.

+ : 직전의 요소가 1번 이상 반복되는 것과 일치한다.

? : 직전의 요소가 1개 또는 0개 있는 것과 일치한다.

{n} : 직전의 요소가 n번 반복되는 것과 일치한다.

{n, } : 직전의 요소가 n번 이상 반복되는 것과 일치한다.

{n, m} : 직전의 요소가 n번 이상 m번 이하로 반복되는 것과 일치한다.

\p{IsHangulJamo} : 한글을 나타낸다.

\p{IsHangulCompatibilityJamo} : 한글을 나타낸다.

\p{IsHangulSyllables} : 한글을 나타낸다.

() : () 안에 있는 것을 그룹화한다. 1부터 순서대로 번호를 매긴다. Groups 속성을 통해 참조할 수 있다.

\n : 역참조 구문이다. n은 숫자다. 앞쪽에 있는 캡처링 그룹 내용과 일치하다.

*? : 최소한의 횟수로 반복되는 것에서 처음 일치하는 것을 나타낸다.

+? : 한 번 이상 그리고 최소한의 횟수로 반복되는 것을 나타낸다.</QUERY_TEXT>
    <GROUP>정규식</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>정규식 링크</QUERY_NAME>
    <QUERY_TEXT>--예제
http://daplus.net/regex-%EB%8C%80%EA%B4%84%ED%98%B8-%EC%82%AC%EC%9D%B4%EC%97%90%EC%84%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%B6%94%EC%B6%9C%ED%95%98%EB%8A%94-%EC%A0%95%EA%B7%9C%EC%8B%9D/


--정리
https://wormwlrm.github.io/2020/07/19/Regular-Expressions-Tutorial.html</QUERY_TEXT>
    <GROUP>정규식</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활 예약취소 스크립트</QUERY_NAME>
    <QUERY_TEXT>--예약취소
 UPDATE MSTRHSUD S
                SET --S.ODDSC_TP_CD = DECODE (NVL(S.RPY_STS_CD, 'N'), 'Y', S.ODDSC_TP_CD, 'N')
                    S.ODDSC_TP_CD = CASE WHEN NVL(S.RPY_STS_CD,'N') = 'Y' AND NVL(S.RFND_YN,'N') = 'N' THEN S.ODDSC_TP_CD --수납
                                         WHEN NVL(S.RPY_STS_CD,'N') = 'Y' AND NVL(S.RFND_YN,'N') = 'Y' THEN 'N' --환불요청
                                         WHEN NVL(S.RPY_STS_CD,'N') = 'N' AND NVL(S.RFND_YN,'N') = 'N' THEN 'N' --최초상태
                                         WHEN NVL(S.RPY_STS_CD,'N') = 'N' AND NVL(S.RFND_YN,'N') = 'Y' THEN 'N' --수납취소(환불됨.)
                                         WHEN NVL(S.RPY_STS_CD,'N') = 'R' AND NVL(S.RFND_YN,'N') = 'Y' THEN 'N' --환불요청한 상태에서 계산함.
                                     END
                  , S.RFND_YN     = DECODE (NVL(S.RPY_STS_CD, 'N'), 'Y', 'Y', S.RFND_YN)
                  , S.LSH_STF_NO  = 'MT00586'
                  , S.LSH_DTM     = SYSDATE
                  , S.LSH_PRGM_NM = 'GOLDEN'
                  , S.LSH_IP_ADDR = 'GOLDEN'
WHERE HSP_TP_CD = '02'
AND RHTR_ORD_ID IN ('185367257','185367267','185367270','185367273','185367256','185367266','185367269','185367272')
;       
--오더에서 예약정보 취소
UPDATE MSTRHODD
                SET RSV_THRP_SID        = NULL
                  , TRP_RSV_DTM         = NULL
                  , TRP_RSV_SEQ         = NULL
                  , TRP_RSV_SLOT_SEQ    = NULL
                  , RHTR_RSV_CNCL_TP_CD = NULL
                  , RSV_CNCL_DTM        = SYSDATE
                  , RHTR_MTCH_MIF_CD    = NULL
                  , RHTR_ORD_MTCH_SEQ   = NULL
                  , RSV_CNCL_STF_NO     = 'MT00586'
                  , LSH_STF_NO          = 'MT00586'
                  , LSH_DTM             = SYSDATE
                  , LSH_PRGM_NM         = 'GOLDEN'
                  , LSH_IP_ADDR         = 'GOLDEN'
                  , RHTR_ORD_ID         = NULL
WHERE HSP_TP_CD = '02'
AND RHTR_ORD_ID IN ('185367257','185367267','185367270','185367273','185367256','185367266','185367269','185367272')
;                                                                                                                   
--치료사 예약취소 
 UPDATE MSTRHSLD
               SET RSV_PT_NO = NULL
                 , ORD_DT          = NULL
                 , SCHD_RSV_SEQ    = NULL
                 , RSV_STS_TP_CD   = 'Y'
                 , TRSV_YN         = NULL
                 , RSV_MEMO_CNTE   = NULL
                 , BTCH_RSV_YN  = NULL
                 , LSH_DTM      = SYSDATE
                 , LSH_STF_NO   = 'MT00586'  
                 , LSH_PRGM_NM  = 'GOLDEN'
                 , LSH_IP_ADDR  = 'GOLDEN'
                 , RHTR_ORD_ID  = NULL
WHERE HSP_TP_CD = '02'
AND RHTR_ORD_ID IN ('185367257','185367267','185367270','185367273','185367256','185367266','185367269','185367272')</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>부위별 통계</QUERY_NAME>
    <QUERY_TEXT>EXEC :YYYY                     := '2022';
EXEC :IN_HSP_TP_CD             := '01';
EXEC :UPR_ORD_SLIP_CTG_CD      := 'RC';
SELECT *
    FROM (
SELECT ORD_SLIP_CTG_NM
     , EXRM_TP_CD
      ,TO_CHAR(NVL(sum("01"),0),'999,999') as "01"
     , TO_CHAR(NVL(sum("02"),0),'999,999') as "02"
     , TO_CHAR(NVL(sum("03"),0),'999,999') as "03"
     , TO_CHAR(NVL(sum("04"),0),'999,999') as "04"
     , TO_CHAR(NVL(sum("05"),0),'999,999') as "05"
     , TO_CHAR(NVL(sum("06"),0),'999,999') as "06"
     , TO_CHAR(NVL(sum("07"),0),'999,999') as "07"
     , TO_CHAR(NVL(sum("08"),0),'999,999') as "08"
     , TO_CHAR(NVL(sum("09"),0),'999,999') as "09"
     , TO_CHAR(NVL(sum("10"),0),'999,999') as "10"
     , TO_CHAR(NVL(sum("11"),0),'999,999') as "11"
     , TO_CHAR(NVL(sum("12"),0),'999,999') as "12"
     , TO_CHAR(NVL(SUM("01"),0) + NVL(SUM("02"),0)+ NVL(SUM("03"),0)+ NVL(SUM("04"),0)+ NVL(SUM("05"),0)+ NVL(SUM("06"),0)
     + NVL(SUM("07"),0)+ NVL(SUM("08"),0)+ NVL(SUM("09"),0)+ NVL(SUM("10"),0)+ NVL(SUM("11"),0)+ NVL(SUM("12"),0),'999,999') AS "TOTAL"
FROM(
    SELECT ORD_SLIP_CTG_NM,EXRM_TP_CD,SUM(CNT) CNT,MONTHS
        FROM(
            SELECT J.ORD_SLIP_CTG_NM                               ORD_SLIP_CTG_NM
                     , A.EXRM_TP_CD                                    EXRM_TP_CD
                     , COUNT(E.ORD_CD)                as                 CNT
                     , TO_NUMBER(TO_CHAR(A.PHTG_DTM, 'MM'))                       AS MONTHS
                  FROM MSERMAAD  A
                     , CCOOCBAC  E
                     , MSERMMRD  F
                     , MSERMMMC  C
                     , CCOOCCSC  J
                 WHERE 1 = 1
                   AND A.PHTG_DTM BETWEEN TO_DATE(:YYYY || '01' || '01', 'YYYY-MM-DD') AND TO_DATE(:YYYY || '12' || TO_CHAR(LAST_DAY(:YYYY || '12' || '01'), 'DD') , 'YYYY-MM-DD') + .99999
                   AND A.EXRM_TP_CD = F.EXRM_TP_CD
                   AND A.HSP_TP_CD = J.HSP_TP_CD
                   AND A.ORD_CTG_CD = 'BR1'
                   AND A.HSP_TP_CD = :IN_HSP_TP_CD
                   AND E.HSP_TP_CD = A.HSP_TP_CD
                   AND F.HSP_TP_CD = A.HSP_TP_CD
                   AND A.HSP_TP_CD = C.HSP_TP_CD
                   AND A.ORD_CD = E.ORD_CD
                   AND A.ORD_CD = C.EXM_CD
                   AND A.ORD_CD NOT IN ('RC03002')
                   AND C.ORD_SLIP_CTG_CD = J.ORD_SLIP_CTG_CD
                   AND J.UPR_ORD_SLIP_CTG_CD = :UPR_ORD_SLIP_CTG_CD
                GROUP BY A.EXRM_TP_CD, J.ORD_SLIP_CTG_NM, A.PHTG_DTM
            )A
        GROUP BY ORD_SLIP_CTG_NM,EXRM_TP_CD,CNT,MONTHS
)
PIVOT (SUM(CNT) FOR MONTHS IN (01,02,03,04,05,06,07,08,09,10,11,12))
GROUP BY ORD_SLIP_CTG_NM,EXRM_TP_CD
UNION ALL
SELECT ORD_SLIP_CTG_NM
     , EXRM_TP_CD
      ,TO_CHAR(NVL(sum("01"),0),'999,999') as "01"
     , TO_CHAR(NVL(sum("02"),0),'999,999') as "02"
     , TO_CHAR(NVL(sum("03"),0),'999,999') as "03"
     , TO_CHAR(NVL(sum("04"),0),'999,999') as "04"
     , TO_CHAR(NVL(sum("05"),0),'999,999') as "05"
     , TO_CHAR(NVL(sum("06"),0),'999,999') as "06"
     , TO_CHAR(NVL(sum("07"),0),'999,999') as "07"
     , TO_CHAR(NVL(sum("08"),0),'999,999') as "08"
     , TO_CHAR(NVL(sum("09"),0),'999,999') as "09"
     , TO_CHAR(NVL(sum("10"),0),'999,999') as "10"
     , TO_CHAR(NVL(sum("11"),0),'999,999') as "11"
     , TO_CHAR(NVL(sum("12"),0),'999,999') as "12"
     , TO_CHAR(NVL(SUM("01"),0) + NVL(SUM("02"),0)+ NVL(SUM("03"),0)+ NVL(SUM("04"),0)+ NVL(SUM("05"),0)+ NVL(SUM("06"),0)
     + NVL(SUM("07"),0)+ NVL(SUM("08"),0)+ NVL(SUM("09"),0)+ NVL(SUM("10"),0)+ NVL(SUM("11"),0)+ NVL(SUM("12"),0),'999,999') AS "TOTAL"
FROM(
SELECT 'BIOPSY' ORD_SLIP_CTG_NM,EXRM_TP_CD,SUM(CNT) CNT,MONTHS
        FROM(
            SELECT     A.EXRM_TP_CD                                    EXRM_TP_CD
                     , COUNT(E.ORD_CD)                as                 CNT
                     , TO_NUMBER(TO_CHAR(A.PHTG_DTM, 'MM'))                       AS MONTHS
                  FROM MSERMAAD  A
                     , CCOOCBAC  E
                     , MSERMMRD  F
                     , MSERMMMC  C
                 WHERE 1 = 1
                   AND A.PHTG_DTM BETWEEN TO_DATE(:YYYY || '01' || '01', 'YYYY-MM-DD') AND TO_DATE(:YYYY || '12' || TO_CHAR(LAST_DAY(:YYYY || '12' || '01'), 'DD') , 'YYYY-MM-DD') + .99999
                   AND A.EXRM_TP_CD = F.EXRM_TP_CD
                   AND A.ORD_CTG_CD = 'BR1'
                   AND A.HSP_TP_CD = :IN_HSP_TP_CD
                   AND E.HSP_TP_CD = A.HSP_TP_CD
                   AND F.HSP_TP_CD = A.HSP_TP_CD
                   AND A.HSP_TP_CD = C.HSP_TP_CD
                   AND A.ORD_CD = E.ORD_CD
                   AND A.ORD_CD = C.EXM_CD
                   AND A.ORD_CD IN( 'RC03002')
                GROUP BY A.EXRM_TP_CD, A.PHTG_DTM
            )A
        GROUP BY EXRM_TP_CD,CNT,MONTHS

    )
PIVOT (SUM(CNT) FOR MONTHS IN (01,02,03,04,05,06,07,08,09,10,11,12))
GROUP BY ORD_SLIP_CTG_NM,EXRM_TP_CD
UNION ALL
SELECT NVL(ORD_SLIP_CTG_NM,'월별 총계') ORD_SLIP_CTG_NM
     , EXRM_TP_CD
      ,TO_CHAR(NVL(sum("01"),0),'999,999') as "01"
     , TO_CHAR(NVL(sum("02"),0),'999,999') as "02"
     , TO_CHAR(NVL(sum("03"),0),'999,999') as "03"
     , TO_CHAR(NVL(sum("04"),0),'999,999') as "04"
     , TO_CHAR(NVL(sum("05"),0),'999,999') as "05"
     , TO_CHAR(NVL(sum("06"),0),'999,999') as "06"
     , TO_CHAR(NVL(sum("07"),0),'999,999') as "07"
     , TO_CHAR(NVL(sum("08"),0),'999,999') as "08"
     , TO_CHAR(NVL(sum("09"),0),'999,999') as "09"
     , TO_CHAR(NVL(sum("10"),0),'999,999') as "10"
     , TO_CHAR(NVL(sum("11"),0),'999,999') as "11"
     , TO_CHAR(NVL(sum("12"),0),'999,999') as "12"
     , TO_CHAR(NVL(SUM("01"),0) + NVL(SUM("02"),0)+ NVL(SUM("03"),0)+ NVL(SUM("04"),0)+ NVL(SUM("05"),0)+ NVL(SUM("06"),0)
     + NVL(SUM("07"),0)+ NVL(SUM("08"),0)+ NVL(SUM("09"),0)+ NVL(SUM("10"),0)+ NVL(SUM("11"),0)+ NVL(SUM("12"),0),'999,999') AS "TOTAL"
FROM(
    SELECT '장비별 총계' ORD_SLIP_CTG_NM,EXRM_TP_CD,SUM(CNT) CNT,MONTHS
        FROM(
            SELECT   A.EXRM_TP_CD                                    EXRM_TP_CD
                     , COUNT(E.ORD_CD)                as                 CNT
                     , TO_NUMBER(TO_CHAR(A.PHTG_DTM, 'MM'))                       AS MONTHS
                  FROM MSERMAAD  A
                     , CCOOCBAC  E
                     , MSERMMRD  F
                     , MSERMMMC  C
                     , CCOOCCSC  J
                 WHERE 1 = 1
                   AND A.PHTG_DTM BETWEEN TO_DATE(:YYYY || '01' || '01', 'YYYY-MM-DD') AND TO_DATE(:YYYY || '12' || TO_CHAR(LAST_DAY(:YYYY || '12' || '01'), 'DD') , 'YYYY-MM-DD') + .99999
                   AND A.EXRM_TP_CD = F.EXRM_TP_CD
                   AND A.HSP_TP_CD = J.HSP_TP_CD
                   AND A.ORD_CTG_CD = 'BR1'
                   AND A.HSP_TP_CD = :IN_HSP_TP_CD
                   AND E.HSP_TP_CD = A.HSP_TP_CD
                   AND F.HSP_TP_CD = A.HSP_TP_CD
                   AND A.HSP_TP_CD = C.HSP_TP_CD
                   AND A.ORD_CD = E.ORD_CD
                   AND A.ORD_CD = C.EXM_CD
                   AND C.ORD_SLIP_CTG_CD = J.ORD_SLIP_CTG_CD
                   AND J.UPR_ORD_SLIP_CTG_CD = :UPR_ORD_SLIP_CTG_CD
                GROUP BY A.EXRM_TP_CD, J.ORD_SLIP_CTG_NM, A.PHTG_DTM
            )A
        GROUP BY EXRM_TP_CD,CNT,MONTHS
)
PIVOT (SUM(CNT) FOR MONTHS IN (01,02,03,04,05,06,07,08,09,10,11,12))
GROUP BY ROLLUP((ORD_SLIP_CTG_NM ,EXRM_TP_CD))
)Z
ORDER BY (CASE WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'NEURO' ||'%' THEN 1
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'H'||'&amp;'||'N' ||'%'   THEN 2
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'CHEST' ||'%' THEN 3
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'GI' ||'%'    THEN 4
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'GU' ||'%'    THEN 5
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'MS' ||'%'    THEN 6
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'INT' ||'%'   THEN 7
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'SPINE' ||'%' THEN 8
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'HSC' ||'%'   THEN 9
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| 'BIOSPY' ||'%'THEN 10
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| '장비별총계' ||'%'THEN 98
               WHEN REPLACE(UPPER(ORD_SLIP_CTG_NM),' ','') LIKE '%'|| '월별총계' ||'%' THEN 99
                                                                                    ELSE 20
            END) ,EXRM_TP_CD
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상 예약조회</QUERY_NAME>
    <QUERY_TEXT>1. 검사실별 예약조회 : HIS.MS.IV.RM.RC.SelectReservationTab1

2. 검사별 예약조회 : HIS.MS.IV.RM.RC.SelectExmCbReservation

3. 월별 예약조회 : HIS.MS.IV.RM.RC.SelectMonthReservationList

4. 전체 예약조회 : HIS.MS.IV.RM.RC.SelectAllReservation

5. 검사실 전체 예약조회 : HIS.MS.IV.RM.RC.SelectExrmAllReservation  (환자정보 체크 안할시) , HIS.MS.IV.RM.RC.SelectExrmAllReservationCa (환자정보 체크시)</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>ORDER BY 분리정렬</QUERY_NAME>
    <QUERY_TEXT>--ORD_SLIP_CTG_NM  이 BIOPSY,장비별총계,월별총계 순으로 맨밑으로 보내고 나머지는 ORD_SLIP_CTG_NM 순으로 정렬
ORDER BY (CASE WHEN ORD_SLIP_CTG_NM = 'BIOPSY' THEN 97
               WHEN ORD_SLIP_CTG_NM = '장비별 총계' THEN 98
               WHEN ORD_SLIP_CTG_NM = '월별 총계' THEN 99
               ELSE 0 END),ORD_SLIP_CTG_NM,EXRM_NM
</QUERY_TEXT>
    <GROUP>Oracle</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>검사코드 사용종료 예약</QUERY_NAME>
    <QUERY_TEXT>--XSUP.PKG_MSE_LM_BATCH.EXAM_START_END_MGMT_ALL
PACKAGE BODY XSUP.PKG_MSE_LM_BATCH      
IS
   
    /**********************************************************************************************
    *    서비스이름  : EXAM_START_END_MGMT_ALL
    *    최초 작성일 : 2022.01.23
    *    최초 작성자 : ezCaretech SCS
    *    DESCRIPTION : 진단검사코드 시작 및 종료 처리 (자정(0시)에 실행해야 함.) - 전체병원
    *    수 정 사 항 : 
    **********************************************************************************************/
    PROCEDURE EXAM_START_END_MGMT_ALL
    AS
    BEGIN
        
        EXAM_START_END_MGMT('01');
        EXAM_START_END_MGMT('02');
        EXAM_START_END_MGMT('03');
                                       
        
        
    END EXAM_START_END_MGMT_ALL;
    

    /**********************************************************************************************
    *    서비스이름  : EXAM_START_END_MGMT
    *    최초 작성일 : 2022.01.23
    *    최초 작성자 : ezCaretech SCS
    *    DESCRIPTION : 진단검사코드 시작 및 종료 처리 (자정(0시)에 실행해야 함.) - 각 병원별
    *    수 정 사 항 : 
    **********************************************************************************************/
    PROCEDURE EXAM_START_END_MGMT
    (
      HIS_HSP_TP_CD          IN      VARCHAR2 -- 병원구분
    )
    IS
        IO_ERRYN  VARCHAR2(1000);
        IO_ERRMSG VARCHAR2(4000);        
        V_MIF_CD  VARCHAR2(0020);

    BEGIN
        
        -- 검사종료처리    
        FOR DR IN
        (
            SELECT EXM_CD
                 , HSP_TP_CD
              FROM MSELMEBM
             WHERE HSP_TP_CD = HIS_HSP_TP_CD
               AND AVL_END_DT BETWEEN TRUNC(SYSDATE)-1 AND TRUNC(SYSDATE)-1
        ) LOOP

            BEGIN        
                UPDATE MSELMEBM
                   SET ORD_PSB_YN = 'N' --처방가능여부
                     , LSH_DTM     = SYSDATE
                     , LSH_STF_NO  = 'BATCH'
                     , LSH_PRGM_NM = 'PKG_MSE_LM_BATCH.EXAM_START_END_MGMT'
                     , LSH_IP_ADDR = '0.0.0.0'                   
                 WHERE HSP_TP_CD = DR.HSP_TP_CD
                   AND EXM_CD    = DR.EXM_CD
                ;
                
                UPDATE CCOOCBAC
                   SET ORD_END_YN  = 'Y' -- 처방종료여부
                     , LSH_DTM     = SYSDATE
                     , LSH_STF_NO  = 'BATCH'
                     , LSH_PRGM_NM = 'PKG_MSE_LM_BATCH.EXAM_START_END_MGMT'
                     , LSH_IP_ADDR = '0.0.0.0'
                 WHERE HSP_TP_CD = DR.HSP_TP_CD
                   AND ORD_CD    = DR.EXM_CD
                ;                     
            END;
                              
        END LOOP;
        
        -- 검사시작처리
        FOR DR IN
        (
            SELECT M.*       
                 , (SELECT EXRS_UNIT
                      FROM MSELMRUD U
                     WHERE U.HSP_TP_CD   = M.HSP_TP_CD
                       AND U.EXM_CD      = M.EXM_CD
                       AND SYSDATE BETWEEN U.AVL_STR_DT AND U.AVL_END_DT  
                   ) EXRS_UNIT
                 , (SELECT RTRIM(XMLAGG ( XMLELEMENT(P, P.SPCM_CD || ',') ORDER BY P.SPCM_CD).EXTRACT('//text()').Getclobval(), ',') SPCM_CD_LIST
                      FROM MSELMPMD P
                     WHERE P.HSP_TP_CD = M.HSP_TP_CD
                       AND P.EXM_CD    = M.EXM_CD
                   ) PSB_SPCM_CNTE
                 --CCOOCBAC에서만 관리되고 있음. 어쩔수 없이 CCOOCBAC에서 조회함. CCOOCBAC에 업데이트하기 위해 CCOOCABC에서 조회하는 어처구니 없는 상황임.  
                 , (SELECT ORD_CTRL_CD
                      FROM CCOOCBAC C
                     WHERE C.HSP_TP_CD = M.HSP_TP_CD
                       AND C.ORD_CD    = M.EXM_CD 
                   ) ORD_CTRL_CD  
              FROM MSELMEBM M
             WHERE M.HSP_TP_CD = HIS_HSP_TP_CD
               AND M.AVL_STR_DT BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE)+0.99999
        ) LOOP

            BEGIN        
            
                UPDATE MSELMEBM
                   SET ORD_PSB_YN  = 'Y' --처방가능여부
                     , LSH_DTM     = SYSDATE
                     , LSH_STF_NO  = 'BATCH'
                     , LSH_PRGM_NM = 'PKG_MSE_LM_BATCH.EXAM_START_END_MGMT'
                     , LSH_IP_ADDR = '0.0.0.0'                   
                 WHERE HSP_TP_CD   = DR.HSP_TP_CD
                   AND EXM_CD      = DR.EXM_CD
                   ;
                             
                IF DR.APY_MIF_CD = '' OR DR.APY_MIF_CD IS NULL THEN
                    V_MIF_CD := DR.MIF_CD;
                ELSE        
                    V_MIF_CD := DR.APY_MIF_CD;
                
                    UPDATE MSELMEBM
                       SET MIF_CD      = APY_MIF_CD
                         , LSH_DTM     = SYSDATE
                         , LSH_STF_NO  = 'BATCH'
                         , LSH_PRGM_NM = 'PKG_MSE_LM_BATCH.EXAM_START_END_MGMT'
                         , LSH_IP_ADDR = '0.0.0.0'                   
                     WHERE HSP_TP_CD   = DR.HSP_TP_CD
                       AND EXM_CD      = DR.EXM_CD
                       AND APY_MIF_CD IS NOT NULL
                       ;
                END IF;
                
                XSUP.PC_MSE_MOZSUGAT_TRIGGER( 'U'                         --IN VARCHAR2

                                            , DR.EXM_CD                   --IN VARCHAR2
                                            , V_MIF_CD -- DR.MIF_CD       --IN VARCHAR2
                                            , DR.EITM_NM                  --IN VARCHAR2
                                            , DR.EITM_ABBR                --IN VARCHAR2
                                            , 'Y' --DR.ORD_PSB_YN               --IN VARCHAR2
                                            , DR.RPRN_EXM_CD              --IN VARCHAR2
                                            , DR.MED_EXM_CTG_CD           --IN VARCHAR2
                                            , DR.EXRM_EXM_CTG_CD          --IN VARCHAR2
                                            , DR.WK_UNIT_CD               --IN VARCHAR2
                                            , ''                          --IN VARCHAR2
                                            , DR.EXM_PSB_TP_CD_CNTE       --IN VARCHAR2
                                            , DR.ORD_PBSO_IFY_NO          --IN VARCHAR2
                                            , DR.TH1_SPCM_CD              --IN VARCHAR2
                                            , DR.TH2_SPCM_CD              --IN VARCHAR2
                                            , DR.SPCM_CHG_PSB_YN          --IN VARCHAR2
                                            , DR.ECH_SPCM_YN              --IN VARCHAR2
                                            , DR.BLCL_TEAM_BLCL_YN        --IN VARCHAR2
                                            , DR.NCS_LBL_CNT              --IN VARCHAR2
                                            , DR.SPCM_VLM_QTY             --IN VARCHAR2
                                            , DR.DEXM_RSLT_TP_CD          --IN VARCHAR2
                                            , DR.DFLT_EXRS_CNTE           --IN VARCHAR2
                                            , DR.EXRS_UNIT                --IN VARCHAR2
                                            , DR.PNAD_YN                  --IN VARCHAR2
                                            , DR.PNAD_HGLM_CNTE           --IN VARCHAR2
                                            , DR.PNAD_LWLM_CNTE           --IN VARCHAR2
                                            , DR.DLAD_YN                  --IN VARCHAR2
                                            , DR.DLAD_APY_FML_CNTE        --IN VARCHAR2
                                            , DR.DLAD_TP_CTRA_CNTE        --IN VARCHAR2
                                            , DR.TH1_DLAD_HGLM_CNTE       --IN VARCHAR2
                                            , DR.TH2_DLAD_HGLM_CNTE       --IN VARCHAR2
                                            , DR.TH1_DLAD_LWLM_CNTE       --IN VARCHAR2
                                            , DR.TH2_DLAD_LWLM_CNTE       --IN VARCHAR2
                                            , DR.PNCH_APY_YN              --IN VARCHAR2
                                            , DR.PNCH_HGLM_CNTE           --IN VARCHAR2
                                            , DR.PNCH_LWLM_CNTE           --IN VARCHAR2
                                            , DR.DLCH_APY_YN              --IN VARCHAR2
                                            , DR.DLCH_APY_FML_CNTE        --IN VARCHAR2
                                            , DR.DLCH_TP_CTRA_CNTE        --IN VARCHAR2
                                            , DR.TH1_DLCH_HGLM_CNTE       --IN VARCHAR2
                                            , DR.TH2_DLCH_HGLM_CNTE       --IN VARCHAR2
                                            , DR.TH1_DLCH_LWLM_CNTE       --IN VARCHAR2
                                            , DR.TH2_DLCH_LWLM_CNTE       --IN VARCHAR2
                                            , DR.MDY_EXM_PSB_YN           --IN VARCHAR2
                                            , DR.UDY_EXM_PSB_YN           --IN VARCHAR2
                                            , DR.WDY_EXM_PSB_YN           --IN VARCHAR2
                                            , DR.TRDY_EXM_PSB_YN          --IN VARCHAR2
                                            , DR.FDY_EXM_PSB_YN           --IN VARCHAR2
                                            , DR.ADY_EXM_PSB_YN           --IN VARCHAR2
                                            , DR.SDY_EXM_PSB_YN           --IN VARCHAR2
                                            , DR.TDY_EXM_PSB_YN           --IN VARCHAR2
                                            , DR.NRML_FGR_EXTC_YN         --IN VARCHAR2
                                            , DR.EITM_CAPN_CNTE           --IN VARCHAR2
                                            , DR.CHC_MED_ITEM_YN          --IN VARCHAR2
                                            , DR.AVL_END_DT               --IN VARCHAR2
                                            , DR.EPST_YN                  --IN VARCHAR2
                                            , DR.ORD_PSB_YN               --IN VARCHAR2
                                            , DR.RSVP_YN                  --IN VARCHAR2
                                            , '' --DR.PTHL_ENUM_SEQ            --IN VARCHAR2
                                            , DR.TOS_PT_POP_PLC           --IN VARCHAR2
                                            , DR.CHL_PT_POP_PLC           --IN VARCHAR2
                                            , DR.TOS_EXM_PSB_DEPT_CD      --IN VARCHAR2
                                            , DR.CHL_EXM_PSB_DEPT_CD      --IN VARCHAR2
                                            , DR.OTPT_EXM_PSB_DEPT_CD     --IN VARCHAR2
                                            , DR.RSIN_EXM_PSB_DEPT_CD     --IN VARCHAR2
                                            , DR.DEXM_CLS_CTG_CD          --IN VARCHAR2         -- 진단검사 유형분류코드
                                            , DR.PSB_SPCM_CNTE            --IN VARCHAR2         -- 가능검체리스트
                                            , DR.SCRN_SORT_SEQ            --IN VARCHAR2         -- 화면정렬순번
                                            , DR.ORD_CTRL_CD              --IN VARCHAR2         -- 유전자동의서
                                            , 'BATCH'                     --IN VARCHAR2
                                            , 'PKG_MSE_LM_BATCH.EXAM_START_END_MGMT'                 --IN VARCHAR2
                                            , '0.0.0.0'                 --IN VARCHAR2
                                            , DR.HSP_TP_CD               --IN VARCHAR2
                                            , DR.MDFM_ID                  --IN VARCHAR2
                                            , DR.TM1S_VRFC_MRK_YN         --IN VARCHAR2
                                            , DR.TM2S_VRFC_MRK_YN         --IN VARCHAR2
                                            , DR.TM3S_VRFC_MRK_YN         --IN VARCHAR2
    
                                            , DR.CST_MPNG_RSN_CNTE        --IN VARCHAR2
                                            , DR.GENE_EXM_PRNT_RTC_YN     --IN VARCHAR2
                                            , DR.STTS_EXM_CD              --IN VARCHAR2
                                            , DR.STCR_NOTM                --IN NUMBER
                                            , DR.TLA_ORD_SND_FLAG_CNTE    --IN VARCHAR2            -- TLA처방전송플래그내용
                                            , DR.BRCD_CNTE                --IN VARCHAR2            -- 바코드내용
                                            , DR.NRML_YN_IPTN_EN          --IN VARCHAR2            -- 정상비정상
                                            , DR.EMRG_YN                  --IN VARCHAR2           -- 응급여부
                                            , IO_ERRYN                    --IN OUT  VARCHAR2
                                            , IO_ERRMSG                   --IN OUT  VARCHAR2
                                            ); 
                IF IO_ERRYN = 'Y' THEN
                    -- 에러나도 그 다음 검사항목 처리하기 위해 아무것도 안함.
                    NULL;
                END IF;                                            
            END;
                              
        END LOOP;
        
        
    END EXAM_START_END_MGMT;
END PKG_MSE_LM_BATCH;
</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>Visual Studio 2017 XAML 또는 WPF 디자이너에서 오류(리소스를 찾을 수 없음)</QUERY_NAME>
    <QUERY_TEXT>명령프롬프트 에서 

setx VSXAML_DISABLE_ON_DEMAND_RESOURCE_VALUES 1

명령어 실행 후 Visual Studio 재실행</QUERY_TEXT>
    <GROUP>ERROR</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>영상 검사 시행 EQS</QUERY_NAME>
    <QUERY_TEXT>--시행환자 조회
HIS.MS.IV.RM.EX.SelectGnrDgnsExmImpl

--시행 처방
HIS.MS.IV.RM.EX.SelectGnrDgnsExmImplExm</QUERY_TEXT>
    <GROUP>영상과내</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>INDEX (인덱스) IBatis (아이바티스)</QUERY_NAME>
    <QUERY_TEXT>--ibatis를 쓸때 인덱스가 따로 탈 수 잇을 수 잇어서 인덱스도 IBatis에 맞춰서 각각 태워줘야한다.
&lt;sql id="HIS.MS.IV.SE.EX.UI.SelectExaminationDrugPtList"&gt;&lt;!--
    Clss :  TEXT (쿼리유형)
    Desc : 투약 환자 리스트 조회
    Author : 임재득
    Create date : 2017-07-06
    Update date : 2017-07-06
         2021-09-13 sykim, 처방일 기준으로 조회 안 되던 것 수정
--&gt;
--exec :HIS_HSP_TP_CD     := '02';
--exec :IN_PT_NO         := '10075544';
--exec :IN_DTE             := '2017-07-06';
--exec :IN_FR_DTE         := '2017-07-04';
--exec :IN_TO_DTE         := '2017-07-04';
--exec :IN_PACT_TP_CD      := 'O';
--exec :IN_EXCT_EXRM_CD   := 'PDL';


SELECT /*진료지원-특수검사-검사약간호수행-HIS.MS.IV.SE.EX.UI.SelectExaminationDrugPtList*/
       DISTINCT
       SA.PT_NO                                                                                    PT_NO                   /*환자번호*/
     , XBIL.FT_ACP_PATNAME(:HIS_HSP_TP_CD, SA.PT_NO)                                               PT_NM                   /*환자명*/
     , SA.PACT_TP_CD                                                                               PACT_TP_CD
     , DECODE(SA.ACTING_CNT,0,'N','Y')                                                             ACTING_YN
     , DECODE(XBIL.FT_PCT_AGE('AGE',SYSDATE, D.PT_BRDY_DT), '0', DECODE(XBIL.FT_PCT_AGE('MONTH',SYSDATE, D.PT_BRDY_DT)
                                                                 , '0', XBIL.FT_PCT_AGE('F_DAY',SYSDATE, D.PT_BRDY_DT)
                                                                      , XBIL.FT_PCT_AGE('F_MONTH',SYSDATE, D.PT_BRDY_DT))
                                                                      , XBIL.FT_PCT_AGE('F_AGE',SYSDATE, D.PT_BRDY_DT))    AGE
     , D.SEX_TP_CD                                                                                 SEX_TP_CD
     , TO_CHAR(D.PT_BRDY_DT,'YYYY-MM-DD')                                                          PT_BRDY_DT
     , SA.ORD_STS_RGB_CD                                                                           ORD_STS_RGB_CD
     , SA.EXCT_EXRM_CD                                                                             EXCT_EXRM_CD
     , SA.EXCT_EXRM_NM                                                                             EXCT_EXRM_NM 
  FROM (
          SELECT
          &lt;IsEqual Property="IN_SEL_GUBN" CompareValue="ORD"&gt;
          /*+ INDEX(V MOOORDRM_SI03) */
          &lt;/IsEqual &gt;
    &lt;IsEqual Property="IN_SEL_GUBN" CompareValue="RSV"&gt;
          /*+ INDEX(V MOOORDRM_SI10) */
          &lt;/IsEqual &gt;                           
                 V.PACT_TP_CD                                                                       PACT_TP_CD            /*원무접수구분코드*/
               , V.PT_NO                                                                            PT_NO                 /*환자번호*/
               , V.AMS_EXPT_DT                                                                      AMS_EXPT_DT     --투약예정일자
               , XMED.PKG_MOO_ACTORDER_INFO.FT_ACTING_COUNT(V.ORD_ID, 'NR', V.HSP_TP_CD)            ACTING_CNT
               , XMED.PKG_MOO_ACTORDER_INFO.FT_ORD_STS_RGB(V.ORD_ID,V.HSP_TP_CD)                    ORD_STS_RGB_CD
               , V.EXCT_EXRM_CD                                                                        EXCT_EXRM_CD    --실행검사실코드
               , ( SELECT DTRL2_NM                                                 
                     FROM CCCMCSTE AA
                    WHERE AA.COMN_GRP_CD = 'DR00160'
                      AND AA.COMN_CD     =  V.EXCT_EXRM_CD
                      AND AA.HSP_TP_CD   = :HIS_HSP_TP_CD 
                      AND ROWNUM = 1
                 )                                                                                     EXCT_EXRM_NM
            FROM MOOORPTD        M
               , MOOORDRM        V
           WHERE 0=0
             AND M.ORD_ID        = V.ORD_ID
&lt;IsEqual Property="IN_SEL_GUBN" CompareValue="ORD"&gt;   
             AND V.ORD_DT       BETWEEN TRUNC(:IN_DTE)
                                    AND TRUNC(:IN_DTE) + 0.99999
&lt;/IsEqual&gt;&lt;IsEqual Property="IN_SEL_GUBN" CompareValue="RSV"&gt;
             AND V.AMS_EXPT_DT       BETWEEN TRUNC(:IN_DTE)
                                         AND TRUNC(:IN_DTE) + 0.99999
&lt;/IsEqual&gt; 
             AND V.HSP_TP_CD     = :HIS_HSP_TP_CD
             AND M.HSP_TP_CD     = :HIS_HSP_TP_CD
             AND V.AMDPO_TP_CD   IN ('1')
             AND V.AMS_ORD_STS_CD = '0'
             AND V.PACT_TP_CD                 = 'O'
             AND V.PACT_TP_CD                 = DECODE(:IN_PACT_TP_CD, '*', V.PACT_TP_CD, :IN_PACT_TP_CD) 
             AND NVL(V.PRN_ORD_YN, '*')      != 'Y'          /* PRN 오더 아닌 것       */
             AND NVL(V.PT_BNG_DG_YN, '*')    != 'Y'          /* SELF 조제 아닌 것      */
--             AND V.ORD_GRP_CD    = NVL(:ORD_GRP_CD, V.ORD_GRP_CD)
             /*삭제오더 제외(단, 자식오더가 있다면 부모오더 모두조회)*/    /*2013-06-26 김병수*/
             AND M.ODDSC_TP_CD NOT IN DECODE(( SELECT COUNT(1) FROM MOOORDRM WHERE OPRS_ID = M.ORD_ID AND ORD_MRK_CTG_CD IN ('P','E','R') AND ROWNUM = 1), 1, 'NNN', 'N')
             AND V.EXCT_EXRM_CD IN ( SELECT AA.COMN_CD
                                       FROM CCCMCSTE AA
                                      WHERE AA.COMN_GRP_CD  = 'DR00160'
                                        AND AA.DTRL2_NM     IN ( NVL(:IN_EXCT_EXRM_CD, DTRL1_NM), 'ETC' )
                                        AND AA.HSP_TP_CD    = :HIS_HSP_TP_CD
                                    )
 -- union
--          SELECT V.PACT_TP_CD                                                                          PACT_TP_CD            /*원무접수구분코드*/
--               , V.PT_NO                                                                               PT_NO                 /*환자번호*/
--               , V.AMS_EXPT_DT                                                                         AMS_EXPT_DT     --투약예정일자
--               , XMED.PKG_MOO_ACTORDER_INFO.FT_ACTING_COUNT(V.ORD_ID, 'NR', V.HSP_TP_CD)               ACTING_CNT
--               , XMED.PKG_MOO_ACTORDER_INFO.FT_ORD_STS_RGB(V.ORD_ID,V.HSP_TP_CD)                       ORD_STS_RGB_CD
--               , V.EXCT_EXRM_CD                                                                        EXCT_EXRM_CD    --실행검사실코드
--               , ( SELECT DTRL2_NM                                                 
--                     FROM CCCCCSTE AA
--                    WHERE AA.COMN_GRP_CD = 'DR00160'
--                      AND AA.COMN_CD =  V.EXCT_EXRM_CD
--                      AND ROWNUM = 1
--                 )                                                                                     EXCT_EXRM_NM  
--            FROM MOOORPTD        M
--               , MOOORDRM   V
--           WHERE 0=0
--             AND M.ORD_ID        = V.ORD_ID
--             AND V.AMS_EXPT_DT   BETWEEN TRUNC(:IN_DTE)
--                                     AND TRUNC(:IN_DTE) + 0.99999
--             AND V.HSP_TP_CD     = :HIS_HSP_TP_CD
--             AND M.HSP_TP_CD     = :HIS_HSP_TP_CD
--             AND V.AMS_ORD_STS_CD = '0'
--             AND V.PACT_TP_CD                != 'O'
--             AND V.PACT_TP_CD                 = DECODE(:IN_PACT_TP_CD, '*', V.PACT_TP_CD, :IN_PACT_TP_CD)
--             AND V.PBSO_DEPT_CD              IN ( 'PLEND', 'PBRN', 'PENDO','IMG', 'DR' )
--             AND NVL(V.PRN_ORD_YN, '*')      != 'Y'          /* PRN 오더 아닌 것       */
--             AND NVL(V.PT_BNG_DG_YN, '*')    != 'Y'          /* SELF 조제 아닌 것      */
----             AND V.ORD_GRP_CD    = NVL(:ORD_GRP_CD, V.ORD_GRP_CD)
--             /*삭제오더 제외(단, 자식오더가 있다면 부모오더 모두조회)*/    /*2013-06-26 김병수*/
--             AND M.ODDSC_TP_CD NOT IN DECODE(( SELECT COUNT(1) FROM MOOORDRM WHERE OPRS_ID = M.ORD_ID AND ORD_MRK_CTG_CD IN ('P','E','R') AND ROWNUM = 1), 1, 'NNN', 'N')
----             AND V.EXCT_EXRM_CD IN ( SELECT AA.COMN_CD
----                                       FROM CCCCCSTE AA
----                                      WHERE AA.COMN_GRP_CD  = 'DR00160'
----                                        AND AA.DTRL2_NM     IN ( NVL(:IN_EXCT_EXRM_CD, DTRL1_NM), 'ETC' )
----                                    )
        ) SA
      , PCTPCPAM_DAMO D
  WHERE SA.PT_NO = D.PT_NO
  AND :IN_SEL_GUBN = :IN_SEL_GUBN
  ORDER BY ACTING_YN, SA.PT_NO

&lt;/sql&gt;</QUERY_TEXT>
    <GROUP>Query</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>TextBox 한글 바인딩 바로 읽지못할경우</QUERY_NAME>
    <QUERY_TEXT>private void txtSearch_TextChanged(object sender, TextChangedEventArgs e)
        {
            BindingExpression bindingExpression = ((TextBox)sender).GetBindingExpression(TextBox.TextProperty);
            bindingExpression.UpdateSource();
            if (view != null)
                view.Refresh();
        }</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>캘린더 날짜 선택 막기</QUERY_NAME>
    <QUERY_TEXT>&lt;CalendarEx.BlackoutDates&gt;
                        &lt;CalendarDateRange Start="" End="01/06/001"/&gt;
                    &lt;/CalendarEx.BlackoutDates&gt;</QUERY_TEXT>
    <GROUP>Xaml</GROUP>
  </FavQuery>
  <FavQuery>
    <BASE_STATE />
    <QUERY_NAME>재활치료대상자 당일</QUERY_NAME>
    <QUERY_TEXT>EXEC :SID := '1003601';
EXEC :FROM_DT := '20221115';
EXEC :TO_DT := '20221115';
EXEC :HIS_HSP_TP_CD := '02';
EXEC :PT_NO := '05654903';

  SELECT   /*HIS.MS.TR.RE.RS.SelectPtRsvSlotList*/
          A.RSV_TIME                      RSV_TIME
        , A.RSV_DY_SEQ                    RSV_DY_SEQ
        , A.RSV_SLOT_SEQ                  RSV_SLOT_SEQ
        , A.RHRM_CD                       RHRM_CD
        , A.RHRM_NM                       RHRM_NM
        , A.TYRM_TEL_NO                   TYRM_TEL_NO
        , A.RTST_SID                      RTST_SID
        , SELDAY.PACT_TP_NM || DECODE(SELDAY.TRSV_YN,'Y', '(가)' || NVL(SELDAY.PNMS, 'N')  ,NVL(SELDAY.PNMS, 'N'))      SELDAY
        , SELDAY.PT_NO                         PT_NO
        , SELDAY.PT_NM                         PT_NM
        , SELDAY.RSV_DT                                                                                                 RSV_DT
        , SELDAY.RSV_MEMO                 SEL_MEMO
        , SELDAY.PT_NO                    SEL_PT_NO
        , SELDAY.STTP_CD                  SEL_STTP_CD
        , SELDAY.TRP_FMT_YN               SEL_TRP_FMT_YN
        , SELDAY.TRSV_YN                  SELDAY_TRSV_YN
        , TO_CHAR(SELDAY.ACPT_DTM, 'YYYY-MM-DD HH24:MI:SS')  SEL_ACPT_DTM
        , DECODE(SELDAY.ACPT_DTM,NULL,'N','Y')            SEL_ACPT_DTM_YN
        , SELDAY.SCHD_CRE_SEQ                             SEL_SCHD_CRE_SEQ
        , TO_CHAR(SELDAY.ORD_DT, 'YYYY-MM-DD')            SEL_ORD_DT
        , SELDAY.SEC_RRN                                  SEL_SEC_RRN
        , SELDAY.PACT_ID                                  SEL_PACT_ID
        , SELDAY.PACT_TP_CD                               SEL_PACT_TP_CD
        , SELDAY.RHTR_ORD_NM                              SEL_RHTR_ORD_NM
        , SELDAY.RPY_STS_CD                               SEL_RPY_STS_CD
        , SELDAY.RHTR_ORD_CD                              SEL_RHTR_ORD_CD
        , REPLACE(REPLACE(SELDAY.ORD_PBL_PTM_CNTE, CHR(10), '//') , CHR(10),'')                        SEL_ORD_PBL_PTM_CNTE
        , SELDAY.ORD_PBL_PTM_CNTE_CHK                     SEL_ORD_PBL_PTM_CNTE_CHK
        , NVL(SELDAY.MEDREC_YN, 'N')          SEL_MEDREC_YN
     , SELDAY.RHTR_TP_CD                         SEL_RHTR_TP_CD
      , SELDAY.RHTR_ORD_ID                           SEL_RHTR_ORD_ID
      , SELDAY.WD_DEPT_CD                               SEL_WD_DEPT_CD
   FROM
       (
        SELECT
               TO_CHAR(A.RSV_DTM, 'HH24:MI')       RSV_TIME
             , A.RSV_DY_SEQ                        RSV_DY_SEQ
             , A.RHRM_CD                           RHRM_CD
             , B.TYRM_NM                     RHRM_NM
             , A.RSV_SLOT_SEQ                      RSV_SLOT_SEQ
             , B.TYRM_TEL_NO                       TYRM_TEL_NO
             , A.RTST_SID                          RTST_SID
         FROM MSTRHSLD A , MSTRHSRD B
        WHERE A.HSP_TP_CD = B.HSP_TP_CD
          AND A.RHRM_CD = B.TYRM_CD
          AND B.USE_YN ='Y'
          AND A.RTST_SID  = :SID
          AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:TO_DT, 'YYYYMMDD') + 0.99999
          AND A.HSP_TP_CD = :HIS_HSP_TP_CD
        GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.TYRM_NM , A.RSV_SLOT_SEQ, B.TYRM_TEL_NO, A.RTST_SID
      ) A
     ,(
 SELECT
        TO_CHAR(A.RSV_DTM, 'HH24:MI')                   RSV_TIME
      , TO_CHAR(A.RSV_DTM, 'YYYY-MM-DD')                RSV_DT
      , A.RSV_DY_SEQ                                    RSV_DY_SEQ
      , NVL(REPLACE(B.PT_NM, ' ','_'), 'X') || ' ' || PT_NO               PNMS
  --    , NVL(REPLACE(B.PT_NM, ' ','_'), 'X')               PNMS
      , A.RSV_MEMO_CNTE                                 RSV_MEMO
      , B.PT_NM             PT_NM
      , A.RSV_PT_NO                                     PT_NO
      , A.STTP_CD                                       STTP_CD
      , A.RHRM_CD                                       RHRM_CD
      , A.RSV_SLOT_SEQ                                  RSV_SLOT_SEQ
      , A.RHTR_TP_CD                   RHTR_TP_CD
      , NVL((SELECT C.TRP_FMT_YN
               FROM MSTRHODD  C
               WHERE C.RSV_THRP_SID = A.RTST_SID
                AND C.TRP_RSV_DTM = A.RSV_DTM
                AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                AND C.TRP_FMT_YN = 'Y'
                AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND ROWNUM = 1),'N')                    TRP_FMT_YN
      , A.TRSV_YN                                   TRSV_YN
      , (SELECT C.ACPT_DTM
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
         AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
         AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             ACPT_DTM
      , (SELECT C.ORD_DT
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.TRP_RSV_SLOT_SEQ = A.RSV_SLOT_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1
            )                             ORD_DT
      , (SELECT MIN(C.SCHD_CRE_SEQ)
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             SCHD_CRE_SEQ
      , (SELECT CASE C.PACT_TP_CD WHEN 'I' THEN '(입원)'
                                  WHEN 'O' THEN '(외래)'
                                  WHEN 'E' THEN '(응급)'
                ELSE ''
                END
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_NM
      , (SELECT C.PACT_TP_CD
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_TP_CD
      --, XCOM.FT_CCC_RRN(B.SEC_RRN)                      SEC_RRN
      , XCOM.FT_CCC_RRN(SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 1, 6)
                         || '-' || SUBSTRB(DAMO.DEC_VARCHAR('HBIL','PCTPCPAM','RRN', B.SEC_RRN), 7, 7))  SEC_RRN
      , (SELECT S.PACT_ID
           FROM MSTRHODD C, MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             PACT_ID
      , (SELECT D.RHTR_ORD_NM
           FROM MSTRHODD C , MSTRHCDC D
          WHERE C.HSP_TP_CD = D.HSP_TP_CD
            AND C.RHTR_ORD_CD = D.RHTR_ORD_CD
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
         AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
         AND C.RHRM_CD = A.RHRM_CD
         AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_NM
      , (SELECT DECODE(S.RFND_YN, 'Y', 'F', DECODE(XBIL.FT_HIPASS_YN(S.PT_NO, S.HSP_TP_CD, SYSDATE, S.PACT_ID),'Y', 'Y', S.RPY_STS_CD)) RPY_STS_CD --DECODE(XBIL.FT_ACP_HIPASS_YN(S.HSP_TP_CD, S.PT_NO, TO_CHAR(S.RSV_DT,'YYYY-MM-DD')),'Y','H', S.RPY_STS_CD) RPY_STS_CD
           FROM MSTRHODD C , MSTRHSUD S
          WHERE C.HSP_TP_CD = S.HSP_TP_CD
            AND C.PT_NO = S.PT_NO
            AND C.ORD_DT = S.ORD_DT
            AND C.RSV_DT = S.RSV_DT
            AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
            AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
            AND C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RPY_STS_CD
      , (SELECT C.RHTR_ORD_CD
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1)                             RHTR_ORD_CD
      , (SELECT C.ORD_PBL_PTM_CNTE
           FROM MSTRHODD C
          WHERE C.RSV_THRP_SID = A.RTST_SID
            AND C.TRP_RSV_DTM = A.RSV_DTM
            AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
            AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
            AND C.RHRM_CD = A.RHRM_CD
            AND C.HSP_TP_CD = :HIS_HSP_TP_CD
            AND ROWNUM = 1
            )                             ORD_PBL_PTM_CNTE
       ,(SELECT DECODE(Z.ORD_PBL_PTM_CNTE,NULL,'','★')
              FROM ( SELECT MIN(D.RSV_DT) RSV_DT, D.ORD_PBL_PTM_CNTE
              FROM MSTRHODD C, MSTRHODD D
             WHERE C.RSV_THRP_SID = A.RTST_SID
               AND C.TRP_RSV_DTM = A.RSV_DTM
               AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
               AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
               AND C.HSP_TP_CD = :HIS_HSP_TP_CD
               AND C.PT_NO = D.PT_NO
               AND C.ORD_DT = D.ORD_DT
               AND C.RHTR_ORD_SEQ = D.RHTR_ORD_SEQ
               AND C.HSP_TP_CD = D.HSP_TP_CD
               AND C.RHTR_ORD_CD = D.RHTR_ORD_CD
               AND C.RHRM_CD = A.RHRM_CD
                GROUP BY D.ORD_PBL_PTM_CNTE
           ) Z
             WHERE Z.RSV_DT = TRUNC(A.RSV_DTM)--TRUNC(A.RSV_DTM)
            AND ROWNUM = 1)                           ORD_PBL_PTM_CNTE_CHK
       , (SELECT MEDREC_YN
            FROM (SELECT DECODE(X.MDRC_WRT_STS_CD, '1', 'T'
                                                    , '2', 'T'
                                                    , '11', 'Y'
                                                    , '12', 'Y'
                                                    , 'N') MEDREC_YN
                    FROM MSTRHODD C, MSTRHSUD S, MRDDRECM X, MSTRHCDC Y
                   WHERE C.HSP_TP_CD = S.HSP_TP_CD
                     AND C.PT_NO = S.PT_NO
                     AND C.ORD_DT = S.ORD_DT
                     AND C.RSV_DT = S.RSV_DT
                     AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
                     AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
                     AND C.RSV_THRP_SID = A.RTST_SID
                     AND C.TRP_RSV_DTM = A.RSV_DTM
                     AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
                     AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
                     AND C.RHRM_CD = A.RHRM_CD
                     AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                     AND S.PT_NO = X.PT_NO
                     AND S.HSP_TP_CD = X.HSP_TP_CD
                     AND S.RTM_MED_DT = X.MED_DT
                     AND S.PACT_ID = X.PACT_ID
                     AND X.MDRC_DC_TP_CD = 'C'
                     AND X.LST_YN = 'Y'
                     AND X.MDFM_ID = Y.MDFM_ID
                     AND X.WK_SID = A.RTST_SID
                     AND Y.RHTR_ORD_CD = C.RHTR_ORD_CD
                     AND Y.HSP_TP_CD = C.HSP_TP_CD
                   ORDER BY MDRC_FOM_SEQ DESC)
           WHERE ROWNUM = 1)                            MEDREC_YN
          , (SELECT R.CLCTN_WD_DEPT_CD || '/' || R.CLCTN_PRM_NO
               FROM MSTRHODD C
                  , MSTRHSUD S
                  , ACPPRAAM R
              WHERE C.HSP_TP_CD = S.HSP_TP_CD
             AND C.PT_NO = S.PT_NO
             AND C.ORD_DT = S.ORD_DT
             AND C.RSV_DT = S.RSV_DT
             AND C.RHTR_MTCH_MIF_CD = S.ORD_MTCH_MIF_CD
             AND C.RHTR_ORD_MTCH_SEQ = S.RHTR_ORD_MTCH_SEQ
             AND C.RSV_THRP_SID = A.RTST_SID
             AND C.TRP_RSV_DTM = A.RSV_DTM
             AND C.TRP_RSV_SEQ = A.RSV_DY_SEQ
             AND C.SCHD_CRE_SEQ = A.SCHD_RSV_SEQ
             AND C.RHRM_CD = A.RHRM_CD
                AND C.HSP_TP_CD = :HIS_HSP_TP_CD
                AND R.PACT_ID = S.PACT_ID
                AND R.SIHS_YN = 'Y'
                AND R.APCN_YN = 'N'
                AND R.HSP_TP_CD = S.HSP_TP_CD
             AND ROWNUM = 1)                            WD_DEPT_CD
          , A.RHTR_ORD_ID                                  RHTR_ORD_ID
    FROM MSTRHSLD A
       , PCTPCPAM_DAMO B
      WHERE A.RSV_PT_NO = B.PT_NO(+)
        AND A.RTST_SID  = :SID
        AND A.RSV_DTM BETWEEN TO_DATE(:FROM_DT, 'YYYYMMDD') AND TO_DATE(:FROM_DT, 'YYYYMMDD') + 0.99999
        AND A.RSV_STS_TP_CD IN ('Y', 'B')
        AND A.HSP_TP_CD = :HIS_HSP_TP_CD
      GROUP BY A.RHRM_CD, TO_CHAR(A.RSV_DTM, 'HH24:MI'), A.RSV_DY_SEQ, B.PT_NM, A.RSV_MEMO_CNTE, A.RSV_PT_NO, A.STTP_CD, A.RSV_DTM, A.RTST_SID
             , A.TRSV_YN, PT_NO, B.SEC_RRN, A.RSV_SLOT_SEQ, A.SCHD_RSV_SEQ, A.RHTR_TP_CD, A.RHTR_ORD_ID
       ) SELDAY
 WHERE A.RSV_TIME = SELDAY.RSV_TIME(+)
   AND A.RSV_DY_SEQ  = SELDAY.RSV_DY_SEQ(+)
   AND A.RHRM_CD    = SELDAY.RHRM_CD(+)
   AND A.RSV_SLOT_SEQ = SELDAY.RSV_SLOT_SEQ(+)
   AND SELDAY.PT_NO = :PT_NO
 ORDER BY DECODE(A.RSV_TIME, '00:00', '23:59', A.RSV_TIME),A.RHRM_CD, A.RSV_DY_SEQ, A.RSV_SLOT_SEQ</QUERY_TEXT>
    <GROUP>재활</GROUP>
  </FavQuery>
</ArrayOfFavQuery>